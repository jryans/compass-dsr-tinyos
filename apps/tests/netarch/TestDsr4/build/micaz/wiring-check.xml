<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="54:TestDsrAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ec045f8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ef92930"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ef92930"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ec14300"/></to>
    </wire>
    <wire loc="56:TestDsrAppC.nc">
      <from><interface-ref name="PEControl" scoped="" ref="0x7ebf1bd8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7eaf5558"/></to>
    </wire>
    <wire loc="65:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7eaf5558"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7eaa2010"/></to>
    </wire>
    <wire loc="57:TestDsrAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7ebf4ee8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e6f1240"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e6f1240"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e6e02b0"/></to>
    </wire>
    <wire loc="59:TestDsrAppC.nc">
      <from><interface-ref name="SendA1" scoped="" ref="0x7eb83710"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d9f20c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d9f20c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da58508"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:TestDsrAppC.nc">
      <from><interface-ref name="SendA2" scoped="" ref="0x7eb83dd8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d9ec220"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d9ec220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da58508"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:TestDsrAppC.nc">
      <from><interface-ref name="SendA3" scoped="" ref="0x7ebf0500"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d9e83e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d9e83e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da58508"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:TestDsrAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7eb61ea8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7d9f2df0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d9f2df0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e6ea720"/></to>
    </wire>
    <wire loc="63:TestDsrAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7eb52e20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d9f1a10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d9f1a10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7da57af0"/></to>
    </wire>
    <wire loc="65:TestDsrAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7eb74ab0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d9e28f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d9e28f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7da58e38"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:TestDsrAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7eb50010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d9d5688"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d9d5688"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7e8a2848"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d4677c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d486760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d499f00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d4e25c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d4efd08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d51eeb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d526dd8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7df54678"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7df73d88"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e0102a0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e0c3770"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e568060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d6e02c8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e5d53f0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e894988"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e8c7d18"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e8f0198"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d8199e0"/></to>
    </wire>
    <wire loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7eaa3c50"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7ec14648"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f232c50"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f232c50"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f071598"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7ec14b78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ef81e58"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ef81e58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ef53d58"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ec14ee8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ef72068"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e4c5580"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ef63940"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ec43160"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7ef52518"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ec44d58"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7ef521a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e14e9f8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7ef521a8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7ef61b50"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7ef61b50"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7ef31030"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ef61eb8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7ef72068"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7ef13800"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7ef00068"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7ef00068"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ede1ac8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ef231a0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7ef61eb8"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7ee91e78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ece02d8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7eec3e98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ed92330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ed92330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8ea718"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7eeb0068"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ed74d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ed74d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8b20f8"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7eea0e78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ed60410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ed60410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d87c6c0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7eef3428"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ede0e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ede0e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d987ac8"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7eea1af8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ed61090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ed61090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d87f228"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7eef27a8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7edd0bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7edd0bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d95b2b0"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7eee0980"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7edb05d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7edb05d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d920c08"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7eec1bd8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ed90030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ed90030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8e5570"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7eea3d98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ed71ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ed71ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8ac010"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7ef02348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ede3e70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ede3e70"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9b28f0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7eef0508"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7edc3890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7edc3890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9560f8"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7eed26c8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7eda3250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7eda3250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d91ba88"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7eeb3980"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ed84c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ed84c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8e0538"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7ee92b00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ed52170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ed52170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d877538"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7ee83d98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ecc3bc0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7eeb2cb8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ed80a18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ed80a18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8b6c78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ede1ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d98a718"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7eee2268"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7edc15d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7edc15d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d951010"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7ee90aa0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ecd3590"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7eee15e8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7edb12a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7edb12a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9237f8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7eec2858"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ed92c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ed92c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8e80f8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7eeb09d8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ed72790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ed72790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8b1ac8"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7ee93808"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ed60d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ed60d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d87a0b0"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7eef3d98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7edd37d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7edd37d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d985570"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7eef1188"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7edc45d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7edc45d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d95ac78"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7eed3348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7edb0f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7edb0f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d91e6c0"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7eec05e8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ed90988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ed90988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8e3010"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7eea27a8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ed704f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ed704f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8aa9e8"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7ef02cb8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ede27f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ede27f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9b02d0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7eef0e78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7edc2250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7edc2250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d955ac8"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7eed1068"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7eda3ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7eda3ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d919538"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7ee91508"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ed52ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ed52ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d875010"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7eec3428"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ed939c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ed939c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8eed08"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7eeb16c8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ed74410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ed74410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8b4718"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7eea0508"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ed619e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ed619e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d87ec08"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7ee827a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ecc1f20"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7ef009d8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ede04f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ede04f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9880f8"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7eee2bd8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7edc1f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7edc1f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d94d9e8"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7eea1188"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ed626f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ed626f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8817f8"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7eee0010"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7edb1bf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7edb1bf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d921228"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7eec1268"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ed916b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ed916b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8e7ac8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7eea3428"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ed71170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ed71170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8ae570"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7ee92190"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ed54790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ed54790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d879a88"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7ef039a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ede3518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ede3518"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9b8f28"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7eef1af8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7edc4f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7edc4f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d958718"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7eed3cb8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7eda4890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7eda4890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d91c0b0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7eeb3010"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ed84330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ed84330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8e29e8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7ee83428"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ecd0880"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7eeb2348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ed800c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ed800c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8b72b0"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7eed19d8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7eda25d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7eda25d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d917010"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7ef016c8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ede1170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ede1170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d98cc90"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7eee3878"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7edc2ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7edc2ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d953570"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f071d30"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f052188"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f0108c0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7efe3e38"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7e7c5e60"/></to>
    </wire>
    <wire loc="68:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x7eae6b58"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7eaa17a0"/></to>
    </wire>
    <wire loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7eaf5c28"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7eaa26e0"/></to>
    </wire>
    <wire loc="69:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7eae6e78"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7eaa1ac0"/></to>
    </wire>
    <wire loc="71:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="PacketWaitList" scoped="" ref="0x7eac0e78"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7ea96700"/></to>
    </wire>
    <wire loc="70:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="PacketEngine" scoped="" ref="0x7ead0f00"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7eaa04d0"/></to>
    </wire>
    <wire loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7eaf45a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7eaa1028"/></to>
    </wire>
    <wire loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ea94548"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7eac4c70"/></to>
    </wire>
    <wire loc="73:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ea94ea8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7eac35e0"/></to>
    </wire>
    <wire loc="74:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7ea93688"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7eac3d80"/></to>
    </wire>
    <wire loc="75:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="PacketEngineClient" scoped="" ref="0x7ea91010"/></from>
      <to><interface-ref name="PacketEngineClient" scoped="" ref="0x7eaa6680"/></to>
    </wire>
    <wire loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="ReceivePool" scoped="" ref="0x7ea82740"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7e934be0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x7e934be0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7d819d88"/></to>
    </wire>
    <wire loc="80:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7ea74d90"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7e904a38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7e904a38"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7e8f55c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7ea71918"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e8d17e8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e8d17e8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e8c3a00"/></to>
    </wire>
    <wire loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SendBackoff" scoped="" ref="0x7ea71de0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e8c00c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e8c00c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7e8a2848"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ea91418"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e6ea720"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e6ea720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e6d9160"/></to>
    </wire>
    <wire loc="189:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <from><interface-ref name="msgAdded" scoped="" ref="0x7ea525d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <from><interface-ref name="msgAction" scoped="" ref="0x7ea52d00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7e8f55c0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7e8f0748"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e8c3a00"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e8b7968"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7e8c8f28"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7e8c3150"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7e8c3150"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7e8b70b8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e8d3298"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e8c7d18"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e8c7d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e8c2c78"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7e8a2848"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7e893100"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7e893100"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e744370"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e894988"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e8810d8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7e8859b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7e703a88"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e8810d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e862970"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7e709380"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e772440"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7e7504c8"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7e872d00"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7e872d00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7e862da8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7e7023d0"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7e865b20"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7e865b20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e7765b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x7e7765b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7d7f6b20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7e862970"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d7f9ec8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7e862da8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d7f8320"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d7f5b80"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e7e06d0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e7e06d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e7c90b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7d7f2910"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7e7d7490"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7e7d7490"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7e7c8e90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x7d7f1200"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7e7d7ce0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e7d7ce0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7e7c66f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7d7f08b0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7e7d4428"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7e7d4428"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7e7c41d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x7e749bf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7e706240"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e6e02b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7df2c5c0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7e6f1a90"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e6e0b00"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7e6e0b00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e6b21a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7e6f0b80"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e6dac60"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7e6dac60"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e6b1288"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7e6ea078"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e6d9d40"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7e6d9d40"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e6b03f8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e6f03e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e6da4c8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e6da4c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e6b2ad8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e6e34a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e6d6328"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e6d6328"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7dfc1b20"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e6d9160"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e6b1770"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7df2c5c0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7df2a070"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7e6c8cf8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7e648830"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7e648830"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7e643d70"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7e6d2d30"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7dfc1528"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7e6c6040"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7df2da08"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7df2da08"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7df264b0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7e6b54a8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7df0eae8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7df0eae8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7df09770"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7df2a070"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e6493e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e6493e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e647d98"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7e6a3378"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7df86a38"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7df86a38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7df736e8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7df831c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7df0e440"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7df0e440"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7df0d2a0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7df0d2a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7df34e60"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7df34e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7df2b460"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7df2b460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7df327e0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7df327e0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7df318f0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7df318f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e6499c0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7e6499c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e643418"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7e6a3a48"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7df2d518"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7df2d518"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7df2bb30"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7df2bb30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7df658d0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7df658d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7df60c68"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7df64388"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7df32e80"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7df32e80"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7df313e8"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7df313e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e648098"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e648098"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e022ab8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e68a2b8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e108608"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7e6a9010"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7dfc1528"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e6a0d28"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dfc0040"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7e6936b8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7e5e3340"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7e5e3340"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7e5d5e00"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e022ab8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e010f10"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e632040"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e6d9160"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e6399e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e5e4bb8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e5e4bb8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e5d5738"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7e634c28"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7e5e2200"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7e5e2200"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7e5d4c80"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7e637610"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7e0edb98"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7e637610"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7e022190"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7e022190"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7e0105e8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7e0edb98"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7e0c3ab8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7e62ace0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7e0ec010"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7e0ec010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e0c3f08"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7e633450"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7e0ec6b8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7e0ec6b8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7e0c25e0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7e628af0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7dfc1528"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e627188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dfc0040"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e633bf0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e8d17e8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7e627660"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7df8bd18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7df8bd18"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7e8f55c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e621eb8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e183578"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e183578"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e170330"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7e619230"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7e61bac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7e61b170"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7e5d9670"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7e5d3788"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e5b7bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e6d9160"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7e5d2478"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7e568508"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7e568508"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7e564c90"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7e5d1bb8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7e3ad188"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7e3ad188"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7eef27a8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7e5cb608"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7e3ace78"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7e3ace78"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7eef3428"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7e5ca010"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7e3aa190"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7e3aa190"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x7ef009d8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7e5c5570"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7e39eb10"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7e39eb10"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7e341298"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7e5b68b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e146010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e146010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e321450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7e5b5d78"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7e1456c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7e1456c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7e5b71a8"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7e145a18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7e145a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7e5b7890"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7e1444e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7e1444e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7e5b7520"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7e144840"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7e144840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7e5b9800"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7e144ef0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7e144ef0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7e5b9cd0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7e1433e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7e1433e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7e5c31a8"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7e143820"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7e143820"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7e5c3600"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7e143c58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7e143c58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e5c3a58"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7e1420b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e1420b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7e5c15e0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7e1406a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7e1406a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e31fc80"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7e5c3ea8"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7e142920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7e142920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7e5c0338"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7e142d58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7e142d58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7e5b47c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e12d230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e12d230"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e321450"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7e5b40d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e123010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e123010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e321450"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e5c5b60"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e108608"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7e5ac9c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7e5ac298"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e568060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e3b33c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7e3b33c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e3b6b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7e564c90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d792a60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7d792a60"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d78bd28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7d7885d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d78e598"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7d78e598"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d7839f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x7d789560"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e404a28"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7e404a28"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e3da0c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7d780258"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e54cdb0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e54cdb0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e531ef8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7d75e120"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7e534278"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7e53b570"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7e529cc8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7e535448"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7e528930"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e534278"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7e525530"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e534278"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7e524cc8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e534278"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7e521490"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x7e520c20"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7e7d7490"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e4c5968"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e54cdb0"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7e3d9150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e3fde30"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7e3fde30"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e3f8890"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e3f7878"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e54cdb0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7e3adaf8"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7eee2bd8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7e3ac508"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7eea3d98"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7e3ae760"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7eeb3010"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7e3ab808"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7eec1bd8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7e39e4f8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7e393c60"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7e3a21b0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7e38e720"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x7e39d300"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7e535448"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7e38ed18"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7e37bbe8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7e37bbe8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e34b978"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x7e3418c8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7e3ae760"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7e37d430"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e3566c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7e37cbe8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e350788"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7e37a430"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e349a88"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7e37dbe8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e3546c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7e37b430"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e34d8f0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7e37ec50"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e3766c0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7e37c430"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e3526c0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e376e78"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7e372c48"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e356e78"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7e374010"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e354e78"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7e374388"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e352e78"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7e374700"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e34f010"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7e374a78"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e34c0b8"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7e374df0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e34a190"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7e3711b0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e348270"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7e371528"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x7e340df8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7e144190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e140f18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e31fc80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7e1424e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7e1466c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7e321b18"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7e321b18"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7e31dc58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7e145010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7e144b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7e140ae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e31fc80"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7e131368"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e31f2f8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7e145368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7e140270"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e31fc80"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7e146be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7e145d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7e131b40"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e31f2f8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7e31f2f8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e319d50"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7e31fc80"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e3186c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7e31e438"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e318d88"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e321450"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e3193f0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e3164f8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7e30edd8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7e2e06c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7e2e06c8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7e8f55c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7e316890"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e2cd220"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e2cd220"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e2c5010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7e311050"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7e2cd8d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x7e2cd8d8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7e2c6590"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7e30e9a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7e2cdc10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7e2cdc10"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7e2c68d8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e3125b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e183578"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7e30ce90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7e2c68d8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7e2c1d68"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7e2c6590"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7e2c1a40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7e2cee98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e2c6250"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e2c6250"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e2c1720"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e2c5010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e2c04d0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7e2ae880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e1ed0c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e1ed0c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d6c0630"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7e28c588"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7e1edc10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7e1edc10"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7d6bf230"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7e2a1cc0"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7e24d1c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7e24d1c0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7e24aed0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7e28c990"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff2d38"/></to>
    </wire>
    <wire loc="207:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7e282010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7e2409d8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff2d38"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7e244348"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7eef27a8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7e244cb8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7eef1188"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7e2416c8"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7eef1af8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7e240068"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7eef0508"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7e1ed808"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7d6c0d70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7d6bf6f0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e18a0f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x7d6bfb18"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7d6e0600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x7d6be190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e14e9f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e170010"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7e16f010"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7e150d48"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7e150d48"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7ef02cb8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7e16f980"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7e14f6f0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7e14f6f0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7ef02348"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7e16e348"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7e14e098"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7e14e098"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7ef039a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7e128a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7e129d38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7e12b260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e126010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e31fc80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7e1285c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7e128e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7e1294c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7e12d8e8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7e321b18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7e12c190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7e12bc68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7e12b910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e128190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7e12b5b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7e127b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e31fc80"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7e126448"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e31f2f8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7e12c4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7e129900"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7e129010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7e12c840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7e1276e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e31fc80"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7e1272b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e31fc80"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7e12de00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7e12cef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7e12cb98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7e126c20"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e31f2f8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7e111920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7e112c58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7e120190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e10ff18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e31fc80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7e1114e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7e111d58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7e1123e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7e1236c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7e321b18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7e121010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7e120b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7e120840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e1110b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7e1204e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7e10fae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e31fc80"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7e10e368"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e31f2f8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7e121368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7e112820"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7e120ef0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7e1216c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7e10f6a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e31fc80"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7e10f270"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e31fc80"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7e123be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7e121d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7e121a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7e10eb40"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e31f2f8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7e0e5198"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7e0c1618"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7e0e8d68"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7e0c1298"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioTimeStamping" scoped="" ref="0x7e0e78e0"/></from>
      <to><interface-ref name="TimeStamp" scoped="" ref="0x7e0c2dc0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7e0c1ac0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7e568508"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7e0b0288"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7e3ae760"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7e0b0c18"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7e3ad188"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7e0af6e8"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7e3ab808"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7e0b1c58"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7e39e4f8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7e0ae090"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e031ce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e031ce0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e321450"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7e0ae758"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7e030410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7e030410"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7e321b18"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7e0adcf0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7e02f010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7e02f010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7e0ab088"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7e02fa18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7e02fa18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7e0ab400"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7e02fd70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7e02fd70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7e0ab778"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7e030c80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7e030c80"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7e0ad8a0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7e02b190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7e02b190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7e0aec88"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7e0297e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7e0297e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e31f2f8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e0ad450"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e02ab20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e02ab20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e31fc80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e0abaf0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7e02cd28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e02cd28"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7e0a6c58"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7e0225b8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7e0225b8"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7e010a10"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7e0b1210"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7dfc1528"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e0b1800"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dfc0040"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e0a8338"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e183578"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7e02b5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7e02c8f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7e02ba00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7e02c080"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7e02e840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7e02e4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7e02e190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7e02a6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e31fc80"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7e029010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e31f2f8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7e02c4b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7e02eb98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7e02f368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7e02a2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e31fc80"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7e02be38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e31fc80"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7e030928"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7e02f6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7e021010"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7e00f470"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e00aab8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e183578"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7e00f7e0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7e3ad188"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7e00e1a8"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7e3adaf8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7e00eb38"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7e3ac508"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7e00d530"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7e3a21b0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7e00db48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dfc3590"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7dfc3590"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e321450"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7e00c288"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7dfa37a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7dfa37a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e31f2f8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7e00ccf0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7dfc2190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7dfc2190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7e00c978"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7dfa6010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7dfa6010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7e00b180"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7dfc1528"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e00b770"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dfc0040"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7e00bb98"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7e5e3340"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7e006eb8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7dfa5d58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7dfa50b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7dfa85b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dfa3368"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e31fc80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7dfa5920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7dfa4270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7dfa6820"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7dfc3c48"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7e321b18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7dfc24e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7dfa8c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7dfa54e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7dfa8910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7dfa4f18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e31fc80"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7dfc2840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7dfa6c58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7dfa6368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e31e438"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7dfc2b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7dfa4ae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e31fc80"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7dfa46a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e31fc80"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7dfa8260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7dfc2ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dfa2010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e31f2f8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7df721c0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7df831c0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7df72860"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7df810e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7df810e8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7e8f55c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7df71010"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e8d17e8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7df71420"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dfc0040"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7df65de8"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7df54198"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7df54a08"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7df64388"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7df54ef8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dfc0040"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7df2cbb0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7df11e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7df11e50"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7e8f55c0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7df09e60"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e6e34a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7d9f2758"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7da59b48"/></to>
    </wire>
    <wire loc="58:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7da59b48"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7da4b240"/></to>
    </wire>
    <wire loc="62:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7da57af0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7da49238"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x7da55548"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Send" scoped="" ref="0x7d63c010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d63c010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7eaf5c28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7eb042c8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleProtocolC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7d9f5880"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7d9f4010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x7d9f4010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e6ea078"/></to>
    </wire>
    <wire loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7dac7970"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7dec1cf0"/></to>
    </wire>
    <wire loc="75:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7dec1cf0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7dd014b8"/></to>
    </wire>
    <wire loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7dead348"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7da69080"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x7da69080"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e6ea078"/></to>
    </wire>
    <wire loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7dec0478"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7da66a50"/></to>
    </wire>
    <wire loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7dec0478"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7da5f288"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketEngine" scoped="" ref="0x7da5f288"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7ead0f00"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PacketEngine" scoped="" ref="0x7da66a50"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7ead0f00"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SinglePacketEngine" scoped="" ref="0x7deb42f8"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7da66a50"/></to>
    </wire>
    <wire loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="DsrPacketEngine" scoped="" ref="0x7deb3210"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7da5f288"/></to>
    </wire>
    <wire loc="56:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7deb2138"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7da65980"/></to>
    </wire>
    <wire loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7deb2138"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7da5e1a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketWaitList" scoped="" ref="0x7da5e1a0"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7eac0e78"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PacketWaitList" scoped="" ref="0x7da65980"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7eac0e78"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7deb2d00"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7da65980"/></to>
    </wire>
    <wire loc="59:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7deb18f0"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7da5e1a0"/></to>
    </wire>
    <wire loc="61:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7deaf428"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e6e34a8"/></to>
    </wire>
    <wire loc="62:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7deaf910"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7da59b48"/></to>
    </wire>
    <wire loc="63:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7deae010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e6ea720"/></to>
    </wire>
    <wire loc="65:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7deada10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da12790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7da12790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da58508"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="ComposePacket" scoped="" ref="0x7deaec20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d9fa150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d9fa150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7da57af0"/></to>
    </wire>
    <wire loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7dcf56c8"/></from>
      <to><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7dec0478"/></to>
    </wire>
    <wire loc="78:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SinglePacketEngine" scoped="" ref="0x7dcf4570"/></from>
      <to><interface-ref name="SinglePacketEngine" scoped="" ref="0x7deb42f8"/></to>
    </wire>
    <wire loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="DsrPacketEngine" scoped="" ref="0x7dcf33b8"/></from>
      <to><interface-ref name="DsrPacketEngine" scoped="" ref="0x7deb3210"/></to>
    </wire>
    <wire loc="80:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7dcf2360"/></from>
      <to><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7deb2138"/></to>
    </wire>
    <wire loc="81:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7dcf1010"/></from>
      <to><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7deb2d00"/></to>
    </wire>
    <wire loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7dcf1ba0"/></from>
      <to><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7deb18f0"/></to>
    </wire>
    <wire loc="84:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7dcea8b0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7deaf428"/></to>
    </wire>
    <wire loc="85:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7dcead88"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7deaf910"/></to>
    </wire>
    <wire loc="86:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7dce94d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7deae010"/></to>
    </wire>
    <wire loc="87:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="ComposePacket" scoped="" ref="0x7dce8170"/></from>
      <to><interface-ref name="ComposePacket" scoped="" ref="0x7deaec20"/></to>
    </wire>
    <wire loc="88:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7dce8828"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7dead348"/></to>
    </wire>
    <wire loc="90:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7dce6968"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7deada10"/></to>
    </wire>
    <wire loc="92:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Header" scoped="" ref="0x7dd01eb8"/></from>
      <to><interface-ref name="Header" scoped="" ref="0x7de92c28"/></to>
    </wire>
    <wire loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="Header" scoped="" ref="0x7de92c28"/></from>
      <to><interface-ref name="TlvBlock" scoped="" ref="0x7de6c4a8"/></to>
    </wire>
    <wire loc="93:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteRequest" scoped="" ref="0x7dcf73e0"/></from>
      <to><interface-ref name="RouteRequest" scoped="" ref="0x7de89b18"/></to>
    </wire>
    <wire loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteRequest" scoped="" ref="0x7de89b18"/></from>
      <to><interface-ref name="Tlv" scoped="" ref="0x7de6c980"/></to>
    </wire>
    <wire loc="94:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteError" scoped="" ref="0x7dcf7a98"/></from>
      <to><interface-ref name="RouteError" scoped="" ref="0x7de80040"/></to>
    </wire>
    <wire loc="71:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteError" scoped="" ref="0x7de80040"/></from>
      <to><interface-ref name="TlvMultiple" scoped="" ref="0x7de0bf18"/></to>
    </wire>
    <wire loc="95:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteErrorList" scoped="" ref="0x7dcf62e0"/></from>
      <to><interface-ref name="RouteErrorList" scoped="" ref="0x7de808a0"/></to>
    </wire>
    <wire loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteErrorList" scoped="" ref="0x7de808a0"/></from>
      <to><interface-ref name="TlvList" scoped="" ref="0x7de0a758"/></to>
    </wire>
    <wire loc="96:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SourceRoute" scoped="" ref="0x7dcf5010"/></from>
      <to><interface-ref name="SourceRoute" scoped="" ref="0x7de6e180"/></to>
    </wire>
    <wire loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="SourceRoute" scoped="" ref="0x7de6e180"/></from>
      <to><interface-ref name="Tlv" scoped="" ref="0x7de033e0"/></to>
    </wire>
    <wire loc="98:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteCache" scoped="" ref="0x7dcef698"/></from>
      <to><interface-ref name="RouteCache" scoped="" ref="0x7dcd7840"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RouteCache" scoped="" ref="0x7dcd7840"/></from>
      <to><interface-ref name="RouteCache" scoped="" ref="0x7d553030"/></to>
    </wire>
    <wire loc="99:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteNodeList" scoped="" ref="0x7dcefd00"/></from>
      <to><interface-ref name="RouteNodeList" scoped="" ref="0x7dcd7ea8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RouteNodeList" scoped="" ref="0x7dcd7ea8"/></from>
      <to><interface-ref name="RouteNodeList" scoped="" ref="0x7d553698"/></to>
    </wire>
    <wire loc="100:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteRequestInCache" scoped="" ref="0x7dcee8b8"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7db35010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DataCache" scoped="" ref="0x7db35010"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7d4972c0"/></to>
    </wire>
    <wire loc="101:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteRequestOutCache" scoped="" ref="0x7dced968"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7db0a830"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DataCache" scoped="" ref="0x7db0a830"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7d486b08"/></to>
    </wire>
    <wire loc="102:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteRequestOutTimer" scoped="" ref="0x7dceba78"/></from>
      <to><interface-ref name="DataTimer" scoped="" ref="0x7db042f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DataTimer" scoped="" ref="0x7db042f0"/></from>
      <to><interface-ref name="DataTimer" scoped="" ref="0x7d467b70"/></to>
    </wire>
    <wire loc="104:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Equal" scoped="" ref="0x7db340e0"/></from>
      <to><interface-ref name="RouteRequestInEqual" scoped="" ref="0x7dd021c8"/></to>
    </wire>
    <wire loc="105:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Equal" scoped="" ref="0x7db098f8"/></from>
      <to><interface-ref name="RouteRequestOutEqual" scoped="" ref="0x7dd02b98"/></to>
    </wire>
    <wire loc="107:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Compose" scoped="" ref="0x7dce6010"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7dad9010"/></to>
    </wire>
    <wire loc="108:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7dce5050"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7dad73c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7dad73c8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7e8f55c0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7dce57c8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e8d17e8"/></to>
    </wire>
    <wire loc="112:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7dd01b80"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ef92930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvList" scoped="" ref="0x7de0a758"/></from>
      <to><interface-ref name="TlvList" scoped="" ref="0x7de62340"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="AckList" scoped="" ref="0x7de704d0"/></from>
      <to><interface-ref name="TlvList" scoped="" ref="0x7de06580"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvList" scoped="" ref="0x7de06580"/></from>
      <to><interface-ref name="TlvList" scoped="" ref="0x7de62340"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Tlv" scoped="" ref="0x7de6c980"/></from>
      <to><interface-ref name="Tlv" scoped="" ref="0x7de64ec0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteReplyList" scoped="" ref="0x7de72388"/></from>
      <to><interface-ref name="TlvList" scoped="" ref="0x7de110e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvList" scoped="" ref="0x7de110e0"/></from>
      <to><interface-ref name="TlvList" scoped="" ref="0x7de62340"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Tlv" scoped="" ref="0x7de033e0"/></from>
      <to><interface-ref name="Tlv" scoped="" ref="0x7de64ec0"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TlvBlock" scoped="" ref="0x7de6c4a8"/></from>
      <to><interface-ref name="TlvBlock" scoped="" ref="0x7de64750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvMultiple" scoped="" ref="0x7de0bf18"/></from>
      <to><interface-ref name="TlvMultiple" scoped="" ref="0x7de63820"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="AckRequest" scoped="" ref="0x7de75558"/></from>
      <to><interface-ref name="Tlv" scoped="" ref="0x7de085b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Tlv" scoped="" ref="0x7de085b0"/></from>
      <to><interface-ref name="Tlv" scoped="" ref="0x7de64ec0"/>
      <arguments>
        <value cst="I:160">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteReply" scoped="" ref="0x7de81e90"/></from>
      <to><interface-ref name="TlvMultiple" scoped="" ref="0x7de12890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvMultiple" scoped="" ref="0x7de12890"/></from>
      <to><interface-ref name="TlvMultiple" scoped="" ref="0x7de63820"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="Ack" scoped="" ref="0x7de75c28"/></from>
      <to><interface-ref name="TlvMultiple" scoped="" ref="0x7de07d28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvMultiple" scoped="" ref="0x7de07d28"/></from>
      <to><interface-ref name="TlvMultiple" scoped="" ref="0x7de63820"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TlvBlock" scoped="" ref="0x7de123b8"/></from>
      <to><interface-ref name="TlvBlock" scoped="" ref="0x7de64750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvBlock" scoped="" ref="0x7de0ba40"/></from>
      <to><interface-ref name="TlvBlock" scoped="" ref="0x7de64750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvBlock" scoped="" ref="0x7de080d8"/></from>
      <to><interface-ref name="TlvBlock" scoped="" ref="0x7de64750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvBlock" scoped="" ref="0x7de07850"/></from>
      <to><interface-ref name="TlvBlock" scoped="" ref="0x7de64750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvBlock" scoped="" ref="0x7de04ee8"/></from>
      <to><interface-ref name="TlvBlock" scoped="" ref="0x7de64750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="composePkt" scoped="" ref="0x7dce5c00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RouteCache" scoped="" ref="0x7d553030"/></from>
      <to><interface-ref name="RouteCache" scoped="" ref="0x7dcc63d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RouteNodeList" scoped="" ref="0x7d553698"/></from>
      <to><interface-ref name="PathEdgeList" scoped="" ref="0x7d54d030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PathEdgeList" scoped="" ref="0x7d54d030"/></from>
      <to><interface-ref name="PathEdgeList" scoped="" ref="0x7d531b58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d54dbc0"/></from>
      <to><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7db3f3b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7dca1ea8"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7d550a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7d550a90"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7d5406d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SourceShortestPath" scoped="" ref="0x7dc99800"/></from>
      <to><interface-ref name="SourceShortestPath" scoped="" ref="0x7d54e710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SourceShortestPath" scoped="" ref="0x7d54e710"/></from>
      <to><interface-ref name="SourceShortestPath" scoped="" ref="0x7d531250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeedRouteTo" scoped="" ref="0x7dcc6d20"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7d54a170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="InitialCheck" scoped="" ref="0x7dcc56d0"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7d549928"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7dcc4040"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e6ea720"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7d5406d8"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7d525150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PathEdgeList" scoped="" ref="0x7d531b58"/></from>
      <to><interface-ref name="PathEdgeList" scoped="" ref="0x7d4ee948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SourceShortestPath" scoped="" ref="0x7d531250"/></from>
      <to><interface-ref name="SourceShortestPath" scoped="" ref="0x7d4ee040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdge" scoped="" ref="0x7d54f770"/></from>
      <to><interface-ref name="GraphEdge" scoped="" ref="0x7d5333f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdge" scoped="" ref="0x7d5333f0"/></from>
      <to><interface-ref name="GraphEdge" scoped="" ref="0x7d525e08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeList" scoped="" ref="0x7d54fc18"/></from>
      <to><interface-ref name="GraphEdgeList" scoped="" ref="0x7d533898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeList" scoped="" ref="0x7d533898"/></from>
      <to><interface-ref name="GraphEdgeList" scoped="" ref="0x7d5232e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7d52f6c8"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7d5406d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdge" scoped="" ref="0x7d52e3f0"/></from>
      <to><interface-ref name="GraphEdge" scoped="" ref="0x7d5333f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeList" scoped="" ref="0x7d52d920"/></from>
      <to><interface-ref name="GraphEdgeList" scoped="" ref="0x7d533898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d52e878"/></from>
      <to><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d54dbc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IndexedAlloc" scoped="" ref="0x7d523de0"/></from>
      <to><interface-ref name="IndexedAlloc" scoped="" ref="0x7d5277e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IndexedAlloc" scoped="" ref="0x7d5277e8"/></from>
      <to><interface-ref name="IndexedAlloc" scoped="" ref="0x7d51f3b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IndexedAlloc" scoped="" ref="0x7d51f3b0"/></from>
      <to><interface-ref name="IndexedAlloc" scoped="" ref="0x7d51b698"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Boot" scoped="" ref="0x7d51bf20"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ef92930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BitVector" scoped="" ref="0x7d51a250"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7d51c220"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7d4eca70"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7d52f6c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdge" scoped="" ref="0x7d4eb770"/></from>
      <to><interface-ref name="GraphEdge" scoped="" ref="0x7d52e3f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d4ebbf8"/></from>
      <to><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d52e878"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeList" scoped="" ref="0x7d4e9cc0"/></from>
      <to><interface-ref name="GraphEdgeList" scoped="" ref="0x7d52d920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x7d4f0660"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7d4ed558"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PriorityQueue" scoped="" ref="0x7d4ede88"/></from>
      <to><interface-ref name="PriorityQueue" scoped="" ref="0x7d4f39a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PriorityQueue" scoped="" ref="0x7d4f39a8"/></from>
      <to><interface-ref name="PriorityQueue" scoped="" ref="0x7d4e28e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x7d4e1580"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7d4f0660"/></to>
    </wire>
    <wire>
      <from><interface-ref name="buildTreeTask" scoped="" ref="0x7d4e87f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Equal" scoped="" ref="0x7d496398"/></from>
      <to><interface-ref name="Equal" scoped="" ref="0x7db340e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Equal" scoped="" ref="0x7d485c68"/></from>
      <to><interface-ref name="Equal" scoped="" ref="0x7db098f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d466a78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d46bd40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d46bd40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7e8a2848"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x7eac4c70"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d440010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x7d440010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d4365f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x7eac35e0"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d43ed98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d43ed98"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e6f03e8"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d43ed98"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e6f0b80"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x7eac3d80"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Packet" scoped="" ref="0x7dac7970"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d4406a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e6ea078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d440d40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e6ea720"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x7d43f950"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e6e34a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d436cc0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7daa9968"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d4353f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e6ea720"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7daa9968"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da7e3b8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7da7eb28"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e6f1a90"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7da7d230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e6ea720"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7da7de08"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e6ea078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x7da7c510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x7da7c948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d43d310"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e6ea078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d43d9a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e6ea720"/></to>
    </wire>
    <wire loc="59:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7da58508"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da4bbb0"/></to>
    </wire>
    <wire loc="61:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7da57610"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7da4ad40"/></to>
    </wire>
    <wire loc="60:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7da58e38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7da4a5a8"/></to>
    </wire>
    <wire loc="63:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7da49be8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7da55548"/></to>
    </wire>
    <wire loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7da485d8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7da55ea8"/></to>
    </wire>
    <wire loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7da48ae8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7eae6e78"/></to>
    </wire>
    <wire loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7da46240"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e6ea720"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7da12e28"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7da59b48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d9fb510"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e6ea720"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x7da55548"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Send" scoped="" ref="0x7d3f6050"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d3f6050"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7eaf5c28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7eb042c8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d3f66e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7eae6e78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketEngineClient" scoped="" ref="0x7eaa6680"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7eb042c8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PacketEngineClient" scoped="" ref="0x7d3f11f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x7eac4c70"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d3e4990"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x7d3e4990"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d3dcd48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x7eac35e0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d3e06d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d3e06d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e6f03e8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d3e06d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e6f0b80"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x7eac3d80"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d9f5880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d3e2040"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e6ea078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d3e26d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e6ea720"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x7d3e1330"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e6e34a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d3d8428"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7daa9968"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d3d8ac0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e6ea720"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d3e0ba8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e6ea078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d3df310"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e6ea720"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d63c6a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7eae6e78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketEngineClient" scoped="" ref="0x7eaa6680"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7eb042c8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PacketEngineClient" scoped="" ref="0x7d3cac88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7d9ec8b8"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7da59b48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d9eabe8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7da57af0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d9ea010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e6ea720"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x7da55548"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Send" scoped="" ref="0x7d3c3dc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d3c3dc8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7eaf5c28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7eb042c8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d3c14d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7eae6e78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketEngineClient" scoped="" ref="0x7eaa6680"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7eb042c8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PacketEngineClient" scoped="" ref="0x7d3b2268"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7d9e8a78"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7da59b48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d9e7d28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7da57af0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d9e7150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e6ea720"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x7da55548"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Send" scoped="" ref="0x7d3ac2b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d3ac2b8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7eaf5c28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7eb042c8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d3ac950"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7eae6e78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketEngineClient" scoped="" ref="0x7eaa6680"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7eb042c8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PacketEngineClient" scoped="" ref="0x7d3a6548"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7d9e2dd0"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7da59b48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d9d6150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7da57af0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d9d74d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e6ea720"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x7da55ea8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d3a4e20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d3a4e20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7eaf45a8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d3a0310"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7eae6e78"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="15:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10;</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <documentation loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10;</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10;</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10;</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.8 2007/04/08 01:17:12 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestDsrP" loc="38:TestDsrP.nc">
      <documentation loc="38:TestDsrP.nc">
        <short>&#10;&#10; Test cases to verify that DSR works correctly.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Test cases to verify that DSR works correctly.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketEngineC" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <configuration/>
    </component>
    <component qname="PacketEngineP" loc="80:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <documentation loc="80:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
        <short>&#10;&#10; Queues packets sent, received, and overheard for a multihop routing&#10;&#10; protocol. </short>
        <long>&#10;&#10; Queues packets sent, received, and overheard for a multihop routing&#10;&#10; protocol.  This &#34;packet engine&#34; is intended to be flexible enough to&#10;&#10; support a wide array of possible protocols.&#10;&#10;&#10;&#10; A control component using the PacketEngine interfaces provided here&#10;&#10; is notified of and can control all of the above packets, while not&#10;&#10; having to deal with packet management issues itself.&#10;&#10;&#10;&#10; At any time after being notified of a packet's reception, the control&#10;&#10; component can modify the packet (if needed) and then instruct this engine&#10;&#10; to take one of the following actions:&#10;&#10;   - Send (pass to lower layer)&#10;&#10;   - Send with Intercept (pass to lower layer if upper layer approves)&#10;&#10;   - Receive (pass to upper layer)&#10;&#10;   - Drop (silently remove)&#10;&#10;&#10;&#10; Note that this allows for some unusual actions to take place, such as&#10;&#10; forcing a receive on a packet the upper layer has sent (which also&#10;&#10; means it won't go on the radio anymore).&#10;&#10;&#10;&#10; The control component is responsible for ensuring the packet is valid&#10;&#10; if it makes any modifications.  For example, it must update the payload&#10;&#10; length if the size of the payload changes.&#10;&#10;&#10;&#10; This component does not request acknowledgements or use any kind of&#10;&#10; automatic retry scheme.  However, the return value of the&#10;&#10; PacketEngine.sendDone event allows the control component to request&#10;&#10; a retry for any packet that failed to send.  The control component or&#10;&#10; the upper layer is certainly free to request acknowledgments on its own.&#10;&#10;&#10;&#10; When disabled, no new packets are accepted into the buffer and the&#10;&#10; packets already in the buffer are not processed but do remain in&#10;&#10; the buffer.  Processing resumes when enabled again.&#10;&#10;&#10;&#10; The AM type of packets sent from the upper layer is copied into the&#10;&#10; packet payload for storage so that multihop protocols can use AM types&#10;&#10; of their own without collisions.&#10;&#10;&#10;&#10; Based on TransceiverM by David Moss, CtpForwardingEngineP by Phil Levis,&#10;&#10; Kyle Jamieson, Omprakash Gnawali, and Rodrigo Fonseca, and&#10;&#10; ForwardingEngineM by Roamin Thouvenin.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketEngineC.ReceivePoolC" loc="41(PacketEngineC.ReceivePoolC):/opt/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="41(PacketEngineC.ReceivePoolC):/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.&#10;&#10; </short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
            <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketEngineC.ReceivePoolC.PoolP" loc="53(PacketEngineC.ReceivePoolC.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="53(PacketEngineC.ReceivePoolC.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.&#10; </short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7e936e10"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PacketEngineC.SendStateC" loc="65(PacketEngineC.SendStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(PacketEngineC.SendStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/system/StateImplC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.x/tos/system/StateImplP.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/system/StateImplP.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="31:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10;</short>
        <long>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10; @author  Barbara Hohlt&#10; @author  Philip Levis&#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgP" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers. </short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;		S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketEngineC.SendBackoffC" loc="36(PacketEngineC.SendBackoffC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(PacketEngineC.SendBackoffC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer. </short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7e864c08"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10;</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="47:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaZ platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaZ platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio.</short>
        <long>&#10; The Active Message layer for the CC2420 radio. This configuration&#10; just layers the AM dispatch (CC2420ActiveMessageM) on top of the&#10; underlying CC2420 radio packet (CC2420CsmaCsmaCC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group). Note that snooping may not work, due to CC2420&#10; early packet rejection if acknowledgements are enabled.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @version $Revision: 1.8 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.8 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x7f080b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <documentation loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10;</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.4 2006/12/12 18:23:44 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.&#10;</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.5 2007/04/30 17:31:08 rincon Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.&#10;&#10;</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller. </short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.6 2007/02/28 17:33:59 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10;</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <documentation loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10;</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10;</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10;</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.&#10;&#10;</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10;</short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10;</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(UniqueSendC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10;</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10;</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="61:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks. </short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10;</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10;</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(DummyLplC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10;</short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10;</short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestDsrAppC.SendA1C" loc="41(TestDsrAppC.SendA1C):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <instance number="0">
        <component-ref qname="SingleSenderC"/>
        <arguments>
          <value cst="I:23">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
        <short>&#10;&#10; Bundles the components which route and process DSR.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Bundles the components which route and process DSR.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DsrOptionsC" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <configuration/>
    </component>
    <component qname="DsrOptionsC.RouteRequestC" loc="42(DsrOptionsC.RouteRequestC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
      <documentation loc="42(DsrOptionsC.RouteRequestC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
        <short>&#10;&#10; A generic TLV type processor. </short>
        <long>&#10;&#10; A generic TLV type processor.  Pass in the type to access as the &#10;&#10; parameter to this component.  Allows at most one instance of the type&#10;&#10; in a given TLV block.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TlvC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TlvP" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvP.nc">
      <documentation loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvP.nc">
        <short>&#10;&#10; A general Type-Length-Value (TLV) data processor. </short>
        <long>&#10;&#10; A general Type-Length-Value (TLV) data processor.  This component&#10;&#10; does not assume any ordering by type among the TLV types in a&#10;&#10; block of types.  If at most one instance of a type is allowed,&#10;&#10; access the type via the Tlv interface.  If any number of instances&#10;&#10; are allowed, access the type via the TlvMultiple and TlvList&#10;&#10; interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DsrOptionsC.RouteReplyC" loc="42(DsrOptionsC.RouteReplyC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
      <documentation loc="42(DsrOptionsC.RouteReplyC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
        <short>&#10;&#10; A generic TLV type processor. </short>
        <long>&#10;&#10; A generic TLV type processor.  Pass in the type to access as the &#10;&#10; parameter to this component.  Allows any number of instances of the &#10;&#10; type in a given TLV block.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TlvMultipleC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrOptionsC.RouteErrorC" loc="42(DsrOptionsC.RouteErrorC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
      <documentation loc="42(DsrOptionsC.RouteErrorC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
        <short>&#10;&#10; A generic TLV type processor. </short>
        <long>&#10;&#10; A generic TLV type processor.  Pass in the type to access as the &#10;&#10; parameter to this component.  Allows any number of instances of the &#10;&#10; type in a given TLV block.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TlvMultipleC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrOptionsC.AckRequestC" loc="42(DsrOptionsC.AckRequestC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
      <documentation loc="42(DsrOptionsC.AckRequestC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
        <short>&#10;&#10; A generic TLV type processor. </short>
        <long>&#10;&#10; A generic TLV type processor.  Pass in the type to access as the &#10;&#10; parameter to this component.  Allows at most one instance of the type&#10;&#10; in a given TLV block.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TlvC"/>
        <arguments>
          <value cst="I:160">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrOptionsC.AckC" loc="42(DsrOptionsC.AckC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
      <documentation loc="42(DsrOptionsC.AckC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
        <short>&#10;&#10; A generic TLV type processor. </short>
        <long>&#10;&#10; A generic TLV type processor.  Pass in the type to access as the &#10;&#10; parameter to this component.  Allows any number of instances of the &#10;&#10; type in a given TLV block.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TlvMultipleC"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrOptionsC.SourceRouteC" loc="42(DsrOptionsC.SourceRouteC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
      <documentation loc="42(DsrOptionsC.SourceRouteC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
        <short>&#10;&#10; A generic TLV type processor. </short>
        <long>&#10;&#10; A generic TLV type processor.  Pass in the type to access as the &#10;&#10; parameter to this component.  Allows at most one instance of the type&#10;&#10; in a given TLV block.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TlvC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrControlP" loc="84(DsrP.DsrControlP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <instance number="0">
        <component-ref qname="DsrControlP"/>
        <arguments>
          <value cst="I:14">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC" loc="40(DsrP.DsrRouteCacheC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrRouteCacheC.nc">
      <documentation loc="40(DsrP.DsrRouteCacheC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrRouteCacheC.nc">
        <short>&#10;&#10; Defines the default route cache to use with DSR.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Defines the default route cache to use with DSR.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DsrRouteCacheC"/>
        <arguments>
          <value cst="I:9">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:64">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC" loc="42(DsrP.DsrRouteCacheC.SimpleLinkCacheC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
      <instance number="0">
        <component-ref qname="SimpleLinkCacheC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7ddf1940"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7ddf1768"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleLinkCacheP" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
        <short>&#10;&#10; A simple link cache that does not automatically remove links and&#10;&#10; assigns a weight of 1 to all links.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; A simple link cache that does not automatically remove links and&#10;&#10; assigns a weight of 1 to all links.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC" loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
      <documentation loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
        <short>&#10;&#10; Builds a weighted graph as edges are added and supports finding the single &#10;&#10; source shortest path.  &#10;&#10; &#10;&#10;</short>
        <long>&#10;&#10; Builds a weighted graph as edges are added and supports finding the single &#10;&#10; source shortest path.  &#10;&#10; &#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GraphWeightedC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7ddf1940"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7ddf1768"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7dcce110"/></typename>
          </type-int>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC" loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
      <documentation loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
        <short>&#10;&#10; Wires supporting modules needed by any GraphSparseP. </short>
        <long>&#10;&#10; Wires supporting modules needed by any GraphSparseP.  This should be&#10;&#10; combined with a weight module and any processing modules.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GraphSparseC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC" loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocC.nc">
      <instance number="0">
        <component-ref qname="IndexedAllocC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits" loc="39(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsC.nc">
      <documentation loc="39(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsC.nc">
        <short>&#10;&#10; Packages IndexedAllocBitsP together with its dependencies to create an&#10;&#10; easily usable component.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Packages IndexedAllocBitsP together with its dependencies to create an&#10;&#10; easily usable component.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IndexedAllocBitsC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dc60cb8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits" loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dc60cb8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits" loc="42(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsP.nc">
      <documentation loc="42(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsP.nc">
        <short>&#10;&#10; A compact indexed allocation scheme using only a bit vector to track the&#10;&#10; elements. </short>
        <long>&#10;&#10; A compact indexed allocation scheme using only a bit vector to track the&#10;&#10; elements.  While this is surely slower than a pointer-based system, it uses&#10;&#10; much less memory.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IndexedAllocBitsP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dc60cb8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP" loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
      <documentation loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
        <short>&#10;&#10; A sparse graph using adjacency lists.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; A sparse graph using adjacency lists.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GraphSparseP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC" loc="38(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
      <documentation loc="38(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
        <short>&#10;&#10; Wires supporting modules needed by any SourceShortestPathP.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Wires supporting modules needed by any SourceShortestPathP.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SourceShortestPathC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </value>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7dc81d78"/></type-var>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC" loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueC.nc">
      <instance number="0">
        <component-ref qname="PriorityQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP" loc="44(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueP.nc">
      <documentation loc="44(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueP.nc">
        <short>&#10;&#10; Implements a priority queue sitting on top of an index heap. </short>
        <long>&#10;&#10; Implements a priority queue sitting on top of an index heap.  It be either a&#10;&#10; min or max heap depending on the implementation of the Compare.test command.&#10;&#10; Since this is an index heap, none of the priorities are actually stored here.&#10;&#10; Instead, a component needs only to answer calls of Compare.test (which would&#10;&#10; typically be based on the priorities in some array owned by that component).&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PriorityQueueP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7dbdd650"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP" loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <documentation loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
        <short>&#10;&#10; Uses Djikstra's algorithm with a priority queue holding fringe vertices to&#10;&#10; find the single source shortest path. </short>
        <long>&#10;&#10; Uses Djikstra's algorithm with a priority queue holding fringe vertices to&#10;&#10; find the single source shortest path.  All weights are assumed to be&#10;&#10; non-negative.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SourceShortestPathP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </value>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7dbe7800"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.NeedRouteToC" loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.NeedRouteToC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.NeedRouteToC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7ddf1940"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.InitialCheckC" loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.InitialCheckC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.InitialCheckC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7ddf1940"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="GraphEdgeUnitWeightC" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeUnitWeightC.nc">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeUnitWeightC.nc">
        <short>&#10;&#10; All edges are fixed at unit weight.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; All edges are fixed at unit weight.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DsrP.RouteRequestInCacheC" loc="30(DsrP.RouteRequestInCacheC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
      <documentation loc="30(DsrP.RouteRequestInCacheC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10;</short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10; @author Ryan Stinnett&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruDataCacheC"/>
        <arguments>
          <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7dec7e20"/>
            <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7dec51b0"/></typename>
          </type-tag>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.RouteRequestInCacheC.CacheP" loc="67(DsrP.RouteRequestInCacheC.CacheP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <documentation loc="67(DsrP.RouteRequestInCacheC.CacheP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;. </short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.  Inserting a data item not in the cache will replace&#10; the oldest, and inserting an element already in the cache will refresh&#10; its age.  Insert and lookup return a pointer to the cached data.  This&#10; component should be wired to an Equal interface to check for equality&#10; on the data type used.&#10;&#10; @author Ryan Stinnett&#10; @author Rodrigo Fonseca&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruDataCacheP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_cache_item_t" scoped="" ref="0x7db37d20"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.RouteRequestOutCacheC" loc="30(DsrP.RouteRequestOutCacheC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
      <documentation loc="30(DsrP.RouteRequestOutCacheC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10;</short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10; @author Ryan Stinnett&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="LruDataCacheC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7dec7578"/>
            <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7dec78b8"/></typename>
          </type-tag>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.RouteRequestOutCacheC.CacheP" loc="67(DsrP.RouteRequestOutCacheC.CacheP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <documentation loc="67(DsrP.RouteRequestOutCacheC.CacheP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;. </short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.  Inserting a data item not in the cache will replace&#10; the oldest, and inserting an element already in the cache will refresh&#10; its age.  Insert and lookup return a pointer to the cached data.  This&#10; component should be wired to an Equal interface to check for equality&#10; on the data type used.&#10;&#10; @author Ryan Stinnett&#10; @author Rodrigo Fonseca&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="LruDataCacheP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_cache_item_t" scoped="" ref="0x7db37d20"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.RouteRequestOutTimerC" loc="39(DsrP.RouteRequestOutTimerC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerC.nc">
      <documentation loc="39(DsrP.RouteRequestOutTimerC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerC.nc">
        <short>&#10;&#10; A timed series of data items. </short>
        <long>&#10;&#10; A timed series of data items.  The client is notified as each item&#10;&#10; expires.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DataTimerC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
          </type-int>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.RouteRequestOutTimerC.TimerMilliC" loc="36(DsrP.RouteRequestOutTimerC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(DsrP.RouteRequestOutTimerC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.RouteRequestOutTimerC.DataTimerP" loc="44(DsrP.RouteRequestOutTimerC.DataTimerP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc">
      <documentation loc="44(DsrP.RouteRequestOutTimerC.DataTimerP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc">
        <short>&#10;&#10; A timed series of data items. </short>
        <long>&#10;&#10; A timed series of data items.  The client is notified as each item&#10;&#10; expires.  Uses the Equal interface to allow complex data types, but&#10;&#10; the default supplied works for primitive types.&#10;&#10;&#10;&#10; TODO: Change to use a &#34;first&#34;.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DataTimerP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_timer_data_t" scoped="" ref="0x7db039f8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.ComposeC" loc="33(DsrP.ComposeC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="33(DsrP.ComposeC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="I:14">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.SendStateC" loc="65(DsrP.SendStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(DsrP.SendStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrTransceiverC" loc="42(DsrC.DsrTransceiverC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <documentation loc="42(DsrC.DsrTransceiverC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
        <short>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type. </short>
        <long>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type.  The Packet&#10;&#10; interface used by this component should be provided by the protocol.&#10;&#10; Similarly, the SubPacket interface provided by this component should&#10;&#10; be used by the protocol to complete the chain of Packet interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketTransceiverC"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrTransceiverC.AMSenderC" loc="39(DsrC.DsrTransceiverC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="39(DsrC.DsrTransceiverC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP" loc="35(DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="35(DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.&#10;&#10;</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrC.DsrTransceiverC.AMSnoopingReceiverC" loc="36(DsrC.DsrTransceiverC.AMSnoopingReceiverC):/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <documentation loc="36(DsrC.DsrTransceiverC.AMSnoopingReceiverC):/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
        <short>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10;</short>
        <long>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnoopingReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.SinglePacketProcessorC" loc="39(DsrC.SinglePacketProcessorC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
      <documentation loc="39(DsrC.SinglePacketProcessorC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
        <short>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketProcessorC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrPacketProcessorC" loc="39(DsrC.DsrPacketProcessorC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
      <documentation loc="39(DsrC.DsrPacketProcessorC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
        <short>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketProcessorC"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SinglePacketC" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
        <short>&#10;&#10; Connects to SinglePacketP to supporting modules.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Connects to SinglePacketP to supporting modules.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SinglePacketP" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
        <short>&#10;&#10; Access and set the properties of a multihop packet with a single&#10;&#10; node address based destination.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access and set the properties of a multihop packet with a single&#10;&#10; node address based destination.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DsrC.SingleProcessorSenderC" loc="41(DsrC.SingleProcessorSenderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleProcessorSenderC.nc">
      <documentation loc="41(DsrC.SingleProcessorSenderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleProcessorSenderC.nc">
        <short>&#10;&#10; Modified sender for single destination multihop packets of created&#10;&#10; by a PacketEngine processor for a given link layer AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Modified sender for single destination multihop packets of created&#10;&#10; by a PacketEngine processor for a given link layer AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SingleProcessorSenderC"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.SingleProcessorSenderC.PacketSenderC" loc="39(DsrC.SingleProcessorSenderC.PacketSenderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <documentation loc="39(DsrC.SingleProcessorSenderC.PacketSenderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
        <short>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketSenderC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.SingleProcessorSenderC.PacketSenderC.PacketEngineClientP" loc="40(DsrC.SingleProcessorSenderC.PacketSenderC.PacketEngineClientP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <documentation loc="40(DsrC.SingleProcessorSenderC.PacketSenderC.PacketEngineClientP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
        <short>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client. </short>
        <long>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.  These values are stored statically so that no&#10;&#10; RAM is used up to hold them.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketEngineClientP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SingleProtocolC.TransceiverC" loc="42(SingleProtocolC.TransceiverC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <documentation loc="42(SingleProtocolC.TransceiverC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
        <short>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type. </short>
        <long>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type.  The Packet&#10;&#10; interface used by this component should be provided by the protocol.&#10;&#10; Similarly, the SubPacket interface provided by this component should&#10;&#10; be used by the protocol to complete the chain of Packet interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketTransceiverC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SingleProtocolC.TransceiverC.AMSenderC" loc="39(SingleProtocolC.TransceiverC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="39(SingleProtocolC.TransceiverC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP" loc="35(SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="35(SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SingleProtocolC.TransceiverC.AMSnoopingReceiverC" loc="36(SingleProtocolC.TransceiverC.AMSnoopingReceiverC):/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <documentation loc="36(SingleProtocolC.TransceiverC.AMSnoopingReceiverC):/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
        <short>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10;</short>
        <long>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSnoopingReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestDsrAppC.SendA1C.PacketSenderC" loc="39(TestDsrAppC.SendA1C.PacketSenderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <documentation loc="39(TestDsrAppC.SendA1C.PacketSenderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
        <short>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestDsrAppC.SendA1C.PacketSenderC.PacketEngineClientP" loc="40(TestDsrAppC.SendA1C.PacketSenderC.PacketEngineClientP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <documentation loc="40(TestDsrAppC.SendA1C.PacketSenderC.PacketEngineClientP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
        <short>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client. </short>
        <long>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.  These values are stored statically so that no&#10;&#10; RAM is used up to hold them.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketEngineClientP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestDsrAppC.SendA2C" loc="41(TestDsrAppC.SendA2C):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <instance number="1">
        <component-ref qname="SingleSenderC"/>
        <arguments>
          <value cst="I:23">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestDsrAppC.SendA2C.PacketSenderC" loc="39(TestDsrAppC.SendA2C.PacketSenderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <documentation loc="39(TestDsrAppC.SendA2C.PacketSenderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
        <short>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PacketSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestDsrAppC.SendA2C.PacketSenderC.PacketEngineClientP" loc="40(TestDsrAppC.SendA2C.PacketSenderC.PacketEngineClientP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <documentation loc="40(TestDsrAppC.SendA2C.PacketSenderC.PacketEngineClientP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
        <short>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client. </short>
        <long>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.  These values are stored statically so that no&#10;&#10; RAM is used up to hold them.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PacketEngineClientP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestDsrAppC.SendA3C" loc="41(TestDsrAppC.SendA3C):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <instance number="2">
        <component-ref qname="SingleSenderC"/>
        <arguments>
          <value cst="I:23">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestDsrAppC.SendA3C.PacketSenderC" loc="39(TestDsrAppC.SendA3C.PacketSenderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <documentation loc="39(TestDsrAppC.SendA3C.PacketSenderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
        <short>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PacketSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestDsrAppC.SendA3C.PacketSenderC.PacketEngineClientP" loc="40(TestDsrAppC.SendA3C.PacketSenderC.PacketEngineClientP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <documentation loc="40(TestDsrAppC.SendA3C.PacketSenderC.PacketEngineClientP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
        <short>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client. </short>
        <long>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.  These values are stored statically so that no&#10;&#10; RAM is used up to hold them.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PacketEngineClientP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestDsrAppC.ReceiveAC" loc="41(TestDsrAppC.ReceiveAC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <documentation loc="41(TestDsrAppC.ReceiveAC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
        <short>&#10;&#10; Receiver for single destination multihop packets of a given&#10;&#10; application layer AM type that are destined for this node.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Receiver for single destination multihop packets of a given&#10;&#10; application layer AM type that are destined for this node.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SingleReceiverC"/>
        <arguments>
          <value cst="I:23">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestDsrAppC.ReceiveAC.PacketReceiverC" loc="39(TestDsrAppC.ReceiveAC.PacketReceiverC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
      <documentation loc="39(TestDsrAppC.ReceiveAC.PacketReceiverC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
        <short>&#10;&#10; Receiver for generic multihop packets of a given application layer&#10;&#10; AM type that are destined for this node.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Receiver for generic multihop packets of a given application layer&#10;&#10; AM type that are destined for this node.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestDsrAppC.TimerC" loc="36(TestDsrAppC.TimerC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(TestDsrAppC.TimerC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ee73c20" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ee73db0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ee63010" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ee42218" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ee423b8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ee42558" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7ee426f0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ed40218" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ed403b8" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ed40558" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7ed406f0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.&#10;&#10; </short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7e936e10" loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7e936e10"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x7e932010" loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc" abstract="">
      <documentation loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.&#10; </short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7e9245b0" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7e9245b0"/></type-var>
        </typedef>
        <constant name="size" ref="0x7e924738" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.x/tos/system/StateC.nc" abstract="">
      <documentation loc="65:/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7e864c08" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7e864c08"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7e864d88" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7e855e88" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7e855e88"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7e851030" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e771c48" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e771c48"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e743698" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e743698"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7e743820" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e701228" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e701228"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="66:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7e4c3998" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e4c3998"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7e4c3b28" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7e4b9c78" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7e4b9c78"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7e4b6010" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e4b6010"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7e4b61a0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7e3f6090" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7e3f6090"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7e3f6350" loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e3f6350"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="">
      <documentation loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7e3e7038" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7e3e7038"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7e3e72f8" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7e3e72f8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7e3e74c0" loc="46:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7e3e74c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7e3e7780" loc="47:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7e3e7780"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7e3e7920" loc="48:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7e3e7be8" loc="49:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7e3e7be8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="">
      <documentation loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7e3d43c0" loc="41:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7e3d43c0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7e3d4680" loc="42:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7e3d4680"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7e3d4848" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7e3d4848"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7e3d4b08" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7e3d4b08"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7e3d4ca8" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="">
      <documentation loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="">
      <documentation loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7e361968" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7e361b08" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7e361ca8" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7e361e40" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7e1ec0a8" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="">
      <parameters>
        <constant name="size" ref="0x7e1e0328" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="">
      <documentation loc="49:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SingleSenderC" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc" abstract="">
      <parameters>
        <constant name="upperId" ref="0x7dee5510" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
          <component-ref qname="SingleSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TlvC" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc" abstract="">
      <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
        <short>&#10;&#10; A generic TLV type processor. </short>
        <long>&#10;&#10; A generic TLV type processor.  Pass in the type to access as the &#10;&#10; parameter to this component.  Allows at most one instance of the type&#10;&#10; in a given TLV block.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="type" ref="0x7de690e0" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
          <component-ref qname="TlvC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TlvMultipleC" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc" abstract="">
      <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
        <short>&#10;&#10; A generic TLV type processor. </short>
        <long>&#10;&#10; A generic TLV type processor.  Pass in the type to access as the &#10;&#10; parameter to this component.  Allows any number of instances of the &#10;&#10; type in a given TLV block.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="type" ref="0x7de10cc8" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
          <component-ref qname="TlvMultipleC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DsrControlP" loc="84:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc" abstract="">
      <parameters>
        <constant name="BUFFER_SIZE" ref="0x7ddf1dc8" loc="84:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
          <component-ref qname="DsrControlP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DsrRouteCacheC" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrRouteCacheC.nc" abstract="">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrRouteCacheC.nc">
        <short>&#10;&#10; Defines the default route cache to use with DSR.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Defines the default route cache to use with DSR.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxNodes" ref="0x7dcd58c8" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrRouteCacheC.nc">
          <component-ref qname="DsrRouteCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7ddf1940"/></typename>
          </type-int>
        </constant>
        <constant name="maxLinks" ref="0x7dcd5a78" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrRouteCacheC.nc">
          <component-ref qname="DsrRouteCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_link_id_t" ref="0x7ddf1768"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleLinkCacheC" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheC.nc" abstract="">
      <parameters>
        <constant name="maxNodes" ref="0x7dccc4c0" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
          <component-ref qname="SimpleLinkCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7ddf1940"/></typename>
          </type-int>
        </constant>
        <constant name="maxLinks" ref="0x7dccc670" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
          <component-ref qname="SimpleLinkCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_link_id_t" ref="0x7ddf1768"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="GraphWeightedC" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc" abstract="">
      <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
        <short>&#10;&#10; Builds a weighted graph as edges are added and supports finding the single &#10;&#10; source shortest path.  &#10;&#10; &#10;&#10;</short>
        <long>&#10;&#10; Builds a weighted graph as edges are added and supports finding the single &#10;&#10; source shortest path.  &#10;&#10; &#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7dc81768" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
          <component-ref qname="GraphWeightedC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
          </type-int>
        </constant>
        <constant name="maxEdges" ref="0x7dc81910" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
          <component-ref qname="GraphWeightedC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
          </type-int>
        </constant>
        <constant name="parallelEdges" ref="0x7dc81ab0" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
          <component-ref qname="GraphWeightedC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
        </constant>
        <typedef name="graph_edge_weight_t" ref="0x7dc81d78" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
          <component-ref qname="GraphWeightedC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7dc81d78"/></type-var>
        </typedef>
      </parameters>
      <configuration/>
    </component>
    <component qname="GraphSparseC" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc" abstract="">
      <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
        <short>&#10;&#10; Wires supporting modules needed by any GraphSparseP. </short>
        <long>&#10;&#10; Wires supporting modules needed by any GraphSparseP.  This should be&#10;&#10; combined with a weight module and any processing modules.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7dc67010" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
          <component-ref qname="GraphSparseC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
          </type-int>
        </constant>
        <constant name="maxEdges" ref="0x7dc671b8" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
          <component-ref qname="GraphSparseC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
          </type-int>
        </constant>
        <constant name="parallelEdges" ref="0x7dc67358" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
          <component-ref qname="GraphSparseC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="IndexedAllocC" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocC.nc" abstract="">
      <parameters>
        <constant name="MAX_SIZE" ref="0x7dc5f188" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocC.nc">
          <component-ref qname="IndexedAllocC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dc60cb8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="IndexedAllocBitsC" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsC.nc" abstract="">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsC.nc">
        <short>&#10;&#10; Packages IndexedAllocBitsP together with its dependencies to create an&#10;&#10; easily usable component.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Packages IndexedAllocBitsP together with its dependencies to create an&#10;&#10; easily usable component.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxSize" ref="0x7dc55d10" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsC.nc">
          <component-ref qname="IndexedAllocBitsC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dc60cb8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="BitVectorC" loc="33:/opt/tinyos-2.x/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x7dc508e8" loc="33:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="IndexedAllocBitsP" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsP.nc" abstract="">
      <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsP.nc">
        <short>&#10;&#10; A compact indexed allocation scheme using only a bit vector to track the&#10;&#10; elements. </short>
        <long>&#10;&#10; A compact indexed allocation scheme using only a bit vector to track the&#10;&#10; elements.  While this is surely slower than a pointer-based system, it uses&#10;&#10; much less memory.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxSize" ref="0x7dc36c70" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsP.nc">
          <component-ref qname="IndexedAllocBitsP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dc60cb8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GraphSparseP" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc" abstract="">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
        <short>&#10;&#10; A sparse graph using adjacency lists.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; A sparse graph using adjacency lists.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7dc1c010" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
          <component-ref qname="GraphSparseP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
          </type-int>
        </constant>
        <constant name="maxEdges" ref="0x7dc1c1b8" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
          <component-ref qname="GraphSparseP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
          </type-int>
        </constant>
        <constant name="parallelEdges" ref="0x7dc1c358" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
          <component-ref qname="GraphSparseP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SourceShortestPathC" loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc" abstract="">
      <documentation loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
        <short>&#10;&#10; Wires supporting modules needed by any SourceShortestPathP.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Wires supporting modules needed by any SourceShortestPathP.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7dbe7538" loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
          <component-ref qname="SourceShortestPathC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
          </type-int>
        </constant>
        <typedef name="graph_edge_weight_t" ref="0x7dbe7800" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
          <component-ref qname="SourceShortestPathC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7dbe7800"/></type-var>
        </typedef>
      </parameters>
      <configuration/>
    </component>
    <component qname="PriorityQueueC" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueC.nc" abstract="">
      <parameters>
        <constant name="maxSize" ref="0x7dbddae8" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueC.nc">
          <component-ref qname="PriorityQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7dbdd650"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PriorityQueueP" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueP.nc" abstract="">
      <documentation loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueP.nc">
        <short>&#10;&#10; Implements a priority queue sitting on top of an index heap. </short>
        <long>&#10;&#10; Implements a priority queue sitting on top of an index heap.  It be either a&#10;&#10; min or max heap depending on the implementation of the Compare.test command.&#10;&#10; Since this is an index heap, none of the priorities are actually stored here.&#10;&#10; Instead, a component needs only to answer calls of Compare.test (which would&#10;&#10; typically be based on the priorities in some array owned by that component).&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxSize" ref="0x7dbc5a38" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueP.nc">
          <component-ref qname="PriorityQueueP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7dbdd650"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SourceShortestPathP" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc" abstract="">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
        <short>&#10;&#10; Uses Djikstra's algorithm with a priority queue holding fringe vertices to&#10;&#10; find the single source shortest path. </short>
        <long>&#10;&#10; Uses Djikstra's algorithm with a priority queue holding fringe vertices to&#10;&#10; find the single source shortest path.  All weights are assumed to be&#10;&#10; non-negative.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7db97a30" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
          <component-ref qname="SourceShortestPathP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
          </type-int>
        </constant>
        <typedef name="graph_edge_weight_t" ref="0x7db97cf8" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
          <component-ref qname="SourceShortestPathP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7db97cf8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="LruDataCacheC" loc="30:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc" abstract="">
      <documentation loc="30:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10;</short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10; @author Ryan Stinnett&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_cache_item_t" ref="0x7db37d20" loc="30:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
          <component-ref qname="LruDataCacheC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_cache_item_t" scoped="" ref="0x7db37d20"/></type-var>
        </typedef>
        <constant name="size" ref="0x7db37ea8" loc="30:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
          <component-ref qname="LruDataCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruDataCacheP" loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc" abstract="">
      <documentation loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;. </short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.  Inserting a data item not in the cache will replace&#10; the oldest, and inserting an element already in the cache will refresh&#10; its age.  Insert and lookup return a pointer to the cached data.  This&#10; component should be wired to an Equal interface to check for equality&#10; on the data type used.&#10;&#10; @author Ryan Stinnett&#10; @author Rodrigo Fonseca&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_cache_item_t" ref="0x7db30f10" loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
          <component-ref qname="LruDataCacheP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_cache_item_t" scoped="" ref="0x7db30f10"/></type-var>
        </typedef>
        <constant name="size" ref="0x7db270b0" loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
          <component-ref qname="LruDataCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DataTimerC" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerC.nc" abstract="">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerC.nc">
        <short>&#10;&#10; A timed series of data items. </short>
        <long>&#10;&#10; A timed series of data items.  The client is notified as each item&#10;&#10; expires.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_timer_data_t" ref="0x7db039f8" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerC.nc">
          <component-ref qname="DataTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_timer_data_t" scoped="" ref="0x7db039f8"/></type-var>
        </typedef>
        <constant name="maxSize" ref="0x7db03b80" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerC.nc">
          <component-ref qname="DataTimerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DataTimerP" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc" abstract="">
      <documentation loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc">
        <short>&#10;&#10; A timed series of data items. </short>
        <long>&#10;&#10; A timed series of data items.  The client is notified as each item&#10;&#10; expires.  Uses the Equal interface to allow complex data types, but&#10;&#10; the default supplied works for primitive types.&#10;&#10;&#10;&#10; TODO: Change to use a &#34;first&#34;.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_timer_data_t" ref="0x7daf8310" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc">
          <component-ref qname="DataTimerP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_timer_data_t" scoped="" ref="0x7daf8310"/></type-var>
        </typedef>
        <constant name="maxSize" ref="0x7daf8498" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc">
          <component-ref qname="DataTimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PacketTransceiverC" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc" abstract="">
      <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
        <short>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type. </short>
        <long>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type.  The Packet&#10;&#10; interface used by this component should be provided by the protocol.&#10;&#10; Similarly, the SubPacket interface provided by this component should&#10;&#10; be used by the protocol to complete the chain of Packet interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="lowerId" ref="0x7dac6e80" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
          <component-ref qname="PacketTransceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7dac0468" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7daba980" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="">
      <documentation loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7daa3940" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSnoopingReceiverC" loc="36:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc" abstract="">
      <documentation loc="36:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
        <short>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10;</short>
        <long>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7da73c30" loc="36:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
          <component-ref qname="AMSnoopingReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketProcessorC" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc" abstract="">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
        <short>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="lowerId" ref="0x7da64010" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
          <component-ref qname="PacketProcessorC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SingleProcessorSenderC" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleProcessorSenderC.nc" abstract="">
      <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleProcessorSenderC.nc">
        <short>&#10;&#10; Modified sender for single destination multihop packets of created&#10;&#10; by a PacketEngine processor for a given link layer AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Modified sender for single destination multihop packets of created&#10;&#10; by a PacketEngine processor for a given link layer AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="lowerId" ref="0x7da101e0" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleProcessorSenderC.nc">
          <component-ref qname="SingleProcessorSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketSenderC" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc" abstract="">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
        <short>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="upperId" ref="0x7da053f0" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
          <component-ref qname="PacketSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
        <constant name="defLowerId" ref="0x7da05580" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
          <component-ref qname="PacketSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
        <constant name="clientId" ref="0x7da05730" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
          <component-ref qname="PacketSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7eb042c8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketEngineClientP" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc" abstract="">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
        <short>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client. </short>
        <long>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.  These values are stored statically so that no&#10;&#10; RAM is used up to hold them.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="upper" ref="0x7da00e00" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
          <component-ref qname="PacketEngineClientP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
        <constant name="defLower" ref="0x7d9ff010" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
          <component-ref qname="PacketEngineClientP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SingleReceiverC" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc" abstract="">
      <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
        <short>&#10;&#10; Receiver for single destination multihop packets of a given&#10;&#10; application layer AM type that are destined for this node.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Receiver for single destination multihop packets of a given&#10;&#10; application layer AM type that are destined for this node.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="upperId" ref="0x7d9e1590" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
          <component-ref qname="SingleReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketReceiverC" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc" abstract="">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
        <short>&#10;&#10; Receiver for generic multihop packets of a given application layer&#10;&#10; AM type that are destined for this node.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Receiver for generic multihop packets of a given application layer&#10;&#10; AM type that are destined for this node.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="upperId" ref="0x7d9da010" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
          <component-ref qname="PacketReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7ef830b8" loc="47:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef83290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7ef92930" loc="46:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7ef92930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ef92b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7ef72068" loc="43:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7ef72068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef72240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ef81e58" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ef81e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef80050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7ef63940" loc="41:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ef63940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7ef63b18"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7ef63bf8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7ef63cd8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7ef63db8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7ef63e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7ef521a8" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7ef521a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef52380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ef53d58" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ef53d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef52010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7ef52518" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7ef52518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef526f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7ef61eb8" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7ef61eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef410c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7ef61b50" loc="17:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7ef61b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef61d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7ef231a0" loc="22:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7ef231a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef23378"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7ef13800" loc="21:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7ef13800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef139d8"/>
        <function-ref name="isInput" scoped="" ref="0x7ef13ab8"/>
        <function-ref name="toggle" scoped="" ref="0x7ef13b98"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef13c78"/>
        <function-ref name="get" scoped="" ref="0x7ef13d58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ef13e38"/>
        <function-ref name="set" scoped="" ref="0x7ef13f18"/>
        <function-ref name="clr" scoped="" ref="0x7ef23010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7ef31030" loc="20:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7ef31030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef31208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7ee91e78" loc="91:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7ee91e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee90308"/>
        <function-ref name="isInput" scoped="" ref="0x7ee903e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ee904c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee905a8"/>
        <function-ref name="get" scoped="" ref="0x7ee90688"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee90768"/>
        <function-ref name="set" scoped="" ref="0x7ee90848"/>
        <function-ref name="clr" scoped="" ref="0x7ee90928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7eec3e98" loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7eec3e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eec20c0"/>
        <function-ref name="isInput" scoped="" ref="0x7eec21a0"/>
        <function-ref name="toggle" scoped="" ref="0x7eec2280"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec2360"/>
        <function-ref name="get" scoped="" ref="0x7eec2440"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec2520"/>
        <function-ref name="set" scoped="" ref="0x7eec2600"/>
        <function-ref name="clr" scoped="" ref="0x7eec26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7eeb0068" loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7eeb0068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb0240"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb0320"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb0400"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb04e0"/>
        <function-ref name="get" scoped="" ref="0x7eeb05c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eeb06a0"/>
        <function-ref name="set" scoped="" ref="0x7eeb0780"/>
        <function-ref name="clr" scoped="" ref="0x7eeb0860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7eea0e78" loc="85:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7eea0e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee93070"/>
        <function-ref name="isInput" scoped="" ref="0x7ee93150"/>
        <function-ref name="toggle" scoped="" ref="0x7ee93230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee93310"/>
        <function-ref name="get" scoped="" ref="0x7ee933f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee934d0"/>
        <function-ref name="set" scoped="" ref="0x7ee935b0"/>
        <function-ref name="clr" scoped="" ref="0x7ee93690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7eef3428" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7eef3428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef3600"/>
        <function-ref name="isInput" scoped="" ref="0x7eef36e0"/>
        <function-ref name="toggle" scoped="" ref="0x7eef37c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef38a0"/>
        <function-ref name="get" scoped="" ref="0x7eef3980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef3a60"/>
        <function-ref name="set" scoped="" ref="0x7eef3b40"/>
        <function-ref name="clr" scoped="" ref="0x7eef3c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7eea1af8" loc="83:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7eea1af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eea1cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7eea1db0"/>
        <function-ref name="toggle" scoped="" ref="0x7eea1e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea0010"/>
        <function-ref name="get" scoped="" ref="0x7eea00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea01d0"/>
        <function-ref name="set" scoped="" ref="0x7eea02b0"/>
        <function-ref name="clr" scoped="" ref="0x7eea0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7eef27a8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7eef27a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef2980"/>
        <function-ref name="isInput" scoped="" ref="0x7eef2a60"/>
        <function-ref name="toggle" scoped="" ref="0x7eef2b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef2c20"/>
        <function-ref name="get" scoped="" ref="0x7eef2d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef2de0"/>
        <function-ref name="set" scoped="" ref="0x7eef2ec0"/>
        <function-ref name="clr" scoped="" ref="0x7eef1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7eee0980" loc="57:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7eee0980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eee0b58"/>
        <function-ref name="isInput" scoped="" ref="0x7eee0c38"/>
        <function-ref name="toggle" scoped="" ref="0x7eee0d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7eee0df8"/>
        <function-ref name="get" scoped="" ref="0x7eee0ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eed3010"/>
        <function-ref name="set" scoped="" ref="0x7eed30f0"/>
        <function-ref name="clr" scoped="" ref="0x7eed31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7eec1bd8" loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7eec1bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eec1db0"/>
        <function-ref name="isInput" scoped="" ref="0x7eec1e90"/>
        <function-ref name="toggle" scoped="" ref="0x7eec0010"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec00f0"/>
        <function-ref name="get" scoped="" ref="0x7eec01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec02b0"/>
        <function-ref name="set" scoped="" ref="0x7eec0390"/>
        <function-ref name="clr" scoped="" ref="0x7eec0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7eea3d98" loc="79:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7eea3d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eea2010"/>
        <function-ref name="isInput" scoped="" ref="0x7eea20f0"/>
        <function-ref name="toggle" scoped="" ref="0x7eea21d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea22b0"/>
        <function-ref name="get" scoped="" ref="0x7eea2390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea2470"/>
        <function-ref name="set" scoped="" ref="0x7eea2550"/>
        <function-ref name="clr" scoped="" ref="0x7eea2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7ef02348" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7ef02348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef02520"/>
        <function-ref name="isInput" scoped="" ref="0x7ef02600"/>
        <function-ref name="toggle" scoped="" ref="0x7ef026e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef027c0"/>
        <function-ref name="get" scoped="" ref="0x7ef028a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ef02980"/>
        <function-ref name="set" scoped="" ref="0x7ef02a60"/>
        <function-ref name="clr" scoped="" ref="0x7ef02b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7eef0508" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7eef0508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef06e0"/>
        <function-ref name="isInput" scoped="" ref="0x7eef07c0"/>
        <function-ref name="toggle" scoped="" ref="0x7eef08a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef0980"/>
        <function-ref name="get" scoped="" ref="0x7eef0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef0b40"/>
        <function-ref name="set" scoped="" ref="0x7eef0c20"/>
        <function-ref name="clr" scoped="" ref="0x7eef0d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7eed26c8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7eed26c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eed28a0"/>
        <function-ref name="isInput" scoped="" ref="0x7eed2980"/>
        <function-ref name="toggle" scoped="" ref="0x7eed2a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7eed2b40"/>
        <function-ref name="get" scoped="" ref="0x7eed2c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eed2d00"/>
        <function-ref name="set" scoped="" ref="0x7eed2de0"/>
        <function-ref name="clr" scoped="" ref="0x7eed2ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7eeb3980" loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7eeb3980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb3b58"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb3c38"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb3d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb3df8"/>
        <function-ref name="get" scoped="" ref="0x7eeb3ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eeb2010"/>
        <function-ref name="set" scoped="" ref="0x7eeb20f0"/>
        <function-ref name="clr" scoped="" ref="0x7eeb21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7ee92b00" loc="88:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7ee92b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee92cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7ee92db8"/>
        <function-ref name="toggle" scoped="" ref="0x7ee92e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee91010"/>
        <function-ref name="get" scoped="" ref="0x7ee910f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee911d0"/>
        <function-ref name="set" scoped="" ref="0x7ee912b0"/>
        <function-ref name="clr" scoped="" ref="0x7ee91390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7ee83d98" loc="94:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7ee83d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee82010"/>
        <function-ref name="isInput" scoped="" ref="0x7ee820f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ee821d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee822b0"/>
        <function-ref name="get" scoped="" ref="0x7ee82390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee82470"/>
        <function-ref name="set" scoped="" ref="0x7ee82550"/>
        <function-ref name="clr" scoped="" ref="0x7ee82630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7eeb2cb8" loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7eeb2cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb2e90"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb1010"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb11d0"/>
        <function-ref name="get" scoped="" ref="0x7eeb12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eeb1390"/>
        <function-ref name="set" scoped="" ref="0x7eeb1470"/>
        <function-ref name="clr" scoped="" ref="0x7eeb1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7ef00068" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7ef00068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef00240"/>
        <function-ref name="isInput" scoped="" ref="0x7ef00320"/>
        <function-ref name="toggle" scoped="" ref="0x7ef00400"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef004e0"/>
        <function-ref name="get" scoped="" ref="0x7ef005c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ef006a0"/>
        <function-ref name="set" scoped="" ref="0x7ef00780"/>
        <function-ref name="clr" scoped="" ref="0x7ef00860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7eee2268" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7eee2268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eee2440"/>
        <function-ref name="isInput" scoped="" ref="0x7eee2520"/>
        <function-ref name="toggle" scoped="" ref="0x7eee2600"/>
        <function-ref name="isOutput" scoped="" ref="0x7eee26e0"/>
        <function-ref name="get" scoped="" ref="0x7eee27c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eee28a0"/>
        <function-ref name="set" scoped="" ref="0x7eee2980"/>
        <function-ref name="clr" scoped="" ref="0x7eee2a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7ee90aa0" loc="92:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7ee90aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee90c78"/>
        <function-ref name="isInput" scoped="" ref="0x7ee90d58"/>
        <function-ref name="toggle" scoped="" ref="0x7ee90e38"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee90f18"/>
        <function-ref name="get" scoped="" ref="0x7ee83010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee830f0"/>
        <function-ref name="set" scoped="" ref="0x7ee831d0"/>
        <function-ref name="clr" scoped="" ref="0x7ee832b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7eee15e8" loc="55:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7eee15e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eee17c0"/>
        <function-ref name="isInput" scoped="" ref="0x7eee18a0"/>
        <function-ref name="toggle" scoped="" ref="0x7eee1980"/>
        <function-ref name="isOutput" scoped="" ref="0x7eee1a60"/>
        <function-ref name="get" scoped="" ref="0x7eee1b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eee1c20"/>
        <function-ref name="set" scoped="" ref="0x7eee1d00"/>
        <function-ref name="clr" scoped="" ref="0x7eee1de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7eec2858" loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7eec2858"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eec2a30"/>
        <function-ref name="isInput" scoped="" ref="0x7eec2b10"/>
        <function-ref name="toggle" scoped="" ref="0x7eec2bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec2cd0"/>
        <function-ref name="get" scoped="" ref="0x7eec2db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec2e90"/>
        <function-ref name="set" scoped="" ref="0x7eec1010"/>
        <function-ref name="clr" scoped="" ref="0x7eec10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7eeb09d8" loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7eeb09d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb0bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb0c90"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb0e50"/>
        <function-ref name="get" scoped="" ref="0x7eea3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea30f0"/>
        <function-ref name="set" scoped="" ref="0x7eea31d0"/>
        <function-ref name="clr" scoped="" ref="0x7eea32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7ee93808" loc="86:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7ee93808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee939e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ee93ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7ee93ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee93c80"/>
        <function-ref name="get" scoped="" ref="0x7ee93d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee93e40"/>
        <function-ref name="set" scoped="" ref="0x7ee93f20"/>
        <function-ref name="clr" scoped="" ref="0x7ee92018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7eef3d98" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7eef3d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef2010"/>
        <function-ref name="isInput" scoped="" ref="0x7eef20f0"/>
        <function-ref name="toggle" scoped="" ref="0x7eef21d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef22b0"/>
        <function-ref name="get" scoped="" ref="0x7eef2390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef2470"/>
        <function-ref name="set" scoped="" ref="0x7eef2550"/>
        <function-ref name="clr" scoped="" ref="0x7eef2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7eef1188" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7eef1188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef1360"/>
        <function-ref name="isInput" scoped="" ref="0x7eef1440"/>
        <function-ref name="toggle" scoped="" ref="0x7eef1520"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef1600"/>
        <function-ref name="get" scoped="" ref="0x7eef16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef17c0"/>
        <function-ref name="set" scoped="" ref="0x7eef18a0"/>
        <function-ref name="clr" scoped="" ref="0x7eef1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7eed3348" loc="58:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7eed3348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eed3520"/>
        <function-ref name="isInput" scoped="" ref="0x7eed3600"/>
        <function-ref name="toggle" scoped="" ref="0x7eed36e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eed37c0"/>
        <function-ref name="get" scoped="" ref="0x7eed38a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eed3980"/>
        <function-ref name="set" scoped="" ref="0x7eed3a60"/>
        <function-ref name="clr" scoped="" ref="0x7eed3b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7eec05e8" loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7eec05e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eec07c0"/>
        <function-ref name="isInput" scoped="" ref="0x7eec08a0"/>
        <function-ref name="toggle" scoped="" ref="0x7eec0980"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec0a60"/>
        <function-ref name="get" scoped="" ref="0x7eec0b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec0c20"/>
        <function-ref name="set" scoped="" ref="0x7eec0d00"/>
        <function-ref name="clr" scoped="" ref="0x7eec0de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7eea27a8" loc="80:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7eea27a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eea2980"/>
        <function-ref name="isInput" scoped="" ref="0x7eea2a60"/>
        <function-ref name="toggle" scoped="" ref="0x7eea2b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea2c20"/>
        <function-ref name="get" scoped="" ref="0x7eea2d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea2de0"/>
        <function-ref name="set" scoped="" ref="0x7eea2ec0"/>
        <function-ref name="clr" scoped="" ref="0x7eea1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7ef02cb8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7ef02cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef02e90"/>
        <function-ref name="isInput" scoped="" ref="0x7ef01010"/>
        <function-ref name="toggle" scoped="" ref="0x7ef010f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef011d0"/>
        <function-ref name="get" scoped="" ref="0x7ef012b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ef01390"/>
        <function-ref name="set" scoped="" ref="0x7ef01470"/>
        <function-ref name="clr" scoped="" ref="0x7ef01550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7eef0e78" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7eef0e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eee30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7eee31c0"/>
        <function-ref name="toggle" scoped="" ref="0x7eee32a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eee3380"/>
        <function-ref name="get" scoped="" ref="0x7eee3460"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eee3540"/>
        <function-ref name="set" scoped="" ref="0x7eee3620"/>
        <function-ref name="clr" scoped="" ref="0x7eee3700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7eed1068" loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7eed1068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eed1240"/>
        <function-ref name="isInput" scoped="" ref="0x7eed1320"/>
        <function-ref name="toggle" scoped="" ref="0x7eed1400"/>
        <function-ref name="isOutput" scoped="" ref="0x7eed14e0"/>
        <function-ref name="get" scoped="" ref="0x7eed15c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eed16a0"/>
        <function-ref name="set" scoped="" ref="0x7eed1780"/>
        <function-ref name="clr" scoped="" ref="0x7eed1860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7ee91508" loc="89:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7ee91508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee916e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ee917c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ee918a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee91980"/>
        <function-ref name="get" scoped="" ref="0x7ee91a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee91b40"/>
        <function-ref name="set" scoped="" ref="0x7ee91c20"/>
        <function-ref name="clr" scoped="" ref="0x7ee91d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7eec3428" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7eec3428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eec3700"/>
        <function-ref name="isInput" scoped="" ref="0x7eec37e0"/>
        <function-ref name="toggle" scoped="" ref="0x7eec38c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec39a0"/>
        <function-ref name="get" scoped="" ref="0x7eec3a80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec3b60"/>
        <function-ref name="set" scoped="" ref="0x7eec3c40"/>
        <function-ref name="clr" scoped="" ref="0x7eec3d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7eeb16c8" loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7eeb16c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb18a0"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb1980"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb1a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb1b40"/>
        <function-ref name="get" scoped="" ref="0x7eeb1c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eeb1d00"/>
        <function-ref name="set" scoped="" ref="0x7eeb1de0"/>
        <function-ref name="clr" scoped="" ref="0x7eeb1ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7eea0508" loc="84:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7eea0508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eea06e0"/>
        <function-ref name="isInput" scoped="" ref="0x7eea07c0"/>
        <function-ref name="toggle" scoped="" ref="0x7eea08a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea0980"/>
        <function-ref name="get" scoped="" ref="0x7eea0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea0b40"/>
        <function-ref name="set" scoped="" ref="0x7eea0c20"/>
        <function-ref name="clr" scoped="" ref="0x7eea0d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7ee827a8" loc="95:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7ee827a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee82980"/>
        <function-ref name="isInput" scoped="" ref="0x7ee82a60"/>
        <function-ref name="toggle" scoped="" ref="0x7ee82b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee82c20"/>
        <function-ref name="get" scoped="" ref="0x7ee82d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee82de0"/>
        <function-ref name="set" scoped="" ref="0x7ee82ec0"/>
        <function-ref name="clr" scoped="" ref="0x7ee81010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7ef009d8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7ef009d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef00bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7ef00c90"/>
        <function-ref name="toggle" scoped="" ref="0x7ef00d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef00e50"/>
        <function-ref name="get" scoped="" ref="0x7eef3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef30f0"/>
        <function-ref name="set" scoped="" ref="0x7eef31d0"/>
        <function-ref name="clr" scoped="" ref="0x7eef32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7eee2bd8" loc="53:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7eee2bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eee2db0"/>
        <function-ref name="isInput" scoped="" ref="0x7eee2e90"/>
        <function-ref name="toggle" scoped="" ref="0x7eee1010"/>
        <function-ref name="isOutput" scoped="" ref="0x7eee10f0"/>
        <function-ref name="get" scoped="" ref="0x7eee11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eee12b0"/>
        <function-ref name="set" scoped="" ref="0x7eee1390"/>
        <function-ref name="clr" scoped="" ref="0x7eee1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7eea1188" loc="82:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7eea1188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eea1360"/>
        <function-ref name="isInput" scoped="" ref="0x7eea1440"/>
        <function-ref name="toggle" scoped="" ref="0x7eea1520"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea1600"/>
        <function-ref name="get" scoped="" ref="0x7eea16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea17c0"/>
        <function-ref name="set" scoped="" ref="0x7eea18a0"/>
        <function-ref name="clr" scoped="" ref="0x7eea1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7eee0010" loc="56:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7eee0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eee01e8"/>
        <function-ref name="isInput" scoped="" ref="0x7eee02c8"/>
        <function-ref name="toggle" scoped="" ref="0x7eee03a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eee0488"/>
        <function-ref name="get" scoped="" ref="0x7eee0568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eee0648"/>
        <function-ref name="set" scoped="" ref="0x7eee0728"/>
        <function-ref name="clr" scoped="" ref="0x7eee0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7eec1268" loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7eec1268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eec1440"/>
        <function-ref name="isInput" scoped="" ref="0x7eec1520"/>
        <function-ref name="toggle" scoped="" ref="0x7eec1600"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec16e0"/>
        <function-ref name="get" scoped="" ref="0x7eec17c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec18a0"/>
        <function-ref name="set" scoped="" ref="0x7eec1980"/>
        <function-ref name="clr" scoped="" ref="0x7eec1a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7eea3428" loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7eea3428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eea3600"/>
        <function-ref name="isInput" scoped="" ref="0x7eea36e0"/>
        <function-ref name="toggle" scoped="" ref="0x7eea37c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea38a0"/>
        <function-ref name="get" scoped="" ref="0x7eea3980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea3a60"/>
        <function-ref name="set" scoped="" ref="0x7eea3b40"/>
        <function-ref name="clr" scoped="" ref="0x7eea3c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7ee92190" loc="87:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7ee92190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee92368"/>
        <function-ref name="isInput" scoped="" ref="0x7ee92448"/>
        <function-ref name="toggle" scoped="" ref="0x7ee92528"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee92608"/>
        <function-ref name="get" scoped="" ref="0x7ee926e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee927c8"/>
        <function-ref name="set" scoped="" ref="0x7ee928a8"/>
        <function-ref name="clr" scoped="" ref="0x7ee92988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7ef039a0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7ef039a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef03b78"/>
        <function-ref name="isInput" scoped="" ref="0x7ef03c58"/>
        <function-ref name="toggle" scoped="" ref="0x7ef03d38"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef03e18"/>
        <function-ref name="get" scoped="" ref="0x7ef03ef8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ef02010"/>
        <function-ref name="set" scoped="" ref="0x7ef020f0"/>
        <function-ref name="clr" scoped="" ref="0x7ef021d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7eef1af8" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7eef1af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef1cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7eef1db0"/>
        <function-ref name="toggle" scoped="" ref="0x7eef1e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef0010"/>
        <function-ref name="get" scoped="" ref="0x7eef00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef01d0"/>
        <function-ref name="set" scoped="" ref="0x7eef02b0"/>
        <function-ref name="clr" scoped="" ref="0x7eef0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7eed3cb8" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7eed3cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eed3e90"/>
        <function-ref name="isInput" scoped="" ref="0x7eed2010"/>
        <function-ref name="toggle" scoped="" ref="0x7eed20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eed21d0"/>
        <function-ref name="get" scoped="" ref="0x7eed22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eed2390"/>
        <function-ref name="set" scoped="" ref="0x7eed2470"/>
        <function-ref name="clr" scoped="" ref="0x7eed2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7eeb3010" loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7eeb3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb31e8"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb32c8"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb33a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb3488"/>
        <function-ref name="get" scoped="" ref="0x7eeb3568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eeb3648"/>
        <function-ref name="set" scoped="" ref="0x7eeb3728"/>
        <function-ref name="clr" scoped="" ref="0x7eeb3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7ee83428" loc="93:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7ee83428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee83600"/>
        <function-ref name="isInput" scoped="" ref="0x7ee836e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ee837c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee838a0"/>
        <function-ref name="get" scoped="" ref="0x7ee83980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee83a60"/>
        <function-ref name="set" scoped="" ref="0x7ee83b40"/>
        <function-ref name="clr" scoped="" ref="0x7ee83c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7eeb2348" loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7eeb2348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb2520"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb2600"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb26e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb27c0"/>
        <function-ref name="get" scoped="" ref="0x7eeb28a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eeb2980"/>
        <function-ref name="set" scoped="" ref="0x7eeb2a60"/>
        <function-ref name="clr" scoped="" ref="0x7eeb2b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7eed19d8" loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7eed19d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eed1bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7eed1c90"/>
        <function-ref name="toggle" scoped="" ref="0x7eed1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7eed1e50"/>
        <function-ref name="get" scoped="" ref="0x7eec3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec30f0"/>
        <function-ref name="set" scoped="" ref="0x7eec31d0"/>
        <function-ref name="clr" scoped="" ref="0x7eec32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7ef016c8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7ef016c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef018a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ef01980"/>
        <function-ref name="toggle" scoped="" ref="0x7ef01a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef01b40"/>
        <function-ref name="get" scoped="" ref="0x7ef01c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ef01d00"/>
        <function-ref name="set" scoped="" ref="0x7ef01de0"/>
        <function-ref name="clr" scoped="" ref="0x7ef01ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7eee3878" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7eee3878"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eee3a50"/>
        <function-ref name="isInput" scoped="" ref="0x7eee3b30"/>
        <function-ref name="toggle" scoped="" ref="0x7eee3c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7eee3cf0"/>
        <function-ref name="get" scoped="" ref="0x7eee3dd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eee3eb0"/>
        <function-ref name="set" scoped="" ref="0x7eee2010"/>
        <function-ref name="clr" scoped="" ref="0x7eee20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ede27f0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ede27f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede29c8"/>
        <function-ref name="isInput" scoped="" ref="0x7ede2aa8"/>
        <function-ref name="toggle" scoped="" ref="0x7ede2b88"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede2c68"/>
        <function-ref name="get" scoped="" ref="0x7ede2d48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede2e28"/>
        <function-ref name="set" scoped="" ref="0x7ede2f08"/>
        <function-ref name="clr" scoped="" ref="0x7ede1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ede04f0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ede04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede06c8"/>
        <function-ref name="isInput" scoped="" ref="0x7ede07a8"/>
        <function-ref name="toggle" scoped="" ref="0x7ede0888"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede0968"/>
        <function-ref name="get" scoped="" ref="0x7ede0a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede0b28"/>
        <function-ref name="set" scoped="" ref="0x7ede0c08"/>
        <function-ref name="clr" scoped="" ref="0x7ede0ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ede3518" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ede3518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede36f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ede37d0"/>
        <function-ref name="toggle" scoped="" ref="0x7ede38b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede3990"/>
        <function-ref name="get" scoped="" ref="0x7ede3a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede3b50"/>
        <function-ref name="set" scoped="" ref="0x7ede3c30"/>
        <function-ref name="clr" scoped="" ref="0x7ede3d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ede1170" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ede1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede1348"/>
        <function-ref name="isInput" scoped="" ref="0x7ede1428"/>
        <function-ref name="toggle" scoped="" ref="0x7ede1508"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede15e8"/>
        <function-ref name="get" scoped="" ref="0x7ede16c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede17a8"/>
        <function-ref name="set" scoped="" ref="0x7ede1888"/>
        <function-ref name="clr" scoped="" ref="0x7ede1968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ede0e48" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ede0e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd3050"/>
        <function-ref name="isInput" scoped="" ref="0x7edd3130"/>
        <function-ref name="toggle" scoped="" ref="0x7edd3210"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd32f0"/>
        <function-ref name="get" scoped="" ref="0x7edd33d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd34b0"/>
        <function-ref name="set" scoped="" ref="0x7edd3590"/>
        <function-ref name="clr" scoped="" ref="0x7edd3670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ede3e70" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ede3e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede2070"/>
        <function-ref name="isInput" scoped="" ref="0x7ede2150"/>
        <function-ref name="toggle" scoped="" ref="0x7ede2230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede2310"/>
        <function-ref name="get" scoped="" ref="0x7ede23f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede24d0"/>
        <function-ref name="set" scoped="" ref="0x7ede25b0"/>
        <function-ref name="clr" scoped="" ref="0x7ede2690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ede1ac8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ede1ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede1ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7ede1d80"/>
        <function-ref name="toggle" scoped="" ref="0x7ede1e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede0010"/>
        <function-ref name="get" scoped="" ref="0x7ede00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede01d0"/>
        <function-ref name="set" scoped="" ref="0x7ede02b0"/>
        <function-ref name="clr" scoped="" ref="0x7ede0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7edd37d0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7edd37d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd39a8"/>
        <function-ref name="isInput" scoped="" ref="0x7edd3a88"/>
        <function-ref name="toggle" scoped="" ref="0x7edd3b68"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd3c48"/>
        <function-ref name="get" scoped="" ref="0x7edd3d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd3e08"/>
        <function-ref name="set" scoped="" ref="0x7edd3ee8"/>
        <function-ref name="clr" scoped="" ref="0x7edd2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9b8f28" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9b8f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9b4110"/>
        <function-ref name="isInput" scoped="" ref="0x7d9b41f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d9b42d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9b43b0"/>
        <function-ref name="get" scoped="" ref="0x7d9b4490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9b4570"/>
        <function-ref name="set" scoped="" ref="0x7d9b4650"/>
        <function-ref name="clr" scoped="" ref="0x7d9b4730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9b28f0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9b28f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9b2ac8"/>
        <function-ref name="isInput" scoped="" ref="0x7d9b2ba8"/>
        <function-ref name="toggle" scoped="" ref="0x7d9b2c88"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9b2d68"/>
        <function-ref name="get" scoped="" ref="0x7d9b2e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9b2f28"/>
        <function-ref name="set" scoped="" ref="0x7d9b1018"/>
        <function-ref name="clr" scoped="" ref="0x7d9b10f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9b02d0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9b02d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9b04a8"/>
        <function-ref name="isInput" scoped="" ref="0x7d9b0588"/>
        <function-ref name="toggle" scoped="" ref="0x7d9b0668"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9b0748"/>
        <function-ref name="get" scoped="" ref="0x7d9b0828"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9b0908"/>
        <function-ref name="set" scoped="" ref="0x7d9b09e8"/>
        <function-ref name="clr" scoped="" ref="0x7d9b0ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d98cc90" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d98cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d98ce68"/>
        <function-ref name="isInput" scoped="" ref="0x7d98b010"/>
        <function-ref name="toggle" scoped="" ref="0x7d98b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d98b1d0"/>
        <function-ref name="get" scoped="" ref="0x7d98b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d98b390"/>
        <function-ref name="set" scoped="" ref="0x7d98b470"/>
        <function-ref name="clr" scoped="" ref="0x7d98b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d98a718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d98a718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d98a8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7d98a9d0"/>
        <function-ref name="toggle" scoped="" ref="0x7d98aab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d98ab90"/>
        <function-ref name="get" scoped="" ref="0x7d98ac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d98ad50"/>
        <function-ref name="set" scoped="" ref="0x7d98ae30"/>
        <function-ref name="clr" scoped="" ref="0x7d98af10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9880f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9880f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9882d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d9883b0"/>
        <function-ref name="toggle" scoped="" ref="0x7d988490"/>
        <function-ref name="isOutput" scoped="" ref="0x7d988570"/>
        <function-ref name="get" scoped="" ref="0x7d988650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d988730"/>
        <function-ref name="set" scoped="" ref="0x7d988810"/>
        <function-ref name="clr" scoped="" ref="0x7d9888f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d987ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d987ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d987ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7d987d80"/>
        <function-ref name="toggle" scoped="" ref="0x7d987e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7d986010"/>
        <function-ref name="get" scoped="" ref="0x7d9860f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9861d0"/>
        <function-ref name="set" scoped="" ref="0x7d9862b0"/>
        <function-ref name="clr" scoped="" ref="0x7d986390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d985570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d985570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d985748"/>
        <function-ref name="isInput" scoped="" ref="0x7d985828"/>
        <function-ref name="toggle" scoped="" ref="0x7d985908"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9859e8"/>
        <function-ref name="get" scoped="" ref="0x7d985ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d985ba8"/>
        <function-ref name="set" scoped="" ref="0x7d985c88"/>
        <function-ref name="clr" scoped="" ref="0x7d985d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7edc4f28" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7edc4f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc3110"/>
        <function-ref name="isInput" scoped="" ref="0x7edc31f0"/>
        <function-ref name="toggle" scoped="" ref="0x7edc32d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc33b0"/>
        <function-ref name="get" scoped="" ref="0x7edc3490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc3570"/>
        <function-ref name="set" scoped="" ref="0x7edc3650"/>
        <function-ref name="clr" scoped="" ref="0x7edc3730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7edc2ba8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7edc2ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc2d80"/>
        <function-ref name="isInput" scoped="" ref="0x7edc2e60"/>
        <function-ref name="toggle" scoped="" ref="0x7edc1010"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc10f0"/>
        <function-ref name="get" scoped="" ref="0x7edc11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc12b0"/>
        <function-ref name="set" scoped="" ref="0x7edc1390"/>
        <function-ref name="clr" scoped="" ref="0x7edc1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7edd0bc0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7edd0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd0d98"/>
        <function-ref name="isInput" scoped="" ref="0x7edd0e78"/>
        <function-ref name="toggle" scoped="" ref="0x7edc4010"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc40f0"/>
        <function-ref name="get" scoped="" ref="0x7edc41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc42b0"/>
        <function-ref name="set" scoped="" ref="0x7edc4390"/>
        <function-ref name="clr" scoped="" ref="0x7edc4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7edc3890" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7edc3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc3a68"/>
        <function-ref name="isInput" scoped="" ref="0x7edc3b48"/>
        <function-ref name="toggle" scoped="" ref="0x7edc3c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc3d08"/>
        <function-ref name="get" scoped="" ref="0x7edc3de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc3ec8"/>
        <function-ref name="set" scoped="" ref="0x7edc2010"/>
        <function-ref name="clr" scoped="" ref="0x7edc20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7edc15d0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7edc15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc17a8"/>
        <function-ref name="isInput" scoped="" ref="0x7edc1888"/>
        <function-ref name="toggle" scoped="" ref="0x7edc1968"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc1a48"/>
        <function-ref name="get" scoped="" ref="0x7edc1b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc1c08"/>
        <function-ref name="set" scoped="" ref="0x7edc1ce8"/>
        <function-ref name="clr" scoped="" ref="0x7edc1dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7edc45d0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7edc45d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc47a8"/>
        <function-ref name="isInput" scoped="" ref="0x7edc4888"/>
        <function-ref name="toggle" scoped="" ref="0x7edc4968"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc4a48"/>
        <function-ref name="get" scoped="" ref="0x7edc4b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc4c08"/>
        <function-ref name="set" scoped="" ref="0x7edc4ce8"/>
        <function-ref name="clr" scoped="" ref="0x7edc4dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7edc2250" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7edc2250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc2428"/>
        <function-ref name="isInput" scoped="" ref="0x7edc2508"/>
        <function-ref name="toggle" scoped="" ref="0x7edc25e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc26c8"/>
        <function-ref name="get" scoped="" ref="0x7edc27a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc2888"/>
        <function-ref name="set" scoped="" ref="0x7edc2968"/>
        <function-ref name="clr" scoped="" ref="0x7edc2a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7edc1f28" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7edc1f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc0110"/>
        <function-ref name="isInput" scoped="" ref="0x7edc01f0"/>
        <function-ref name="toggle" scoped="" ref="0x7edc02d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc03b0"/>
        <function-ref name="get" scoped="" ref="0x7edc0490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc0570"/>
        <function-ref name="set" scoped="" ref="0x7edc0650"/>
        <function-ref name="clr" scoped="" ref="0x7edc0730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d95b2b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d95b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d95b488"/>
        <function-ref name="isInput" scoped="" ref="0x7d95b568"/>
        <function-ref name="toggle" scoped="" ref="0x7d95b648"/>
        <function-ref name="isOutput" scoped="" ref="0x7d95b728"/>
        <function-ref name="get" scoped="" ref="0x7d95b808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d95b8e8"/>
        <function-ref name="set" scoped="" ref="0x7d95b9c8"/>
        <function-ref name="clr" scoped="" ref="0x7d95baa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d95ac78" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d95ac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d95ae50"/>
        <function-ref name="isInput" scoped="" ref="0x7d959010"/>
        <function-ref name="toggle" scoped="" ref="0x7d9590f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9591d0"/>
        <function-ref name="get" scoped="" ref="0x7d9592b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d959390"/>
        <function-ref name="set" scoped="" ref="0x7d959470"/>
        <function-ref name="clr" scoped="" ref="0x7d959550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d958718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d958718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9588f0"/>
        <function-ref name="isInput" scoped="" ref="0x7d9589d0"/>
        <function-ref name="toggle" scoped="" ref="0x7d958ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d958b90"/>
        <function-ref name="get" scoped="" ref="0x7d958c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d958d50"/>
        <function-ref name="set" scoped="" ref="0x7d958e30"/>
        <function-ref name="clr" scoped="" ref="0x7d958f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9560f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9560f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9562d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d9563b0"/>
        <function-ref name="toggle" scoped="" ref="0x7d956490"/>
        <function-ref name="isOutput" scoped="" ref="0x7d956570"/>
        <function-ref name="get" scoped="" ref="0x7d956650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d956730"/>
        <function-ref name="set" scoped="" ref="0x7d956810"/>
        <function-ref name="clr" scoped="" ref="0x7d9568f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d955ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d955ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d955ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7d955d80"/>
        <function-ref name="toggle" scoped="" ref="0x7d955e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7d954010"/>
        <function-ref name="get" scoped="" ref="0x7d9540f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9541d0"/>
        <function-ref name="set" scoped="" ref="0x7d9542b0"/>
        <function-ref name="clr" scoped="" ref="0x7d954390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d953570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d953570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d953748"/>
        <function-ref name="isInput" scoped="" ref="0x7d953828"/>
        <function-ref name="toggle" scoped="" ref="0x7d953908"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9539e8"/>
        <function-ref name="get" scoped="" ref="0x7d953ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d953ba8"/>
        <function-ref name="set" scoped="" ref="0x7d953c88"/>
        <function-ref name="clr" scoped="" ref="0x7d953d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d951010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d951010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9511e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d9512c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d9513a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d951488"/>
        <function-ref name="get" scoped="" ref="0x7d951568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d951648"/>
        <function-ref name="set" scoped="" ref="0x7d951728"/>
        <function-ref name="clr" scoped="" ref="0x7d951808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d94d9e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d94d9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d94dbc0"/>
        <function-ref name="isInput" scoped="" ref="0x7d94dca0"/>
        <function-ref name="toggle" scoped="" ref="0x7d94dd80"/>
        <function-ref name="isOutput" scoped="" ref="0x7d94de60"/>
        <function-ref name="get" scoped="" ref="0x7d94c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d94c0f0"/>
        <function-ref name="set" scoped="" ref="0x7d94c1d0"/>
        <function-ref name="clr" scoped="" ref="0x7d94c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7edb05d0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7edb05d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb07a8"/>
        <function-ref name="isInput" scoped="" ref="0x7edb0888"/>
        <function-ref name="toggle" scoped="" ref="0x7edb0968"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb0a48"/>
        <function-ref name="get" scoped="" ref="0x7edb0b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb0c08"/>
        <function-ref name="set" scoped="" ref="0x7edb0ce8"/>
        <function-ref name="clr" scoped="" ref="0x7edb0dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7eda3250" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7eda3250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda3428"/>
        <function-ref name="isInput" scoped="" ref="0x7eda3508"/>
        <function-ref name="toggle" scoped="" ref="0x7eda35e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda36c8"/>
        <function-ref name="get" scoped="" ref="0x7eda37a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda3888"/>
        <function-ref name="set" scoped="" ref="0x7eda3968"/>
        <function-ref name="clr" scoped="" ref="0x7eda3a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7edb12a0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7edb12a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb1478"/>
        <function-ref name="isInput" scoped="" ref="0x7edb1558"/>
        <function-ref name="toggle" scoped="" ref="0x7edb1638"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb1718"/>
        <function-ref name="get" scoped="" ref="0x7edb17f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb18d8"/>
        <function-ref name="set" scoped="" ref="0x7edb19b8"/>
        <function-ref name="clr" scoped="" ref="0x7edb1a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7edb0f28" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7edb0f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda4110"/>
        <function-ref name="isInput" scoped="" ref="0x7eda41f0"/>
        <function-ref name="toggle" scoped="" ref="0x7eda42d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda43b0"/>
        <function-ref name="get" scoped="" ref="0x7eda4490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda4570"/>
        <function-ref name="set" scoped="" ref="0x7eda4650"/>
        <function-ref name="clr" scoped="" ref="0x7eda4730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7eda3ba8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7eda3ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda3d80"/>
        <function-ref name="isInput" scoped="" ref="0x7eda3e60"/>
        <function-ref name="toggle" scoped="" ref="0x7eda2010"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda20f0"/>
        <function-ref name="get" scoped="" ref="0x7eda21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda22b0"/>
        <function-ref name="set" scoped="" ref="0x7eda2390"/>
        <function-ref name="clr" scoped="" ref="0x7eda2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7edb1bf8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7edb1bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb1dd0"/>
        <function-ref name="isInput" scoped="" ref="0x7edb1eb0"/>
        <function-ref name="toggle" scoped="" ref="0x7edb0010"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb00f0"/>
        <function-ref name="get" scoped="" ref="0x7edb01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb02b0"/>
        <function-ref name="set" scoped="" ref="0x7edb0390"/>
        <function-ref name="clr" scoped="" ref="0x7edb0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7eda4890" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7eda4890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda4a68"/>
        <function-ref name="isInput" scoped="" ref="0x7eda4b48"/>
        <function-ref name="toggle" scoped="" ref="0x7eda4c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda4d08"/>
        <function-ref name="get" scoped="" ref="0x7eda4de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda4ec8"/>
        <function-ref name="set" scoped="" ref="0x7eda3010"/>
        <function-ref name="clr" scoped="" ref="0x7eda30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7eda25d0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7eda25d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda27a8"/>
        <function-ref name="isInput" scoped="" ref="0x7eda2888"/>
        <function-ref name="toggle" scoped="" ref="0x7eda2968"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda2a48"/>
        <function-ref name="get" scoped="" ref="0x7eda2b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda2c08"/>
        <function-ref name="set" scoped="" ref="0x7eda2ce8"/>
        <function-ref name="clr" scoped="" ref="0x7eda2dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9237f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9237f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9239d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d923ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7d923b90"/>
        <function-ref name="isOutput" scoped="" ref="0x7d923c70"/>
        <function-ref name="get" scoped="" ref="0x7d923d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d923e30"/>
        <function-ref name="set" scoped="" ref="0x7d923f10"/>
        <function-ref name="clr" scoped="" ref="0x7d922010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d921228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d921228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d921400"/>
        <function-ref name="isInput" scoped="" ref="0x7d9214e0"/>
        <function-ref name="toggle" scoped="" ref="0x7d9215c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9216a0"/>
        <function-ref name="get" scoped="" ref="0x7d921780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d921860"/>
        <function-ref name="set" scoped="" ref="0x7d921940"/>
        <function-ref name="clr" scoped="" ref="0x7d921a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d920c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d920c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d920de0"/>
        <function-ref name="isInput" scoped="" ref="0x7d920ec0"/>
        <function-ref name="toggle" scoped="" ref="0x7d91f010"/>
        <function-ref name="isOutput" scoped="" ref="0x7d91f0f0"/>
        <function-ref name="get" scoped="" ref="0x7d91f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d91f2b0"/>
        <function-ref name="set" scoped="" ref="0x7d91f390"/>
        <function-ref name="clr" scoped="" ref="0x7d91f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d91e6c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d91e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d91e898"/>
        <function-ref name="isInput" scoped="" ref="0x7d91e978"/>
        <function-ref name="toggle" scoped="" ref="0x7d91ea58"/>
        <function-ref name="isOutput" scoped="" ref="0x7d91eb38"/>
        <function-ref name="get" scoped="" ref="0x7d91ec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d91ecf8"/>
        <function-ref name="set" scoped="" ref="0x7d91edd8"/>
        <function-ref name="clr" scoped="" ref="0x7d91eeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d91c0b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d91c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d91c288"/>
        <function-ref name="isInput" scoped="" ref="0x7d91c368"/>
        <function-ref name="toggle" scoped="" ref="0x7d91c448"/>
        <function-ref name="isOutput" scoped="" ref="0x7d91c528"/>
        <function-ref name="get" scoped="" ref="0x7d91c608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d91c6e8"/>
        <function-ref name="set" scoped="" ref="0x7d91c7c8"/>
        <function-ref name="clr" scoped="" ref="0x7d91c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d91ba88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d91ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d91bc60"/>
        <function-ref name="isInput" scoped="" ref="0x7d91bd40"/>
        <function-ref name="toggle" scoped="" ref="0x7d91be20"/>
        <function-ref name="isOutput" scoped="" ref="0x7d91bf00"/>
        <function-ref name="get" scoped="" ref="0x7d91a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d91a0f0"/>
        <function-ref name="set" scoped="" ref="0x7d91a1d0"/>
        <function-ref name="clr" scoped="" ref="0x7d91a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d919538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d919538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d919710"/>
        <function-ref name="isInput" scoped="" ref="0x7d9197f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d9198d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9199b0"/>
        <function-ref name="get" scoped="" ref="0x7d919a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d919b70"/>
        <function-ref name="set" scoped="" ref="0x7d919c50"/>
        <function-ref name="clr" scoped="" ref="0x7d919d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d917010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d917010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9171e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d9172c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d9173a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d917488"/>
        <function-ref name="get" scoped="" ref="0x7d917568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d917648"/>
        <function-ref name="set" scoped="" ref="0x7d917728"/>
        <function-ref name="clr" scoped="" ref="0x7d917808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ed92c88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ed92c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed92e60"/>
        <function-ref name="isInput" scoped="" ref="0x7ed91010"/>
        <function-ref name="toggle" scoped="" ref="0x7ed910f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed911d0"/>
        <function-ref name="get" scoped="" ref="0x7ed912b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed91390"/>
        <function-ref name="set" scoped="" ref="0x7ed91470"/>
        <function-ref name="clr" scoped="" ref="0x7ed91550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ed90988" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ed90988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed90b60"/>
        <function-ref name="isInput" scoped="" ref="0x7ed90c40"/>
        <function-ref name="toggle" scoped="" ref="0x7ed90d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed90e00"/>
        <function-ref name="get" scoped="" ref="0x7ed90ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed84010"/>
        <function-ref name="set" scoped="" ref="0x7ed840f0"/>
        <function-ref name="clr" scoped="" ref="0x7ed841d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ed939c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ed939c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed93b98"/>
        <function-ref name="isInput" scoped="" ref="0x7ed93c78"/>
        <function-ref name="toggle" scoped="" ref="0x7ed93d58"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed93e38"/>
        <function-ref name="get" scoped="" ref="0x7ed93f18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed92010"/>
        <function-ref name="set" scoped="" ref="0x7ed920f0"/>
        <function-ref name="clr" scoped="" ref="0x7ed921d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ed916b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ed916b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed91888"/>
        <function-ref name="isInput" scoped="" ref="0x7ed91968"/>
        <function-ref name="toggle" scoped="" ref="0x7ed91a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed91b28"/>
        <function-ref name="get" scoped="" ref="0x7ed91c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed91ce8"/>
        <function-ref name="set" scoped="" ref="0x7ed91dc8"/>
        <function-ref name="clr" scoped="" ref="0x7ed91ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ed84330" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ed84330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed84508"/>
        <function-ref name="isInput" scoped="" ref="0x7ed845e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed846c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed847a8"/>
        <function-ref name="get" scoped="" ref="0x7ed84888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed84968"/>
        <function-ref name="set" scoped="" ref="0x7ed84a48"/>
        <function-ref name="clr" scoped="" ref="0x7ed84b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ed92330" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ed92330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed92508"/>
        <function-ref name="isInput" scoped="" ref="0x7ed925e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed926c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed927a8"/>
        <function-ref name="get" scoped="" ref="0x7ed92888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed92968"/>
        <function-ref name="set" scoped="" ref="0x7ed92a48"/>
        <function-ref name="clr" scoped="" ref="0x7ed92b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ed90030" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ed90030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed90208"/>
        <function-ref name="isInput" scoped="" ref="0x7ed902e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed903c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed904a8"/>
        <function-ref name="get" scoped="" ref="0x7ed90588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed90668"/>
        <function-ref name="set" scoped="" ref="0x7ed90748"/>
        <function-ref name="clr" scoped="" ref="0x7ed90828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ed84c88" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ed84c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed84e60"/>
        <function-ref name="isInput" scoped="" ref="0x7ed83010"/>
        <function-ref name="toggle" scoped="" ref="0x7ed830f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed831d0"/>
        <function-ref name="get" scoped="" ref="0x7ed832b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed83390"/>
        <function-ref name="set" scoped="" ref="0x7ed83470"/>
        <function-ref name="clr" scoped="" ref="0x7ed83550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8eed08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8eed08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8eeee0"/>
        <function-ref name="isInput" scoped="" ref="0x7d8eb010"/>
        <function-ref name="toggle" scoped="" ref="0x7d8eb0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8eb1d0"/>
        <function-ref name="get" scoped="" ref="0x7d8eb2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8eb390"/>
        <function-ref name="set" scoped="" ref="0x7d8eb470"/>
        <function-ref name="clr" scoped="" ref="0x7d8eb550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8ea718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8ea718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8ea8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7d8ea9d0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8eaab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8eab90"/>
        <function-ref name="get" scoped="" ref="0x7d8eac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8ead50"/>
        <function-ref name="set" scoped="" ref="0x7d8eae30"/>
        <function-ref name="clr" scoped="" ref="0x7d8eaf10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8e80f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8e80f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8e82d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d8e83b0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8e8490"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8e8570"/>
        <function-ref name="get" scoped="" ref="0x7d8e8650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8e8730"/>
        <function-ref name="set" scoped="" ref="0x7d8e8810"/>
        <function-ref name="clr" scoped="" ref="0x7d8e88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8e7ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8e7ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8e7ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7d8e7d80"/>
        <function-ref name="toggle" scoped="" ref="0x7d8e7e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8e6010"/>
        <function-ref name="get" scoped="" ref="0x7d8e60f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8e61d0"/>
        <function-ref name="set" scoped="" ref="0x7d8e62b0"/>
        <function-ref name="clr" scoped="" ref="0x7d8e6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8e5570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8e5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8e5748"/>
        <function-ref name="isInput" scoped="" ref="0x7d8e5828"/>
        <function-ref name="toggle" scoped="" ref="0x7d8e5908"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8e59e8"/>
        <function-ref name="get" scoped="" ref="0x7d8e5ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8e5ba8"/>
        <function-ref name="set" scoped="" ref="0x7d8e5c88"/>
        <function-ref name="clr" scoped="" ref="0x7d8e5d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8e3010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8e3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8e31e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d8e32c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d8e33a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8e3488"/>
        <function-ref name="get" scoped="" ref="0x7d8e3568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8e3648"/>
        <function-ref name="set" scoped="" ref="0x7d8e3728"/>
        <function-ref name="clr" scoped="" ref="0x7d8e3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8e29e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8e29e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8e2bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7d8e2ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8e2d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8e2e60"/>
        <function-ref name="get" scoped="" ref="0x7d8e1010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8e10f0"/>
        <function-ref name="set" scoped="" ref="0x7d8e11d0"/>
        <function-ref name="clr" scoped="" ref="0x7d8e12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8e0538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8e0538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8e0710"/>
        <function-ref name="isInput" scoped="" ref="0x7d8e07f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8e08d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8e09b0"/>
        <function-ref name="get" scoped="" ref="0x7d8e0a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8e0b70"/>
        <function-ref name="set" scoped="" ref="0x7d8e0c50"/>
        <function-ref name="clr" scoped="" ref="0x7d8e0d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ed74410" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ed74410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed745e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ed746c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed747a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed74888"/>
        <function-ref name="get" scoped="" ref="0x7ed74968"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed74a48"/>
        <function-ref name="set" scoped="" ref="0x7ed74b28"/>
        <function-ref name="clr" scoped="" ref="0x7ed74c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ed71170" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ed71170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed71348"/>
        <function-ref name="isInput" scoped="" ref="0x7ed71428"/>
        <function-ref name="toggle" scoped="" ref="0x7ed71508"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed715e8"/>
        <function-ref name="get" scoped="" ref="0x7ed716c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed717a8"/>
        <function-ref name="set" scoped="" ref="0x7ed71888"/>
        <function-ref name="clr" scoped="" ref="0x7ed71968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ed800c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ed800c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed80298"/>
        <function-ref name="isInput" scoped="" ref="0x7ed80378"/>
        <function-ref name="toggle" scoped="" ref="0x7ed80458"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed80538"/>
        <function-ref name="get" scoped="" ref="0x7ed80618"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed806f8"/>
        <function-ref name="set" scoped="" ref="0x7ed807d8"/>
        <function-ref name="clr" scoped="" ref="0x7ed808b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ed74d68" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ed74d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed72010"/>
        <function-ref name="isInput" scoped="" ref="0x7ed720f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed721d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed722b0"/>
        <function-ref name="get" scoped="" ref="0x7ed72390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed72470"/>
        <function-ref name="set" scoped="" ref="0x7ed72550"/>
        <function-ref name="clr" scoped="" ref="0x7ed72630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ed71ac8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ed71ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed71ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed71d80"/>
        <function-ref name="toggle" scoped="" ref="0x7ed71e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed70010"/>
        <function-ref name="get" scoped="" ref="0x7ed700f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed701d0"/>
        <function-ref name="set" scoped="" ref="0x7ed702b0"/>
        <function-ref name="clr" scoped="" ref="0x7ed70390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ed80a18" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ed80a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed80bf0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed80cd0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed80db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed80e90"/>
        <function-ref name="get" scoped="" ref="0x7ed74010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed740f0"/>
        <function-ref name="set" scoped="" ref="0x7ed741d0"/>
        <function-ref name="clr" scoped="" ref="0x7ed742b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ed72790" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ed72790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed72968"/>
        <function-ref name="isInput" scoped="" ref="0x7ed72a48"/>
        <function-ref name="toggle" scoped="" ref="0x7ed72b28"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed72c08"/>
        <function-ref name="get" scoped="" ref="0x7ed72ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed72dc8"/>
        <function-ref name="set" scoped="" ref="0x7ed72ea8"/>
        <function-ref name="clr" scoped="" ref="0x7ed71010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ed704f0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ed704f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed706c8"/>
        <function-ref name="isInput" scoped="" ref="0x7ed707a8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed70888"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed70968"/>
        <function-ref name="get" scoped="" ref="0x7ed70a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed70b28"/>
        <function-ref name="set" scoped="" ref="0x7ed70c08"/>
        <function-ref name="clr" scoped="" ref="0x7ed70ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8b72b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8b72b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8b7488"/>
        <function-ref name="isInput" scoped="" ref="0x7d8b7568"/>
        <function-ref name="toggle" scoped="" ref="0x7d8b7648"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8b7728"/>
        <function-ref name="get" scoped="" ref="0x7d8b7808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8b78e8"/>
        <function-ref name="set" scoped="" ref="0x7d8b79c8"/>
        <function-ref name="clr" scoped="" ref="0x7d8b7aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8b6c78" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8b6c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8b6e50"/>
        <function-ref name="isInput" scoped="" ref="0x7d8b5010"/>
        <function-ref name="toggle" scoped="" ref="0x7d8b50f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8b51d0"/>
        <function-ref name="get" scoped="" ref="0x7d8b52b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8b5390"/>
        <function-ref name="set" scoped="" ref="0x7d8b5470"/>
        <function-ref name="clr" scoped="" ref="0x7d8b5550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8b4718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8b4718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8b48f0"/>
        <function-ref name="isInput" scoped="" ref="0x7d8b49d0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8b4ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8b4b90"/>
        <function-ref name="get" scoped="" ref="0x7d8b4c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8b4d50"/>
        <function-ref name="set" scoped="" ref="0x7d8b4e30"/>
        <function-ref name="clr" scoped="" ref="0x7d8b4f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8b20f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8b20f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8b22d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d8b23b0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8b2490"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8b2570"/>
        <function-ref name="get" scoped="" ref="0x7d8b2650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8b2730"/>
        <function-ref name="set" scoped="" ref="0x7d8b2810"/>
        <function-ref name="clr" scoped="" ref="0x7d8b28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8b1ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8b1ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8b1ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7d8b1d80"/>
        <function-ref name="toggle" scoped="" ref="0x7d8b1e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8b0010"/>
        <function-ref name="get" scoped="" ref="0x7d8b00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8b01d0"/>
        <function-ref name="set" scoped="" ref="0x7d8b02b0"/>
        <function-ref name="clr" scoped="" ref="0x7d8b0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8ae570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8ae570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8ae748"/>
        <function-ref name="isInput" scoped="" ref="0x7d8ae828"/>
        <function-ref name="toggle" scoped="" ref="0x7d8ae908"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8ae9e8"/>
        <function-ref name="get" scoped="" ref="0x7d8aeac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8aeba8"/>
        <function-ref name="set" scoped="" ref="0x7d8aec88"/>
        <function-ref name="clr" scoped="" ref="0x7d8aed68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8ac010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8ac010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8ac1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d8ac2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d8ac3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8ac488"/>
        <function-ref name="get" scoped="" ref="0x7d8ac568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8ac648"/>
        <function-ref name="set" scoped="" ref="0x7d8ac728"/>
        <function-ref name="clr" scoped="" ref="0x7d8ac808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8aa9e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8aa9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8aabc0"/>
        <function-ref name="isInput" scoped="" ref="0x7d8aaca0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8aad80"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8aae60"/>
        <function-ref name="get" scoped="" ref="0x7d8a9010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8a90f0"/>
        <function-ref name="set" scoped="" ref="0x7d8a91d0"/>
        <function-ref name="clr" scoped="" ref="0x7d8a92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ed619e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ed619e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed61bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed61ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed61d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed61e60"/>
        <function-ref name="get" scoped="" ref="0x7ed60010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed600f0"/>
        <function-ref name="set" scoped="" ref="0x7ed601d0"/>
        <function-ref name="clr" scoped="" ref="0x7ed602b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ed54790" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ed54790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed54968"/>
        <function-ref name="isInput" scoped="" ref="0x7ed54a48"/>
        <function-ref name="toggle" scoped="" ref="0x7ed54b28"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed54c08"/>
        <function-ref name="get" scoped="" ref="0x7ed54ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed54dc8"/>
        <function-ref name="set" scoped="" ref="0x7ed54ea8"/>
        <function-ref name="clr" scoped="" ref="0x7ed52010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ed626f8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ed626f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed628d0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed629b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed62a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed62b70"/>
        <function-ref name="get" scoped="" ref="0x7ed62c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed62d30"/>
        <function-ref name="set" scoped="" ref="0x7ed62e10"/>
        <function-ref name="clr" scoped="" ref="0x7ed62ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ed60410" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ed60410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed605e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ed606c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed607a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed60888"/>
        <function-ref name="get" scoped="" ref="0x7ed60968"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed60a48"/>
        <function-ref name="set" scoped="" ref="0x7ed60b28"/>
        <function-ref name="clr" scoped="" ref="0x7ed60c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ed52170" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ed52170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed52348"/>
        <function-ref name="isInput" scoped="" ref="0x7ed52428"/>
        <function-ref name="toggle" scoped="" ref="0x7ed52508"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed525e8"/>
        <function-ref name="get" scoped="" ref="0x7ed526c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed527a8"/>
        <function-ref name="set" scoped="" ref="0x7ed52888"/>
        <function-ref name="clr" scoped="" ref="0x7ed52968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ed61090" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ed61090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed61268"/>
        <function-ref name="isInput" scoped="" ref="0x7ed61348"/>
        <function-ref name="toggle" scoped="" ref="0x7ed61428"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed61508"/>
        <function-ref name="get" scoped="" ref="0x7ed615e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed616c8"/>
        <function-ref name="set" scoped="" ref="0x7ed617a8"/>
        <function-ref name="clr" scoped="" ref="0x7ed61888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ed60d68" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ed60d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed54010"/>
        <function-ref name="isInput" scoped="" ref="0x7ed540f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed541d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed542b0"/>
        <function-ref name="get" scoped="" ref="0x7ed54390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed54470"/>
        <function-ref name="set" scoped="" ref="0x7ed54550"/>
        <function-ref name="clr" scoped="" ref="0x7ed54630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ed52ac8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ed52ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed52ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed52d80"/>
        <function-ref name="toggle" scoped="" ref="0x7ed52e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed51010"/>
        <function-ref name="get" scoped="" ref="0x7ed510f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed511d0"/>
        <function-ref name="set" scoped="" ref="0x7ed512b0"/>
        <function-ref name="clr" scoped="" ref="0x7ed51390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8817f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8817f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8819d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d881ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7d881b90"/>
        <function-ref name="isOutput" scoped="" ref="0x7d881c70"/>
        <function-ref name="get" scoped="" ref="0x7d881d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d881e30"/>
        <function-ref name="set" scoped="" ref="0x7d881f10"/>
        <function-ref name="clr" scoped="" ref="0x7d880010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d87f228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d87f228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d87f400"/>
        <function-ref name="isInput" scoped="" ref="0x7d87f4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7d87f5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d87f6a0"/>
        <function-ref name="get" scoped="" ref="0x7d87f780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d87f860"/>
        <function-ref name="set" scoped="" ref="0x7d87f940"/>
        <function-ref name="clr" scoped="" ref="0x7d87fa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d87ec08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d87ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d87ede0"/>
        <function-ref name="isInput" scoped="" ref="0x7d87eec0"/>
        <function-ref name="toggle" scoped="" ref="0x7d87d010"/>
        <function-ref name="isOutput" scoped="" ref="0x7d87d0f0"/>
        <function-ref name="get" scoped="" ref="0x7d87d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d87d2b0"/>
        <function-ref name="set" scoped="" ref="0x7d87d390"/>
        <function-ref name="clr" scoped="" ref="0x7d87d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d87c6c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d87c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d87c898"/>
        <function-ref name="isInput" scoped="" ref="0x7d87c978"/>
        <function-ref name="toggle" scoped="" ref="0x7d87ca58"/>
        <function-ref name="isOutput" scoped="" ref="0x7d87cb38"/>
        <function-ref name="get" scoped="" ref="0x7d87cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d87ccf8"/>
        <function-ref name="set" scoped="" ref="0x7d87cdd8"/>
        <function-ref name="clr" scoped="" ref="0x7d87ceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d87a0b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d87a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d87a288"/>
        <function-ref name="isInput" scoped="" ref="0x7d87a368"/>
        <function-ref name="toggle" scoped="" ref="0x7d87a448"/>
        <function-ref name="isOutput" scoped="" ref="0x7d87a528"/>
        <function-ref name="get" scoped="" ref="0x7d87a608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d87a6e8"/>
        <function-ref name="set" scoped="" ref="0x7d87a7c8"/>
        <function-ref name="clr" scoped="" ref="0x7d87a8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d879a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d879a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d879c60"/>
        <function-ref name="isInput" scoped="" ref="0x7d879d40"/>
        <function-ref name="toggle" scoped="" ref="0x7d879e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7d879f00"/>
        <function-ref name="get" scoped="" ref="0x7d878010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8780f0"/>
        <function-ref name="set" scoped="" ref="0x7d8781d0"/>
        <function-ref name="clr" scoped="" ref="0x7d8782b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d877538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d877538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d877710"/>
        <function-ref name="isInput" scoped="" ref="0x7d8777f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8778d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8779b0"/>
        <function-ref name="get" scoped="" ref="0x7d877a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d877b70"/>
        <function-ref name="set" scoped="" ref="0x7d877c50"/>
        <function-ref name="clr" scoped="" ref="0x7d877d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d875010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d875010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8751e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d8752c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d8753a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d875488"/>
        <function-ref name="get" scoped="" ref="0x7d875568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d875648"/>
        <function-ref name="set" scoped="" ref="0x7d875728"/>
        <function-ref name="clr" scoped="" ref="0x7d875808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ed42228" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ed42228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed42400"/>
        <function-ref name="isInput" scoped="" ref="0x7ed424e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed425c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed426a0"/>
        <function-ref name="get" scoped="" ref="0x7ed42780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed42860"/>
        <function-ref name="set" scoped="" ref="0x7ed42940"/>
        <function-ref name="clr" scoped="" ref="0x7ed42a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ed145e8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ed145e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed147c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed148a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed14980"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed14a60"/>
        <function-ref name="get" scoped="" ref="0x7ed14b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed14c20"/>
        <function-ref name="set" scoped="" ref="0x7ed14d00"/>
        <function-ref name="clr" scoped="" ref="0x7ed14de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ed12a90" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ed12a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed12c68"/>
        <function-ref name="isInput" scoped="" ref="0x7ed12d48"/>
        <function-ref name="toggle" scoped="" ref="0x7ed12e28"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed12f08"/>
        <function-ref name="get" scoped="" ref="0x7ed11010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed110f0"/>
        <function-ref name="set" scoped="" ref="0x7ed111d0"/>
        <function-ref name="clr" scoped="" ref="0x7ed112b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ed04e60" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ed04e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed03050"/>
        <function-ref name="isInput" scoped="" ref="0x7ed03130"/>
        <function-ref name="toggle" scoped="" ref="0x7ed03210"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed032f0"/>
        <function-ref name="get" scoped="" ref="0x7ed033d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed034b0"/>
        <function-ref name="set" scoped="" ref="0x7ed03590"/>
        <function-ref name="clr" scoped="" ref="0x7ed03670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ed01228" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ed01228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed01400"/>
        <function-ref name="isInput" scoped="" ref="0x7ed014e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed015c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed016a0"/>
        <function-ref name="get" scoped="" ref="0x7ed01780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed01860"/>
        <function-ref name="set" scoped="" ref="0x7ed01940"/>
        <function-ref name="clr" scoped="" ref="0x7ed01a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ecf35e8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ecf35e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecf37c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ecf38a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ecf3980"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecf3a60"/>
        <function-ref name="get" scoped="" ref="0x7ecf3b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecf3c20"/>
        <function-ref name="set" scoped="" ref="0x7ecf3d00"/>
        <function-ref name="clr" scoped="" ref="0x7ecf3de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ecf1b10" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ecf1b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecf1ce8"/>
        <function-ref name="isInput" scoped="" ref="0x7ecf1dc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ecf1ea8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecf0010"/>
        <function-ref name="get" scoped="" ref="0x7ecf00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecf01d0"/>
        <function-ref name="set" scoped="" ref="0x7ecf02b0"/>
        <function-ref name="clr" scoped="" ref="0x7ecf0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ece3010" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ece3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ece31e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ece32c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ece33a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ece3488"/>
        <function-ref name="get" scoped="" ref="0x7ece3568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ece3648"/>
        <function-ref name="set" scoped="" ref="0x7ece3728"/>
        <function-ref name="clr" scoped="" ref="0x7ece3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ece02d8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ece02d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ece04b0"/>
        <function-ref name="isInput" scoped="" ref="0x7ece0590"/>
        <function-ref name="toggle" scoped="" ref="0x7ece0670"/>
        <function-ref name="isOutput" scoped="" ref="0x7ece0750"/>
        <function-ref name="get" scoped="" ref="0x7ece0830"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ece0910"/>
        <function-ref name="set" scoped="" ref="0x7ece09f0"/>
        <function-ref name="clr" scoped="" ref="0x7ece0ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ecd3590" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ecd3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecd3768"/>
        <function-ref name="isInput" scoped="" ref="0x7ecd3848"/>
        <function-ref name="toggle" scoped="" ref="0x7ecd3928"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecd3a08"/>
        <function-ref name="get" scoped="" ref="0x7ecd3ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecd3bc8"/>
        <function-ref name="set" scoped="" ref="0x7ecd3ca8"/>
        <function-ref name="clr" scoped="" ref="0x7ecd3d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ecd0880" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ecd0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecd0a58"/>
        <function-ref name="isInput" scoped="" ref="0x7ecd0b38"/>
        <function-ref name="toggle" scoped="" ref="0x7ecd0c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecd0cf8"/>
        <function-ref name="get" scoped="" ref="0x7ecd0dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecd0eb8"/>
        <function-ref name="set" scoped="" ref="0x7ecc4010"/>
        <function-ref name="clr" scoped="" ref="0x7ecc40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ecc3bc0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ecc3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecc3d98"/>
        <function-ref name="isInput" scoped="" ref="0x7ecc3e78"/>
        <function-ref name="toggle" scoped="" ref="0x7ecc2010"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecc20f0"/>
        <function-ref name="get" scoped="" ref="0x7ecc21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecc22b0"/>
        <function-ref name="set" scoped="" ref="0x7ecc2390"/>
        <function-ref name="clr" scoped="" ref="0x7ecc2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ecc1f20" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ecc1f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecc0110"/>
        <function-ref name="isInput" scoped="" ref="0x7ecc01f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ecc02d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecc03b0"/>
        <function-ref name="get" scoped="" ref="0x7ecc0490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecc0570"/>
        <function-ref name="set" scoped="" ref="0x7ecc0650"/>
        <function-ref name="clr" scoped="" ref="0x7ecc0730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ec44d58" loc="27:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ec44d58"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f252238"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f252238"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ec43010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7ec43160" loc="28:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ec43160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7ec43338"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7ec43418"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7ec434f8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7ec435d8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7ec436b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7ec14ee8" loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7ec14ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ec130e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7ec14300" loc="46:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7ec14300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ec144d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7ec14b78" loc="48:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7ec14b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ec14d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7ec14648" loc="47:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7ec14648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ec14820"/>
        <function-ref name="taskLoop" scoped="" ref="0x7ec14900"/>
        <function-ref name="runNextTask" scoped="" ref="0x7ec149e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f212e58" loc="37:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f230050"/>
        <function-ref name="runTask" scoped="" ref="0x7f230130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f232c50" loc="36:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f232c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f232e28"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f232f08"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f241010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f071d30" loc="45:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f071d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f071f08"/>
        <function-ref name="runTask" scoped="" ref="0x7f070010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f052188" loc="46:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f052188"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f052360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f071598" loc="44:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f071598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f071770"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f071850"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f071930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7efe3e38" loc="46:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7efe3e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7eff1050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f0108c0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f0108c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f010a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7eff2d38" loc="43:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7eff2d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7eff2f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7ebf4ee8" loc="41:TestDsrP.nc">
      <component-ref qname="TestDsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x7ebf4ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ec020e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7ec021c0"/>
        <function-ref name="start" scoped="" ref="0x7ec022a0"/>
        <function-ref name="stop" scoped="" ref="0x7ec02380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7ec045f8" loc="40:TestDsrP.nc">
      <component-ref qname="TestDsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7ec045f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ec047d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendA2" ref="0x7eb83dd8" loc="44:TestDsrP.nc">
      <component-ref qname="TestDsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendA2" scoped="" ref="0x7eb83dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ebf0010"/>
        <function-ref name="getPayload" scoped="" ref="0x7ebf00f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ebf01d0"/>
        <function-ref name="cancel" scoped="" ref="0x7ebf02b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ebf0390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PEControl" ref="0x7ebf1bd8" loc="42:TestDsrP.nc">
      <component-ref qname="TestDsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PEControl" scoped="" ref="0x7ebf1bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ebf1db0"/>
        <function-ref name="stop" scoped="" ref="0x7ebf1e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7eb52e20" loc="48:TestDsrP.nc">
      <component-ref qname="TestDsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7eb52e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7eb60010"/>
        <function-ref name="payloadLength" scoped="" ref="0x7eb600f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7eb601d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7eb602b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7eb60390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendA3" ref="0x7ebf0500" loc="45:TestDsrP.nc">
      <component-ref qname="TestDsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendA3" scoped="" ref="0x7ebf0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ebf06d8"/>
        <function-ref name="getPayload" scoped="" ref="0x7ebf07b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ebf0898"/>
        <function-ref name="cancel" scoped="" ref="0x7ebf0978"/>
        <function-ref name="sendDone" scoped="" ref="0x7ebf0a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7eb74ab0" loc="46:TestDsrP.nc">
      <component-ref qname="TestDsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7eb74ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7eb74c88"/>
        <function-ref name="receive" scoped="" ref="0x7eb74d68"/>
        <function-ref name="getPayload" scoped="" ref="0x7eb74e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendA1" ref="0x7eb83710" loc="43:TestDsrP.nc">
      <component-ref qname="TestDsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendA1" scoped="" ref="0x7eb83710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7eb838e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7eb839c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7eb83aa8"/>
        <function-ref name="cancel" scoped="" ref="0x7eb83b88"/>
        <function-ref name="sendDone" scoped="" ref="0x7eb83c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7eb61ea8" loc="47:TestDsrP.nc">
      <component-ref qname="TestDsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7eb61ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7eb730c0"/>
        <function-ref name="source" scoped="" ref="0x7eb731a0"/>
        <function-ref name="address" scoped="" ref="0x7eb73280"/>
        <function-ref name="destination" scoped="" ref="0x7eb73360"/>
        <function-ref name="setSource" scoped="" ref="0x7eb73440"/>
        <function-ref name="setDestination" scoped="" ref="0x7eb73520"/>
        <function-ref name="type" scoped="" ref="0x7eb73600"/>
        <function-ref name="setType" scoped="" ref="0x7eb736e0"/>
        <function-ref name="isForMe" scoped="" ref="0x7eb737c0"/>
        <function-ref name="setGroup" scoped="" ref="0x7eb738a0"/>
        <function-ref name="localGroup" scoped="" ref="0x7eb73980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7eb50010" loc="49:TestDsrP.nc">
      <component-ref qname="TestDsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7eb50010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7eb45928"/>
        <function-ref name="fired" scoped="" ref="0x7eb50d18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7eb452e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7eb45108"/>
        <function-ref name="getdt" scoped="" ref="0x7eb45ce8"/>
        <function-ref name="gett0" scoped="" ref="0x7eb45b08"/>
        <function-ref name="isRunning" scoped="" ref="0x7eb50ef8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7eb50638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7eb45608"/>
        <function-ref name="startOneShot" scoped="" ref="0x7eb508b8"/>
        <function-ref name="stop" scoped="" ref="0x7eb50b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7eac4c70" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7eac4c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7eac4e48"/>
        <function-ref name="getPayload" scoped="" ref="0x7eac4f28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7eac3018"/>
        <function-ref name="cancel" scoped="" ref="0x7eac30f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7eac31d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7eac35e0" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7eac35e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7eac37b8"/>
        <function-ref name="receive" scoped="" ref="0x7eac3898"/>
        <function-ref name="getPayload" scoped="" ref="0x7eac3978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketEngineClient" ref="0x7eaa6680" loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngineClient" scoped="" ref="0x7eaa6680"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngineClient"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eb042c8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7eaa6858"/>
        <function-ref name="defaultLowerType" scoped="" ref="0x7eaa6938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7eae6b58" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7eae6b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7eae6d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7eaf5c28" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7eaf5c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eb042c8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7eaf5e00"/>
        <function-ref name="getPayload" scoped="" ref="0x7eaf5ee0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7eaf4010"/>
        <function-ref name="cancel" scoped="" ref="0x7eaf40f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7eaf41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7eae6e78" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7eae6e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7eaf1070"/>
        <function-ref name="payloadLength" scoped="" ref="0x7eaf1150"/>
        <function-ref name="getPayload" scoped="" ref="0x7eaf1230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7eaf1310"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7eaf13f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketWaitList" ref="0x7eac0e78" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketWaitList" scoped="" ref="0x7eac0e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7eac4738"/>
        <function-ref name="next" scoped="" ref="0x7eac44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngine" ref="0x7ead0f00" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngine" scoped="" ref="0x7ead0f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7eae40f0"/>
        <function-ref name="send" scoped="" ref="0x7eae41d0"/>
        <function-ref name="receive" scoped="" ref="0x7eae42b0"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7eae4390"/>
        <function-ref name="sendAdded" scoped="" ref="0x7eae4470"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7eae4550"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7eae4630"/>
        <function-ref name="packet" scoped="" ref="0x7eae4710"/>
        <function-ref name="sendDone" scoped="" ref="0x7eae47f0"/>
        <function-ref name="drop" scoped="" ref="0x7eae48d0"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7eae49b0"/>
        <function-ref name="waitList" scoped="" ref="0x7eae4a90"/>
        <function-ref name="setUpperType" scoped="" ref="0x7eae4b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7eaf45a8" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7eaf45a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7eaf4780"/>
        <function-ref name="receive" scoped="" ref="0x7eaf4860"/>
        <function-ref name="getPayload" scoped="" ref="0x7eaf4940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7eac3d80" loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7eac3d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7eab5010"/>
        <function-ref name="payloadLength" scoped="" ref="0x7eab50f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7eab51d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7eab52b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7eab5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7eaf5558" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7eaf5558"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7eaf5730"/>
        <function-ref name="stop" scoped="" ref="0x7eaf5810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ea94ea8" loc="93:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7ea94ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7ea930c0"/>
        <function-ref name="receive" scoped="" ref="0x7ea931a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea93280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ea94548" loc="92:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7ea94548"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ea94720"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea94800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ea948e0"/>
        <function-ref name="cancel" scoped="" ref="0x7ea949c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ea94aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketEngineClient" ref="0x7ea91010" loc="95:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngineClient" scoped="" ref="0x7ea91010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngineClient"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eb042c8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7ea911e8"/>
        <function-ref name="defaultLowerType" scoped="" ref="0x7ea912c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7eaa17a0" loc="86:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7eaa17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7eaa1978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7eaa1ac0" loc="87:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7eaa1ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7eaa1c98"/>
        <function-ref name="payloadLength" scoped="" ref="0x7eaa1d78"/>
        <function-ref name="getPayload" scoped="" ref="0x7eaa1e58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7eaa0010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7eaa00f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceivePool" ref="0x7ea82740" loc="97:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceivePool" scoped="" ref="0x7ea82740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
            <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ea85670"/>
        <function-ref name="maxSize" scoped="" ref="0x7ea851f0"/>
        <function-ref name="empty" scoped="" ref="0x7ea82d68"/>
        <function-ref name="put" scoped="" ref="0x7ea853d0"/>
        <function-ref name="size" scoped="" ref="0x7ea85010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7eaa26e0" loc="84:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7eaa26e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eb042c8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7eaa28b8"/>
        <function-ref name="getPayload" scoped="" ref="0x7eaa2998"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7eaa2a78"/>
        <function-ref name="cancel" scoped="" ref="0x7eaa2b58"/>
        <function-ref name="sendDone" scoped="" ref="0x7eaa2c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x7ea74d90" loc="98:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x7ea74d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ea80010"/>
        <function-ref name="toIdle" scoped="" ref="0x7ea800f0"/>
        <function-ref name="isState" scoped="" ref="0x7ea801d0"/>
        <function-ref name="isIdle" scoped="" ref="0x7ea802b0"/>
        <function-ref name="requestState" scoped="" ref="0x7ea80390"/>
        <function-ref name="forceState" scoped="" ref="0x7ea80470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketWaitList" ref="0x7ea96700" loc="89:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketWaitList" scoped="" ref="0x7ea96700"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7ea94010"/>
        <function-ref name="next" scoped="" ref="0x7ea96d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7ea71918" loc="99:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7ea71918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7ea71af0"/>
        <function-ref name="rand32" scoped="" ref="0x7ea71bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7ea93688" loc="94:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7ea93688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ea93860"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ea93940"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea93a20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ea93b00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ea93be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7eaa3c50" loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7eaa3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eaa3e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngine" ref="0x7eaa04d0" loc="88:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngine" scoped="" ref="0x7eaa04d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7eaa06a8"/>
        <function-ref name="send" scoped="" ref="0x7eaa0788"/>
        <function-ref name="receive" scoped="" ref="0x7eaa0868"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7eaa0948"/>
        <function-ref name="sendAdded" scoped="" ref="0x7eaa0a28"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7eaa0b08"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7eaa0be8"/>
        <function-ref name="packet" scoped="" ref="0x7eaa0cc8"/>
        <function-ref name="sendDone" scoped="" ref="0x7eaa0da8"/>
        <function-ref name="drop" scoped="" ref="0x7eaa0e88"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7ea96010"/>
        <function-ref name="waitList" scoped="" ref="0x7ea960f0"/>
        <function-ref name="setUpperType" scoped="" ref="0x7ea961d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7eaa1028" loc="85:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7eaa1028"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7eaa1200"/>
        <function-ref name="receive" scoped="" ref="0x7eaa12e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7eaa13c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="msgAdded" ref="0x7ea525d0" loc="189:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="msgAdded" scoped="" ref="0x7ea525d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ea527a8"/>
        <function-ref name="runTask" scoped="" ref="0x7ea52888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="msgAction" ref="0x7ea52d00" loc="190:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="msgAction" scoped="" ref="0x7ea52d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ea52ed8"/>
        <function-ref name="runTask" scoped="" ref="0x7ea51010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBackoff" ref="0x7ea71de0" loc="100:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBackoff" scoped="" ref="0x7ea71de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ea72718"/>
        <function-ref name="fired" scoped="" ref="0x7ea73b28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ea720d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ea73ee8"/>
        <function-ref name="getdt" scoped="" ref="0x7ea72ad8"/>
        <function-ref name="gett0" scoped="" ref="0x7ea728f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7ea73d08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ea73448"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ea723f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ea736c8"/>
        <function-ref name="stop" scoped="" ref="0x7ea73948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7eaa2010" loc="83:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7eaa2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7eaa21e8"/>
        <function-ref name="stop" scoped="" ref="0x7eaa22c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7ea91418" loc="96:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7ea91418"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ea91670"/>
        <function-ref name="source" scoped="" ref="0x7ea91750"/>
        <function-ref name="address" scoped="" ref="0x7ea91830"/>
        <function-ref name="destination" scoped="" ref="0x7ea91910"/>
        <function-ref name="setSource" scoped="" ref="0x7ea919f0"/>
        <function-ref name="setDestination" scoped="" ref="0x7ea91ad0"/>
        <function-ref name="type" scoped="" ref="0x7ea91bb0"/>
        <function-ref name="setType" scoped="" ref="0x7ea91c90"/>
        <function-ref name="isForMe" scoped="" ref="0x7ea91d70"/>
        <function-ref name="setGroup" scoped="" ref="0x7ea91e50"/>
        <function-ref name="localGroup" scoped="" ref="0x7ea90010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7e934be0" loc="42:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="PacketEngineC.ReceivePoolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7e934be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
            <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e933a98"/>
        <function-ref name="maxSize" scoped="" ref="0x7e933618"/>
        <function-ref name="empty" scoped="" ref="0x7e933258"/>
        <function-ref name="put" scoped="" ref="0x7e9337f8"/>
        <function-ref name="size" scoped="" ref="0x7e933438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7d819d88" loc="56:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="PacketEngineC.ReceivePoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7d819d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
            <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d817c00"/>
        <function-ref name="maxSize" scoped="" ref="0x7d817780"/>
        <function-ref name="empty" scoped="" ref="0x7d8173c0"/>
        <function-ref name="put" scoped="" ref="0x7d817960"/>
        <function-ref name="size" scoped="" ref="0x7d8175a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d8199e0" loc="55:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="PacketEngineC.ReceivePoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d8199e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d819bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7e904a38" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="PacketEngineC.SendStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7e904a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7e904c10"/>
        <function-ref name="toIdle" scoped="" ref="0x7e904cf0"/>
        <function-ref name="isState" scoped="" ref="0x7e904dd0"/>
        <function-ref name="isIdle" scoped="" ref="0x7e904eb0"/>
        <function-ref name="requestState" scoped="" ref="0x7e903010"/>
        <function-ref name="forceState" scoped="" ref="0x7e9030f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7e8f55c0" loc="66:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7e8f55c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7e8f5798"/>
        <function-ref name="toIdle" scoped="" ref="0x7e8f5878"/>
        <function-ref name="isState" scoped="" ref="0x7e8f5958"/>
        <function-ref name="isIdle" scoped="" ref="0x7e8f5a38"/>
        <function-ref name="requestState" scoped="" ref="0x7e8f5b18"/>
        <function-ref name="forceState" scoped="" ref="0x7e8f5bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e8f0198" loc="66:/opt/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e8f0198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e8f0370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7e8f0748" loc="67:/opt/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7e8f0748"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7e8f0920"/>
        <function-ref name="toIdle" scoped="" ref="0x7e8f0a00"/>
        <function-ref name="isState" scoped="" ref="0x7e8f0ae0"/>
        <function-ref name="isIdle" scoped="" ref="0x7e8f0bc0"/>
        <function-ref name="requestState" scoped="" ref="0x7e8f0ca0"/>
        <function-ref name="forceState" scoped="" ref="0x7e8f0d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7e8d17e8" loc="35:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e8d17e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e8d19c0"/>
        <function-ref name="rand32" scoped="" ref="0x7e8d1aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7e8c8f28" loc="34:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7e8c8f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e8d1560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e8d3298" loc="33:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e8d3298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e8d3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7e8c3a00" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e8c3a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e8c3bd8"/>
        <function-ref name="rand32" scoped="" ref="0x7e8c3cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7e8c3150" loc="33:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7e8c3150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e8c3778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e8c7d18" loc="32:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e8c7d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e8c7ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7e8b7968" loc="37:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e8b7968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e8b7b40"/>
        <function-ref name="rand32" scoped="" ref="0x7e8b7c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7e8b70b8" loc="36:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7e8b70b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e8b76e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e8c2c78" loc="35:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e8c2c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e8c2e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e8c00c0" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="PacketEngineC.SendBackoffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e8c00c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8a3a10"/>
        <function-ref name="fired" scoped="" ref="0x7e8c0dc8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8a33d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8a31f0"/>
        <function-ref name="getdt" scoped="" ref="0x7e8a3dd0"/>
        <function-ref name="gett0" scoped="" ref="0x7e8a3bf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8a3010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8c06e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8a36f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e8c0968"/>
        <function-ref name="stop" scoped="" ref="0x7e8c0be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7e8a2848" loc="38:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7e8a2848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8a0170"/>
        <function-ref name="fired" scoped="" ref="0x7e8a1570"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8a1b10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8a1930"/>
        <function-ref name="getdt" scoped="" ref="0x7e8a0530"/>
        <function-ref name="gett0" scoped="" ref="0x7e8a0350"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8a1750"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8a2e70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8a1e30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e8a1110"/>
        <function-ref name="stop" scoped="" ref="0x7e8a1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7e893100" loc="35:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7e893100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e892a10"/>
        <function-ref name="fired" scoped="" ref="0x7e893e08"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8923d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8921f0"/>
        <function-ref name="getdt" scoped="" ref="0x7e892dd0"/>
        <function-ref name="gett0" scoped="" ref="0x7e892bf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7e892010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e893728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8926f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e8939a8"/>
        <function-ref name="stop" scoped="" ref="0x7e893c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7e8859b0" loc="36:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7e8859b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e887010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e894988" loc="34:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e894988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e894b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7e865b20" loc="29:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7e865b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e868308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e868708"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e868508"/>
        <function-ref name="overflow" scoped="" ref="0x7e868908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e8810d8" loc="27:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e8810d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e8812b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7e872d00" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7e872d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e876068"/>
        <function-ref name="fired" scoped="" ref="0x7e877918"/>
        <function-ref name="startAt" scoped="" ref="0x7e877d18"/>
        <function-ref name="isRunning" scoped="" ref="0x7e877b18"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e876268"/>
        <function-ref name="start" scoped="" ref="0x7e877478"/>
        <function-ref name="stop" scoped="" ref="0x7e877718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7e862da8" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7e862da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e7760f8"/>
        <function-ref name="fired" scoped="" ref="0x7e7779a8"/>
        <function-ref name="startAt" scoped="" ref="0x7e777da8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e777ba8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e7762f8"/>
        <function-ref name="start" scoped="" ref="0x7e777508"/>
        <function-ref name="stop" scoped="" ref="0x7e7777a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e862970" loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e862970"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f252010"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f252010"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e862b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e7765b0" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e7765b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e776d00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e774128"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e776f00"/>
        <function-ref name="overflow" scoped="" ref="0x7e774328"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7d7f2910" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7d7f2910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7d7f2ae8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7d7f2bc8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7d7f2ca8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7d7f2d88"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7d7f2e68"/>
        <function-ref name="setControl" scoped="" ref="0x7d7f1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d7f8320" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d7f8320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d7f6668"/>
        <function-ref name="fired" scoped="" ref="0x7d7f8f10"/>
        <function-ref name="startAt" scoped="" ref="0x7d7f6328"/>
        <function-ref name="isRunning" scoped="" ref="0x7d7f6128"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d7f6868"/>
        <function-ref name="start" scoped="" ref="0x7d7f8a70"/>
        <function-ref name="stop" scoped="" ref="0x7d7f8d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d7f9ec8" loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d7f9ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d7f80c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7d7f6b20" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7d7f6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d7f5308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7d7f5708"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7d7f5508"/>
        <function-ref name="overflow" scoped="" ref="0x7d7f5908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7d7f08b0" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7d7f08b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7d7f0a88"/>
        <function-ref name="compareBusy" scoped="" ref="0x7d7f0b68"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7d7f0c48"/>
        <function-ref name="countBusy" scoped="" ref="0x7d7f0d28"/>
        <function-ref name="getAssr" scoped="" ref="0x7d7f0e08"/>
        <function-ref name="setAssr" scoped="" ref="0x7d7f0ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7d7f1200" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7d7f1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d7f04f8"/>
        <function-ref name="fired" scoped="" ref="0x7d7f1ce8"/>
        <function-ref name="get" scoped="" ref="0x7d7f1848"/>
        <function-ref name="reset" scoped="" ref="0x7d7f1ee8"/>
        <function-ref name="isOn" scoped="" ref="0x7d7f06f8"/>
        <function-ref name="set" scoped="" ref="0x7d7f1a48"/>
        <function-ref name="start" scoped="" ref="0x7d7f00f8"/>
        <function-ref name="stop" scoped="" ref="0x7d7f02f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7d7f5b80" loc="30:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d7f5b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7d7f22b8"/>
        <function-ref name="test" scoped="" ref="0x7d7f4ea0"/>
        <function-ref name="get" scoped="" ref="0x7d7f4200"/>
        <function-ref name="setScale" scoped="" ref="0x7d7f24b8"/>
        <function-ref name="getScale" scoped="" ref="0x7d7f2758"/>
        <function-ref name="reset" scoped="" ref="0x7d7f48a0"/>
        <function-ref name="overflow" scoped="" ref="0x7d7f46a0"/>
        <function-ref name="isOn" scoped="" ref="0x7d7f20b8"/>
        <function-ref name="set" scoped="" ref="0x7d7f4400"/>
        <function-ref name="start" scoped="" ref="0x7d7f4aa0"/>
        <function-ref name="stop" scoped="" ref="0x7d7f4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e7d7490" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e7d7490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7e7d7668"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e7d7748"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e7d7828"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e7d7908"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e7d79e8"/>
        <function-ref name="setControl" scoped="" ref="0x7e7d7ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7e7d4428" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7e7d4428"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7e7d4600"/>
        <function-ref name="compareBusy" scoped="" ref="0x7e7d46e0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7e7d47c0"/>
        <function-ref name="countBusy" scoped="" ref="0x7e7d48a0"/>
        <function-ref name="getAssr" scoped="" ref="0x7e7d4980"/>
        <function-ref name="setAssr" scoped="" ref="0x7e7d4a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7e7d7ce0" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7e7d7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e7d4048"/>
        <function-ref name="fired" scoped="" ref="0x7e7d6810"/>
        <function-ref name="get" scoped="" ref="0x7e7d6370"/>
        <function-ref name="reset" scoped="" ref="0x7e7d6a10"/>
        <function-ref name="isOn" scoped="" ref="0x7e7d4248"/>
        <function-ref name="set" scoped="" ref="0x7e7d6570"/>
        <function-ref name="start" scoped="" ref="0x7e7d6c10"/>
        <function-ref name="stop" scoped="" ref="0x7e7d6e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e7e06d0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e7e06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e7d8dd0"/>
        <function-ref name="test" scoped="" ref="0x7e7d89d0"/>
        <function-ref name="get" scoped="" ref="0x7e7e0d18"/>
        <function-ref name="setScale" scoped="" ref="0x7e7d7010"/>
        <function-ref name="getScale" scoped="" ref="0x7e7d72b0"/>
        <function-ref name="reset" scoped="" ref="0x7e7d83d0"/>
        <function-ref name="overflow" scoped="" ref="0x7e7d81d0"/>
        <function-ref name="isOn" scoped="" ref="0x7e7d8bd0"/>
        <function-ref name="set" scoped="" ref="0x7e7e0f18"/>
        <function-ref name="start" scoped="" ref="0x7e7d85d0"/>
        <function-ref name="stop" scoped="" ref="0x7e7d87d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e7c8e90" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e7c8e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7e7c6080"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e7c6160"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e7c6240"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e7c6320"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e7c6400"/>
        <function-ref name="setControl" scoped="" ref="0x7e7c64e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7e7c5e60" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7e7c5e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7e7c4050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7e7c41d8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7e7c41d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7e7c43b0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7e7c4490"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7e7c4570"/>
        <function-ref name="countBusy" scoped="" ref="0x7e7c4650"/>
        <function-ref name="getAssr" scoped="" ref="0x7e7c4730"/>
        <function-ref name="setAssr" scoped="" ref="0x7e7c4810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7e7c66f8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7e7c66f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e7c5ab0"/>
        <function-ref name="fired" scoped="" ref="0x7e7c52b0"/>
        <function-ref name="get" scoped="" ref="0x7e7c6d40"/>
        <function-ref name="reset" scoped="" ref="0x7e7c54b0"/>
        <function-ref name="isOn" scoped="" ref="0x7e7c5cb0"/>
        <function-ref name="set" scoped="" ref="0x7e7c5010"/>
        <function-ref name="start" scoped="" ref="0x7e7c56b0"/>
        <function-ref name="stop" scoped="" ref="0x7e7c58b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e7c90b0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e7c90b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e7c8810"/>
        <function-ref name="test" scoped="" ref="0x7e7c8410"/>
        <function-ref name="get" scoped="" ref="0x7e7c96f8"/>
        <function-ref name="setScale" scoped="" ref="0x7e7c8a10"/>
        <function-ref name="getScale" scoped="" ref="0x7e7c8cb0"/>
        <function-ref name="reset" scoped="" ref="0x7e7c9d98"/>
        <function-ref name="overflow" scoped="" ref="0x7e7c9b98"/>
        <function-ref name="isOn" scoped="" ref="0x7e7c8610"/>
        <function-ref name="set" scoped="" ref="0x7e7c98f8"/>
        <function-ref name="start" scoped="" ref="0x7e7c8010"/>
        <function-ref name="stop" scoped="" ref="0x7e7c8210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7e749bf0" loc="63:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7e749bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e749dc8"/>
        <function-ref name="runTask" scoped="" ref="0x7e749ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7e7504c8" loc="38:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7e7504c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e749818"/>
        <function-ref name="fired" scoped="" ref="0x7e7490d8"/>
        <function-ref name="startAt" scoped="" ref="0x7e7494d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e7492d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e749a18"/>
        <function-ref name="start" scoped="" ref="0x7e750c18"/>
        <function-ref name="stop" scoped="" ref="0x7e750eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e772440" loc="37:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e772440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e751dd0"/>
        <function-ref name="fired" scoped="" ref="0x7e7511f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e751790"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e7515b0"/>
        <function-ref name="getdt" scoped="" ref="0x7e7501f0"/>
        <function-ref name="gett0" scoped="" ref="0x7e750010"/>
        <function-ref name="isRunning" scoped="" ref="0x7e7513d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e772a68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e751ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e772ce8"/>
        <function-ref name="stop" scoped="" ref="0x7e751010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7e706240" loc="60:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7e706240"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e706418"/>
        <function-ref name="runTask" scoped="" ref="0x7e7064f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7e709380" loc="38:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7e709380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e708c98"/>
        <function-ref name="fired" scoped="" ref="0x7e7080b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e708658"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e708478"/>
        <function-ref name="getdt" scoped="" ref="0x7e706068"/>
        <function-ref name="gett0" scoped="" ref="0x7e708e78"/>
        <function-ref name="isRunning" scoped="" ref="0x7e708298"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e7099a8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e708978"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e709c28"/>
        <function-ref name="stop" scoped="" ref="0x7e709ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e744370" loc="37:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e744370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e710d08"/>
        <function-ref name="fired" scoped="" ref="0x7e7100d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e7106a8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e7104b8"/>
        <function-ref name="getdt" scoped="" ref="0x7e709108"/>
        <function-ref name="gett0" scoped="" ref="0x7e710ef8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e7102c8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e7449a8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e7109d8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e744c38"/>
        <function-ref name="stop" scoped="" ref="0x7e744ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7e703a88" loc="37:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7e703a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e7020f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7e7023d0" loc="38:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e7023d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e702b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e702f20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e702d20"/>
        <function-ref name="overflow" scoped="" ref="0x7e6f8138"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e6f1240" loc="49:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e6f1240"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e6f1418"/>
        <function-ref name="stopDone" scoped="" ref="0x7e6f14f8"/>
        <function-ref name="start" scoped="" ref="0x7e6f15d8"/>
        <function-ref name="stop" scoped="" ref="0x7e6f16b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e6f1a90" loc="51:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e6f1a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e6f1c68"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6f1d48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e6f1e28"/>
        <function-ref name="cancel" scoped="" ref="0x7e6f1f08"/>
        <function-ref name="sendDone" scoped="" ref="0x7e6f0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7e6f0b80" loc="53:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7e6f0b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e6f0d58"/>
        <function-ref name="receive" scoped="" ref="0x7e6f0e38"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6f0f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e6ea078" loc="55:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e6ea078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e6ea250"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e6ea330"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6ea410"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e6ea4f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e6ea5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e6f03e8" loc="52:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e6f03e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e6f05c0"/>
        <function-ref name="receive" scoped="" ref="0x7e6f06a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6f0780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7e6e34a8" loc="57:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e6e34a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7e6e3680"/>
        <function-ref name="noAck" scoped="" ref="0x7e6e3760"/>
        <function-ref name="wasAcked" scoped="" ref="0x7e6e3840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e6ea720" loc="56:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e6ea720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e6ea8f8"/>
        <function-ref name="source" scoped="" ref="0x7e6ea9d8"/>
        <function-ref name="address" scoped="" ref="0x7e6eaab8"/>
        <function-ref name="destination" scoped="" ref="0x7e6eab98"/>
        <function-ref name="setSource" scoped="" ref="0x7e6eac78"/>
        <function-ref name="setDestination" scoped="" ref="0x7e6ead58"/>
        <function-ref name="type" scoped="" ref="0x7e6eae38"/>
        <function-ref name="setType" scoped="" ref="0x7e6eaf18"/>
        <function-ref name="isForMe" scoped="" ref="0x7e6e9010"/>
        <function-ref name="setGroup" scoped="" ref="0x7e6e90f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7e6e91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e6e02b0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e6e02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e6e0488"/>
        <function-ref name="stopDone" scoped="" ref="0x7e6e0568"/>
        <function-ref name="start" scoped="" ref="0x7e6e0648"/>
        <function-ref name="stop" scoped="" ref="0x7e6e0728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7e6c8cf8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7e6c8cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7e6c8ed0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7e6d1010"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7e6d10f0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7e6d11d0"/>
        <function-ref name="setCca" scoped="" ref="0x7e6d12b0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7e6d1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e6e0b00" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e6e0b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e6e0cd8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6e0db8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e6e0e98"/>
        <function-ref name="cancel" scoped="" ref="0x7e6da010"/>
        <function-ref name="sendDone" scoped="" ref="0x7e6da0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7e6dac60" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7e6dac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e6dae38"/>
        <function-ref name="receive" scoped="" ref="0x7e6daf18"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6d9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e6d9d40" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e6d9d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e6d9f18"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e6d8010"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6d80f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e6d81d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e6d82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7e6d2d30" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7e6d2d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7e6d2f08"/>
        <function-ref name="getRssi" scoped="" ref="0x7e6d6010"/>
        <function-ref name="getPower" scoped="" ref="0x7e6d60f0"/>
        <function-ref name="getLqi" scoped="" ref="0x7e6d61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7e6c6040" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7e6c6040"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x7e6c6218"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x7e6c62f8"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x7e6c63d8"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x7e6c64b8"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x7e6c6598"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x7e6c6678"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x7e6c6758"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x7e6c6838"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x7e6c6918"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x7e6c69f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e6da4c8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e6da4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e6da6a0"/>
        <function-ref name="receive" scoped="" ref="0x7e6da780"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6da860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7e6d6328" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e6d6328"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7e6d6500"/>
        <function-ref name="noAck" scoped="" ref="0x7e6d65e0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7e6d66c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7e6b54a8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7e6b54a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7e6b5680"/>
        <function-ref name="setRetries" scoped="" ref="0x7e6b5760"/>
        <function-ref name="getRetries" scoped="" ref="0x7e6b5840"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7e6b5920"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7e6b5a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e6d9160" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e6d9160"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e6d9338"/>
        <function-ref name="source" scoped="" ref="0x7e6d9418"/>
        <function-ref name="address" scoped="" ref="0x7e6d94f8"/>
        <function-ref name="destination" scoped="" ref="0x7e6d95d8"/>
        <function-ref name="setSource" scoped="" ref="0x7e6d96b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7e6d9798"/>
        <function-ref name="type" scoped="" ref="0x7e6d9878"/>
        <function-ref name="setType" scoped="" ref="0x7e6d9958"/>
        <function-ref name="isForMe" scoped="" ref="0x7e6d9a38"/>
        <function-ref name="setGroup" scoped="" ref="0x7e6d9b18"/>
        <function-ref name="localGroup" scoped="" ref="0x7e6d9bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7e6a3378" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7e6a3378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e6a3550"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6a3630"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e6a3710"/>
        <function-ref name="cancel" scoped="" ref="0x7e6a37f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e6a38d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7e6a3a48" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7e6a3a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e6a3c20"/>
        <function-ref name="receive" scoped="" ref="0x7e6a3d00"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6a3de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7e6936b8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e6936b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7e693890"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7e693970"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7e693a50"/>
        <function-ref name="syncDone" scoped="" ref="0x7e693b30"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e693c10"/>
        <function-ref name="setChannel" scoped="" ref="0x7e693cf0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7e693dd0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e693eb0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7e699010"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e6990f0"/>
        <function-ref name="sync" scoped="" ref="0x7e6991d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7e6992b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e699390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e6b21a8" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e6b21a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e6b2380"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6b2460"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e6b2540"/>
        <function-ref name="cancel" scoped="" ref="0x7e6b2620"/>
        <function-ref name="sendDone" scoped="" ref="0x7e6b2700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7e6b1288" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7e6b1288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e6b1460"/>
        <function-ref name="receive" scoped="" ref="0x7e6b1540"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6b1620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e6b03f8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e6b03f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e6b05d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e6b06b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6b0790"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e6b0870"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e6b0950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7e6a9010" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7e6a9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7e6a91e8"/>
        <function-ref name="getRssi" scoped="" ref="0x7e6a92c8"/>
        <function-ref name="getPower" scoped="" ref="0x7e6a93a8"/>
        <function-ref name="getLqi" scoped="" ref="0x7e6a9488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7e6a0d28" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e6a0d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7e6a0f00"/>
        <function-ref name="getMetadata" scoped="" ref="0x7e6a2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e6b2ad8" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e6b2ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e6b2cb0"/>
        <function-ref name="receive" scoped="" ref="0x7e6b2d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6b2e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7e68a2b8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e68a2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7e68a490"/>
        <function-ref name="changed" scoped="" ref="0x7e68a570"/>
        <function-ref name="amGroup" scoped="" ref="0x7e68a650"/>
        <function-ref name="setAddress" scoped="" ref="0x7e68a730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e6b1770" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e6b1770"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e6b1948"/>
        <function-ref name="source" scoped="" ref="0x7e6b1a28"/>
        <function-ref name="address" scoped="" ref="0x7e6b1b08"/>
        <function-ref name="destination" scoped="" ref="0x7e6b1be8"/>
        <function-ref name="setSource" scoped="" ref="0x7e6b1cc8"/>
        <function-ref name="setDestination" scoped="" ref="0x7e6b1da8"/>
        <function-ref name="type" scoped="" ref="0x7e6b1e88"/>
        <function-ref name="setType" scoped="" ref="0x7e6b0010"/>
        <function-ref name="isForMe" scoped="" ref="0x7e6b00f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7e6b01d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7e6b02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e6493e0" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e6493e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e6495b8"/>
        <function-ref name="stopDone" scoped="" ref="0x7e649698"/>
        <function-ref name="start" scoped="" ref="0x7e649778"/>
        <function-ref name="stop" scoped="" ref="0x7e649858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7e648830" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7e648830"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7e648a08"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7e648ae8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7e648bc8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7e648ca8"/>
        <function-ref name="setCca" scoped="" ref="0x7e648d88"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7e648e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e6499c0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e6499c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e649b98"/>
        <function-ref name="getPayload" scoped="" ref="0x7e649c78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e649d58"/>
        <function-ref name="cancel" scoped="" ref="0x7e649e38"/>
        <function-ref name="sendDone" scoped="" ref="0x7e649f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e648098" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e648098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e648270"/>
        <function-ref name="receive" scoped="" ref="0x7e648350"/>
        <function-ref name="getPayload" scoped="" ref="0x7e648430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e647d98" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e647d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e643010"/>
        <function-ref name="stopDone" scoped="" ref="0x7e6430f0"/>
        <function-ref name="start" scoped="" ref="0x7e6431d0"/>
        <function-ref name="stop" scoped="" ref="0x7e6432b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7e643d70" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7e643d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7e642010"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7e6420f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7e6421d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7e6422b0"/>
        <function-ref name="setCca" scoped="" ref="0x7e642390"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7e642470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7e633450" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7e633450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7e633628"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7e633708"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7e6337e8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7e6338c8"/>
        <function-ref name="setCca" scoped="" ref="0x7e6339a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7e633a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7e628af0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7e628af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7e628cc8"/>
        <function-ref name="getRssi" scoped="" ref="0x7e628da8"/>
        <function-ref name="getPower" scoped="" ref="0x7e628e88"/>
        <function-ref name="getLqi" scoped="" ref="0x7e627010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7e62ace0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7e62ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e62aeb8"/>
        <function-ref name="cancel" scoped="" ref="0x7e633010"/>
        <function-ref name="modify" scoped="" ref="0x7e6330f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e6331d0"/>
        <function-ref name="resend" scoped="" ref="0x7e6332b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e643418" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e643418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e6435f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6436d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e6437b0"/>
        <function-ref name="cancel" scoped="" ref="0x7e643890"/>
        <function-ref name="sendDone" scoped="" ref="0x7e643970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7e633bf0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e633bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e633dc8"/>
        <function-ref name="rand32" scoped="" ref="0x7e633ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7e637610" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7e637610"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e6377e8"/>
        <function-ref name="stop" scoped="" ref="0x7e6378c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7e627188" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e627188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7e6273e0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7e6274c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7e634c28" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e634c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e634e00"/>
        <function-ref name="rfOff" scoped="" ref="0x7e634ee0"/>
        <function-ref name="rxOn" scoped="" ref="0x7e637010"/>
        <function-ref name="startVReg" scoped="" ref="0x7e6370f0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e6371d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e6372b0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e637390"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e637470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e621eb8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e621eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e6280c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e6281a0"/>
        <function-ref name="led1On" scoped="" ref="0x7e628280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e628360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e628440"/>
        <function-ref name="get" scoped="" ref="0x7e628520"/>
        <function-ref name="led1Off" scoped="" ref="0x7e628600"/>
        <function-ref name="led2Off" scoped="" ref="0x7e628980"/>
        <function-ref name="set" scoped="" ref="0x7e6286e0"/>
        <function-ref name="led0On" scoped="" ref="0x7e6287c0"/>
        <function-ref name="led2On" scoped="" ref="0x7e6288a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7e6399e8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e6399e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e639bc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e639ca0"/>
        <function-ref name="request" scoped="" ref="0x7e639d80"/>
        <function-ref name="granted" scoped="" ref="0x7e639e60"/>
        <function-ref name="isOwner" scoped="" ref="0x7e640010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7e627660" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x7e627660"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7e627838"/>
        <function-ref name="toIdle" scoped="" ref="0x7e627918"/>
        <function-ref name="isState" scoped="" ref="0x7e6279f8"/>
        <function-ref name="isIdle" scoped="" ref="0x7e627ad8"/>
        <function-ref name="requestState" scoped="" ref="0x7e627bb8"/>
        <function-ref name="forceState" scoped="" ref="0x7e627c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e632040" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e632040"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e632218"/>
        <function-ref name="source" scoped="" ref="0x7e6322f8"/>
        <function-ref name="address" scoped="" ref="0x7e6323d8"/>
        <function-ref name="destination" scoped="" ref="0x7e6324b8"/>
        <function-ref name="setSource" scoped="" ref="0x7e632598"/>
        <function-ref name="setDestination" scoped="" ref="0x7e632678"/>
        <function-ref name="type" scoped="" ref="0x7e632758"/>
        <function-ref name="setType" scoped="" ref="0x7e632838"/>
        <function-ref name="isForMe" scoped="" ref="0x7e632918"/>
        <function-ref name="setGroup" scoped="" ref="0x7e6329f8"/>
        <function-ref name="localGroup" scoped="" ref="0x7e632ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7e619230" loc="78:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x7e619230"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e619408"/>
        <function-ref name="runTask" scoped="" ref="0x7e6194e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7e61bac0" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x7e61bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e61bc98"/>
        <function-ref name="runTask" scoped="" ref="0x7e61bd78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7e61b170" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x7e61b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e61b348"/>
        <function-ref name="runTask" scoped="" ref="0x7e61b428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7e5e3340" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e5e3340"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7e5e3518"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7e5e35f8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7e5e36d8"/>
        <function-ref name="syncDone" scoped="" ref="0x7e5e37b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e5e3898"/>
        <function-ref name="setChannel" scoped="" ref="0x7e5e3978"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7e5e3a58"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e5e3b38"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7e5e3c18"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e5e3cf8"/>
        <function-ref name="sync" scoped="" ref="0x7e5e3dd8"/>
        <function-ref name="getChannel" scoped="" ref="0x7e5e3eb8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e5e2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7e5d9670" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7e5d9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e5d9c98"/>
        <function-ref name="readDone" scoped="" ref="0x7e5d9e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7e5e2200" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e5e2200"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e5e23d8"/>
        <function-ref name="rfOff" scoped="" ref="0x7e5e24b8"/>
        <function-ref name="rxOn" scoped="" ref="0x7e5e2598"/>
        <function-ref name="startVReg" scoped="" ref="0x7e5e2678"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e5e2758"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e5e2838"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e5e2918"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e5e29f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e5e4bb8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e5e4bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e5e4d90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e5e4e70"/>
        <function-ref name="request" scoped="" ref="0x7e5e3010"/>
        <function-ref name="granted" scoped="" ref="0x7e5e30f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7e5e31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7e5d5e00" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e5d5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7e5d4010"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7e5d40f0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7e5d41d0"/>
        <function-ref name="syncDone" scoped="" ref="0x7e5d42b0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e5d4390"/>
        <function-ref name="setChannel" scoped="" ref="0x7e5d4470"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7e5d4550"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e5d4630"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7e5d4710"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e5d47f0"/>
        <function-ref name="sync" scoped="" ref="0x7e5d48d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7e5d49b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e5d4a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7e5c3ea8" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7e5c3ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e5c00c0"/>
        <function-ref name="write" scoped="" ref="0x7e5c01a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7e5d2478" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x7e5d2478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e5d17c8"/>
        <function-ref name="fired" scoped="" ref="0x7e5d1088"/>
        <function-ref name="startAt" scoped="" ref="0x7e5d1488"/>
        <function-ref name="isRunning" scoped="" ref="0x7e5d1288"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e5d19c8"/>
        <function-ref name="start" scoped="" ref="0x7e5d2bc8"/>
        <function-ref name="stop" scoped="" ref="0x7e5d2e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7e5c3600" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7e5c3600"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e5c37d8"/>
        <function-ref name="write" scoped="" ref="0x7e5c38b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7e5cb608" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7e5cb608"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e5cb7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e5cb8c0"/>
        <function-ref name="toggle" scoped="" ref="0x7e5cb9a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e5cba80"/>
        <function-ref name="get" scoped="" ref="0x7e5cbb60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e5cbc40"/>
        <function-ref name="set" scoped="" ref="0x7e5cbd20"/>
        <function-ref name="clr" scoped="" ref="0x7e5cbe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7e5d3788" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7e5d3788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e5d3db0"/>
        <function-ref name="readDone" scoped="" ref="0x7e5d2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7e5ac9c8" loc="113:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x7e5ac9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e5acba0"/>
        <function-ref name="runTask" scoped="" ref="0x7e5acc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7e5c0338" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7e5c0338"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e5c0510"/>
        <function-ref name="write" scoped="" ref="0x7e5c05f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7e5b9cd0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7e5b9cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e5b9ea8"/>
        <function-ref name="write" scoped="" ref="0x7e5c3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7e5c5b60" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e5c5b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7e5c5d38"/>
        <function-ref name="changed" scoped="" ref="0x7e5c5e18"/>
        <function-ref name="amGroup" scoped="" ref="0x7e5c5ef8"/>
        <function-ref name="setAddress" scoped="" ref="0x7e5c8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7e5d1bb8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7e5d1bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e5d1d90"/>
        <function-ref name="isInput" scoped="" ref="0x7e5d1e70"/>
        <function-ref name="toggle" scoped="" ref="0x7e5cb010"/>
        <function-ref name="isOutput" scoped="" ref="0x7e5cb0f0"/>
        <function-ref name="get" scoped="" ref="0x7e5cb1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e5cb2b0"/>
        <function-ref name="set" scoped="" ref="0x7e5cb390"/>
        <function-ref name="clr" scoped="" ref="0x7e5cb470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7e5b7520" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7e5b7520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e5b76f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7e5ca010" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7e5ca010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e5ca1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7e5ca2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7e5ca3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e5ca488"/>
        <function-ref name="get" scoped="" ref="0x7e5ca568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e5ca648"/>
        <function-ref name="set" scoped="" ref="0x7e5ca728"/>
        <function-ref name="clr" scoped="" ref="0x7e5ca808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e5d53f0" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e5d53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e5d55c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7e5c3a58" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e5c3a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e5c3c30"/>
        <function-ref name="write" scoped="" ref="0x7e5c3d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7e5b7890" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7e5b7890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e5b7a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7e5b68b0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7e5b68b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e5b6b88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e5b6c68"/>
        <function-ref name="request" scoped="" ref="0x7e5b6d48"/>
        <function-ref name="granted" scoped="" ref="0x7e5b6e28"/>
        <function-ref name="isOwner" scoped="" ref="0x7e5b6f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7e5b47c8" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x7e5b47c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e5b49a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e5b4a80"/>
        <function-ref name="request" scoped="" ref="0x7e5b4b60"/>
        <function-ref name="granted" scoped="" ref="0x7e5b4c40"/>
        <function-ref name="isOwner" scoped="" ref="0x7e5b4d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7e5d4c80" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e5d4c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e5d4e58"/>
        <function-ref name="rfOff" scoped="" ref="0x7e5d3010"/>
        <function-ref name="rxOn" scoped="" ref="0x7e5d30f0"/>
        <function-ref name="startVReg" scoped="" ref="0x7e5d31d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e5d32b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e5d3390"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e5d3470"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e5d3550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7e5c31a8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7e5c31a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e5c3380"/>
        <function-ref name="write" scoped="" ref="0x7e5c3460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7e5b9800" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7e5b9800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e5b9a58"/>
        <function-ref name="write" scoped="" ref="0x7e5b9b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7e5b5d78" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7e5b5d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e5b7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e5b4e88" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e5b4e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e5b3070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e5b3150"/>
        <function-ref name="led1On" scoped="" ref="0x7e5b3230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e5b3310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e5b33f0"/>
        <function-ref name="get" scoped="" ref="0x7e5b34d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7e5b35b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7e5b3930"/>
        <function-ref name="set" scoped="" ref="0x7e5b3690"/>
        <function-ref name="led0On" scoped="" ref="0x7e5b3770"/>
        <function-ref name="led2On" scoped="" ref="0x7e5b3850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7e5ac298" loc="112:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x7e5ac298"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e5ac470"/>
        <function-ref name="runTask" scoped="" ref="0x7e5ac550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e5d5738" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e5d5738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e5d5910"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e5d59f0"/>
        <function-ref name="request" scoped="" ref="0x7e5d5ad0"/>
        <function-ref name="granted" scoped="" ref="0x7e5d5bb0"/>
        <function-ref name="isOwner" scoped="" ref="0x7e5d5c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7e5c15e0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7e5c15e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e5c17b8"/>
        <function-ref name="write" scoped="" ref="0x7e5c1898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7e5c5570" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7e5c5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e5c5748"/>
        <function-ref name="disable" scoped="" ref="0x7e5c5828"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e5c5908"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e5c59e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e5b7bd8" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e5b7bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e5b7db0"/>
        <function-ref name="source" scoped="" ref="0x7e5b7e90"/>
        <function-ref name="address" scoped="" ref="0x7e5b6010"/>
        <function-ref name="destination" scoped="" ref="0x7e5b60f0"/>
        <function-ref name="setSource" scoped="" ref="0x7e5b61d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7e5b62b0"/>
        <function-ref name="type" scoped="" ref="0x7e5b6390"/>
        <function-ref name="setType" scoped="" ref="0x7e5b6470"/>
        <function-ref name="isForMe" scoped="" ref="0x7e5b6550"/>
        <function-ref name="setGroup" scoped="" ref="0x7e5b6630"/>
        <function-ref name="localGroup" scoped="" ref="0x7e5b6710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7e5b40d0" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x7e5b40d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e5b42a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e5b4388"/>
        <function-ref name="request" scoped="" ref="0x7e5b4468"/>
        <function-ref name="granted" scoped="" ref="0x7e5b4548"/>
        <function-ref name="isOwner" scoped="" ref="0x7e5b4628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7e5b71a8" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7e5b71a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e5b7380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e568060" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e568060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e568238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7e568508" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x7e568508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e567868"/>
        <function-ref name="fired" scoped="" ref="0x7e567128"/>
        <function-ref name="startAt" scoped="" ref="0x7e567528"/>
        <function-ref name="isRunning" scoped="" ref="0x7e567328"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e567a68"/>
        <function-ref name="start" scoped="" ref="0x7e568c58"/>
        <function-ref name="stop" scoped="" ref="0x7e568ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7e564c90" loc="67:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7e564c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e3b3010"/>
        <function-ref name="fired" scoped="" ref="0x7e563890"/>
        <function-ref name="startAt" scoped="" ref="0x7e563c90"/>
        <function-ref name="isRunning" scoped="" ref="0x7e563a90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e3b3210"/>
        <function-ref name="start" scoped="" ref="0x7e5633f0"/>
        <function-ref name="stop" scoped="" ref="0x7e563690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e3b33c8" loc="68:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e3b33c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e3b35a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d792a60" loc="28:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d792a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d790de0"/>
        <function-ref name="fired" scoped="" ref="0x7d7906a0"/>
        <function-ref name="startAt" scoped="" ref="0x7d790aa0"/>
        <function-ref name="isRunning" scoped="" ref="0x7d7908a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d78f010"/>
        <function-ref name="start" scoped="" ref="0x7d790200"/>
        <function-ref name="stop" scoped="" ref="0x7d7904a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d78e598" loc="30:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d78e598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d78c950"/>
        <function-ref name="fired" scoped="" ref="0x7d78c210"/>
        <function-ref name="startAt" scoped="" ref="0x7d78c610"/>
        <function-ref name="isRunning" scoped="" ref="0x7d78c410"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d78cb50"/>
        <function-ref name="start" scoped="" ref="0x7d78ece8"/>
        <function-ref name="stop" scoped="" ref="0x7d78c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e53b570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e53b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e53b748"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7e53b828"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e53b908"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7e53b9e8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e53bac8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e53bba8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7e53bc88"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7e53bd68"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7e53be48"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7e53bf28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7e535448" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7e535448"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7e53acb0"/>
        <function-ref name="test" scoped="" ref="0x7e53a8b0"/>
        <function-ref name="get" scoped="" ref="0x7e535a90"/>
        <function-ref name="captured" scoped="" ref="0x7e53a010"/>
        <function-ref name="reset" scoped="" ref="0x7e53a2b0"/>
        <function-ref name="isOn" scoped="" ref="0x7e53aab0"/>
        <function-ref name="set" scoped="" ref="0x7e535c90"/>
        <function-ref name="start" scoped="" ref="0x7e53a4b0"/>
        <function-ref name="stop" scoped="" ref="0x7e53a6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7e534278" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7e534278"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e533610"/>
        <function-ref name="fired" scoped="" ref="0x7e534d60"/>
        <function-ref name="get" scoped="" ref="0x7e5348c0"/>
        <function-ref name="reset" scoped="" ref="0x7e533010"/>
        <function-ref name="isOn" scoped="" ref="0x7e533810"/>
        <function-ref name="set" scoped="" ref="0x7e534ac0"/>
        <function-ref name="start" scoped="" ref="0x7e533210"/>
        <function-ref name="stop" scoped="" ref="0x7e533410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e54cdb0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e54cdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e5464d8"/>
        <function-ref name="test" scoped="" ref="0x7e5460d8"/>
        <function-ref name="get" scoped="" ref="0x7e548410"/>
        <function-ref name="setScale" scoped="" ref="0x7e5466d8"/>
        <function-ref name="getScale" scoped="" ref="0x7e546978"/>
        <function-ref name="reset" scoped="" ref="0x7e548ab0"/>
        <function-ref name="overflow" scoped="" ref="0x7e5488b0"/>
        <function-ref name="isOn" scoped="" ref="0x7e5462d8"/>
        <function-ref name="set" scoped="" ref="0x7e548610"/>
        <function-ref name="start" scoped="" ref="0x7e548cb0"/>
        <function-ref name="stop" scoped="" ref="0x7e548eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e529cc8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e529cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e529ea0"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7e528010"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e5280f0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7e5281d0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e5282b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e528390"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7e528470"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7e528550"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7e528630"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7e528710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x7e520c20" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x7e520c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7e520df8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e520ed8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e51b010"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e51b0f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e51b1d0"/>
        <function-ref name="setControl" scoped="" ref="0x7e51b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7e525530" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7e525530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e524848"/>
        <function-ref name="fired" scoped="" ref="0x7e524048"/>
        <function-ref name="get" scoped="" ref="0x7e525b78"/>
        <function-ref name="reset" scoped="" ref="0x7e524248"/>
        <function-ref name="isOn" scoped="" ref="0x7e524a48"/>
        <function-ref name="set" scoped="" ref="0x7e525d78"/>
        <function-ref name="start" scoped="" ref="0x7e524448"/>
        <function-ref name="stop" scoped="" ref="0x7e524648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7e528930" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7e528930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7e525210"/>
        <function-ref name="test" scoped="" ref="0x7e527d50"/>
        <function-ref name="get" scoped="" ref="0x7e527010"/>
        <function-ref name="captured" scoped="" ref="0x7e5274b0"/>
        <function-ref name="reset" scoped="" ref="0x7e527750"/>
        <function-ref name="isOn" scoped="" ref="0x7e525010"/>
        <function-ref name="set" scoped="" ref="0x7e527210"/>
        <function-ref name="start" scoped="" ref="0x7e527950"/>
        <function-ref name="stop" scoped="" ref="0x7e527b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7e524cc8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7e524cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e521010"/>
        <function-ref name="fired" scoped="" ref="0x7e5227d0"/>
        <function-ref name="get" scoped="" ref="0x7e522330"/>
        <function-ref name="reset" scoped="" ref="0x7e5229d0"/>
        <function-ref name="isOn" scoped="" ref="0x7e521210"/>
        <function-ref name="set" scoped="" ref="0x7e522530"/>
        <function-ref name="start" scoped="" ref="0x7e522bd0"/>
        <function-ref name="stop" scoped="" ref="0x7e522dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7e521490" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7e521490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e520810"/>
        <function-ref name="fired" scoped="" ref="0x7e520010"/>
        <function-ref name="get" scoped="" ref="0x7e521ad8"/>
        <function-ref name="reset" scoped="" ref="0x7e520210"/>
        <function-ref name="isOn" scoped="" ref="0x7e520a10"/>
        <function-ref name="set" scoped="" ref="0x7e521cd8"/>
        <function-ref name="start" scoped="" ref="0x7e520410"/>
        <function-ref name="stop" scoped="" ref="0x7e520610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e531ef8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e531ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e529648"/>
        <function-ref name="test" scoped="" ref="0x7e529248"/>
        <function-ref name="get" scoped="" ref="0x7e52a578"/>
        <function-ref name="setScale" scoped="" ref="0x7e529848"/>
        <function-ref name="getScale" scoped="" ref="0x7e529ae8"/>
        <function-ref name="reset" scoped="" ref="0x7e52ac18"/>
        <function-ref name="overflow" scoped="" ref="0x7e52aa18"/>
        <function-ref name="isOn" scoped="" ref="0x7e529448"/>
        <function-ref name="set" scoped="" ref="0x7e52a778"/>
        <function-ref name="start" scoped="" ref="0x7e52ae18"/>
        <function-ref name="stop" scoped="" ref="0x7e529048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e4c5580" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e4c5580"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f252010"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f252010"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e4c5758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e4c5968" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e4c5968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e4ba0d8"/>
        <function-ref name="test" scoped="" ref="0x7e4bbcb0"/>
        <function-ref name="get" scoped="" ref="0x7e4bb010"/>
        <function-ref name="setScale" scoped="" ref="0x7e4ba2d8"/>
        <function-ref name="getScale" scoped="" ref="0x7e4ba578"/>
        <function-ref name="reset" scoped="" ref="0x7e4bb6b0"/>
        <function-ref name="overflow" scoped="" ref="0x7e4bb4b0"/>
        <function-ref name="isOn" scoped="" ref="0x7e4bbeb0"/>
        <function-ref name="set" scoped="" ref="0x7e4bb210"/>
        <function-ref name="start" scoped="" ref="0x7e4bb8b0"/>
        <function-ref name="stop" scoped="" ref="0x7e4bbab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d7839f8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d7839f8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f260dc0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f260dc0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d782de0"/>
        <function-ref name="fired" scoped="" ref="0x7d7826a0"/>
        <function-ref name="startAt" scoped="" ref="0x7d782aa0"/>
        <function-ref name="isRunning" scoped="" ref="0x7d7828a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d780010"/>
        <function-ref name="start" scoped="" ref="0x7d782200"/>
        <function-ref name="stop" scoped="" ref="0x7d7824a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7d75e120" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7d75e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d75d448"/>
        <function-ref name="fired" scoped="" ref="0x7d75ec08"/>
        <function-ref name="get" scoped="" ref="0x7d75e768"/>
        <function-ref name="reset" scoped="" ref="0x7d75ee08"/>
        <function-ref name="isOn" scoped="" ref="0x7d75d648"/>
        <function-ref name="set" scoped="" ref="0x7d75e968"/>
        <function-ref name="start" scoped="" ref="0x7d75d048"/>
        <function-ref name="stop" scoped="" ref="0x7d75d248"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7d780258" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7d780258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7d760a10"/>
        <function-ref name="test" scoped="" ref="0x7d760610"/>
        <function-ref name="get" scoped="" ref="0x7d7808a0"/>
        <function-ref name="setScale" scoped="" ref="0x7d760c10"/>
        <function-ref name="getScale" scoped="" ref="0x7d760eb0"/>
        <function-ref name="reset" scoped="" ref="0x7d760010"/>
        <function-ref name="overflow" scoped="" ref="0x7d780d40"/>
        <function-ref name="isOn" scoped="" ref="0x7d760810"/>
        <function-ref name="set" scoped="" ref="0x7d780aa0"/>
        <function-ref name="start" scoped="" ref="0x7d760210"/>
        <function-ref name="stop" scoped="" ref="0x7d760410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e404a28" loc="24:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e404a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e403200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e403600"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e403400"/>
        <function-ref name="overflow" scoped="" ref="0x7e403800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e3fde30" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e3fde30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e3fc590"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e3fc990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e3fc790"/>
        <function-ref name="overflow" scoped="" ref="0x7e3fcb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e3f8890" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e3f8890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e3f7010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e3f7410"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e3f7210"/>
        <function-ref name="overflow" scoped="" ref="0x7e3f7610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e3f7878" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e3f7878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e3eb010"/>
        <function-ref name="test" scoped="" ref="0x7e3ecb78"/>
        <function-ref name="get" scoped="" ref="0x7e3f7ec0"/>
        <function-ref name="setScale" scoped="" ref="0x7e3eb210"/>
        <function-ref name="getScale" scoped="" ref="0x7e3eb4b0"/>
        <function-ref name="reset" scoped="" ref="0x7e3ec578"/>
        <function-ref name="overflow" scoped="" ref="0x7e3ec378"/>
        <function-ref name="isOn" scoped="" ref="0x7e3ecd78"/>
        <function-ref name="set" scoped="" ref="0x7e3ec0d8"/>
        <function-ref name="start" scoped="" ref="0x7e3ec778"/>
        <function-ref name="stop" scoped="" ref="0x7e3ec978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7e3d9150" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7e3d9150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e3d98a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e3d9ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e3d9aa0"/>
        <function-ref name="overflow" scoped="" ref="0x7e3d9ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e3da0c0" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e3da0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e3da810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e3dac10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e3daa10"/>
        <function-ref name="overflow" scoped="" ref="0x7e3dae10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d78bd28" loc="50:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d78bd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d789088"/>
        <function-ref name="fired" scoped="" ref="0x7d78a938"/>
        <function-ref name="startAt" scoped="" ref="0x7d78ad38"/>
        <function-ref name="isRunning" scoped="" ref="0x7d78ab38"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d789288"/>
        <function-ref name="start" scoped="" ref="0x7d78a498"/>
        <function-ref name="stop" scoped="" ref="0x7d78a738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7d7885d0" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7d7885d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d786950"/>
        <function-ref name="fired" scoped="" ref="0x7d786210"/>
        <function-ref name="startAt" scoped="" ref="0x7d786610"/>
        <function-ref name="isRunning" scoped="" ref="0x7d786410"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d786b50"/>
        <function-ref name="start" scoped="" ref="0x7d788d20"/>
        <function-ref name="stop" scoped="" ref="0x7d786010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7d789560" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7d789560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d789cb0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7d7880d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7d789eb0"/>
        <function-ref name="overflow" scoped="" ref="0x7d7882d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e3b6b80" loc="18:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e3b6b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e3b6d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7e3adaf8" loc="68:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7e3adaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3adcd0"/>
        <function-ref name="isInput" scoped="" ref="0x7e3addb0"/>
        <function-ref name="toggle" scoped="" ref="0x7e3ade90"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3ac010"/>
        <function-ref name="get" scoped="" ref="0x7e3ac0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3ac1d0"/>
        <function-ref name="set" scoped="" ref="0x7e3ac2b0"/>
        <function-ref name="clr" scoped="" ref="0x7e3ac390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7e3ac508" loc="69:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7e3ac508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3ac6e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e3ac7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7e3ac8a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3ac980"/>
        <function-ref name="get" scoped="" ref="0x7e3aca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3acb40"/>
        <function-ref name="set" scoped="" ref="0x7e3acc20"/>
        <function-ref name="clr" scoped="" ref="0x7e3acd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7e3ace78" loc="70:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7e3ace78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3ab070"/>
        <function-ref name="isInput" scoped="" ref="0x7e3ab150"/>
        <function-ref name="toggle" scoped="" ref="0x7e3ab230"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3ab310"/>
        <function-ref name="get" scoped="" ref="0x7e3ab3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3ab4d0"/>
        <function-ref name="set" scoped="" ref="0x7e3ab5b0"/>
        <function-ref name="clr" scoped="" ref="0x7e3ab690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7e3ad188" loc="67:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7e3ad188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3ad360"/>
        <function-ref name="isInput" scoped="" ref="0x7e3ad440"/>
        <function-ref name="toggle" scoped="" ref="0x7e3ad520"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3ad600"/>
        <function-ref name="get" scoped="" ref="0x7e3ad6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3ad7c0"/>
        <function-ref name="set" scoped="" ref="0x7e3ad8a0"/>
        <function-ref name="clr" scoped="" ref="0x7e3ad980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7e3aa190" loc="72:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7e3aa190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3aa368"/>
        <function-ref name="isInput" scoped="" ref="0x7e3aa448"/>
        <function-ref name="toggle" scoped="" ref="0x7e3aa528"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3aa608"/>
        <function-ref name="get" scoped="" ref="0x7e3aa6e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3aa7c8"/>
        <function-ref name="set" scoped="" ref="0x7e3aa8a8"/>
        <function-ref name="clr" scoped="" ref="0x7e3aa988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7e3ae760" loc="66:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7e3ae760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3ae938"/>
        <function-ref name="isInput" scoped="" ref="0x7e3aea18"/>
        <function-ref name="toggle" scoped="" ref="0x7e3aeaf8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3aebd8"/>
        <function-ref name="get" scoped="" ref="0x7e3aecb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3aed98"/>
        <function-ref name="set" scoped="" ref="0x7e3aee78"/>
        <function-ref name="clr" scoped="" ref="0x7e3ad010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7e3ab808" loc="71:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7e3ab808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3ab9e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e3abac0"/>
        <function-ref name="toggle" scoped="" ref="0x7e3abba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3abc80"/>
        <function-ref name="get" scoped="" ref="0x7e3abd60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3abe40"/>
        <function-ref name="set" scoped="" ref="0x7e3abf20"/>
        <function-ref name="clr" scoped="" ref="0x7e3aa018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7e39e4f8" loc="39:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7e39e4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7e39e6d0"/>
        <function-ref name="disable" scoped="" ref="0x7e39e7b0"/>
        <function-ref name="captured" scoped="" ref="0x7e39e890"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7e39e970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7e39eb10" loc="40:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7e39eb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e39ece8"/>
        <function-ref name="disable" scoped="" ref="0x7e39edc8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e39eea8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e3a2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7e3a21b0" loc="41:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7e3a21b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e3a2388"/>
        <function-ref name="disable" scoped="" ref="0x7e3a2468"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e3a2548"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e3a2628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7e393c60" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7e393c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7e393e38"/>
        <function-ref name="disable" scoped="" ref="0x7e393f18"/>
        <function-ref name="captured" scoped="" ref="0x7e39d010"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7e39d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x7e39d300" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x7e39d300"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7e392aa8"/>
        <function-ref name="test" scoped="" ref="0x7e3926a8"/>
        <function-ref name="get" scoped="" ref="0x7e39d948"/>
        <function-ref name="captured" scoped="" ref="0x7e39dde8"/>
        <function-ref name="reset" scoped="" ref="0x7e3920a8"/>
        <function-ref name="isOn" scoped="" ref="0x7e3928a8"/>
        <function-ref name="set" scoped="" ref="0x7e39db48"/>
        <function-ref name="start" scoped="" ref="0x7e3922a8"/>
        <function-ref name="stop" scoped="" ref="0x7e3924a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7e38ed18" loc="9:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7e38ed18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e38eef0"/>
        <function-ref name="fired" scoped="" ref="0x7e38d010"/>
        <function-ref name="disable" scoped="" ref="0x7e38d0f0"/>
        <function-ref name="edge" scoped="" ref="0x7e38d1d0"/>
        <function-ref name="enable" scoped="" ref="0x7e38d2b0"/>
        <function-ref name="getValue" scoped="" ref="0x7e38d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7e38e720" loc="8:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7e38e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e38e8f8"/>
        <function-ref name="disable" scoped="" ref="0x7e38e9d8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e38eab8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e38eb98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7e37bbe8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7e37bbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e37bdc0"/>
        <function-ref name="fired" scoped="" ref="0x7e37bea0"/>
        <function-ref name="disable" scoped="" ref="0x7e37a010"/>
        <function-ref name="edge" scoped="" ref="0x7e37a0f0"/>
        <function-ref name="enable" scoped="" ref="0x7e37a1d0"/>
        <function-ref name="getValue" scoped="" ref="0x7e37a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7e37d430" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7e37d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e37d608"/>
        <function-ref name="fired" scoped="" ref="0x7e37d6e8"/>
        <function-ref name="disable" scoped="" ref="0x7e37d7c8"/>
        <function-ref name="edge" scoped="" ref="0x7e37d8a8"/>
        <function-ref name="enable" scoped="" ref="0x7e37d988"/>
        <function-ref name="getValue" scoped="" ref="0x7e37da68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7e37cbe8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7e37cbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e37cdc0"/>
        <function-ref name="fired" scoped="" ref="0x7e37cea0"/>
        <function-ref name="disable" scoped="" ref="0x7e37b010"/>
        <function-ref name="edge" scoped="" ref="0x7e37b0f0"/>
        <function-ref name="enable" scoped="" ref="0x7e37b1d0"/>
        <function-ref name="getValue" scoped="" ref="0x7e37b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7e37a430" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7e37a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e37a608"/>
        <function-ref name="fired" scoped="" ref="0x7e37a6e8"/>
        <function-ref name="disable" scoped="" ref="0x7e37a7c8"/>
        <function-ref name="edge" scoped="" ref="0x7e37a8a8"/>
        <function-ref name="enable" scoped="" ref="0x7e37a988"/>
        <function-ref name="getValue" scoped="" ref="0x7e37aa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7e37dbe8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7e37dbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e37ddc0"/>
        <function-ref name="fired" scoped="" ref="0x7e37dea0"/>
        <function-ref name="disable" scoped="" ref="0x7e37c010"/>
        <function-ref name="edge" scoped="" ref="0x7e37c0f0"/>
        <function-ref name="enable" scoped="" ref="0x7e37c1d0"/>
        <function-ref name="getValue" scoped="" ref="0x7e37c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7e37b430" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7e37b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e37b608"/>
        <function-ref name="fired" scoped="" ref="0x7e37b6e8"/>
        <function-ref name="disable" scoped="" ref="0x7e37b7c8"/>
        <function-ref name="edge" scoped="" ref="0x7e37b8a8"/>
        <function-ref name="enable" scoped="" ref="0x7e37b988"/>
        <function-ref name="getValue" scoped="" ref="0x7e37ba68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7e37ec50" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7e37ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e37ee28"/>
        <function-ref name="fired" scoped="" ref="0x7e37ef08"/>
        <function-ref name="disable" scoped="" ref="0x7e37d010"/>
        <function-ref name="edge" scoped="" ref="0x7e37d0f0"/>
        <function-ref name="enable" scoped="" ref="0x7e37d1d0"/>
        <function-ref name="getValue" scoped="" ref="0x7e37d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7e37c430" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7e37c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e37c608"/>
        <function-ref name="fired" scoped="" ref="0x7e37c6e8"/>
        <function-ref name="disable" scoped="" ref="0x7e37c7c8"/>
        <function-ref name="edge" scoped="" ref="0x7e37c8a8"/>
        <function-ref name="enable" scoped="" ref="0x7e37c988"/>
        <function-ref name="getValue" scoped="" ref="0x7e37ca68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7e3711b0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7e3711b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e371388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7e374010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7e374010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e3741e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7e374a78" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7e374a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e374c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7e371528" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7e371528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e371700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7e374388" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7e374388"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e374560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7e374df0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7e374df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e371010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7e372c48" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7e372c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e372e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7e374700" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7e374700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e3748d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e3766c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e3766c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e376898"/>
        <function-ref name="fired" scoped="" ref="0x7e376978"/>
        <function-ref name="disable" scoped="" ref="0x7e376a58"/>
        <function-ref name="edge" scoped="" ref="0x7e376b38"/>
        <function-ref name="enable" scoped="" ref="0x7e376c18"/>
        <function-ref name="getValue" scoped="" ref="0x7e376cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e376e78" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e376e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e357070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e3566c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e3566c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e356898"/>
        <function-ref name="fired" scoped="" ref="0x7e356978"/>
        <function-ref name="disable" scoped="" ref="0x7e356a58"/>
        <function-ref name="edge" scoped="" ref="0x7e356b38"/>
        <function-ref name="enable" scoped="" ref="0x7e356c18"/>
        <function-ref name="getValue" scoped="" ref="0x7e356cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e356e78" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e356e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e355070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e3546c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e3546c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e354898"/>
        <function-ref name="fired" scoped="" ref="0x7e354978"/>
        <function-ref name="disable" scoped="" ref="0x7e354a58"/>
        <function-ref name="edge" scoped="" ref="0x7e354b38"/>
        <function-ref name="enable" scoped="" ref="0x7e354c18"/>
        <function-ref name="getValue" scoped="" ref="0x7e354cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e354e78" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e354e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e353070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e3526c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e3526c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e352898"/>
        <function-ref name="fired" scoped="" ref="0x7e352978"/>
        <function-ref name="disable" scoped="" ref="0x7e352a58"/>
        <function-ref name="edge" scoped="" ref="0x7e352b38"/>
        <function-ref name="enable" scoped="" ref="0x7e352c18"/>
        <function-ref name="getValue" scoped="" ref="0x7e352cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e352e78" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e352e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e351070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e350788" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e350788"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e350960"/>
        <function-ref name="fired" scoped="" ref="0x7e350a40"/>
        <function-ref name="disable" scoped="" ref="0x7e350b20"/>
        <function-ref name="edge" scoped="" ref="0x7e350c00"/>
        <function-ref name="enable" scoped="" ref="0x7e350ce0"/>
        <function-ref name="getValue" scoped="" ref="0x7e350dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e34f010" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e34f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e34f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e34d8f0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e34d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e34dac8"/>
        <function-ref name="fired" scoped="" ref="0x7e34dba8"/>
        <function-ref name="disable" scoped="" ref="0x7e34dc88"/>
        <function-ref name="edge" scoped="" ref="0x7e34dd68"/>
        <function-ref name="enable" scoped="" ref="0x7e34de48"/>
        <function-ref name="getValue" scoped="" ref="0x7e34df28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e34c0b8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e34c0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e34c290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e34b978" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e34b978"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e34bb50"/>
        <function-ref name="fired" scoped="" ref="0x7e34bc30"/>
        <function-ref name="disable" scoped="" ref="0x7e34bd10"/>
        <function-ref name="edge" scoped="" ref="0x7e34bdf0"/>
        <function-ref name="enable" scoped="" ref="0x7e34bed0"/>
        <function-ref name="getValue" scoped="" ref="0x7e34a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e34a190" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e34a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e34a368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e349a88" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e349a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e349c60"/>
        <function-ref name="fired" scoped="" ref="0x7e349d40"/>
        <function-ref name="disable" scoped="" ref="0x7e349e20"/>
        <function-ref name="edge" scoped="" ref="0x7e349f00"/>
        <function-ref name="enable" scoped="" ref="0x7e348010"/>
        <function-ref name="getValue" scoped="" ref="0x7e3480f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e348270" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e348270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e348448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x7e3418c8" loc="51:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x7e3418c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e341aa0"/>
        <function-ref name="isInput" scoped="" ref="0x7e341b80"/>
        <function-ref name="toggle" scoped="" ref="0x7e341c60"/>
        <function-ref name="isOutput" scoped="" ref="0x7e341d40"/>
        <function-ref name="get" scoped="" ref="0x7e341e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e341f00"/>
        <function-ref name="set" scoped="" ref="0x7e340010"/>
        <function-ref name="clr" scoped="" ref="0x7e3400f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7e341298" loc="47:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7e341298"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e341470"/>
        <function-ref name="disable" scoped="" ref="0x7e341550"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e341630"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e341710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x7e340df8" loc="69:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x7e340df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e33e010"/>
        <function-ref name="runTask" scoped="" ref="0x7e33e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7e142920" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7e142920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e142af8"/>
        <function-ref name="write" scoped="" ref="0x7e142bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7e143c58" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7e143c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e143e30"/>
        <function-ref name="write" scoped="" ref="0x7e143f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7e144190" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7e144190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e144368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7e140f18" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e140f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e131108"/>
        <function-ref name="write" scoped="" ref="0x7e1311e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7e1424e8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7e1424e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e1426c0"/>
        <function-ref name="write" scoped="" ref="0x7e1427a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7e142d58" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7e142d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e140010"/>
        <function-ref name="write" scoped="" ref="0x7e1400f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7e1433e8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7e1433e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e1435c0"/>
        <function-ref name="write" scoped="" ref="0x7e1436a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7e1466c8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7e1466c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7e1468a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7e146980"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7e146a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7e145010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7e145010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e1451e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7e144b98" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7e144b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e144d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7e144840" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7e144840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e144a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7e1420b0" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e1420b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e142288"/>
        <function-ref name="write" scoped="" ref="0x7e142368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7e1444e8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7e1444e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e1446c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7e140ae0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7e140ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e140cb8"/>
        <function-ref name="write" scoped="" ref="0x7e140d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7e131368" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7e131368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e131640"/>
        <function-ref name="writeDone" scoped="" ref="0x7e131720"/>
        <function-ref name="write" scoped="" ref="0x7e131800"/>
        <function-ref name="beginRead" scoped="" ref="0x7e1318e0"/>
        <function-ref name="readDone" scoped="" ref="0x7e1319c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7e145368" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7e145368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e145540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7e143820" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7e143820"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e1439f8"/>
        <function-ref name="write" scoped="" ref="0x7e143ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7e144ef0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7e144ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e143188"/>
        <function-ref name="write" scoped="" ref="0x7e143268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7e1456c0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7e1456c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e145898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e146010" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e146010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e1461e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e1462c8"/>
        <function-ref name="request" scoped="" ref="0x7e1463a8"/>
        <function-ref name="granted" scoped="" ref="0x7e146488"/>
        <function-ref name="isOwner" scoped="" ref="0x7e146568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7e1406a8" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7e1406a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e140880"/>
        <function-ref name="write" scoped="" ref="0x7e140960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7e140270" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7e140270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e140448"/>
        <function-ref name="write" scoped="" ref="0x7e140528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7e146be0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7e146be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e146db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7e145d70" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7e145d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e144010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7e145a18" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7e145a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e145bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7e131b40" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7e131b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e131d18"/>
        <function-ref name="writeDone" scoped="" ref="0x7e131df8"/>
        <function-ref name="write" scoped="" ref="0x7e131ed8"/>
        <function-ref name="beginRead" scoped="" ref="0x7e130010"/>
        <function-ref name="readDone" scoped="" ref="0x7e1300f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7e31f2f8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7e31f2f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e31f4d0"/>
        <function-ref name="writeDone" scoped="" ref="0x7e31f5b0"/>
        <function-ref name="write" scoped="" ref="0x7e31f690"/>
        <function-ref name="beginRead" scoped="" ref="0x7e31f770"/>
        <function-ref name="readDone" scoped="" ref="0x7e31f850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7e321b18" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7e321b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7e321cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7e321dd0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7e321eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7e31fc80" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7e31fc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e31fe58"/>
        <function-ref name="write" scoped="" ref="0x7e31e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7e31e438" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7e31e438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e31e610"/>
        <function-ref name="write" scoped="" ref="0x7e31e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e321450" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e321450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e321628"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e321708"/>
        <function-ref name="request" scoped="" ref="0x7e3217e8"/>
        <function-ref name="granted" scoped="" ref="0x7e3218c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7e3219a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7e31eb18" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7e31eb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e31ecf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7e30e9a8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7e30e9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e30eb80"/>
        <function-ref name="sendDone" scoped="" ref="0x7e30ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7e319d50" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7e319d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e319f28"/>
        <function-ref name="writeDone" scoped="" ref="0x7e318018"/>
        <function-ref name="write" scoped="" ref="0x7e3180f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7e3181d8"/>
        <function-ref name="readDone" scoped="" ref="0x7e3182b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7e31dc58" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7e31dc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7e31de30"/>
        <function-ref name="abortRelease" scoped="" ref="0x7e31df10"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7e319010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7e311050" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7e311050"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7e311228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7e30edd8" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x7e30edd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7e312010"/>
        <function-ref name="toIdle" scoped="" ref="0x7e3120f0"/>
        <function-ref name="isState" scoped="" ref="0x7e3121d0"/>
        <function-ref name="isIdle" scoped="" ref="0x7e3122b0"/>
        <function-ref name="requestState" scoped="" ref="0x7e312390"/>
        <function-ref name="forceState" scoped="" ref="0x7e312470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7e316890" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7e316890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e316a68"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e316b48"/>
        <function-ref name="request" scoped="" ref="0x7e316c28"/>
        <function-ref name="granted" scoped="" ref="0x7e316d08"/>
        <function-ref name="isOwner" scoped="" ref="0x7e316de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7e3186c8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7e3186c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3188a0"/>
        <function-ref name="write" scoped="" ref="0x7e318980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7e318d88" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7e318d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e316010"/>
        <function-ref name="write" scoped="" ref="0x7e3160f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e3125b8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e3125b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e312790"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e312870"/>
        <function-ref name="led1On" scoped="" ref="0x7e312950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e312a30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e312b10"/>
        <function-ref name="get" scoped="" ref="0x7e312bf0"/>
        <function-ref name="led1Off" scoped="" ref="0x7e312cd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7e3100f0"/>
        <function-ref name="set" scoped="" ref="0x7e312db0"/>
        <function-ref name="led0On" scoped="" ref="0x7e312e90"/>
        <function-ref name="led2On" scoped="" ref="0x7e310010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e3193f0" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e3193f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e3195c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e3196a8"/>
        <function-ref name="request" scoped="" ref="0x7e319788"/>
        <function-ref name="granted" scoped="" ref="0x7e319868"/>
        <function-ref name="isOwner" scoped="" ref="0x7e319948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7e30ce90" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x7e30ce90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e30b080"/>
        <function-ref name="runTask" scoped="" ref="0x7e30b160"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7e3164f8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7e3164f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3166d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7e2e06c8" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7e2e06c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7e2e08a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7e2e0980"/>
        <function-ref name="isState" scoped="" ref="0x7e2e0a60"/>
        <function-ref name="isIdle" scoped="" ref="0x7e2e0b40"/>
        <function-ref name="requestState" scoped="" ref="0x7e2e0c20"/>
        <function-ref name="forceState" scoped="" ref="0x7e2e0d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7e2cdc10" loc="43:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7e2cdc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e2cdde8"/>
        <function-ref name="sendDone" scoped="" ref="0x7e2cdec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7e2cd8d8" loc="42:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7e2cd8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7e2cdab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e2cee98" loc="39:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e2cee98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e2cd0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e2cd220" loc="40:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e2cd220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e2cd3f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e2cd4d8"/>
        <function-ref name="request" scoped="" ref="0x7e2cd5b8"/>
        <function-ref name="granted" scoped="" ref="0x7e2cd698"/>
        <function-ref name="isOwner" scoped="" ref="0x7e2cd778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7e2c68d8" loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7e2c68d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e2c6ab0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e2c6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7e2c6590" loc="67:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7e2c6590"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7e2c6768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e2c6250" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e2c6250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e2c6428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e2c5010" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e2c5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e2c51e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e2c52c8"/>
        <function-ref name="request" scoped="" ref="0x7e2c53a8"/>
        <function-ref name="granted" scoped="" ref="0x7e2c5488"/>
        <function-ref name="isOwner" scoped="" ref="0x7e2c5568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7e282010" loc="207:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7e282010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e2821e8"/>
        <function-ref name="runTask" scoped="" ref="0x7e2822c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7e2c1d68" loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7e2c1d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e2c0010"/>
        <function-ref name="sendDone" scoped="" ref="0x7e2c00f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7e2ae880" loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7e2ae880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e2aea58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e2aeb38"/>
        <function-ref name="request" scoped="" ref="0x7e2aec18"/>
        <function-ref name="granted" scoped="" ref="0x7e2aecf8"/>
        <function-ref name="isOwner" scoped="" ref="0x7e2aedd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7e2c1a40" loc="78:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7e2c1a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7e2c1c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e2c1720" loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e2c1720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e2c18f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7e2a1cc0" loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7e2a1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7e2a1e98"/>
        <function-ref name="sleep" scoped="" ref="0x7e2ae390"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7e2af0f0"/>
        <function-ref name="dataReady" scoped="" ref="0x7e2ae470"/>
        <function-ref name="initMaster" scoped="" ref="0x7e2af2b0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7e2af390"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7e2af470"/>
        <function-ref name="read" scoped="" ref="0x7e2af550"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7e2af630"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7e2af710"/>
        <function-ref name="setClock" scoped="" ref="0x7e2af7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7e2af8d0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7e2af9b0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7e2afb10"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7e2afbf0"/>
        <function-ref name="write" scoped="" ref="0x7e2afcd0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7e2afdb0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7e2afe90"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7e2ae010"/>
        <function-ref name="getClock" scoped="" ref="0x7e2ae0f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7e2ae1d0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7e2af010"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7e2af1d0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7e2ae2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e2c04d0" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e2c04d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e2c06a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e2c0788"/>
        <function-ref name="request" scoped="" ref="0x7e2c0868"/>
        <function-ref name="granted" scoped="" ref="0x7e2c0948"/>
        <function-ref name="isOwner" scoped="" ref="0x7e2c0a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7e28c990" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7e28c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7e28cb68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7e28c588" loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7e28c588"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7e28c760"/>
        <function-ref name="userId" scoped="" ref="0x7e28c840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7e24d1c0" loc="59:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7e24d1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7e24d398"/>
        <function-ref name="sleep" scoped="" ref="0x7e24c7f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7e24d558"/>
        <function-ref name="dataReady" scoped="" ref="0x7e24c8d0"/>
        <function-ref name="initMaster" scoped="" ref="0x7e24d718"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7e24d7f8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7e24d8d8"/>
        <function-ref name="read" scoped="" ref="0x7e24d9b8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7e24da98"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7e24db78"/>
        <function-ref name="setClock" scoped="" ref="0x7e24dc58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7e24dd38"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7e24de18"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7e24c010"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7e24c0f0"/>
        <function-ref name="write" scoped="" ref="0x7e24c1d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7e24c2b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7e24c390"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7e24c470"/>
        <function-ref name="getClock" scoped="" ref="0x7e24c550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7e24c630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7e24d478"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7e24d638"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7e24c710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7e240068" loc="64:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7e240068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e240240"/>
        <function-ref name="isInput" scoped="" ref="0x7e240320"/>
        <function-ref name="toggle" scoped="" ref="0x7e240400"/>
        <function-ref name="isOutput" scoped="" ref="0x7e2404e0"/>
        <function-ref name="get" scoped="" ref="0x7e2405c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e2406a0"/>
        <function-ref name="set" scoped="" ref="0x7e240780"/>
        <function-ref name="clr" scoped="" ref="0x7e240860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7e244cb8" loc="62:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7e244cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e244e90"/>
        <function-ref name="isInput" scoped="" ref="0x7e241010"/>
        <function-ref name="toggle" scoped="" ref="0x7e2410f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e2411d0"/>
        <function-ref name="get" scoped="" ref="0x7e2412b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e241390"/>
        <function-ref name="set" scoped="" ref="0x7e241470"/>
        <function-ref name="clr" scoped="" ref="0x7e241550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7e244348" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7e244348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e244520"/>
        <function-ref name="isInput" scoped="" ref="0x7e244600"/>
        <function-ref name="toggle" scoped="" ref="0x7e2446e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e2447c0"/>
        <function-ref name="get" scoped="" ref="0x7e2448a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e244980"/>
        <function-ref name="set" scoped="" ref="0x7e244a60"/>
        <function-ref name="clr" scoped="" ref="0x7e244b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7e242ea8" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7e242ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e2440c0"/>
        <function-ref name="stop" scoped="" ref="0x7e2441a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7e2409d8" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7e2409d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7e240bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7e24aed0" loc="57:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7e24aed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7e2470c0"/>
        <function-ref name="sleep" scoped="" ref="0x7e246550"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7e247280"/>
        <function-ref name="dataReady" scoped="" ref="0x7e246630"/>
        <function-ref name="initMaster" scoped="" ref="0x7e247440"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7e247520"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7e247600"/>
        <function-ref name="read" scoped="" ref="0x7e2476e0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7e2477c0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7e2478a0"/>
        <function-ref name="setClock" scoped="" ref="0x7e247980"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7e247a60"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7e247b40"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7e247ca0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7e247d80"/>
        <function-ref name="write" scoped="" ref="0x7e247e60"/>
        <function-ref name="enableSpi" scoped="" ref="0x7e246010"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7e2460f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7e2461d0"/>
        <function-ref name="getClock" scoped="" ref="0x7e2462b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7e246390"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7e2471a0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7e247360"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7e246470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7e2416c8" loc="63:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7e2416c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e2418a0"/>
        <function-ref name="isInput" scoped="" ref="0x7e241980"/>
        <function-ref name="toggle" scoped="" ref="0x7e241a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7e241b40"/>
        <function-ref name="get" scoped="" ref="0x7e241c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e241d00"/>
        <function-ref name="set" scoped="" ref="0x7e241de0"/>
        <function-ref name="clr" scoped="" ref="0x7e241ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7e1ed808" loc="76:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7e1ed808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7e1ed9f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7e1edad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7e18a0f8" loc="79:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e18a0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e18a2e0"/>
        <function-ref name="configure" scoped="" ref="0x7e18a3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e1ed0c8" loc="75:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e1ed0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e1ed2b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e1ed390"/>
        <function-ref name="request" scoped="" ref="0x7e1ed470"/>
        <function-ref name="granted" scoped="" ref="0x7e1ed550"/>
        <function-ref name="isOwner" scoped="" ref="0x7e1ed630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7e1edc10" loc="77:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7e1edc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7e1edde8"/>
        <function-ref name="userId" scoped="" ref="0x7e1edec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d6e02c8" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d6e02c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d6e04a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7d6e0600" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7d6e0600"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7d6e07d8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7d6e08b8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7d6e0998"/>
        <function-ref name="dequeue" scoped="" ref="0x7d6e0a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7d6c0d70" loc="52:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7d6c0d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7d6bf010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d6bf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d6bf6f0" loc="56:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d6bf6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d6bf8d8"/>
        <function-ref name="configure" scoped="" ref="0x7d6bf9b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7d6bfb18" loc="57:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7d6bfb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7d6bfcf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7d6bfdd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7d6bfeb0"/>
        <function-ref name="dequeue" scoped="" ref="0x7d6be010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d6c0630" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d6c0630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d6c0818"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d6c08f8"/>
        <function-ref name="request" scoped="" ref="0x7d6c09d8"/>
        <function-ref name="granted" scoped="" ref="0x7d6c0ab8"/>
        <function-ref name="isOwner" scoped="" ref="0x7d6c0b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7d6bf230" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d6bf230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d6bf408"/>
        <function-ref name="userId" scoped="" ref="0x7d6bf4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7d6be190" loc="69:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7d6be190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d6be368"/>
        <function-ref name="runTask" scoped="" ref="0x7d6be448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7e183578" loc="35:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e183578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e183750"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e183830"/>
        <function-ref name="led1On" scoped="" ref="0x7e183910"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e1839f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e183ad0"/>
        <function-ref name="get" scoped="" ref="0x7e183bb0"/>
        <function-ref name="led1Off" scoped="" ref="0x7e183c90"/>
        <function-ref name="led2Off" scoped="" ref="0x7e1820f0"/>
        <function-ref name="set" scoped="" ref="0x7e183d70"/>
        <function-ref name="led0On" scoped="" ref="0x7e183e50"/>
        <function-ref name="led2On" scoped="" ref="0x7e182010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7e16f010" loc="39:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7e16f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e16f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7e16f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7e16f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e16f488"/>
        <function-ref name="get" scoped="" ref="0x7e16f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e16f648"/>
        <function-ref name="set" scoped="" ref="0x7e16f728"/>
        <function-ref name="clr" scoped="" ref="0x7e16f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e170010" loc="35:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e170010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e1701e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7e16f980" loc="40:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7e16f980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e16fb58"/>
        <function-ref name="isInput" scoped="" ref="0x7e16fc38"/>
        <function-ref name="toggle" scoped="" ref="0x7e16fd18"/>
        <function-ref name="isOutput" scoped="" ref="0x7e16fdf8"/>
        <function-ref name="get" scoped="" ref="0x7e16fed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e16e010"/>
        <function-ref name="set" scoped="" ref="0x7e16e0f0"/>
        <function-ref name="clr" scoped="" ref="0x7e16e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7e170330" loc="36:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e170330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e170508"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e1705e8"/>
        <function-ref name="led1On" scoped="" ref="0x7e1706c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e1707a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e170888"/>
        <function-ref name="get" scoped="" ref="0x7e170968"/>
        <function-ref name="led1Off" scoped="" ref="0x7e170a48"/>
        <function-ref name="led2Off" scoped="" ref="0x7e170dc8"/>
        <function-ref name="set" scoped="" ref="0x7e170b28"/>
        <function-ref name="led0On" scoped="" ref="0x7e170c08"/>
        <function-ref name="led2On" scoped="" ref="0x7e170ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7e16e348" loc="41:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7e16e348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e16e520"/>
        <function-ref name="isInput" scoped="" ref="0x7e16e600"/>
        <function-ref name="toggle" scoped="" ref="0x7e16e6e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e16e7c0"/>
        <function-ref name="get" scoped="" ref="0x7e16e8a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e16e980"/>
        <function-ref name="set" scoped="" ref="0x7e16ea60"/>
        <function-ref name="clr" scoped="" ref="0x7e16eb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7e150d48" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7e150d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e150f20"/>
        <function-ref name="isInput" scoped="" ref="0x7e14f018"/>
        <function-ref name="toggle" scoped="" ref="0x7e14f0f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e14f1d8"/>
        <function-ref name="get" scoped="" ref="0x7e14f2b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e14f398"/>
        <function-ref name="set" scoped="" ref="0x7e14f478"/>
        <function-ref name="clr" scoped="" ref="0x7e14f558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7e14f6f0" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7e14f6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e14f8c8"/>
        <function-ref name="isInput" scoped="" ref="0x7e14f9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7e14fa88"/>
        <function-ref name="isOutput" scoped="" ref="0x7e14fb68"/>
        <function-ref name="get" scoped="" ref="0x7e14fc48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e14fd28"/>
        <function-ref name="set" scoped="" ref="0x7e14fe08"/>
        <function-ref name="clr" scoped="" ref="0x7e14fee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7e14e9f8" loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e14e9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e14ebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7e14e098" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7e14e098"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e14e270"/>
        <function-ref name="isInput" scoped="" ref="0x7e14e350"/>
        <function-ref name="toggle" scoped="" ref="0x7e14e430"/>
        <function-ref name="isOutput" scoped="" ref="0x7e14e510"/>
        <function-ref name="get" scoped="" ref="0x7e14e5f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e14e6d0"/>
        <function-ref name="set" scoped="" ref="0x7e14e7b0"/>
        <function-ref name="clr" scoped="" ref="0x7e14e890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7e128a00" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7e128a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e128bd8"/>
        <function-ref name="write" scoped="" ref="0x7e128cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7e129d38" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7e129d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e129f10"/>
        <function-ref name="write" scoped="" ref="0x7e128010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7e12b260" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7e12b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e12b438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7e126010" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e126010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e1261e8"/>
        <function-ref name="write" scoped="" ref="0x7e1262c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7e1285c8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7e1285c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e1287a0"/>
        <function-ref name="write" scoped="" ref="0x7e128880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7e128e38" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7e128e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e127050"/>
        <function-ref name="write" scoped="" ref="0x7e127130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7e1294c8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7e1294c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e1296a0"/>
        <function-ref name="write" scoped="" ref="0x7e129780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7e12d8e8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7e12d8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7e12dac0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7e12dba0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7e12dc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7e12c190" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7e12c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e12c368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7e12bc68" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7e12bc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e12be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7e12b910" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7e12b910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e12bae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7e128190" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e128190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e128368"/>
        <function-ref name="write" scoped="" ref="0x7e128448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7e12b5b8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7e12b5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e12b790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7e127b20" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7e127b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e127cf8"/>
        <function-ref name="write" scoped="" ref="0x7e127dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7e126448" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7e126448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e126720"/>
        <function-ref name="writeDone" scoped="" ref="0x7e126800"/>
        <function-ref name="write" scoped="" ref="0x7e1268e0"/>
        <function-ref name="beginRead" scoped="" ref="0x7e1269c0"/>
        <function-ref name="readDone" scoped="" ref="0x7e126aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7e12c4e8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7e12c4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e12c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7e129900" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7e129900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e129ad8"/>
        <function-ref name="write" scoped="" ref="0x7e129bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7e129010" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7e129010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e129268"/>
        <function-ref name="write" scoped="" ref="0x7e129348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7e12c840" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7e12c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e12ca18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e12d230" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e12d230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e12d408"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e12d4e8"/>
        <function-ref name="request" scoped="" ref="0x7e12d5c8"/>
        <function-ref name="granted" scoped="" ref="0x7e12d6a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7e12d788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7e1276e8" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7e1276e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e1278c0"/>
        <function-ref name="write" scoped="" ref="0x7e1279a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7e1272b0" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7e1272b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e127488"/>
        <function-ref name="write" scoped="" ref="0x7e127568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7e12de00" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7e12de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e12c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7e12cef0" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7e12cef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e12b0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7e12cb98" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7e12cb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e12cd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7e126c20" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7e126c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e126df8"/>
        <function-ref name="writeDone" scoped="" ref="0x7e126ed8"/>
        <function-ref name="write" scoped="" ref="0x7e125010"/>
        <function-ref name="beginRead" scoped="" ref="0x7e1250f0"/>
        <function-ref name="readDone" scoped="" ref="0x7e1251d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7e111920" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7e111920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e111af8"/>
        <function-ref name="write" scoped="" ref="0x7e111bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7e112c58" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7e112c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e112e30"/>
        <function-ref name="write" scoped="" ref="0x7e112f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7e120190" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7e120190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e120368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7e10ff18" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e10ff18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e10e108"/>
        <function-ref name="write" scoped="" ref="0x7e10e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7e1114e8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7e1114e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e1116c0"/>
        <function-ref name="write" scoped="" ref="0x7e1117a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7e111d58" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7e111d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e10f010"/>
        <function-ref name="write" scoped="" ref="0x7e10f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7e1123e8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7e1123e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e1125c0"/>
        <function-ref name="write" scoped="" ref="0x7e1126a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7e1236c8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7e1236c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7e1238a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7e123980"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7e123a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7e121010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7e121010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e1211e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7e120b98" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7e120b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e120d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7e120840" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7e120840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e120a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7e1110b0" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e1110b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e111288"/>
        <function-ref name="write" scoped="" ref="0x7e111368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7e1204e8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7e1204e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e1206c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7e10fae0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7e10fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e10fcb8"/>
        <function-ref name="write" scoped="" ref="0x7e10fd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7e10e368" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7e10e368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e10e640"/>
        <function-ref name="writeDone" scoped="" ref="0x7e10e720"/>
        <function-ref name="write" scoped="" ref="0x7e10e800"/>
        <function-ref name="beginRead" scoped="" ref="0x7e10e8e0"/>
        <function-ref name="readDone" scoped="" ref="0x7e10e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7e121368" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7e121368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e121540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7e112820" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7e112820"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e1129f8"/>
        <function-ref name="write" scoped="" ref="0x7e112ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7e120ef0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7e120ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e112188"/>
        <function-ref name="write" scoped="" ref="0x7e112268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7e1216c0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7e1216c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e121898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e123010" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e123010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e1231e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e1232c8"/>
        <function-ref name="request" scoped="" ref="0x7e1233a8"/>
        <function-ref name="granted" scoped="" ref="0x7e123488"/>
        <function-ref name="isOwner" scoped="" ref="0x7e123568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7e10f6a8" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7e10f6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e10f880"/>
        <function-ref name="write" scoped="" ref="0x7e10f960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7e10f270" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7e10f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e10f448"/>
        <function-ref name="write" scoped="" ref="0x7e10f528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7e123be0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7e123be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e123db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7e121d70" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7e121d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e120010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7e121a18" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7e121a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e121bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7e10eb40" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7e10eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e10ed18"/>
        <function-ref name="writeDone" scoped="" ref="0x7e10edf8"/>
        <function-ref name="write" scoped="" ref="0x7e10eed8"/>
        <function-ref name="beginRead" scoped="" ref="0x7e10d010"/>
        <function-ref name="readDone" scoped="" ref="0x7e10d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7e108608" loc="43:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e108608"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7e1087e0"/>
        <function-ref name="changed" scoped="" ref="0x7e1088c0"/>
        <function-ref name="amGroup" scoped="" ref="0x7e1089a0"/>
        <function-ref name="setAddress" scoped="" ref="0x7e108a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7e0e5198" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7e0e5198"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7e0e5370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7e0ec6b8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7e0ec6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7e0ec890"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7e0ec970"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7e0eca50"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7e0ecb30"/>
        <function-ref name="setCca" scoped="" ref="0x7e0ecc10"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7e0eccf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7e0e8d68" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7e0e8d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7e0e5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7e0ec010" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7e0ec010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e0ec1e8"/>
        <function-ref name="cancel" scoped="" ref="0x7e0ec2c8"/>
        <function-ref name="modify" scoped="" ref="0x7e0ec3a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7e0ec488"/>
        <function-ref name="resend" scoped="" ref="0x7e0ec568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7e0edb98" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7e0edb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e0edd70"/>
        <function-ref name="stop" scoped="" ref="0x7e0ede50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTimeStamping" ref="0x7e0e78e0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioTimeStamping" scoped="" ref="0x7e0e78e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x7e0e7ab8"/>
        <function-ref name="receivedSFD" scoped="" ref="0x7e0e7b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7e0c25e0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7e0c25e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7e0c27b8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7e0c2898"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7e0c2978"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7e0c2a58"/>
        <function-ref name="setCca" scoped="" ref="0x7e0c2b38"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7e0c2c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7e0c1298" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7e0c1298"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7e0c1470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7e0ab400" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7e0ab400"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e0ab5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7e0b1c58" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7e0b1c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7e0b1e30"/>
        <function-ref name="disable" scoped="" ref="0x7e0b1f10"/>
        <function-ref name="captured" scoped="" ref="0x7e0b0010"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7e0b00f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7e0c1ac0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x7e0c1ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e0b2e08"/>
        <function-ref name="fired" scoped="" ref="0x7e0b26c8"/>
        <function-ref name="startAt" scoped="" ref="0x7e0b2ac8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e0b28c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e0b1048"/>
        <function-ref name="start" scoped="" ref="0x7e0b2228"/>
        <function-ref name="stop" scoped="" ref="0x7e0b24c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7e0b1210" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7e0b1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7e0b13e8"/>
        <function-ref name="getRssi" scoped="" ref="0x7e0b14c8"/>
        <function-ref name="getPower" scoped="" ref="0x7e0b15a8"/>
        <function-ref name="getLqi" scoped="" ref="0x7e0b1688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7e0ad450" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e0ad450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e0ad628"/>
        <function-ref name="write" scoped="" ref="0x7e0ad708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7e0ad8a0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7e0ad8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e0ada78"/>
        <function-ref name="write" scoped="" ref="0x7e0adb58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7e0a6c58" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7e0a6c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e0a8010"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7e0a80f0"/>
        <function-ref name="sfd" scoped="" ref="0x7e0a81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e0c3f08" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e0c3f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e0c20f0"/>
        <function-ref name="cancel" scoped="" ref="0x7e0c21d0"/>
        <function-ref name="modify" scoped="" ref="0x7e0c22b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e0c2390"/>
        <function-ref name="resend" scoped="" ref="0x7e0c2470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7e0ae758" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7e0ae758"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7e0ae930"/>
        <function-ref name="abortRelease" scoped="" ref="0x7e0aea10"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7e0aeaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7e0ab778" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7e0ab778"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e0ab950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7e0b0c18" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7e0b0c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e0b0e70"/>
        <function-ref name="isInput" scoped="" ref="0x7e0af010"/>
        <function-ref name="toggle" scoped="" ref="0x7e0af0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e0af1d0"/>
        <function-ref name="get" scoped="" ref="0x7e0af2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e0af390"/>
        <function-ref name="set" scoped="" ref="0x7e0af470"/>
        <function-ref name="clr" scoped="" ref="0x7e0af550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e0c3770" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e0c3770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e0c3948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7e0b1800" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e0b1800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7e0b19d8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7e0b1ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7e0abaf0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e0abaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e0abcc8"/>
        <function-ref name="write" scoped="" ref="0x7e0abda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7e0ae090" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7e0ae090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e0ae268"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e0ae348"/>
        <function-ref name="request" scoped="" ref="0x7e0ae428"/>
        <function-ref name="granted" scoped="" ref="0x7e0ae508"/>
        <function-ref name="isOwner" scoped="" ref="0x7e0ae5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7e0b0288" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7e0b0288"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e0b0460"/>
        <function-ref name="isInput" scoped="" ref="0x7e0b0540"/>
        <function-ref name="toggle" scoped="" ref="0x7e0b0620"/>
        <function-ref name="isOutput" scoped="" ref="0x7e0b0700"/>
        <function-ref name="get" scoped="" ref="0x7e0b07e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e0b08c0"/>
        <function-ref name="set" scoped="" ref="0x7e0b09a0"/>
        <function-ref name="clr" scoped="" ref="0x7e0b0a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7e0adcf0" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7e0adcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e0adec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7e0af6e8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7e0af6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e0af8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7e0af9a0"/>
        <function-ref name="toggle" scoped="" ref="0x7e0afa80"/>
        <function-ref name="isOutput" scoped="" ref="0x7e0afb60"/>
        <function-ref name="get" scoped="" ref="0x7e0afc40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e0afd20"/>
        <function-ref name="set" scoped="" ref="0x7e0afe00"/>
        <function-ref name="clr" scoped="" ref="0x7e0afee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e0a8338" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e0a8338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e0a8510"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e0a85f0"/>
        <function-ref name="led1On" scoped="" ref="0x7e0a86d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e0a87b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e0a8890"/>
        <function-ref name="get" scoped="" ref="0x7e0a8970"/>
        <function-ref name="led1Off" scoped="" ref="0x7e0a8a50"/>
        <function-ref name="led2Off" scoped="" ref="0x7e0a8dd0"/>
        <function-ref name="set" scoped="" ref="0x7e0a8b30"/>
        <function-ref name="led0On" scoped="" ref="0x7e0a8c10"/>
        <function-ref name="led2On" scoped="" ref="0x7e0a8cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeStamp" ref="0x7e0c2dc0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStamp" scoped="" ref="0x7e0c2dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x7e0c1010"/>
        <function-ref name="receivedSFD" scoped="" ref="0x7e0c10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7e0c3ab8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7e0c3ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e0c3c90"/>
        <function-ref name="stop" scoped="" ref="0x7e0c3d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7e0aec88" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7e0aec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e0aee60"/>
        <function-ref name="writeDone" scoped="" ref="0x7e0ad010"/>
        <function-ref name="write" scoped="" ref="0x7e0ad0f0"/>
        <function-ref name="beginRead" scoped="" ref="0x7e0ad1d0"/>
        <function-ref name="readDone" scoped="" ref="0x7e0ad2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7e0ab088" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7e0ab088"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e0ab260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7e0c1618" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7e0c1618"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7e0c17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7e02b5c8" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7e02b5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e02b7a0"/>
        <function-ref name="write" scoped="" ref="0x7e02b880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7e02c8f0" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7e02c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e02cac8"/>
        <function-ref name="write" scoped="" ref="0x7e02cba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7e02fd70" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7e02fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e02e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7e02ab20" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e02ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e02acf8"/>
        <function-ref name="write" scoped="" ref="0x7e02add8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7e02b190" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7e02b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e02b368"/>
        <function-ref name="write" scoped="" ref="0x7e02b448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7e02ba00" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7e02ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e02bbd8"/>
        <function-ref name="write" scoped="" ref="0x7e02bcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7e02c080" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7e02c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e02c258"/>
        <function-ref name="write" scoped="" ref="0x7e02c338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7e030410" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7e030410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7e0305e8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7e0306c8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7e0307a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7e030c80" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7e030c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e030e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7e02e840" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7e02e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e02ea18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7e02e4e8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7e02e4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e02e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7e02cd28" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e02cd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e02cf00"/>
        <function-ref name="write" scoped="" ref="0x7e02b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7e02e190" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7e02e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e02e368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7e02a6e8" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7e02a6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e02a8c0"/>
        <function-ref name="write" scoped="" ref="0x7e02a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7e029010" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7e029010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e0292e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7e0293c8"/>
        <function-ref name="write" scoped="" ref="0x7e0294a8"/>
        <function-ref name="beginRead" scoped="" ref="0x7e029588"/>
        <function-ref name="readDone" scoped="" ref="0x7e029668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7e02f010" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7e02f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e02f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7e02c4b8" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7e02c4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e02c690"/>
        <function-ref name="write" scoped="" ref="0x7e02c770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7e02eb98" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7e02eb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e02edf0"/>
        <function-ref name="write" scoped="" ref="0x7e02eed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7e02f368" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7e02f368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e02f540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e031ce0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e031ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e031eb8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e030010"/>
        <function-ref name="request" scoped="" ref="0x7e0300f0"/>
        <function-ref name="granted" scoped="" ref="0x7e0301d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7e0302b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7e02a2b0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7e02a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e02a488"/>
        <function-ref name="write" scoped="" ref="0x7e02a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7e02be38" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7e02be38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e02a050"/>
        <function-ref name="write" scoped="" ref="0x7e02a130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7e030928" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7e030928"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e030b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7e02fa18" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7e02fa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e02fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7e02f6c0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7e02f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e02f898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7e0297e8" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7e0297e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e0299c0"/>
        <function-ref name="writeDone" scoped="" ref="0x7e029aa0"/>
        <function-ref name="write" scoped="" ref="0x7e029b80"/>
        <function-ref name="beginRead" scoped="" ref="0x7e029c60"/>
        <function-ref name="readDone" scoped="" ref="0x7e029d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7e0225b8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7e0225b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e022790"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7e022870"/>
        <function-ref name="sfd" scoped="" ref="0x7e022950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e022ab8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e022ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e022c90"/>
        <function-ref name="receive" scoped="" ref="0x7e022d70"/>
        <function-ref name="getPayload" scoped="" ref="0x7e022e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7e021010" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7e021010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7e0211e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7e022190" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7e022190"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e022368"/>
        <function-ref name="stop" scoped="" ref="0x7e022448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7e00e1a8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7e00e1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e00e380"/>
        <function-ref name="isInput" scoped="" ref="0x7e00e460"/>
        <function-ref name="toggle" scoped="" ref="0x7e00e540"/>
        <function-ref name="isOutput" scoped="" ref="0x7e00e620"/>
        <function-ref name="get" scoped="" ref="0x7e00e700"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e00e7e0"/>
        <function-ref name="set" scoped="" ref="0x7e00e8c0"/>
        <function-ref name="clr" scoped="" ref="0x7e00e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7e00bb98" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e00bb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7e00bd70"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7e00be50"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7e00a010"/>
        <function-ref name="syncDone" scoped="" ref="0x7e00a0f0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e00a1d0"/>
        <function-ref name="setChannel" scoped="" ref="0x7e00a2b0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7e00a390"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e00a470"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7e00a550"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e00a630"/>
        <function-ref name="sync" scoped="" ref="0x7e00a710"/>
        <function-ref name="getChannel" scoped="" ref="0x7e00a7f0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e00a8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7e006eb8" loc="109:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x7e006eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e0040c0"/>
        <function-ref name="runTask" scoped="" ref="0x7e0041a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7e00eb38" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7e00eb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e00ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7e00edf0"/>
        <function-ref name="toggle" scoped="" ref="0x7e00eed0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e00d010"/>
        <function-ref name="get" scoped="" ref="0x7e00d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e00d1d0"/>
        <function-ref name="set" scoped="" ref="0x7e00d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7e00d390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7e00b180" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7e00b180"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7e00b358"/>
        <function-ref name="getRssi" scoped="" ref="0x7e00b438"/>
        <function-ref name="getPower" scoped="" ref="0x7e00b518"/>
        <function-ref name="getLqi" scoped="" ref="0x7e00b5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7e010a10" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7e010a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e010be8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7e010cc8"/>
        <function-ref name="sfd" scoped="" ref="0x7e010da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7e00c978" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7e00c978"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e00cb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7e00f7e0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7e00f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e00f9b8"/>
        <function-ref name="isInput" scoped="" ref="0x7e00fa98"/>
        <function-ref name="toggle" scoped="" ref="0x7e00fb78"/>
        <function-ref name="isOutput" scoped="" ref="0x7e00fc58"/>
        <function-ref name="get" scoped="" ref="0x7e00fd38"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e00fe18"/>
        <function-ref name="set" scoped="" ref="0x7e00fef8"/>
        <function-ref name="clr" scoped="" ref="0x7e00e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e0102a0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e0102a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e010478"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7e00b770" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e00b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7e00b948"/>
        <function-ref name="getMetadata" scoped="" ref="0x7e00ba28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e010f10" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e010f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e00f108"/>
        <function-ref name="receive" scoped="" ref="0x7e00f1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e00f2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7e00db48" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7e00db48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e00dd20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e00de00"/>
        <function-ref name="request" scoped="" ref="0x7e00dee0"/>
        <function-ref name="granted" scoped="" ref="0x7e00c010"/>
        <function-ref name="isOwner" scoped="" ref="0x7e00c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7e00c288" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7e00c288"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e00c460"/>
        <function-ref name="writeDone" scoped="" ref="0x7e00c540"/>
        <function-ref name="write" scoped="" ref="0x7e00c620"/>
        <function-ref name="beginRead" scoped="" ref="0x7e00c700"/>
        <function-ref name="readDone" scoped="" ref="0x7e00c7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7e00f470" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7e00f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7e00f648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e00aab8" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e00aab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e00ac90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e00ad70"/>
        <function-ref name="led1On" scoped="" ref="0x7e00ae50"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e009010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e0090f0"/>
        <function-ref name="get" scoped="" ref="0x7e0091d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7e0092b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7e009630"/>
        <function-ref name="set" scoped="" ref="0x7e009390"/>
        <function-ref name="led0On" scoped="" ref="0x7e009470"/>
        <function-ref name="led2On" scoped="" ref="0x7e009550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7e00d530" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7e00d530"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e00d708"/>
        <function-ref name="disable" scoped="" ref="0x7e00d7e8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e00d8c8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e00d9a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7e00ccf0" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7e00ccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e00b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7e0105e8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7e0105e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e0107c0"/>
        <function-ref name="stop" scoped="" ref="0x7e0108a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7dfc1528" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7dfc1528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7dfc1700"/>
        <function-ref name="getRssi" scoped="" ref="0x7dfc17e0"/>
        <function-ref name="getPower" scoped="" ref="0x7dfc18c0"/>
        <function-ref name="getLqi" scoped="" ref="0x7dfc19a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7dfc0040" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dfc0040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7dfc0218"/>
        <function-ref name="getMetadata" scoped="" ref="0x7dfc02f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7dfc1b20" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7dfc1b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7dfc1cf8"/>
        <function-ref name="noAck" scoped="" ref="0x7dfc1dd8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7dfc1eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7dfa5d58" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7dfa5d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfa4010"/>
        <function-ref name="write" scoped="" ref="0x7dfa40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7dfa50b0" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7dfa50b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfa5288"/>
        <function-ref name="write" scoped="" ref="0x7dfa5368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7dfa85b8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7dfa85b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfa8790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7dfa3368" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dfa3368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfa3540"/>
        <function-ref name="write" scoped="" ref="0x7dfa3620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7dfa5920" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7dfa5920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfa5af8"/>
        <function-ref name="write" scoped="" ref="0x7dfa5bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7dfa4270" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7dfa4270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfa4448"/>
        <function-ref name="write" scoped="" ref="0x7dfa4528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7dfa6820" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7dfa6820"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfa69f8"/>
        <function-ref name="write" scoped="" ref="0x7dfa6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7dfc3c48" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7dfc3c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7dfc3e20"/>
        <function-ref name="abortRelease" scoped="" ref="0x7dfc3f00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7dfc2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7dfc24e8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7dfc24e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfc26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7dfa6010" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7dfa6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfa61e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7dfa8c68" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7dfa8c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfa8e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7dfa54e8" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7dfa54e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfa56c0"/>
        <function-ref name="write" scoped="" ref="0x7dfa57a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7dfa8910" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7dfa8910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfa8ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7dfa4f18" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7dfa4f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfa3108"/>
        <function-ref name="write" scoped="" ref="0x7dfa31e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7dfa37a0" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7dfa37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dfa3a78"/>
        <function-ref name="writeDone" scoped="" ref="0x7dfa3b58"/>
        <function-ref name="write" scoped="" ref="0x7dfa3c38"/>
        <function-ref name="beginRead" scoped="" ref="0x7dfa3d18"/>
        <function-ref name="readDone" scoped="" ref="0x7dfa3df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7dfc2840" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7dfc2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfc2a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7dfa6c58" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7dfa6c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfa6e30"/>
        <function-ref name="write" scoped="" ref="0x7dfa6f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7dfa6368" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7dfa6368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfa65c0"/>
        <function-ref name="write" scoped="" ref="0x7dfa66a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7dfc2b98" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7dfc2b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfc2d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dfc3590" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dfc3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dfc3768"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dfc3848"/>
        <function-ref name="request" scoped="" ref="0x7dfc3928"/>
        <function-ref name="granted" scoped="" ref="0x7dfc3a08"/>
        <function-ref name="isOwner" scoped="" ref="0x7dfc3ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7dfa4ae0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7dfa4ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfa4cb8"/>
        <function-ref name="write" scoped="" ref="0x7dfa4d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7dfa46a8" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7dfa46a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfa4880"/>
        <function-ref name="write" scoped="" ref="0x7dfa4960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7dfc2190" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7dfc2190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfc2368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7dfa8260" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7dfa8260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfa8438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7dfc2ef0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7dfc2ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfa80e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7dfa2010" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dfa2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dfa21e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7dfa22c8"/>
        <function-ref name="write" scoped="" ref="0x7dfa23a8"/>
        <function-ref name="beginRead" scoped="" ref="0x7dfa2488"/>
        <function-ref name="readDone" scoped="" ref="0x7dfa2568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7df8bd18" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7df8bd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7df8bef0"/>
        <function-ref name="toIdle" scoped="" ref="0x7df8a010"/>
        <function-ref name="isState" scoped="" ref="0x7df8a0f0"/>
        <function-ref name="isIdle" scoped="" ref="0x7df8a1d0"/>
        <function-ref name="requestState" scoped="" ref="0x7df8a2b0"/>
        <function-ref name="forceState" scoped="" ref="0x7df8a390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7df831c0" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7df831c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7df83398"/>
        <function-ref name="getPayload" scoped="" ref="0x7df83478"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7df83558"/>
        <function-ref name="cancel" scoped="" ref="0x7df83638"/>
        <function-ref name="sendDone" scoped="" ref="0x7df83718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7df86a38" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7df86a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7df86c10"/>
        <function-ref name="getPayload" scoped="" ref="0x7df86cf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7df86dd0"/>
        <function-ref name="cancel" scoped="" ref="0x7df86eb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7df83010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7df721c0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7df721c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7df72398"/>
        <function-ref name="getPayload" scoped="" ref="0x7df72478"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7df72558"/>
        <function-ref name="cancel" scoped="" ref="0x7df72638"/>
        <function-ref name="sendDone" scoped="" ref="0x7df72718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7df736e8" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7df736e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7df738c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7df739a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7df73a80"/>
        <function-ref name="cancel" scoped="" ref="0x7df73b60"/>
        <function-ref name="sendDone" scoped="" ref="0x7df73c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7df71010" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7df71010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7df711e8"/>
        <function-ref name="rand32" scoped="" ref="0x7df712c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7df73d88" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7df73d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7df72010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7df71420" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7df71420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7df715f8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7df716d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7df72860" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7df72860"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7df72a38"/>
        <function-ref name="toIdle" scoped="" ref="0x7df72b18"/>
        <function-ref name="isState" scoped="" ref="0x7df72bf8"/>
        <function-ref name="isIdle" scoped="" ref="0x7df72cd8"/>
        <function-ref name="requestState" scoped="" ref="0x7df72db8"/>
        <function-ref name="forceState" scoped="" ref="0x7df72e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7df810e8" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7df810e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7df812c0"/>
        <function-ref name="toIdle" scoped="" ref="0x7df813a0"/>
        <function-ref name="isState" scoped="" ref="0x7df81480"/>
        <function-ref name="isIdle" scoped="" ref="0x7df81560"/>
        <function-ref name="requestState" scoped="" ref="0x7df81640"/>
        <function-ref name="forceState" scoped="" ref="0x7df81720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7df64388" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7df64388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7df64560"/>
        <function-ref name="receive" scoped="" ref="0x7df64640"/>
        <function-ref name="getPayload" scoped="" ref="0x7df64720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7df658d0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7df658d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7df65aa8"/>
        <function-ref name="receive" scoped="" ref="0x7df65b88"/>
        <function-ref name="getPayload" scoped="" ref="0x7df65c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7df65de8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7df65de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7df64010"/>
        <function-ref name="receive" scoped="" ref="0x7df640f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7df641d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7df54a08" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7df54a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7df54be0"/>
        <function-ref name="receive" scoped="" ref="0x7df54cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7df54da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7df54678" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7df54678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7df54850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7df60c68" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7df60c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7df60e40"/>
        <function-ref name="receive" scoped="" ref="0x7df60f20"/>
        <function-ref name="getPayload" scoped="" ref="0x7df54018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7df54ef8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7df54ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7df530e0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7df531c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7df54198" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7df54198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7df54370"/>
        <function-ref name="receive" scoped="" ref="0x7df54450"/>
        <function-ref name="getPayload" scoped="" ref="0x7df54530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7df313e8" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7df313e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7df315c0"/>
        <function-ref name="receive" scoped="" ref="0x7df316a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7df31780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7df318f0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7df318f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7df31ac8"/>
        <function-ref name="getPayload" scoped="" ref="0x7df31ba8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7df31c88"/>
        <function-ref name="cancel" scoped="" ref="0x7df31d68"/>
        <function-ref name="sendDone" scoped="" ref="0x7df31e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7df327e0" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7df327e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7df329b8"/>
        <function-ref name="getPayload" scoped="" ref="0x7df32a98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7df32b78"/>
        <function-ref name="cancel" scoped="" ref="0x7df32c58"/>
        <function-ref name="sendDone" scoped="" ref="0x7df32d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7df32e80" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7df32e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7df31070"/>
        <function-ref name="receive" scoped="" ref="0x7df31150"/>
        <function-ref name="getPayload" scoped="" ref="0x7df31230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7df2c5c0" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7df2c5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7df2c798"/>
        <function-ref name="stopDone" scoped="" ref="0x7df2c878"/>
        <function-ref name="start" scoped="" ref="0x7df2c958"/>
        <function-ref name="stop" scoped="" ref="0x7df2ca38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7df2b460" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7df2b460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7df2b638"/>
        <function-ref name="getPayload" scoped="" ref="0x7df2b718"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7df2b7f8"/>
        <function-ref name="cancel" scoped="" ref="0x7df2b8d8"/>
        <function-ref name="sendDone" scoped="" ref="0x7df2b9b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7df2bb30" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7df2bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7df2bd08"/>
        <function-ref name="receive" scoped="" ref="0x7df2bde8"/>
        <function-ref name="getPayload" scoped="" ref="0x7df2bec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7df34e60" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7df34e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7df2d050"/>
        <function-ref name="getPayload" scoped="" ref="0x7df2d130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7df2d210"/>
        <function-ref name="cancel" scoped="" ref="0x7df2d2f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7df2d3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7df2da08" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7df2da08"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x7df2dbe0"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x7df2dcc0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x7df2dda0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x7df2de80"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x7df2c010"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x7df2c0f0"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x7df2c1d0"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x7df2c2b0"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x7df2c390"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x7df2c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7df2cbb0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x7df2cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7df2cd88"/>
        <function-ref name="toIdle" scoped="" ref="0x7df2ce68"/>
        <function-ref name="isState" scoped="" ref="0x7df2b010"/>
        <function-ref name="isIdle" scoped="" ref="0x7df2b0f0"/>
        <function-ref name="requestState" scoped="" ref="0x7df2b1d0"/>
        <function-ref name="forceState" scoped="" ref="0x7df2b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7df2a070" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7df2a070"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7df2a248"/>
        <function-ref name="stopDone" scoped="" ref="0x7df2a328"/>
        <function-ref name="start" scoped="" ref="0x7df2a408"/>
        <function-ref name="stop" scoped="" ref="0x7df2a4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7df2d518" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7df2d518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7df2d6f0"/>
        <function-ref name="receive" scoped="" ref="0x7df2d7d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7df2d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7df264b0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7df264b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x7df26688"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x7df26768"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x7df26848"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x7df26928"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x7df26a08"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x7df26ae8"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x7df26bc8"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x7df26ca8"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x7df26d88"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x7df26e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7df11e50" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7df11e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7df28050"/>
        <function-ref name="toIdle" scoped="" ref="0x7df28130"/>
        <function-ref name="isState" scoped="" ref="0x7df28210"/>
        <function-ref name="isIdle" scoped="" ref="0x7df282f0"/>
        <function-ref name="requestState" scoped="" ref="0x7df283d0"/>
        <function-ref name="forceState" scoped="" ref="0x7df284b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7df0d2a0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7df0d2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7df0d478"/>
        <function-ref name="getPayload" scoped="" ref="0x7df0d558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7df0d638"/>
        <function-ref name="cancel" scoped="" ref="0x7df0d718"/>
        <function-ref name="sendDone" scoped="" ref="0x7df0d7f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7df0e440" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7df0e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7df0e618"/>
        <function-ref name="getPayload" scoped="" ref="0x7df0e6f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7df0e7d8"/>
        <function-ref name="cancel" scoped="" ref="0x7df0e8b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7df0e998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7df0eae8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7df0eae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7df0ecc0"/>
        <function-ref name="setRetries" scoped="" ref="0x7df0eda0"/>
        <function-ref name="getRetries" scoped="" ref="0x7df0ee80"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7df0d010"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7df0d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7df09e60" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7df09e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7df08050"/>
        <function-ref name="noAck" scoped="" ref="0x7df08130"/>
        <function-ref name="wasAcked" scoped="" ref="0x7df08210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7df09770" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7df09770"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7df09948"/>
        <function-ref name="setRetries" scoped="" ref="0x7df09a28"/>
        <function-ref name="getRetries" scoped="" ref="0x7df09b08"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7df09be8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7df09cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7d9f2758" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="TestDsrAppC.SendA1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7d9f2758"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d9f2930"/>
        <function-ref name="destination" scoped="" ref="0x7d9f2a10"/>
        <function-ref name="setSource" scoped="" ref="0x7d9f2af0"/>
        <function-ref name="setDestination" scoped="" ref="0x7d9f2bd0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d9f2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d9f1a10" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="TestDsrAppC.SendA1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d9f1a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d9f1be8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d9f1cc8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9f1da8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9f1e88"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d9f0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d9f20c0" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="TestDsrAppC.SendA1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d9f20c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d9f2298"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9f2378"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9f2458"/>
        <function-ref name="cancel" scoped="" ref="0x7d9f2538"/>
        <function-ref name="sendDone" scoped="" ref="0x7d9f2618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d9f2df0" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="TestDsrAppC.SendA1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d9f2df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d9f1010"/>
        <function-ref name="source" scoped="" ref="0x7d9f10f0"/>
        <function-ref name="address" scoped="" ref="0x7d9f11d0"/>
        <function-ref name="destination" scoped="" ref="0x7d9f12b0"/>
        <function-ref name="setSource" scoped="" ref="0x7d9f1390"/>
        <function-ref name="setDestination" scoped="" ref="0x7d9f1470"/>
        <function-ref name="type" scoped="" ref="0x7d9f1550"/>
        <function-ref name="setType" scoped="" ref="0x7d9f1630"/>
        <function-ref name="isForMe" scoped="" ref="0x7d9f1710"/>
        <function-ref name="setGroup" scoped="" ref="0x7d9f17f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7d9f18d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleDsrPacketWaitList" ref="0x7deb2138" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7deb2138"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7deb29e0"/>
        <function-ref name="next" scoped="" ref="0x7deb2760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacket" ref="0x7deaf910" loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7deaf910"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7deafae8"/>
        <function-ref name="destination" scoped="" ref="0x7deafbc8"/>
        <function-ref name="setSource" scoped="" ref="0x7deafca8"/>
        <function-ref name="setDestination" scoped="" ref="0x7deafd88"/>
        <function-ref name="isForMe" scoped="" ref="0x7deafe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7dec1cf0" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7dec1cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dec1ec8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7dec0010"/>
        <function-ref name="getPayload" scoped="" ref="0x7dec00f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dec01d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7dec02b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleDsrPacketEngine" ref="0x7dec0478" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7dec0478"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7dec0650"/>
        <function-ref name="send" scoped="" ref="0x7dec0730"/>
        <function-ref name="receive" scoped="" ref="0x7dec0810"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7dec08f0"/>
        <function-ref name="sendAdded" scoped="" ref="0x7dec09d0"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7dec0ab0"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7dec0b90"/>
        <function-ref name="packet" scoped="" ref="0x7dec0c70"/>
        <function-ref name="sendDone" scoped="" ref="0x7dec0d50"/>
        <function-ref name="drop" scoped="" ref="0x7dec0e30"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7dec0f10"/>
        <function-ref name="waitList" scoped="" ref="0x7deb4010"/>
        <function-ref name="setUpperType" scoped="" ref="0x7deb40f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacketEngine" ref="0x7deb42f8" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacketEngine" scoped="" ref="0x7deb42f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7deb44d0"/>
        <function-ref name="send" scoped="" ref="0x7deb45b0"/>
        <function-ref name="receive" scoped="" ref="0x7deb4690"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7deb4770"/>
        <function-ref name="sendAdded" scoped="" ref="0x7deb4850"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7deb4930"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7deb4a10"/>
        <function-ref name="packet" scoped="" ref="0x7deb4af0"/>
        <function-ref name="sendDone" scoped="" ref="0x7deb4bd0"/>
        <function-ref name="drop" scoped="" ref="0x7deb4cb0"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7deb4d90"/>
        <function-ref name="waitList" scoped="" ref="0x7deb4e70"/>
        <function-ref name="setUpperType" scoped="" ref="0x7deb3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7deada10" loc="58:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7deada10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7deadc68"/>
        <function-ref name="getPayload" scoped="" ref="0x7deadd48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7deade28"/>
        <function-ref name="cancel" scoped="" ref="0x7deadf08"/>
        <function-ref name="sendDone" scoped="" ref="0x7deac010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ComposePacket" ref="0x7deaec20" loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ComposePacket" scoped="" ref="0x7deaec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7deaedf8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7deaeed8"/>
        <function-ref name="getPayload" scoped="" ref="0x7dead010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dead0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7dead1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7dead348" loc="56:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7dead348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dead520"/>
        <function-ref name="payloadLength" scoped="" ref="0x7dead600"/>
        <function-ref name="getPayload" scoped="" ref="0x7dead6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dead7c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7dead8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DsrPacketEngine" ref="0x7deb3210" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrPacketEngine" scoped="" ref="0x7deb3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7deb33e8"/>
        <function-ref name="send" scoped="" ref="0x7deb34c8"/>
        <function-ref name="receive" scoped="" ref="0x7deb35a8"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7deb3688"/>
        <function-ref name="sendAdded" scoped="" ref="0x7deb3768"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7deb3848"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7deb3928"/>
        <function-ref name="packet" scoped="" ref="0x7deb3a08"/>
        <function-ref name="sendDone" scoped="" ref="0x7deb3ae8"/>
        <function-ref name="drop" scoped="" ref="0x7deb3bc8"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7deb3ca8"/>
        <function-ref name="waitList" scoped="" ref="0x7deb3d88"/>
        <function-ref name="setUpperType" scoped="" ref="0x7deb3e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacketWaitList" ref="0x7deb2d00" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7deb2d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7deb15d0"/>
        <function-ref name="next" scoped="" ref="0x7deb1350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DsrPacketWaitList" ref="0x7deb18f0" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7deb18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7deaf1b0"/>
        <function-ref name="next" scoped="" ref="0x7deb1f18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7deae010" loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7deae010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7deae1e8"/>
        <function-ref name="source" scoped="" ref="0x7deae2c8"/>
        <function-ref name="address" scoped="" ref="0x7deae3a8"/>
        <function-ref name="destination" scoped="" ref="0x7deae488"/>
        <function-ref name="setSource" scoped="" ref="0x7deae568"/>
        <function-ref name="setDestination" scoped="" ref="0x7deae648"/>
        <function-ref name="type" scoped="" ref="0x7deae728"/>
        <function-ref name="setType" scoped="" ref="0x7deae808"/>
        <function-ref name="isForMe" scoped="" ref="0x7deae8e8"/>
        <function-ref name="setGroup" scoped="" ref="0x7deae9c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7deaeaa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Acks" ref="0x7deaf428" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7deaf428"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7deaf600"/>
        <function-ref name="noAck" scoped="" ref="0x7deaf6e0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7deaf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteErrorList" ref="0x7de808a0" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteErrorList" scoped="" ref="0x7de808a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7de8e6c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7de75228"/>
        <function-ref name="next" scoped="" ref="0x7de80ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AckList" ref="0x7de704d0" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckList" scoped="" ref="0x7de704d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7de8e6c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7de70e38"/>
        <function-ref name="next" scoped="" ref="0x7de70af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteRequest" ref="0x7de89b18" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequest" scoped="" ref="0x7de89b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tlv"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7de89cf0"/>
        <function-ref name="remove" scoped="" ref="0x7de89dd0"/>
        <function-ref name="length" scoped="" ref="0x7de89eb0"/>
        <function-ref name="setLength" scoped="" ref="0x7de90010"/>
        <function-ref name="add" scoped="" ref="0x7de900f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteReplyList" ref="0x7de72388" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteReplyList" scoped="" ref="0x7de72388"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7de8e6c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7de72cf0"/>
        <function-ref name="next" scoped="" ref="0x7de729b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SourceRoute" ref="0x7de6e180" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceRoute" scoped="" ref="0x7de6e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tlv"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7de6e358"/>
        <function-ref name="remove" scoped="" ref="0x7de6e438"/>
        <function-ref name="length" scoped="" ref="0x7de6e518"/>
        <function-ref name="setLength" scoped="" ref="0x7de6e5f8"/>
        <function-ref name="add" scoped="" ref="0x7de6e6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Header" ref="0x7de92c28" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Header" scoped="" ref="0x7de92c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7de92e00"/>
        <function-ref name="length" scoped="" ref="0x7de92ee0"/>
        <function-ref name="add" scoped="" ref="0x7de95010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteError" ref="0x7de80040" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteError" scoped="" ref="0x7de80040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7de80218"/>
        <function-ref name="list" scoped="" ref="0x7de802f8"/>
        <function-ref name="remove" scoped="" ref="0x7de803d8"/>
        <function-ref name="length" scoped="" ref="0x7de804b8"/>
        <function-ref name="setLength" scoped="" ref="0x7de80598"/>
        <function-ref name="add" scoped="" ref="0x7de80678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AckRequest" ref="0x7de75558" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckRequest" scoped="" ref="0x7de75558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tlv"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7de75730"/>
        <function-ref name="remove" scoped="" ref="0x7de75810"/>
        <function-ref name="length" scoped="" ref="0x7de758f0"/>
        <function-ref name="setLength" scoped="" ref="0x7de759d0"/>
        <function-ref name="add" scoped="" ref="0x7de75ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteReply" ref="0x7de81e90" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteReply" scoped="" ref="0x7de81e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7de88080"/>
        <function-ref name="list" scoped="" ref="0x7de88160"/>
        <function-ref name="remove" scoped="" ref="0x7de88240"/>
        <function-ref name="length" scoped="" ref="0x7de88320"/>
        <function-ref name="setLength" scoped="" ref="0x7de88400"/>
        <function-ref name="add" scoped="" ref="0x7de884e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ack" ref="0x7de75c28" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ack" scoped="" ref="0x7de75c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7de75e00"/>
        <function-ref name="list" scoped="" ref="0x7de75ee0"/>
        <function-ref name="remove" scoped="" ref="0x7de70010"/>
        <function-ref name="length" scoped="" ref="0x7de700f0"/>
        <function-ref name="setLength" scoped="" ref="0x7de701d0"/>
        <function-ref name="add" scoped="" ref="0x7de702b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvBlock" ref="0x7de6c4a8" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
      <component-ref qname="DsrOptionsC.RouteRequestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlock" scoped="" ref="0x7de6c4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7de6c680"/>
        <function-ref name="length" scoped="" ref="0x7de6c760"/>
        <function-ref name="add" scoped="" ref="0x7de6c840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tlv" ref="0x7de6c980" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
      <component-ref qname="DsrOptionsC.RouteRequestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tlv" scoped="" ref="0x7de6c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tlv"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7de6cb58"/>
        <function-ref name="remove" scoped="" ref="0x7de6cc38"/>
        <function-ref name="length" scoped="" ref="0x7de6cd18"/>
        <function-ref name="setLength" scoped="" ref="0x7de6cdf8"/>
        <function-ref name="add" scoped="" ref="0x7de6ced8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvMultiple" ref="0x7de63820" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvP.nc">
      <component-ref qname="TlvP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvMultiple" scoped="" ref="0x7de63820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiple"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7de639f8"/>
        <function-ref name="list" scoped="" ref="0x7de63ad8"/>
        <function-ref name="remove" scoped="" ref="0x7de63bb8"/>
        <function-ref name="length" scoped="" ref="0x7de63c98"/>
        <function-ref name="setLength" scoped="" ref="0x7de63d78"/>
        <function-ref name="add" scoped="" ref="0x7de63e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvList" ref="0x7de62340" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvP.nc">
      <component-ref qname="TlvP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvList" scoped="" ref="0x7de62340"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7de8e6c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7de62ca8"/>
        <function-ref name="next" scoped="" ref="0x7de62968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvBlock" ref="0x7de64750" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvP.nc">
      <component-ref qname="TlvP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlock" scoped="" ref="0x7de64750"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7de64928"/>
        <function-ref name="length" scoped="" ref="0x7de64a08"/>
        <function-ref name="add" scoped="" ref="0x7de64ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tlv" ref="0x7de64ec0" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvP.nc">
      <component-ref qname="TlvP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tlv" scoped="" ref="0x7de64ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tlv"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7de630c0"/>
        <function-ref name="remove" scoped="" ref="0x7de631a0"/>
        <function-ref name="length" scoped="" ref="0x7de63280"/>
        <function-ref name="setLength" scoped="" ref="0x7de63360"/>
        <function-ref name="add" scoped="" ref="0x7de63440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvMultiple" ref="0x7de12890" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
      <component-ref qname="DsrOptionsC.RouteReplyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvMultiple" scoped="" ref="0x7de12890"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7de12a68"/>
        <function-ref name="list" scoped="" ref="0x7de12b48"/>
        <function-ref name="remove" scoped="" ref="0x7de12c28"/>
        <function-ref name="length" scoped="" ref="0x7de12d08"/>
        <function-ref name="setLength" scoped="" ref="0x7de12de8"/>
        <function-ref name="add" scoped="" ref="0x7de12ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvList" ref="0x7de110e0" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
      <component-ref qname="DsrOptionsC.RouteReplyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvList" scoped="" ref="0x7de110e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7de8e6c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7de11a48"/>
        <function-ref name="next" scoped="" ref="0x7de11708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvBlock" ref="0x7de123b8" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
      <component-ref qname="DsrOptionsC.RouteReplyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlock" scoped="" ref="0x7de123b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7de12590"/>
        <function-ref name="length" scoped="" ref="0x7de12670"/>
        <function-ref name="add" scoped="" ref="0x7de12750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvMultiple" ref="0x7de0bf18" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
      <component-ref qname="DsrOptionsC.RouteErrorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvMultiple" scoped="" ref="0x7de0bf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7de0a108"/>
        <function-ref name="list" scoped="" ref="0x7de0a1e8"/>
        <function-ref name="remove" scoped="" ref="0x7de0a2c8"/>
        <function-ref name="length" scoped="" ref="0x7de0a3a8"/>
        <function-ref name="setLength" scoped="" ref="0x7de0a488"/>
        <function-ref name="add" scoped="" ref="0x7de0a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvList" ref="0x7de0a758" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
      <component-ref qname="DsrOptionsC.RouteErrorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvList" scoped="" ref="0x7de0a758"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7de8e6c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7de090d8"/>
        <function-ref name="next" scoped="" ref="0x7de0ad80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvBlock" ref="0x7de0ba40" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
      <component-ref qname="DsrOptionsC.RouteErrorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlock" scoped="" ref="0x7de0ba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7de0bc18"/>
        <function-ref name="length" scoped="" ref="0x7de0bcf8"/>
        <function-ref name="add" scoped="" ref="0x7de0bdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvBlock" ref="0x7de080d8" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
      <component-ref qname="DsrOptionsC.AckRequestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlock" scoped="" ref="0x7de080d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7de082b0"/>
        <function-ref name="length" scoped="" ref="0x7de08390"/>
        <function-ref name="add" scoped="" ref="0x7de08470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tlv" ref="0x7de085b0" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
      <component-ref qname="DsrOptionsC.AckRequestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tlv" scoped="" ref="0x7de085b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tlv"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7de08788"/>
        <function-ref name="remove" scoped="" ref="0x7de08868"/>
        <function-ref name="length" scoped="" ref="0x7de08948"/>
        <function-ref name="setLength" scoped="" ref="0x7de08a28"/>
        <function-ref name="add" scoped="" ref="0x7de08b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvMultiple" ref="0x7de07d28" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
      <component-ref qname="DsrOptionsC.AckC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvMultiple" scoped="" ref="0x7de07d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7de07f00"/>
        <function-ref name="list" scoped="" ref="0x7de06010"/>
        <function-ref name="remove" scoped="" ref="0x7de060f0"/>
        <function-ref name="length" scoped="" ref="0x7de061d0"/>
        <function-ref name="setLength" scoped="" ref="0x7de062b0"/>
        <function-ref name="add" scoped="" ref="0x7de06390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvList" ref="0x7de06580" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
      <component-ref qname="DsrOptionsC.AckC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvList" scoped="" ref="0x7de06580"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7de8e6c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7de06ee8"/>
        <function-ref name="next" scoped="" ref="0x7de06ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvBlock" ref="0x7de07850" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
      <component-ref qname="DsrOptionsC.AckC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlock" scoped="" ref="0x7de07850"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7de07a28"/>
        <function-ref name="length" scoped="" ref="0x7de07b08"/>
        <function-ref name="add" scoped="" ref="0x7de07be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvBlock" ref="0x7de04ee8" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
      <component-ref qname="DsrOptionsC.SourceRouteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlock" scoped="" ref="0x7de04ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7de030e0"/>
        <function-ref name="length" scoped="" ref="0x7de031c0"/>
        <function-ref name="add" scoped="" ref="0x7de032a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tlv" ref="0x7de033e0" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
      <component-ref qname="DsrOptionsC.SourceRouteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tlv" scoped="" ref="0x7de033e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tlv"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7de035b8"/>
        <function-ref name="remove" scoped="" ref="0x7de03698"/>
        <function-ref name="length" scoped="" ref="0x7de03778"/>
        <function-ref name="setLength" scoped="" ref="0x7de03858"/>
        <function-ref name="add" scoped="" ref="0x7de03938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteRequestOutCache" ref="0x7dced968" loc="110:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestOutCache" scoped="" ref="0x7dced968"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7dec7578"/>
            <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7dec78b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7dceb590"/>
        <function-ref name="insert" scoped="" ref="0x7dceb010"/>
        <function-ref name="flush" scoped="" ref="0x7dceb830"/>
        <function-ref name="lookup" scoped="" ref="0x7dceb2d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteRequestOutTimer" ref="0x7dceba78" loc="111:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestOutTimer" scoped="" ref="0x7dceba78"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataTimer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="expired" scoped="" ref="0x7dcea658"/>
        <function-ref name="start" scoped="" ref="0x7dcea0b8"/>
        <function-ref name="stop" scoped="" ref="0x7dcea3d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteRequestInEqual" ref="0x7dd021c8" loc="86:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestInEqual" scoped="" ref="0x7dd021c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7dec7e20"/>
              <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7dec51b0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dd027f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteErrorList" ref="0x7dcf62e0" loc="97:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteErrorList" scoped="" ref="0x7dcf62e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7de8e6c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7dcf6c48"/>
        <function-ref name="next" scoped="" ref="0x7dcf6908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleDsrPacketWaitList" ref="0x7dcf2360" loc="103:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7dcf2360"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7dcf2c88"/>
        <function-ref name="next" scoped="" ref="0x7dcf2a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacket" ref="0x7dcead88" loc="114:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7dcead88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7dce9010"/>
        <function-ref name="destination" scoped="" ref="0x7dce90f0"/>
        <function-ref name="setSource" scoped="" ref="0x7dce91d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7dce92b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7dce9390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7dd01b80" loc="92:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7dd01b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7dd01d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7dd014b8" loc="89:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7dd014b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dd01690"/>
        <function-ref name="payloadLength" scoped="" ref="0x7dd01770"/>
        <function-ref name="getPayload" scoped="" ref="0x7dd01850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dd01930"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7dd01a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleDsrPacketEngine" ref="0x7dcf56c8" loc="100:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7dcf56c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7dcf58a0"/>
        <function-ref name="send" scoped="" ref="0x7dcf5980"/>
        <function-ref name="receive" scoped="" ref="0x7dcf5a60"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7dcf5b40"/>
        <function-ref name="sendAdded" scoped="" ref="0x7dcf5c20"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7dcf5d00"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7dcf5de0"/>
        <function-ref name="packet" scoped="" ref="0x7dcf5ec0"/>
        <function-ref name="sendDone" scoped="" ref="0x7dcf4010"/>
        <function-ref name="drop" scoped="" ref="0x7dcf40f0"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7dcf41d0"/>
        <function-ref name="waitList" scoped="" ref="0x7dcf42b0"/>
        <function-ref name="setUpperType" scoped="" ref="0x7dcf4390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteRequestInCache" ref="0x7dcee8b8" loc="109:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestInCache" scoped="" ref="0x7dcee8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7dec7e20"/>
            <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7dec51b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7dced480"/>
        <function-ref name="insert" scoped="" ref="0x7dceeee0"/>
        <function-ref name="flush" scoped="" ref="0x7dced720"/>
        <function-ref name="lookup" scoped="" ref="0x7dced1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacketEngine" ref="0x7dcf4570" loc="101:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacketEngine" scoped="" ref="0x7dcf4570"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7dcf4748"/>
        <function-ref name="send" scoped="" ref="0x7dcf4828"/>
        <function-ref name="receive" scoped="" ref="0x7dcf4908"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7dcf49e8"/>
        <function-ref name="sendAdded" scoped="" ref="0x7dcf4ac8"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7dcf4ba8"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7dcf4c88"/>
        <function-ref name="packet" scoped="" ref="0x7dcf4d68"/>
        <function-ref name="sendDone" scoped="" ref="0x7dcf4e48"/>
        <function-ref name="drop" scoped="" ref="0x7dcf4f28"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7dcf3018"/>
        <function-ref name="waitList" scoped="" ref="0x7dcf30f8"/>
        <function-ref name="setUpperType" scoped="" ref="0x7dcf31d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7dce57c8" loc="123:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7dce57c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7dce59a0"/>
        <function-ref name="rand32" scoped="" ref="0x7dce5a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteRequest" ref="0x7dcf73e0" loc="95:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequest" scoped="" ref="0x7dcf73e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tlv"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7dcf75b8"/>
        <function-ref name="remove" scoped="" ref="0x7dcf7698"/>
        <function-ref name="length" scoped="" ref="0x7dcf7778"/>
        <function-ref name="setLength" scoped="" ref="0x7dcf7858"/>
        <function-ref name="add" scoped="" ref="0x7dcf7938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7dce6968" loc="120:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dce6968"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dce6b40"/>
        <function-ref name="getPayload" scoped="" ref="0x7dce6c20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dce6d00"/>
        <function-ref name="cancel" scoped="" ref="0x7dce6de0"/>
        <function-ref name="sendDone" scoped="" ref="0x7dce6ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x7dce5050" loc="121:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x7dce5050"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7dce5228"/>
        <function-ref name="toIdle" scoped="" ref="0x7dce5308"/>
        <function-ref name="isState" scoped="" ref="0x7dce53e8"/>
        <function-ref name="isIdle" scoped="" ref="0x7dce54c8"/>
        <function-ref name="requestState" scoped="" ref="0x7dce55a8"/>
        <function-ref name="forceState" scoped="" ref="0x7dce5688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="composePkt" ref="0x7dce5c00" loc="151:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="composePkt" scoped="" ref="0x7dce5c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7dce5dd8"/>
        <function-ref name="runTask" scoped="" ref="0x7dce5eb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ComposePacket" ref="0x7dce8170" loc="116:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ComposePacket" scoped="" ref="0x7dce8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dce8348"/>
        <function-ref name="payloadLength" scoped="" ref="0x7dce8428"/>
        <function-ref name="getPayload" scoped="" ref="0x7dce8508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dce85e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7dce86c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7dce8828" loc="117:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7dce8828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dce8b00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7dce8be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7dce8cc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dce8da0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7dce8e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SourceRoute" ref="0x7dcf5010" loc="98:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceRoute" scoped="" ref="0x7dcf5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tlv"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7dcf51e8"/>
        <function-ref name="remove" scoped="" ref="0x7dcf52c8"/>
        <function-ref name="length" scoped="" ref="0x7dcf53a8"/>
        <function-ref name="setLength" scoped="" ref="0x7dcf5488"/>
        <function-ref name="add" scoped="" ref="0x7dcf5568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DsrPacketEngine" ref="0x7dcf33b8" loc="102:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrPacketEngine" scoped="" ref="0x7dcf33b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7dcf3590"/>
        <function-ref name="send" scoped="" ref="0x7dcf3670"/>
        <function-ref name="receive" scoped="" ref="0x7dcf3750"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7dcf3830"/>
        <function-ref name="sendAdded" scoped="" ref="0x7dcf3910"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7dcf39f0"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7dcf3ad0"/>
        <function-ref name="packet" scoped="" ref="0x7dcf3bb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7dcf3c90"/>
        <function-ref name="drop" scoped="" ref="0x7dcf3d70"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7dcf3e50"/>
        <function-ref name="waitList" scoped="" ref="0x7dcf2010"/>
        <function-ref name="setUpperType" scoped="" ref="0x7dcf20f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacketWaitList" ref="0x7dcf1010" loc="104:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7dcf1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7dcf18b8"/>
        <function-ref name="next" scoped="" ref="0x7dcf1638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compose" ref="0x7dce6010" loc="119:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compose" scoped="" ref="0x7dce6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7dce61e8"/>
        <function-ref name="clear" scoped="" ref="0x7dce62c8"/>
        <function-ref name="toggle" scoped="" ref="0x7dce63a8"/>
        <function-ref name="get" scoped="" ref="0x7dce6488"/>
        <function-ref name="assign" scoped="" ref="0x7dce6568"/>
        <function-ref name="setAll" scoped="" ref="0x7dce6648"/>
        <function-ref name="set" scoped="" ref="0x7dce6728"/>
        <function-ref name="size" scoped="" ref="0x7dce6808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Header" ref="0x7dd01eb8" loc="94:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Header" scoped="" ref="0x7dd01eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7dcf70c0"/>
        <function-ref name="length" scoped="" ref="0x7dcf71a0"/>
        <function-ref name="add" scoped="" ref="0x7dcf7280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteError" ref="0x7dcf7a98" loc="96:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteError" scoped="" ref="0x7dcf7a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7dcf7c70"/>
        <function-ref name="list" scoped="" ref="0x7dcf7d50"/>
        <function-ref name="remove" scoped="" ref="0x7dcf7e30"/>
        <function-ref name="length" scoped="" ref="0x7dcf7f10"/>
        <function-ref name="setLength" scoped="" ref="0x7dcf6010"/>
        <function-ref name="add" scoped="" ref="0x7dcf60f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteNodeList" ref="0x7dcefd00" loc="108:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteNodeList" scoped="" ref="0x7dcefd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7ddf1940"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7dcee5d0"/>
        <function-ref name="next" scoped="" ref="0x7dcee350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteCache" ref="0x7dcef698" loc="107:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteCache" scoped="" ref="0x7dcef698"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteCache"/>
      </instance>
      <interface-functions>
        <function-ref name="removeLink" scoped="" ref="0x7dcef870"/>
        <function-ref name="routeUpdate" scoped="" ref="0x7dcef950"/>
        <function-ref name="addPath" scoped="" ref="0x7dcefa30"/>
        <function-ref name="needRoute" scoped="" ref="0x7dcefb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DsrPacketWaitList" ref="0x7dcf1ba0" loc="105:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7dcf1ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7dcef460"/>
        <function-ref name="next" scoped="" ref="0x7dcef1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteRequestOutEqual" ref="0x7dd02b98" loc="87:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestOutEqual" scoped="" ref="0x7dd02b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7dec7578"/>
              <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7dec78b8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dd011e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7dce94d0" loc="115:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7dce94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7dce96a8"/>
        <function-ref name="source" scoped="" ref="0x7dce9788"/>
        <function-ref name="address" scoped="" ref="0x7dce9868"/>
        <function-ref name="destination" scoped="" ref="0x7dce9948"/>
        <function-ref name="setSource" scoped="" ref="0x7dce9a28"/>
        <function-ref name="setDestination" scoped="" ref="0x7dce9b08"/>
        <function-ref name="type" scoped="" ref="0x7dce9be8"/>
        <function-ref name="setType" scoped="" ref="0x7dce9cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x7dce9da8"/>
        <function-ref name="setGroup" scoped="" ref="0x7dce9e88"/>
        <function-ref name="localGroup" scoped="" ref="0x7dce8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Acks" ref="0x7dcea8b0" loc="113:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7dcea8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7dceaa88"/>
        <function-ref name="noAck" scoped="" ref="0x7dceab68"/>
        <function-ref name="wasAcked" scoped="" ref="0x7dceac48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteCache" ref="0x7dcd7840" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrRouteCacheC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteCache" scoped="" ref="0x7dcd7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteCache"/>
      </instance>
      <interface-functions>
        <function-ref name="removeLink" scoped="" ref="0x7dcd7a18"/>
        <function-ref name="routeUpdate" scoped="" ref="0x7dcd7af8"/>
        <function-ref name="addPath" scoped="" ref="0x7dcd7bd8"/>
        <function-ref name="needRoute" scoped="" ref="0x7dcd7cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteNodeList" ref="0x7dcd7ea8" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrRouteCacheC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteNodeList" scoped="" ref="0x7dcd7ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7ddf1940"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7dcd6768"/>
        <function-ref name="next" scoped="" ref="0x7dcd64e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteCache" ref="0x7d553030" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteCache" scoped="" ref="0x7d553030"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteCache"/>
      </instance>
      <interface-functions>
        <function-ref name="removeLink" scoped="" ref="0x7d553208"/>
        <function-ref name="routeUpdate" scoped="" ref="0x7d5532e8"/>
        <function-ref name="addPath" scoped="" ref="0x7d5533c8"/>
        <function-ref name="needRoute" scoped="" ref="0x7d5534a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteNodeList" ref="0x7d553698" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteNodeList" scoped="" ref="0x7d553698"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7ddf1940"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d552010"/>
        <function-ref name="next" scoped="" ref="0x7d553cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7dcc69c8" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7dcc69c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7dcc6ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Graph" ref="0x7dca1ea8" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7dca1ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7dcc20c0"/>
        <function-ref name="removed" scoped="" ref="0x7dcc21a0"/>
        <function-ref name="remove" scoped="" ref="0x7dcc2280"/>
        <function-ref name="edge" scoped="" ref="0x7dcc2360"/>
        <function-ref name="directed" scoped="" ref="0x7dcc2440"/>
        <function-ref name="vertices" scoped="" ref="0x7dcc2520"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7dcc2600"/>
        <function-ref name="maxVertices" scoped="" ref="0x7dcc26e0"/>
        <function-ref name="insert" scoped="" ref="0x7dcc27c0"/>
        <function-ref name="inserted" scoped="" ref="0x7dcc28a0"/>
        <function-ref name="edgeList" scoped="" ref="0x7dcc2980"/>
        <function-ref name="edges" scoped="" ref="0x7dcc2a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeedRouteTo" ref="0x7dcc6d20" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeedRouteTo" scoped="" ref="0x7dcc6d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7dcc6ef8"/>
        <function-ref name="clear" scoped="" ref="0x7dcc5010"/>
        <function-ref name="toggle" scoped="" ref="0x7dcc50f0"/>
        <function-ref name="get" scoped="" ref="0x7dcc51d0"/>
        <function-ref name="assign" scoped="" ref="0x7dcc52b0"/>
        <function-ref name="setAll" scoped="" ref="0x7dcc5390"/>
        <function-ref name="set" scoped="" ref="0x7dcc5470"/>
        <function-ref name="size" scoped="" ref="0x7dcc5550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InitialCheck" ref="0x7dcc56d0" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InitialCheck" scoped="" ref="0x7dcc56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7dcc58a8"/>
        <function-ref name="clear" scoped="" ref="0x7dcc5988"/>
        <function-ref name="toggle" scoped="" ref="0x7dcc5a68"/>
        <function-ref name="get" scoped="" ref="0x7dcc5b48"/>
        <function-ref name="assign" scoped="" ref="0x7dcc5c28"/>
        <function-ref name="setAll" scoped="" ref="0x7dcc5d08"/>
        <function-ref name="set" scoped="" ref="0x7dcc5de8"/>
        <function-ref name="size" scoped="" ref="0x7dcc5ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SourceShortestPath" ref="0x7dc99800" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceShortestPath" scoped="" ref="0x7dc99800"/></type-interface>
      <instance>
        <interfacedef-ref qname="SourceShortestPath"/>
      </instance>
      <interface-functions>
        <function-ref name="rebuildNeeded" scoped="" ref="0x7dc999d8"/>
        <function-ref name="buildTree" scoped="" ref="0x7dc99ab8"/>
        <function-ref name="builtTree" scoped="" ref="0x7dc99b98"/>
        <function-ref name="buildingTree" scoped="" ref="0x7dc99c78"/>
        <function-ref name="edgeCount" scoped="" ref="0x7dc99d58"/>
        <function-ref name="buildTreeTo" scoped="" ref="0x7dc99e38"/>
        <function-ref name="builtTreeTo" scoped="" ref="0x7dc99f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteCache" ref="0x7dcc63d8" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteCache" scoped="" ref="0x7dcc63d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteCache"/>
      </instance>
      <interface-functions>
        <function-ref name="removeLink" scoped="" ref="0x7dcc65b0"/>
        <function-ref name="routeUpdate" scoped="" ref="0x7dcc6690"/>
        <function-ref name="addPath" scoped="" ref="0x7dcc6770"/>
        <function-ref name="needRoute" scoped="" ref="0x7dcc6850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7dcc4040" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7dcc4040"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7dcc4218"/>
        <function-ref name="source" scoped="" ref="0x7dcc42f8"/>
        <function-ref name="address" scoped="" ref="0x7dcc43d8"/>
        <function-ref name="destination" scoped="" ref="0x7dcc44b8"/>
        <function-ref name="setSource" scoped="" ref="0x7dcc4598"/>
        <function-ref name="setDestination" scoped="" ref="0x7dcc4678"/>
        <function-ref name="type" scoped="" ref="0x7dcc4758"/>
        <function-ref name="setType" scoped="" ref="0x7dcc4838"/>
        <function-ref name="isForMe" scoped="" ref="0x7dcc4918"/>
        <function-ref name="setGroup" scoped="" ref="0x7dcc49f8"/>
        <function-ref name="localGroup" scoped="" ref="0x7dcc4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Graph" ref="0x7d550a90" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7d550a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7d550c68"/>
        <function-ref name="removed" scoped="" ref="0x7d550d48"/>
        <function-ref name="remove" scoped="" ref="0x7d550e28"/>
        <function-ref name="edge" scoped="" ref="0x7d550f08"/>
        <function-ref name="directed" scoped="" ref="0x7d54f010"/>
        <function-ref name="vertices" scoped="" ref="0x7d54f0f0"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7d54f1d0"/>
        <function-ref name="maxVertices" scoped="" ref="0x7d54f2b0"/>
        <function-ref name="insert" scoped="" ref="0x7d54f390"/>
        <function-ref name="inserted" scoped="" ref="0x7d54f470"/>
        <function-ref name="edgeList" scoped="" ref="0x7d54f550"/>
        <function-ref name="edges" scoped="" ref="0x7d54f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PathEdgeList" ref="0x7d54d030" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PathEdgeList" scoped="" ref="0x7d54d030"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d54d8d8"/>
        <function-ref name="next" scoped="" ref="0x7d54d658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SourceShortestPath" ref="0x7d54e710" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceShortestPath" scoped="" ref="0x7d54e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="SourceShortestPath"/>
      </instance>
      <interface-functions>
        <function-ref name="rebuildNeeded" scoped="" ref="0x7d54e8e8"/>
        <function-ref name="buildTree" scoped="" ref="0x7d54e9c8"/>
        <function-ref name="builtTree" scoped="" ref="0x7d54eaa8"/>
        <function-ref name="buildingTree" scoped="" ref="0x7d54eb88"/>
        <function-ref name="edgeCount" scoped="" ref="0x7d54ec68"/>
        <function-ref name="buildTreeTo" scoped="" ref="0x7d54ed48"/>
        <function-ref name="builtTreeTo" scoped="" ref="0x7d54ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdge" ref="0x7d54f770" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7d54f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7d54f948"/>
        <function-ref name="dest" scoped="" ref="0x7d54fa28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdgeList" ref="0x7d54fc18" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7d54fc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d54e4d8"/>
        <function-ref name="next" scoped="" ref="0x7d54e258"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeWeight" ref="0x7d54dbc0" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d54dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7dcce110"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="canChangeWeights" scoped="" ref="0x7d54c218"/>
        <function-ref name="weightChanged" scoped="" ref="0x7d54c998"/>
        <function-ref name="setWeight" scoped="" ref="0x7d54c678"/>
        <function-ref name="weight" scoped="" ref="0x7d54c3f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Graph" ref="0x7d5406d8" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7d5406d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7d5408b0"/>
        <function-ref name="removed" scoped="" ref="0x7d540990"/>
        <function-ref name="remove" scoped="" ref="0x7d540a70"/>
        <function-ref name="edge" scoped="" ref="0x7d540b50"/>
        <function-ref name="directed" scoped="" ref="0x7d540c30"/>
        <function-ref name="vertices" scoped="" ref="0x7d540d10"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7d540df0"/>
        <function-ref name="maxVertices" scoped="" ref="0x7d540ed0"/>
        <function-ref name="insert" scoped="" ref="0x7d533010"/>
        <function-ref name="inserted" scoped="" ref="0x7d5330f0"/>
        <function-ref name="edgeList" scoped="" ref="0x7d5331d0"/>
        <function-ref name="edges" scoped="" ref="0x7d5332b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdge" ref="0x7d5333f0" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7d5333f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7d5335c8"/>
        <function-ref name="dest" scoped="" ref="0x7d5336a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdgeList" ref="0x7d533898" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7d533898"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d532170"/>
        <function-ref name="next" scoped="" ref="0x7d533ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IndexedAlloc" ref="0x7d5277e8" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IndexedAlloc" scoped="" ref="0x7d5277e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedAlloc"/>
      </instance>
      <interface-functions>
        <function-ref name="all" scoped="" ref="0x7d527f00"/>
        <function-ref name="allocated" scoped="" ref="0x7d527aa0"/>
        <function-ref name="maxSize" scoped="" ref="0x7d527b80"/>
        <function-ref name="alloc" scoped="" ref="0x7d527c60"/>
        <function-ref name="none" scoped="" ref="0x7d527d40"/>
        <function-ref name="free" scoped="" ref="0x7d527e20"/>
        <function-ref name="size" scoped="" ref="0x7d5279c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IndexedAlloc" ref="0x7d51f3b0" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IndexedAlloc" scoped="" ref="0x7d51f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedAlloc"/>
      </instance>
      <interface-functions>
        <function-ref name="all" scoped="" ref="0x7d51fac8"/>
        <function-ref name="allocated" scoped="" ref="0x7d51f668"/>
        <function-ref name="maxSize" scoped="" ref="0x7d51f748"/>
        <function-ref name="alloc" scoped="" ref="0x7d51f828"/>
        <function-ref name="none" scoped="" ref="0x7d51f908"/>
        <function-ref name="free" scoped="" ref="0x7d51f9e8"/>
        <function-ref name="size" scoped="" ref="0x7d51f588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d51eeb8" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d51eeb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d51c0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7d51c220" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7d51c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7d51c3f8"/>
        <function-ref name="clear" scoped="" ref="0x7d51c4d8"/>
        <function-ref name="toggle" scoped="" ref="0x7d51c5b8"/>
        <function-ref name="get" scoped="" ref="0x7d51c698"/>
        <function-ref name="assign" scoped="" ref="0x7d51c778"/>
        <function-ref name="setAll" scoped="" ref="0x7d51c858"/>
        <function-ref name="set" scoped="" ref="0x7d51c938"/>
        <function-ref name="size" scoped="" ref="0x7d51ca18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7d51bf20" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7d51bf20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7d51a110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IndexedAlloc" ref="0x7d51b698" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IndexedAlloc" scoped="" ref="0x7d51b698"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedAlloc"/>
      </instance>
      <interface-functions>
        <function-ref name="all" scoped="" ref="0x7d51bdb0"/>
        <function-ref name="allocated" scoped="" ref="0x7d51b950"/>
        <function-ref name="maxSize" scoped="" ref="0x7d51ba30"/>
        <function-ref name="alloc" scoped="" ref="0x7d51bb10"/>
        <function-ref name="none" scoped="" ref="0x7d51bbf0"/>
        <function-ref name="free" scoped="" ref="0x7d51bcd0"/>
        <function-ref name="size" scoped="" ref="0x7d51b870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BitVector" ref="0x7d51a250" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7d51a250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7d51a428"/>
        <function-ref name="clear" scoped="" ref="0x7d51a508"/>
        <function-ref name="toggle" scoped="" ref="0x7d51a5e8"/>
        <function-ref name="get" scoped="" ref="0x7d51a6c8"/>
        <function-ref name="assign" scoped="" ref="0x7d51a7a8"/>
        <function-ref name="setAll" scoped="" ref="0x7d51a888"/>
        <function-ref name="set" scoped="" ref="0x7d51a968"/>
        <function-ref name="size" scoped="" ref="0x7d51aa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Graph" ref="0x7d525150" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7d525150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7d525328"/>
        <function-ref name="removed" scoped="" ref="0x7d525408"/>
        <function-ref name="remove" scoped="" ref="0x7d5254e8"/>
        <function-ref name="edge" scoped="" ref="0x7d5255c8"/>
        <function-ref name="directed" scoped="" ref="0x7d5256a8"/>
        <function-ref name="vertices" scoped="" ref="0x7d525788"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7d525868"/>
        <function-ref name="maxVertices" scoped="" ref="0x7d525948"/>
        <function-ref name="insert" scoped="" ref="0x7d525a28"/>
        <function-ref name="inserted" scoped="" ref="0x7d525b08"/>
        <function-ref name="edgeList" scoped="" ref="0x7d525be8"/>
        <function-ref name="edges" scoped="" ref="0x7d525cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d526dd8" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d526dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d525010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IndexedAlloc" ref="0x7d523de0" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IndexedAlloc" scoped="" ref="0x7d523de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedAlloc"/>
      </instance>
      <interface-functions>
        <function-ref name="all" scoped="" ref="0x7d522550"/>
        <function-ref name="allocated" scoped="" ref="0x7d5220f0"/>
        <function-ref name="maxSize" scoped="" ref="0x7d5221d0"/>
        <function-ref name="alloc" scoped="" ref="0x7d5222b0"/>
        <function-ref name="none" scoped="" ref="0x7d522390"/>
        <function-ref name="free" scoped="" ref="0x7d522470"/>
        <function-ref name="size" scoped="" ref="0x7d522010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdge" ref="0x7d525e08" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7d525e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7d523010"/>
        <function-ref name="dest" scoped="" ref="0x7d5230f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdgeList" ref="0x7d5232e0" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7d5232e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d523b88"/>
        <function-ref name="next" scoped="" ref="0x7d523908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Graph" ref="0x7d52f6c8" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7d52f6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7d52f8a0"/>
        <function-ref name="removed" scoped="" ref="0x7d52f980"/>
        <function-ref name="remove" scoped="" ref="0x7d52fa60"/>
        <function-ref name="edge" scoped="" ref="0x7d52fb40"/>
        <function-ref name="directed" scoped="" ref="0x7d52fc20"/>
        <function-ref name="vertices" scoped="" ref="0x7d52fd00"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7d52fde0"/>
        <function-ref name="maxVertices" scoped="" ref="0x7d52fec0"/>
        <function-ref name="insert" scoped="" ref="0x7d52e010"/>
        <function-ref name="inserted" scoped="" ref="0x7d52e0f0"/>
        <function-ref name="edgeList" scoped="" ref="0x7d52e1d0"/>
        <function-ref name="edges" scoped="" ref="0x7d52e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PathEdgeList" ref="0x7d531b58" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PathEdgeList" scoped="" ref="0x7d531b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d52f460"/>
        <function-ref name="next" scoped="" ref="0x7d52f1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SourceShortestPath" ref="0x7d531250" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceShortestPath" scoped="" ref="0x7d531250"/></type-interface>
      <instance>
        <interfacedef-ref qname="SourceShortestPath"/>
      </instance>
      <interface-functions>
        <function-ref name="rebuildNeeded" scoped="" ref="0x7d531428"/>
        <function-ref name="buildTree" scoped="" ref="0x7d531508"/>
        <function-ref name="builtTree" scoped="" ref="0x7d5315e8"/>
        <function-ref name="buildingTree" scoped="" ref="0x7d5316c8"/>
        <function-ref name="edgeCount" scoped="" ref="0x7d5317a8"/>
        <function-ref name="buildTreeTo" scoped="" ref="0x7d531888"/>
        <function-ref name="builtTreeTo" scoped="" ref="0x7d531968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdge" ref="0x7d52e3f0" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7d52e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7d52e5c8"/>
        <function-ref name="dest" scoped="" ref="0x7d52e6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeWeight" ref="0x7d52e878" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d52e878"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7dcce110"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="canChangeWeights" scoped="" ref="0x7d52eea0"/>
        <function-ref name="weightChanged" scoped="" ref="0x7d52d638"/>
        <function-ref name="setWeight" scoped="" ref="0x7d52d318"/>
        <function-ref name="weight" scoped="" ref="0x7d52d098"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeList" ref="0x7d52d920" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7d52d920"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d52c290"/>
        <function-ref name="next" scoped="" ref="0x7d52c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PriorityQueue" ref="0x7d4f39a8" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PriorityQueue" scoped="" ref="0x7d4f39a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PriorityQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d4f3b80"/>
        <function-ref name="findBest" scoped="" ref="0x7d4f3c60"/>
        <function-ref name="maxSize" scoped="" ref="0x7d4f3d40"/>
        <function-ref name="insert" scoped="" ref="0x7d4f3e20"/>
        <function-ref name="moveUp" scoped="" ref="0x7d4f3f00"/>
        <function-ref name="move" scoped="" ref="0x7d4f0010"/>
        <function-ref name="inserted" scoped="" ref="0x7d4f00f0"/>
        <function-ref name="moveDown" scoped="" ref="0x7d4f01d0"/>
        <function-ref name="empty" scoped="" ref="0x7d4f02b0"/>
        <function-ref name="removeBest" scoped="" ref="0x7d4f0390"/>
        <function-ref name="size" scoped="" ref="0x7d4f0470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7d4f0660" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7d4f0660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7dbdd650"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d4f0c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d4e25c8" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d4e25c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d4e27a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PriorityQueue" ref="0x7d4e28e0" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PriorityQueue" scoped="" ref="0x7d4e28e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PriorityQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d4e2ab8"/>
        <function-ref name="findBest" scoped="" ref="0x7d4e2b98"/>
        <function-ref name="maxSize" scoped="" ref="0x7d4e2c78"/>
        <function-ref name="insert" scoped="" ref="0x7d4e2d58"/>
        <function-ref name="moveUp" scoped="" ref="0x7d4e2e38"/>
        <function-ref name="move" scoped="" ref="0x7d4e2f18"/>
        <function-ref name="inserted" scoped="" ref="0x7d4e1010"/>
        <function-ref name="moveDown" scoped="" ref="0x7d4e10f0"/>
        <function-ref name="empty" scoped="" ref="0x7d4e11d0"/>
        <function-ref name="removeBest" scoped="" ref="0x7d4e12b0"/>
        <function-ref name="size" scoped="" ref="0x7d4e1390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7d4e1580" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7d4e1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7dbdd650"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d4e1ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeList" ref="0x7d4e9cc0" loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7d4e9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d4e8578"/>
        <function-ref name="next" scoped="" ref="0x7d4e82f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="buildTreeTask" ref="0x7d4e87f0" loc="84:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="buildTreeTask" scoped="" ref="0x7d4e87f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d4e89c8"/>
        <function-ref name="runTask" scoped="" ref="0x7d4e8aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Graph" ref="0x7d4eca70" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7d4eca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7d4ecc48"/>
        <function-ref name="removed" scoped="" ref="0x7d4ecd28"/>
        <function-ref name="remove" scoped="" ref="0x7d4ece08"/>
        <function-ref name="edge" scoped="" ref="0x7d4ecee8"/>
        <function-ref name="directed" scoped="" ref="0x7d4eb010"/>
        <function-ref name="vertices" scoped="" ref="0x7d4eb0f0"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7d4eb1d0"/>
        <function-ref name="maxVertices" scoped="" ref="0x7d4eb2b0"/>
        <function-ref name="insert" scoped="" ref="0x7d4eb390"/>
        <function-ref name="inserted" scoped="" ref="0x7d4eb470"/>
        <function-ref name="edgeList" scoped="" ref="0x7d4eb550"/>
        <function-ref name="edges" scoped="" ref="0x7d4eb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PathEdgeList" ref="0x7d4ee948" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PathEdgeList" scoped="" ref="0x7d4ee948"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d4ed290"/>
        <function-ref name="next" scoped="" ref="0x7d4ed010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d4efd08" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d4efd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d4efee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SourceShortestPath" ref="0x7d4ee040" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceShortestPath" scoped="" ref="0x7d4ee040"/></type-interface>
      <instance>
        <interfacedef-ref qname="SourceShortestPath"/>
      </instance>
      <interface-functions>
        <function-ref name="rebuildNeeded" scoped="" ref="0x7d4ee218"/>
        <function-ref name="buildTree" scoped="" ref="0x7d4ee2f8"/>
        <function-ref name="builtTree" scoped="" ref="0x7d4ee3d8"/>
        <function-ref name="buildingTree" scoped="" ref="0x7d4ee4b8"/>
        <function-ref name="edgeCount" scoped="" ref="0x7d4ee598"/>
        <function-ref name="buildTreeTo" scoped="" ref="0x7d4ee678"/>
        <function-ref name="builtTreeTo" scoped="" ref="0x7d4ee758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdge" ref="0x7d4eb770" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7d4eb770"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7d4eb948"/>
        <function-ref name="dest" scoped="" ref="0x7d4eba28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PriorityQueue" ref="0x7d4ede88" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PriorityQueue" scoped="" ref="0x7d4ede88"/></type-interface>
      <instance>
        <interfacedef-ref qname="PriorityQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d4ec070"/>
        <function-ref name="findBest" scoped="" ref="0x7d4ec150"/>
        <function-ref name="maxSize" scoped="" ref="0x7d4ec230"/>
        <function-ref name="insert" scoped="" ref="0x7d4ec310"/>
        <function-ref name="moveUp" scoped="" ref="0x7d4ec3f0"/>
        <function-ref name="move" scoped="" ref="0x7d4ec4d0"/>
        <function-ref name="inserted" scoped="" ref="0x7d4ec5b0"/>
        <function-ref name="moveDown" scoped="" ref="0x7d4ec690"/>
        <function-ref name="empty" scoped="" ref="0x7d4ec770"/>
        <function-ref name="removeBest" scoped="" ref="0x7d4ec850"/>
        <function-ref name="size" scoped="" ref="0x7d4ec930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7d4ed558" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7d4ed558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d4edb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeWeight" ref="0x7d4ebbf8" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d4ebbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7dcce110"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="canChangeWeights" scoped="" ref="0x7d4e9258"/>
        <function-ref name="weightChanged" scoped="" ref="0x7d4e99d8"/>
        <function-ref name="setWeight" scoped="" ref="0x7d4e96b8"/>
        <function-ref name="weight" scoped="" ref="0x7d4e9438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d54bd60" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.NeedRouteToC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d54bd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d54a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7d54a170" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.NeedRouteToC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7d54a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7d54a348"/>
        <function-ref name="clear" scoped="" ref="0x7d54a428"/>
        <function-ref name="toggle" scoped="" ref="0x7d54a508"/>
        <function-ref name="get" scoped="" ref="0x7d54a5e8"/>
        <function-ref name="assign" scoped="" ref="0x7d54a6c8"/>
        <function-ref name="setAll" scoped="" ref="0x7d54a7a8"/>
        <function-ref name="set" scoped="" ref="0x7d54a888"/>
        <function-ref name="size" scoped="" ref="0x7d54a968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d5495f0" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.InitialCheckC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d5495f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d5497c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7d549928" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.InitialCheckC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7d549928"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7d549b00"/>
        <function-ref name="clear" scoped="" ref="0x7d549be0"/>
        <function-ref name="toggle" scoped="" ref="0x7d549cc0"/>
        <function-ref name="get" scoped="" ref="0x7d549da0"/>
        <function-ref name="assign" scoped="" ref="0x7d549e80"/>
        <function-ref name="setAll" scoped="" ref="0x7d547010"/>
        <function-ref name="set" scoped="" ref="0x7d5470f0"/>
        <function-ref name="size" scoped="" ref="0x7d5471d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdgeWeight" ref="0x7db3f3b8" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeUnitWeightC.nc">
      <component-ref qname="GraphEdgeUnitWeightC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7db3f3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7dcce110"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="canChangeWeights" scoped="" ref="0x7db3f9e0"/>
        <function-ref name="weightChanged" scoped="" ref="0x7db3d170"/>
        <function-ref name="setWeight" scoped="" ref="0x7db3fe40"/>
        <function-ref name="weight" scoped="" ref="0x7db3fbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7db340e0" loc="32:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7db340e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7dec7e20"/>
              <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7dec51b0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7db34708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7db35010" loc="31:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7db35010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7dec7e20"/>
            <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7dec51b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7db35bb8"/>
        <function-ref name="insert" scoped="" ref="0x7db35638"/>
        <function-ref name="flush" scoped="" ref="0x7db35e58"/>
        <function-ref name="lookup" scoped="" ref="0x7db358f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d499f00" loc="69:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d499f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d4970f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7d496398" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7d496398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7dec7e20"/>
              <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7dec51b0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d4969c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7d4972c0" loc="70:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7d4972c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7dec7e20"/>
            <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7dec51b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7d497e68"/>
        <function-ref name="insert" scoped="" ref="0x7d4978e8"/>
        <function-ref name="flush" scoped="" ref="0x7d496130"/>
        <function-ref name="lookup" scoped="" ref="0x7d497ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7db098f8" loc="32:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7db098f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7dec7578"/>
              <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7dec78b8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7db09f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7db0a830" loc="31:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7db0a830"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7dec7578"/>
            <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7dec78b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7db093f0"/>
        <function-ref name="insert" scoped="" ref="0x7db0ae58"/>
        <function-ref name="flush" scoped="" ref="0x7db09690"/>
        <function-ref name="lookup" scoped="" ref="0x7db09130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d486760" loc="69:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d486760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d486938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7d485c68" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7d485c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7dec7578"/>
              <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7dec78b8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d4832c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7d486b08" loc="70:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7d486b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7dec7578"/>
            <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7dec78b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7d485760"/>
        <function-ref name="insert" scoped="" ref="0x7d4851e0"/>
        <function-ref name="flush" scoped="" ref="0x7d485a00"/>
        <function-ref name="lookup" scoped="" ref="0x7d4854a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataTimer" ref="0x7db042f0" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerC.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataTimer" scoped="" ref="0x7db042f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataTimer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="expired" scoped="" ref="0x7db04eb8"/>
        <function-ref name="start" scoped="" ref="0x7db04918"/>
        <function-ref name="stop" scoped="" ref="0x7db04c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d46bd40" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d46bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d468650"/>
        <function-ref name="fired" scoped="" ref="0x7d46aa60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d468010"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d46ae20"/>
        <function-ref name="getdt" scoped="" ref="0x7d468a10"/>
        <function-ref name="gett0" scoped="" ref="0x7d468830"/>
        <function-ref name="isRunning" scoped="" ref="0x7d46ac40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d46a380"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d468330"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d46a600"/>
        <function-ref name="stop" scoped="" ref="0x7d46a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataTimer" ref="0x7d467b70" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC.DataTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataTimer" scoped="" ref="0x7d467b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataTimer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="expired" scoped="" ref="0x7d466780"/>
        <function-ref name="start" scoped="" ref="0x7d4661e0"/>
        <function-ref name="stop" scoped="" ref="0x7d466500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d4677c8" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC.DataTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d4677c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d4679a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7d466a78" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC.DataTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d466a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d463388"/>
        <function-ref name="fired" scoped="" ref="0x7d465798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d465d38"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d465b58"/>
        <function-ref name="getdt" scoped="" ref="0x7d463748"/>
        <function-ref name="gett0" scoped="" ref="0x7d463568"/>
        <function-ref name="isRunning" scoped="" ref="0x7d465978"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d4650b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d463068"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d465338"/>
        <function-ref name="stop" scoped="" ref="0x7d4655b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dadac10" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.ComposeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dadac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dadade8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7dad9010" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.ComposeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7dad9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7dad91e8"/>
        <function-ref name="clear" scoped="" ref="0x7dad92c8"/>
        <function-ref name="toggle" scoped="" ref="0x7dad93a8"/>
        <function-ref name="get" scoped="" ref="0x7dad9488"/>
        <function-ref name="assign" scoped="" ref="0x7dad9568"/>
        <function-ref name="setAll" scoped="" ref="0x7dad9648"/>
        <function-ref name="set" scoped="" ref="0x7dad9728"/>
        <function-ref name="size" scoped="" ref="0x7dad9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7dad73c8" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="DsrP.SendStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7dad73c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7dad75a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7dad7680"/>
        <function-ref name="isState" scoped="" ref="0x7dad7760"/>
        <function-ref name="isIdle" scoped="" ref="0x7dad7840"/>
        <function-ref name="requestState" scoped="" ref="0x7dad7920"/>
        <function-ref name="forceState" scoped="" ref="0x7dad7a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7dac7970" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7dac7970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dac7b48"/>
        <function-ref name="payloadLength" scoped="" ref="0x7dac7c28"/>
        <function-ref name="getPayload" scoped="" ref="0x7dac7d08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dac7de8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7dac7ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SubPacket" ref="0x7da69080" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7da69080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7da69258"/>
        <function-ref name="payloadLength" scoped="" ref="0x7da69338"/>
        <function-ref name="getPayload" scoped="" ref="0x7da69418"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da694f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7da695d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d440010" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d440010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d4401e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d4402c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d4403a8"/>
        <function-ref name="cancel" scoped="" ref="0x7d440488"/>
        <function-ref name="sendDone" scoped="" ref="0x7d440568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d4406a8" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d4406a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d440880"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d440960"/>
        <function-ref name="getPayload" scoped="" ref="0x7d440a40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d440b20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d440c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d440d40" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d440d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d440f18"/>
        <function-ref name="source" scoped="" ref="0x7d43f010"/>
        <function-ref name="address" scoped="" ref="0x7d43f0f0"/>
        <function-ref name="destination" scoped="" ref="0x7d43f1d0"/>
        <function-ref name="setSource" scoped="" ref="0x7d43f2b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7d43f390"/>
        <function-ref name="type" scoped="" ref="0x7d43f470"/>
        <function-ref name="setType" scoped="" ref="0x7d43f550"/>
        <function-ref name="isForMe" scoped="" ref="0x7d43f630"/>
        <function-ref name="setGroup" scoped="" ref="0x7d43f710"/>
        <function-ref name="localGroup" scoped="" ref="0x7d43f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7d43f950" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7d43f950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7d43fb28"/>
        <function-ref name="noAck" scoped="" ref="0x7d43fc08"/>
        <function-ref name="wasAcked" scoped="" ref="0x7d43fce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d4365f8" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d4365f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d4367d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d4368b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d436990"/>
        <function-ref name="cancel" scoped="" ref="0x7d436a70"/>
        <function-ref name="sendDone" scoped="" ref="0x7d436b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7d436cc0" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d436cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d436e98"/>
        <function-ref name="getPayload" scoped="" ref="0x7d435010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d4350f0"/>
        <function-ref name="cancel" scoped="" ref="0x7d4351d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d4352b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7d4353f0" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d4353f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d4355c8"/>
        <function-ref name="source" scoped="" ref="0x7d4356a8"/>
        <function-ref name="address" scoped="" ref="0x7d435788"/>
        <function-ref name="destination" scoped="" ref="0x7d435868"/>
        <function-ref name="setSource" scoped="" ref="0x7d435948"/>
        <function-ref name="setDestination" scoped="" ref="0x7d435a28"/>
        <function-ref name="type" scoped="" ref="0x7d435b08"/>
        <function-ref name="setType" scoped="" ref="0x7d435be8"/>
        <function-ref name="isForMe" scoped="" ref="0x7d435cc8"/>
        <function-ref name="setGroup" scoped="" ref="0x7d435da8"/>
        <function-ref name="localGroup" scoped="" ref="0x7d435e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7daa9968" loc="35:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7daa9968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7daa9b40"/>
        <function-ref name="getPayload" scoped="" ref="0x7daa9c20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7daa9d00"/>
        <function-ref name="cancel" scoped="" ref="0x7daa9de0"/>
        <function-ref name="sendDone" scoped="" ref="0x7daa9ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7da7eb28" loc="40:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7da7eb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7da7ed10"/>
        <function-ref name="getPayload" scoped="" ref="0x7da7edf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da7eed0"/>
        <function-ref name="cancel" scoped="" ref="0x7da7d010"/>
        <function-ref name="sendDone" scoped="" ref="0x7da7d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7da7e3b8" loc="38:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7da7e3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7da7e5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7da7e680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da7e760"/>
        <function-ref name="cancel" scoped="" ref="0x7da7e840"/>
        <function-ref name="sendDone" scoped="" ref="0x7da7e920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7da7de08" loc="42:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7da7de08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7da7c010"/>
        <function-ref name="payloadLength" scoped="" ref="0x7da7c0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7da7c1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da7c2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7da7c390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7da7c510" loc="161:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7da7c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7da7c6e8"/>
        <function-ref name="runTask" scoped="" ref="0x7da7c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7da7c948" loc="118:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7da7c948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7da7cb20"/>
        <function-ref name="runTask" scoped="" ref="0x7da7cc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7da7d230" loc="41:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7da7d230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7da7d408"/>
        <function-ref name="source" scoped="" ref="0x7da7d4e8"/>
        <function-ref name="address" scoped="" ref="0x7da7d5c8"/>
        <function-ref name="destination" scoped="" ref="0x7da7d6a8"/>
        <function-ref name="setSource" scoped="" ref="0x7da7d788"/>
        <function-ref name="setDestination" scoped="" ref="0x7da7d868"/>
        <function-ref name="type" scoped="" ref="0x7da7d948"/>
        <function-ref name="setType" scoped="" ref="0x7da7da28"/>
        <function-ref name="isForMe" scoped="" ref="0x7da7db08"/>
        <function-ref name="setGroup" scoped="" ref="0x7da7dbe8"/>
        <function-ref name="localGroup" scoped="" ref="0x7da7dcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d43d310" loc="39:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d43d310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d43d4e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d43d5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d43d6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d43d788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d43d868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d43ed98" loc="38:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d43ed98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d43d010"/>
        <function-ref name="receive" scoped="" ref="0x7d43d0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d43d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d43d9a8" loc="40:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d43d9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d43db80"/>
        <function-ref name="source" scoped="" ref="0x7d43dc60"/>
        <function-ref name="address" scoped="" ref="0x7d43dd40"/>
        <function-ref name="destination" scoped="" ref="0x7d43de20"/>
        <function-ref name="setSource" scoped="" ref="0x7d43df00"/>
        <function-ref name="setDestination" scoped="" ref="0x7d43c010"/>
        <function-ref name="type" scoped="" ref="0x7d43c0f0"/>
        <function-ref name="setType" scoped="" ref="0x7d43c1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d43c2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7d43c390"/>
        <function-ref name="localGroup" scoped="" ref="0x7d43c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketWaitList" ref="0x7da65980" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
      <component-ref qname="DsrC.SinglePacketProcessorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketWaitList" scoped="" ref="0x7da65980"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7da60290"/>
        <function-ref name="next" scoped="" ref="0x7da60010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngine" ref="0x7da66a50" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
      <component-ref qname="DsrC.SinglePacketProcessorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngine" scoped="" ref="0x7da66a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7da66c28"/>
        <function-ref name="send" scoped="" ref="0x7da66d08"/>
        <function-ref name="receive" scoped="" ref="0x7da66de8"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7da66ec8"/>
        <function-ref name="sendAdded" scoped="" ref="0x7da65010"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7da650f0"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7da651d0"/>
        <function-ref name="packet" scoped="" ref="0x7da652b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7da65390"/>
        <function-ref name="drop" scoped="" ref="0x7da65470"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7da65550"/>
        <function-ref name="waitList" scoped="" ref="0x7da65630"/>
        <function-ref name="setUpperType" scoped="" ref="0x7da65710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketWaitList" ref="0x7da5e1a0" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
      <component-ref qname="DsrC.DsrPacketProcessorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketWaitList" scoped="" ref="0x7da5e1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7da5ea48"/>
        <function-ref name="next" scoped="" ref="0x7da5e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngine" ref="0x7da5f288" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
      <component-ref qname="DsrC.DsrPacketProcessorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngine" scoped="" ref="0x7da5f288"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7da5f460"/>
        <function-ref name="send" scoped="" ref="0x7da5f540"/>
        <function-ref name="receive" scoped="" ref="0x7da5f620"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7da5f700"/>
        <function-ref name="sendAdded" scoped="" ref="0x7da5f7e0"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7da5f8c0"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7da5f9a0"/>
        <function-ref name="packet" scoped="" ref="0x7da5fa80"/>
        <function-ref name="sendDone" scoped="" ref="0x7da5fb60"/>
        <function-ref name="drop" scoped="" ref="0x7da5fc40"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7da5fd20"/>
        <function-ref name="waitList" scoped="" ref="0x7da5fe00"/>
        <function-ref name="setUpperType" scoped="" ref="0x7da5fee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7da55548" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7da55548"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eb042c8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7da55720"/>
        <function-ref name="getPayload" scoped="" ref="0x7da55800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da558e0"/>
        <function-ref name="cancel" scoped="" ref="0x7da559c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7da55aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7da59b48" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7da59b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7da59d20"/>
        <function-ref name="destination" scoped="" ref="0x7da59e00"/>
        <function-ref name="setSource" scoped="" ref="0x7da59ee0"/>
        <function-ref name="setDestination" scoped="" ref="0x7da58010"/>
        <function-ref name="isForMe" scoped="" ref="0x7da580f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7da55ea8" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7da55ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7da540c0"/>
        <function-ref name="receive" scoped="" ref="0x7da541a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7da54280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7da57af0" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7da57af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7da57cc8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7da57da8"/>
        <function-ref name="getPayload" scoped="" ref="0x7da57e88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da55010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7da550f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7da58508" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7da58508"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eb042c8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7da586e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7da587c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da588a0"/>
        <function-ref name="cancel" scoped="" ref="0x7da58980"/>
        <function-ref name="sendDone" scoped="" ref="0x7da58a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7da57610" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7da57610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7da577e8"/>
        <function-ref name="receive" scoped="" ref="0x7da578c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7da579a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7da58e38" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7da58e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7da57050"/>
        <function-ref name="receive" scoped="" ref="0x7da57130"/>
        <function-ref name="getPayload" scoped="" ref="0x7da57210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7da49be8" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7da49be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eb042c8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7da49dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7da49ea0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da48010"/>
        <function-ref name="cancel" scoped="" ref="0x7da480f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7da481d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7da4b240" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7da4b240"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7da4b418"/>
        <function-ref name="destination" scoped="" ref="0x7da4b4f8"/>
        <function-ref name="setSource" scoped="" ref="0x7da4b5d8"/>
        <function-ref name="setDestination" scoped="" ref="0x7da4b6b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7da4b798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7da485d8" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7da485d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7da487b0"/>
        <function-ref name="receive" scoped="" ref="0x7da48890"/>
        <function-ref name="getPayload" scoped="" ref="0x7da48970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7da49238" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7da49238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7da49410"/>
        <function-ref name="payloadLength" scoped="" ref="0x7da494f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7da495d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da496b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7da49790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7da4bbb0" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7da4bbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eb042c8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7da4bd88"/>
        <function-ref name="getPayload" scoped="" ref="0x7da4be68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da4a010"/>
        <function-ref name="cancel" scoped="" ref="0x7da4a0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7da4a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7da4ad40" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7da4ad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7da4af18"/>
        <function-ref name="receive" scoped="" ref="0x7da49010"/>
        <function-ref name="getPayload" scoped="" ref="0x7da490f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7da48ae8" loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7da48ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7da48cc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7da48da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7da48e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da46010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7da460f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7da4a5a8" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7da4a5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7da4a780"/>
        <function-ref name="receive" scoped="" ref="0x7da4a860"/>
        <function-ref name="getPayload" scoped="" ref="0x7da4a940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7da46240" loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7da46240"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7da46418"/>
        <function-ref name="source" scoped="" ref="0x7da464f8"/>
        <function-ref name="address" scoped="" ref="0x7da465d8"/>
        <function-ref name="destination" scoped="" ref="0x7da466b8"/>
        <function-ref name="setSource" scoped="" ref="0x7da46798"/>
        <function-ref name="setDestination" scoped="" ref="0x7da46878"/>
        <function-ref name="type" scoped="" ref="0x7da46958"/>
        <function-ref name="setType" scoped="" ref="0x7da46a38"/>
        <function-ref name="isForMe" scoped="" ref="0x7da46b18"/>
        <function-ref name="setGroup" scoped="" ref="0x7da46bf8"/>
        <function-ref name="localGroup" scoped="" ref="0x7da46cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7da12e28" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleProcessorSenderC.nc">
      <component-ref qname="DsrC.SingleProcessorSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7da12e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d9fb050"/>
        <function-ref name="destination" scoped="" ref="0x7d9fb130"/>
        <function-ref name="setSource" scoped="" ref="0x7d9fb210"/>
        <function-ref name="setDestination" scoped="" ref="0x7d9fb2f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d9fb3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d9fa150" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleProcessorSenderC.nc">
      <component-ref qname="DsrC.SingleProcessorSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d9fa150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d9fa328"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d9fa408"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9fa4e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9fa5c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d9fa6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7da12790" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleProcessorSenderC.nc">
      <component-ref qname="DsrC.SingleProcessorSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7da12790"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7da12968"/>
        <function-ref name="getPayload" scoped="" ref="0x7da12a48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da12b28"/>
        <function-ref name="cancel" scoped="" ref="0x7da12c08"/>
        <function-ref name="sendDone" scoped="" ref="0x7da12ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d9fb510" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleProcessorSenderC.nc">
      <component-ref qname="DsrC.SingleProcessorSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d9fb510"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d9fb6e8"/>
        <function-ref name="source" scoped="" ref="0x7d9fb7c8"/>
        <function-ref name="address" scoped="" ref="0x7d9fb8a8"/>
        <function-ref name="destination" scoped="" ref="0x7d9fb988"/>
        <function-ref name="setSource" scoped="" ref="0x7d9fba68"/>
        <function-ref name="setDestination" scoped="" ref="0x7d9fbb48"/>
        <function-ref name="type" scoped="" ref="0x7d9fbc28"/>
        <function-ref name="setType" scoped="" ref="0x7d9fbd08"/>
        <function-ref name="isForMe" scoped="" ref="0x7d9fbde8"/>
        <function-ref name="setGroup" scoped="" ref="0x7d9fbec8"/>
        <function-ref name="localGroup" scoped="" ref="0x7d9fa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d3f66e8" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="DsrC.SingleProcessorSenderC.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d3f66e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d3f68c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d3f69a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d3f6a80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d3f6b60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d3f6c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d3f6050" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="DsrC.SingleProcessorSenderC.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d3f6050"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d3f6228"/>
        <function-ref name="getPayload" scoped="" ref="0x7d3f6308"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d3f63e8"/>
        <function-ref name="cancel" scoped="" ref="0x7d3f64c8"/>
        <function-ref name="sendDone" scoped="" ref="0x7d3f65a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngineClient" ref="0x7d3f11f0" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <component-ref qname="DsrC.SingleProcessorSenderC.PacketSenderC.PacketEngineClientP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngineClient" scoped="" ref="0x7d3f11f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngineClient"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7d3f13c8"/>
        <function-ref name="defaultLowerType" scoped="" ref="0x7d3f14a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7d9f5880" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d9f5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d9f5a58"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d9f5b38"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9f5c18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9f5cf8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d9f5dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SubPacket" ref="0x7d9f4010" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7d9f4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d9f41e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d9f42c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9f43a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9f4488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d9f4568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d3e4990" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d3e4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d3e4b68"/>
        <function-ref name="getPayload" scoped="" ref="0x7d3e4c48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d3e4d28"/>
        <function-ref name="cancel" scoped="" ref="0x7d3e4e08"/>
        <function-ref name="sendDone" scoped="" ref="0x7d3e4ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d3e2040" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d3e2040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d3e2218"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d3e22f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d3e23d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d3e24b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d3e2598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d3e26d8" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d3e26d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d3e28b0"/>
        <function-ref name="source" scoped="" ref="0x7d3e2990"/>
        <function-ref name="address" scoped="" ref="0x7d3e2a70"/>
        <function-ref name="destination" scoped="" ref="0x7d3e2b50"/>
        <function-ref name="setSource" scoped="" ref="0x7d3e2c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7d3e2d10"/>
        <function-ref name="type" scoped="" ref="0x7d3e2df0"/>
        <function-ref name="setType" scoped="" ref="0x7d3e2ed0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d3e1010"/>
        <function-ref name="setGroup" scoped="" ref="0x7d3e10f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7d3e11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7d3e1330" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7d3e1330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7d3e1508"/>
        <function-ref name="noAck" scoped="" ref="0x7d3e15e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7d3e16c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d3dcd48" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d3dcd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d3dcf20"/>
        <function-ref name="getPayload" scoped="" ref="0x7d3d8018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d3d80f8"/>
        <function-ref name="cancel" scoped="" ref="0x7d3d81d8"/>
        <function-ref name="sendDone" scoped="" ref="0x7d3d82b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7d3d8428" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d3d8428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d3d8600"/>
        <function-ref name="getPayload" scoped="" ref="0x7d3d86e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d3d87c0"/>
        <function-ref name="cancel" scoped="" ref="0x7d3d88a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d3d8980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7d3d8ac0" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d3d8ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d3d8c98"/>
        <function-ref name="source" scoped="" ref="0x7d3d8d78"/>
        <function-ref name="address" scoped="" ref="0x7d3d8e58"/>
        <function-ref name="destination" scoped="" ref="0x7d3d7010"/>
        <function-ref name="setSource" scoped="" ref="0x7d3d70f0"/>
        <function-ref name="setDestination" scoped="" ref="0x7d3d71d0"/>
        <function-ref name="type" scoped="" ref="0x7d3d72b0"/>
        <function-ref name="setType" scoped="" ref="0x7d3d7390"/>
        <function-ref name="isForMe" scoped="" ref="0x7d3d7470"/>
        <function-ref name="setGroup" scoped="" ref="0x7d3d7550"/>
        <function-ref name="localGroup" scoped="" ref="0x7d3d7630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d3e0ba8" loc="39:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d3e0ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d3e0d80"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d3e0e60"/>
        <function-ref name="getPayload" scoped="" ref="0x7d3df010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d3df0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d3df1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d3e06d0" loc="38:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d3e06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d3e08a8"/>
        <function-ref name="receive" scoped="" ref="0x7d3e0988"/>
        <function-ref name="getPayload" scoped="" ref="0x7d3e0a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d3df310" loc="40:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d3df310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d3df4e8"/>
        <function-ref name="source" scoped="" ref="0x7d3df5c8"/>
        <function-ref name="address" scoped="" ref="0x7d3df6a8"/>
        <function-ref name="destination" scoped="" ref="0x7d3df788"/>
        <function-ref name="setSource" scoped="" ref="0x7d3df868"/>
        <function-ref name="setDestination" scoped="" ref="0x7d3df948"/>
        <function-ref name="type" scoped="" ref="0x7d3dfa28"/>
        <function-ref name="setType" scoped="" ref="0x7d3dfb08"/>
        <function-ref name="isForMe" scoped="" ref="0x7d3dfbe8"/>
        <function-ref name="setGroup" scoped="" ref="0x7d3dfcc8"/>
        <function-ref name="localGroup" scoped="" ref="0x7d3dfda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d63c6a8" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="TestDsrAppC.SendA1C.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d63c6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d63c880"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d63c960"/>
        <function-ref name="getPayload" scoped="" ref="0x7d63ca40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d63cb20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d63cc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d63c010" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="TestDsrAppC.SendA1C.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d63c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d63c1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d63c2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d63c3a8"/>
        <function-ref name="cancel" scoped="" ref="0x7d63c488"/>
        <function-ref name="sendDone" scoped="" ref="0x7d63c568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngineClient" ref="0x7d3cac88" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <component-ref qname="TestDsrAppC.SendA1C.PacketSenderC.PacketEngineClientP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngineClient" scoped="" ref="0x7d3cac88"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngineClient"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7d3cae60"/>
        <function-ref name="defaultLowerType" scoped="" ref="0x7d3c7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7d9ec8b8" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="TestDsrAppC.SendA2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7d9ec8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d9eca90"/>
        <function-ref name="destination" scoped="" ref="0x7d9ecb70"/>
        <function-ref name="setSource" scoped="" ref="0x7d9ecc50"/>
        <function-ref name="setDestination" scoped="" ref="0x7d9ecd30"/>
        <function-ref name="isForMe" scoped="" ref="0x7d9ece10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d9eabe8" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="TestDsrAppC.SendA2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d9eabe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d9eadc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d9eaea0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9e9010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9e90f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d9e91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d9ec220" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="TestDsrAppC.SendA2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d9ec220"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d9ec3f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9ec4d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9ec5b8"/>
        <function-ref name="cancel" scoped="" ref="0x7d9ec698"/>
        <function-ref name="sendDone" scoped="" ref="0x7d9ec778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d9ea010" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="TestDsrAppC.SendA2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d9ea010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d9ea1e8"/>
        <function-ref name="source" scoped="" ref="0x7d9ea2c8"/>
        <function-ref name="address" scoped="" ref="0x7d9ea3a8"/>
        <function-ref name="destination" scoped="" ref="0x7d9ea488"/>
        <function-ref name="setSource" scoped="" ref="0x7d9ea568"/>
        <function-ref name="setDestination" scoped="" ref="0x7d9ea648"/>
        <function-ref name="type" scoped="" ref="0x7d9ea728"/>
        <function-ref name="setType" scoped="" ref="0x7d9ea808"/>
        <function-ref name="isForMe" scoped="" ref="0x7d9ea8e8"/>
        <function-ref name="setGroup" scoped="" ref="0x7d9ea9c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7d9eaaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d3c14d0" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="TestDsrAppC.SendA2C.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d3c14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d3c16a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d3c1788"/>
        <function-ref name="getPayload" scoped="" ref="0x7d3c1868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d3c1948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d3c1a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d3c3dc8" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="TestDsrAppC.SendA2C.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d3c3dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d3c1010"/>
        <function-ref name="getPayload" scoped="" ref="0x7d3c10f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d3c11d0"/>
        <function-ref name="cancel" scoped="" ref="0x7d3c12b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d3c1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngineClient" ref="0x7d3b2268" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <component-ref qname="TestDsrAppC.SendA2C.PacketSenderC.PacketEngineClientP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngineClient" scoped="" ref="0x7d3b2268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngineClient"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7d3b2440"/>
        <function-ref name="defaultLowerType" scoped="" ref="0x7d3b2520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7d9e8a78" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="TestDsrAppC.SendA3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7d9e8a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d9e8c50"/>
        <function-ref name="destination" scoped="" ref="0x7d9e8d30"/>
        <function-ref name="setSource" scoped="" ref="0x7d9e8e10"/>
        <function-ref name="setDestination" scoped="" ref="0x7d9e8ef0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d9e7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d9e7d28" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="TestDsrAppC.SendA3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d9e7d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d9e7f00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d9e6010"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9e60f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9e61d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d9e62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d9e83e0" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="TestDsrAppC.SendA3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d9e83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d9e85b8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9e8698"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9e8778"/>
        <function-ref name="cancel" scoped="" ref="0x7d9e8858"/>
        <function-ref name="sendDone" scoped="" ref="0x7d9e8938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d9e7150" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="TestDsrAppC.SendA3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d9e7150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d9e7328"/>
        <function-ref name="source" scoped="" ref="0x7d9e7408"/>
        <function-ref name="address" scoped="" ref="0x7d9e74e8"/>
        <function-ref name="destination" scoped="" ref="0x7d9e75c8"/>
        <function-ref name="setSource" scoped="" ref="0x7d9e76a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7d9e7788"/>
        <function-ref name="type" scoped="" ref="0x7d9e7868"/>
        <function-ref name="setType" scoped="" ref="0x7d9e7948"/>
        <function-ref name="isForMe" scoped="" ref="0x7d9e7a28"/>
        <function-ref name="setGroup" scoped="" ref="0x7d9e7b08"/>
        <function-ref name="localGroup" scoped="" ref="0x7d9e7be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d3ac950" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="TestDsrAppC.SendA3C.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d3ac950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d3acb28"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d3acc08"/>
        <function-ref name="getPayload" scoped="" ref="0x7d3acce8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d3acdc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d3acea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d3ac2b8" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="TestDsrAppC.SendA3C.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d3ac2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d3ac490"/>
        <function-ref name="getPayload" scoped="" ref="0x7d3ac570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d3ac650"/>
        <function-ref name="cancel" scoped="" ref="0x7d3ac730"/>
        <function-ref name="sendDone" scoped="" ref="0x7d3ac810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngineClient" ref="0x7d3a6548" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <component-ref qname="TestDsrAppC.SendA3C.PacketSenderC.PacketEngineClientP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngineClient" scoped="" ref="0x7d3a6548"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngineClient"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7d3a6720"/>
        <function-ref name="defaultLowerType" scoped="" ref="0x7d3a6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7d9e2dd0" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="TestDsrAppC.ReceiveAC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7d9e2dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d9d7010"/>
        <function-ref name="destination" scoped="" ref="0x7d9d70f0"/>
        <function-ref name="setSource" scoped="" ref="0x7d9d71d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7d9d72b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d9d7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d9d6150" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="TestDsrAppC.ReceiveAC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d9d6150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d9d6328"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d9d6408"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9d64e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9d65c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d9d66a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d9e28f8" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="TestDsrAppC.ReceiveAC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d9e28f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d9e2ad0"/>
        <function-ref name="receive" scoped="" ref="0x7d9e2bb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9e2c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d9d74d0" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="TestDsrAppC.ReceiveAC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d9d74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d9d76a8"/>
        <function-ref name="source" scoped="" ref="0x7d9d7788"/>
        <function-ref name="address" scoped="" ref="0x7d9d7868"/>
        <function-ref name="destination" scoped="" ref="0x7d9d7948"/>
        <function-ref name="setSource" scoped="" ref="0x7d9d7a28"/>
        <function-ref name="setDestination" scoped="" ref="0x7d9d7b08"/>
        <function-ref name="type" scoped="" ref="0x7d9d7be8"/>
        <function-ref name="setType" scoped="" ref="0x7d9d7cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x7d9d7da8"/>
        <function-ref name="setGroup" scoped="" ref="0x7d9d7e88"/>
        <function-ref name="localGroup" scoped="" ref="0x7d9d6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d3a0310" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
      <component-ref qname="TestDsrAppC.ReceiveAC.PacketReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d3a0310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d3a04e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d3a05c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d3a06a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d3a0788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d3a0868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d3a4e20" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
      <component-ref qname="TestDsrAppC.ReceiveAC.PacketReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d3a4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d3a0010"/>
        <function-ref name="receive" scoped="" ref="0x7d3a00f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d3a01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d9d5688" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="TestDsrAppC.TimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d9d5688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d9d2068"/>
        <function-ref name="fired" scoped="" ref="0x7d9d4470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d9d4a10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d9d4830"/>
        <function-ref name="getdt" scoped="" ref="0x7d9d2428"/>
        <function-ref name="gett0" scoped="" ref="0x7d9d2248"/>
        <function-ref name="isRunning" scoped="" ref="0x7d9d4650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d9d5cb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d9d4d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d9d4010"/>
        <function-ref name="stop" scoped="" ref="0x7d9d4290"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7ef90ed8" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10;</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7ef927b8" loc="49:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7ef637c8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7ef63570" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7ef70238" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.&#10;</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7ef70808" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10;</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7ef70590" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7ef70de0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10;</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7ef70b60" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7ef63208" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10;</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10;</short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7ef21ce0" loc="33:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7ef13010" loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7ef216b0" loc="31:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7ef13648" loc="36:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7ef219c8" loc="32:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7ef13328" loc="35:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7ef21090" loc="29:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clr" ref="0x7ef213a0" loc="30:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.&#10;&#10;</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f2322f0" loc="46:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f232ad8" loc="61:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f232708" loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10;</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f212638" loc="56:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f212a40" loc="64:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f052010" loc="59:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep. </short>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7efe3cc0" loc="54:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f160920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7eff2bc0" loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7ebf41d0" loc="92:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10;</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7ec00f08" loc="92:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7ebf4d30" loc="117:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.&#10;&#10;</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7ebf4ae0" loc="117:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7ec00be8" loc="83:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents. </short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ebf47c0" loc="109:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents. </short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7eb90ab8" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7eb90208" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7eb903b8" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eb90540" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7eb83560" loc="125:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; The length of this region is maxPayloadLength(). This command&#10; behaves similarly to &#60;tt>Packet.getPayload&#60;/tt> (minus the&#10; length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb83248" loc="125:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7eb85ee8" loc="112:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7eb852b0" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb90e00" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7eb85a98" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb855f8" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7eb85780" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7ebf15a8" loc="74:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ebf1a20" loc="84:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7eb53010" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet. </short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  msg    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb54d38" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7eb53680" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  msg    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb53360" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7eb52ca8" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet. </short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.  If&#10; len is not NULL, getPayload will return the length of the payload&#10; in it, which is the same as the return value from&#10; payloadLength(). If a protocol does not support variable length&#10; packets, then *len is equal to maxPayloadLength().&#10;&#10; @param msg   the packet&#10; @param len   pointer to where the current payload length should be stored.&#10; @return      a pointer to the packet's data payload for this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb52750" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eb528f8" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7eb52408" loc="95:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7eb53f00" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param msg   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb539d0" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eb53b58" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="payloadLength" ref="0x7eb74938" loc="89:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This call is identical&#10; to &#60;TT>Packet.payloadLength&#60;/TT>, and is included in Receive as a&#10; convenience.&#10;&#10; @param  msg      the packet&#10; @return          the length of the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb746b8" loc="89:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x7eb75a40" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  msg      the receied packet&#10; @param  payload  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return          a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
              <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb751b0" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7eb75350" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eb754d8" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7eb74368" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Return point to a protocol's payload region in a packet. </short>
          <long>&#10; Return point to a protocol's payload region in a packet.  If len&#10; is not NULL, getPayload will return the length of the payload in&#10; it. This call is identical to &#60;TT>Packet.getPayload&#60;/TT>, and is&#10; included in Receive as a convenience.&#10;&#10; @param  msg      the packet&#10; @param  len      a pointer to where to store the payload length&#10; @return          a pointer to the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb75d88" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eb74010" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7eb61210" loc="166:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param amsg the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7eba3580"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb63e80" loc="166:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7eb65410" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb65190" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7eb71808" loc="57:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.&#10;</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="destination" ref="0x7eb71df0" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb71b60" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7eb64600" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet. </short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb64010" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7eb641a0" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7eb65ca0" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet. </short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb65758" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7eb658e8" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7eb632f0" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.&#10;</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb630a8" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7eb63b30" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet. </short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  amsg    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb63630" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7eb637b8" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7eb64d30" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb64948" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7eb61980" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param amsg the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7eba3580"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb61558" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7eb616e8" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7eba3580"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7eb61d30" loc="184:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.&#10;&#10;</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7eba3580"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7eb44660" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7eb44660"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7eb405b8" loc="125:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7eb43950" loc="72:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7eb429a8" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7eb42418" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7eb425a8" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7eb420f0" loc="87:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.&#10;</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7eb40dd0" loc="140:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7eb409f8" loc="133:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7eb43d20" loc="81:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7eb44d18" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7eb44a70" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7eb40260" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7eb42cd0" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7eb42e60" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7eb43310" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7eb43068" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7eb43618" loc="67:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="PacketEngineClient" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClient.nc">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClient.nc">
        <short>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperType" ref="0x7eab1c08" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClient.nc">
        <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClient.nc">
          <short>&#10;&#10; Returns the upper AM type used by this client above the the packet&#10;&#10; engine layer.&#10;&#10;</short>
          <long>&#10;&#10; Returns the upper AM type used by this client above the the packet&#10;&#10; engine layer.&#10;&#10; @return The upper AM type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngineClient"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="defaultLowerType" ref="0x7eaa6250" loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClient.nc">
        <documentation loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClient.nc">
          <short>&#10;&#10; Returns the default lower AM type packets sent by this client should&#10;&#10; initially be set to.&#10;&#10;</short>
          <long>&#10;&#10; Returns the default lower AM type packets sent by this client should&#10;&#10; initially be set to.&#10;&#10; @return The default lower AM type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngineClient"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
      <documentation loc="15:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x7eae6740" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10;</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param msg The complete message received.&#10;&#10; @param payload The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eae60a8" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7eae6248" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eae63d8" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IndexedIterator" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/IndexedIterator.nc">
      <parameters>
        <typedef name="iterator_item_t" ref="0x7eac1968" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/IndexedIterator.nc">
          <interfacedef-ref qname="IndexedIterator"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7eac1968"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="end" ref="0x7eac0990" loc="56:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/IndexedIterator.nc">
        <documentation loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/IndexedIterator.nc">
          <short>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10; @param m Current item's index.&#10;&#10; @return TRUE if the current item is the end, FALSE otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="iterator_end_t" ref="0x7eac27f0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7eac1968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7eac0750" loc="56:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/IndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7eac1968"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="next" ref="0x7eac0210" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/IndexedIterator.nc">
        <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/IndexedIterator.nc">
          <short>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10; @param m Current item's index.&#10;&#10; @return The next item's index.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7eac1968"/></type-var>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7eac1968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7eac0010" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/IndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7eac1968"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketEngine" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
      <documentation loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <short>&#10;&#10; Allow a data control component to manage its packets in the data&#10;&#10; engine. </short>
        <long>&#10;&#10; Allow a data control component to manage its packets in the data&#10;&#10; engine.  Packet IDs are passed to the control component to simplify&#10;&#10; management of any additional data structures for each packet in the&#10;&#10; buffer.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperType" ref="0x7ead0160" loc="177:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="171:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Returns the upper layer AM type of a given packet.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns the upper layer AM type of a given packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @return The upper layer AM type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ead1f20" loc="177:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="send" ref="0x7ead5068" loc="96:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="87:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Marks this packet as next in line to be sent. </short>
          <long>&#10;&#10; Marks this packet as next in line to be sent.  The packet must be one&#10;&#10; that was signaled via the added event and cannot be the ID of any&#10;&#10; arbitrary packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @return SUCCESS if the action takes place, FAIL if not, EINVAL if the&#10;&#10;         packet is not found in the buffer or is not a waiting packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ead6d48" loc="96:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7ead3e68" loc="133:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="124:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Passes this packet to upper layer as a received packet immediately. </short>
          <long>&#10;&#10; Passes this packet to upper layer as a received packet immediately.  The&#10;&#10; packet must be one that was signaled via the added event and cannot be&#10;&#10; the ID of any arbitrary packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @return SUCCESS if the action takes place, FAIL if not, EINVAL if the&#10;&#10;         packet is not found in the buffer or is not a waiting packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ead3b48" loc="133:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendIntercept" ref="0x7ead35f8" loc="122:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="113:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Marks this packet as next in line to be sent, but allows the upper layer&#10;&#10; to intercept the packet first. </short>
          <long>&#10;&#10; Marks this packet as next in line to be sent, but allows the upper layer&#10;&#10; to intercept the packet first.  The packet must be one that was signaled&#10;&#10; via the added event and cannot be the ID of any arbitrary packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @return SUCCESS if the action takes place, FAIL if not, EINVAL if the&#10;&#10;         packet is not found in the buffer or is not a waiting packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ead3290" loc="122:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendAdded" ref="0x7eae1a68" loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; A packet to be sent was added to the packet engine by an upper layer.&#10;&#10;</short>
          <long>&#10;&#10; A packet to be sent was added to the packet engine by an upper layer.&#10;&#10; Unlike the Receive interface, this event does not allow swapping packet&#10;&#10; buffers because ownership of the packet does not leave the packet&#10;&#10; engine.&#10;&#10;&#10;&#10; @param pid Packet ID within the packet engine.&#10;&#10; @param msg Pointer to the packet that was added.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7eae15a8" loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7eae1758" loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveAdded" ref="0x7eae04c8" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; A received packet was added to the packet engine from a lower layer.&#10;&#10;</short>
          <long>&#10;&#10; A received packet was added to the packet engine from a lower layer.&#10;&#10; Unlike the Receive interface, this event does not allow swapping packet&#10;&#10; buffers because ownership of the packet does not leave the packet&#10;&#10; engine.&#10;&#10;&#10;&#10; @param pid Packet ID within the packet engine.&#10;&#10; @param msg Pointer to the packet that was added.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7eae0010" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7eae01c0" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="snoopAdded" ref="0x7ead6010" loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="68:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; An overheard packet (this node is not the intended destination) was&#10;&#10; added to the packet engine from a lower layer. </short>
          <long>&#10;&#10; An overheard packet (this node is not the intended destination) was&#10;&#10; added to the packet engine from a lower layer.  Unlike the Receive&#10;&#10; interface, this event does not allow swapping packet buffers because&#10;&#10; ownership of the packet does not leave the packet engine.&#10;&#10;&#10;&#10; @param pid Packet ID within the packet engine.&#10;&#10; @param msg Pointer to the packet that was added.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7eae0a18" loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7eae0bc8" loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="packet" ref="0x7ead67f8" loc="85:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Gets the packet associated with a given ID in the packet engine.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Gets the packet associated with a given ID in the packet engine.&#10;&#10;&#10;&#10; @param pid ID of packet to access.&#10;&#10; @return Pointer to the packet, NULL if the ID is not in use or too large.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
              <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ead6568" loc="85:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ead5d18" loc="111:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="98:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Signals the completion of a send event to the lower layer. </short>
          <long>&#10;&#10; Signals the completion of a send event to the lower layer.  The return&#10;&#10; value indicates what should be done next with the packet.&#10;&#10;&#10;&#10; @param pid Packet ID within the packet engine.&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @param result SUCCESS if it was transmitted successfully, FAIL if&#10;&#10;               it was not, ECANCEL if it was cancelled by the upper&#10;&#10;               layer.&#10;&#10; @return If the packet is no longer needed, return PKT_SEND_DONE. If the&#10;&#10;         packet should be resent, return PKT_SEND_RETRY.  If the packet&#10;&#10;         should move back to the wait state, return PKT_SEND_WAIT.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_send_action_t" ref="0x7eb020f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ead55d0" loc="111:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7ead5780" loc="111:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="result" ref="0x7ead5908" loc="111:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drop" ref="0x7ead26c8" loc="144:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="135:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Drops the packet from the buffer immediately. </short>
          <long>&#10;&#10; Drops the packet from the buffer immediately.  The packet must be one&#10;&#10; that was signaled via the added event and cannot be the ID of any&#10;&#10; arbitrary packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @return SUCCESS if the action takes place, FAIL if not, EINVAL if the&#10;&#10;         packet is not found in the buffer or is not a waiting packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ead23d0" loc="144:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="upperSendDone" ref="0x7ead1238" loc="156:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="146:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Manually signals the upper layer sendDone event with the given result&#10;&#10; for the given packet. </short>
          <long>&#10;&#10; Manually signals the upper layer sendDone event with the given result&#10;&#10; for the given packet.  This should be used carefully to avoid signally&#10;&#10; sendDone multiple times for the same packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @param result Send result.&#10;&#10; @return SUCCESS if the action takes place, FAIL if not, EINVAL if the&#10;&#10;         packet is not found in the buffer or is not a waiting packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ead2c20" loc="156:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
            </type-int>
          </variable>
          <variable name="result" ref="0x7ead2da8" loc="156:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="waitList" ref="0x7ead19c8" loc="169:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="158:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Access a list of all packets still waiting for a control descision. </short>
          <long>&#10;&#10; Access a list of all packets still waiting for a control descision.  For&#10;&#10; example, if a routing path is found to destination B, this could be used&#10;&#10; to check if any other packets were also waiting for that same path since&#10;&#10; they can now be sent.  This command gives the index of the first packet&#10;&#10; in a list of waiting packets.  Traverse the rest of the list with the&#10;&#10; PacketWaitList interface provided by the engine.&#10;&#10;&#10;&#10; @return The ID for the first waiting packet, bufferSize if there aren't&#10;&#10;         any waiting packets.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setUpperType" ref="0x7ead0a68" loc="185:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="179:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Sets the upper layer AM type of a given packet.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Sets the upper layer AM type of a given packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @param newUid The new upper layer AM type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ead06b0" loc="185:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb04988"/></typename>
            </type-int>
          </variable>
          <variable name="newUid" ref="0x7ead0838" loc="185:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
      <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.&#10; </short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7ea90e88" loc="50:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7ea90e88"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7ea824e8" loc="96:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.&#10;&#10;</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7ea90e88"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7ea83ba0" loc="80:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10;</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="empty" ref="0x7ea833a0" loc="61:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.&#10;</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="put" ref="0x7ea82138" loc="88:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.&#10;&#10;</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7ea90e88"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7ea83ee0" loc="88:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7ea90e88"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7ea837e0" loc="72:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.x/tos/interfaces/State.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10;</short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7ea74bd8" loc="71:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7ea74050" loc="56:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isState" ref="0x7ea74898" loc="66:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7ea746e8" loc="66:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7ea743a8" loc="61:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7ea757d0" loc="45:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10;</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7ea75590" loc="45:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7ea75ce8" loc="51:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7ea75b18" loc="51:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10;</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7ea717a0" loc="41:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7ea713e8" loc="35:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7e8c85d0" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7e8c85d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7e8c8cd0" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7e8c85d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7e8c89d0" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7e8c85d0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e8852d0" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e8852d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7e885790" loc="50:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10;</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e8666a0" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e8666a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7e8667b8" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e8667b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7e866c88" loc="53:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e8667b8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7e865460" loc="65:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7e865120" loc="60:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits. </short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7e865830" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed. </short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10;</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e875648" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e875648"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7e875760" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e875760"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7e8725d8" loc="98:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e875760"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7e874520" loc="67:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7e872260" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e875760"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e875760"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7e874c98" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e875760"/></type-var>
          </variable>
          <variable name="dt" ref="0x7e874e28" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e875760"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7e874958" loc="77:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7e872a10" loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10;</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e875760"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="start" ref="0x7e875e20" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e875760"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7e875b88" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e875760"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e8741e8" loc="62:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x7e833a78" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f100140"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f100390"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7e832b78" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0e1208"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0e1458"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7e832368" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f1e38"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0e20e0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7e832820" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f1e38"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0e20e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7e8326b8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f1e38"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0e20e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7e831068" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0e1208"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0e1458"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7e832ec8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0e1208"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0e1458"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7e832010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f100140"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f100390"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e833dc8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f100140"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f100390"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="15:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x7e820940" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x7e820d38" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x7e820548" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7e818148" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7e824c00" loc="21:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10;</short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f2ad0"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x7f0f2d20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7e820200" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10;</short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f2ad0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f0f2d20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7e820010" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f2ad0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f0f2d20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7e828620" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e828620"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7e8250a8" loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10;</short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7e827340" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e828a98" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.&#10;</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e828620"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x7e827678" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7e825430" loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10;</short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e827010" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.&#10;</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e828620"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e828dd8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e828620"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e8279a8" loc="56:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e827cd8" loc="59:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.  &#10;</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7e845d80" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e845d80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7e841e80" loc="89:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="test" ref="0x7e8417c8" loc="78:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10;</short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e842200" loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.&#10;</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e845d80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7e8383a8" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.&#10;</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7e8381d0" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7e838740" loc="101:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.&#10;</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x7e842d80" loc="66:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7e842a48" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7e841b58" loc="84:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10;</short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e842700" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.&#10;</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e845d80"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e842540" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e845d80"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e8410f8" loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e841428" loc="72:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10;</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7e6e55d0" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param msg - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6e5228" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7e6e5c68" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param msg - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6e5938" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7e6e3330" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10;</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param msg - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6e3010" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10;</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10;&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7e6c88e0" loc="95:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10;</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6c8680" loc="95:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7e6c9d48" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10;</short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6c9b08" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7e6c9240" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10;</short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7e6c9010" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7e6cabf0" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10;</short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7e6ca9c8" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7e6c9798" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet. </short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7e6c9578" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7e6c8318" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10;</short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6c80d0" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7e6d2010" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e6d4c20" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7e6d4da8" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7e6d25e0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7feb0a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e6d2378" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7e6d48b8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.&#10;&#10;</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e6d46c8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7e6d2bb8" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e6d2948" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10;</short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getLocalSleepInterval" ref="0x7e6c4d88" loc="58:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return the local node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getRxDutyCycle" ref="0x7e6c02b0" loc="112:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="108:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return the destination node's duty cycle configured in this message&#10;     in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6c00d0" loc="112:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleepIntervalToDutyCycle" ref="0x7e6c0ea8" loc="128:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10;</short>
          <long>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; @param sleepInterval The sleep interval in units of [ms]&#10; @return The duty cycle in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepInterval" ref="0x7e6c0c10" loc="128:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalDutyCycle" ref="0x7e6c37c8" loc="81:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return this node's radio duty cycle rate, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setRxSleepInterval" ref="0x7e6c2010" loc="90:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10;</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10; @param msg Pointer to the message that will be sent&#10; @param sleepInterval The receiving node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6c3b18" loc="90:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="sleepIntervalMs" ref="0x7e6c3cb0" loc="90:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalDutyCycle" ref="0x7e6c3460" loc="76:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10;</short>
          <long>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10; For example, to get a 0.05% duty cycle,&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(5);&#10; &#60;/code>&#10;&#10; For a 100% duty cycle (always on),&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(10000);&#10; &#60;/code>&#10;&#10; This is the equivalent of setting the local sleep interval explicitly.&#10; &#10; @param dutyCycle The duty cycle percentage, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x7e6c3108" loc="76:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxDutyCycle" ref="0x7e6c2d50" loc="106:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10;</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10; Duty cycle is in units of [percentage*100], i.e. 0.25% duty cycle = 25.&#10; &#10; @param msg Pointer to the message that will be sent&#10; @param dutyCycle The duty cycle of the receiving mote, in units of &#10;     [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6c2878" loc="106:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dutyCycle" ref="0x7e6c2a10" loc="106:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dutyCycleToSleepInterval" ref="0x7e6c08c0" loc="120:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="114:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10;</short>
          <long>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; @param dutyCycle The duty cycle in units of [percentage*100]&#10; @return The equivalent sleep interval, in units of [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x7e6c0600" loc="120:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxSleepInterval" ref="0x7e6c2530" loc="95:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return the destination node's sleep interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6c2370" loc="95:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalSleepInterval" ref="0x7e6c4a38" loc="53:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio sleep interval, in milliseconds.&#10;</short>
          <long>&#10; Set this this node's radio sleep interval, in milliseconds.&#10; Once every interval, the node will sleep and perform an Rx check &#10; on the radio.  Setting the sleep interval to 0 will keep the radio&#10; always on.&#10;&#10; This is the equivalent of setting the local duty cycle rate.&#10;&#10; @param sleepIntervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x7e6c4730" loc="53:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <short>&#10;</short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7e6b7e08" loc="63:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10;</short>
          <long>&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6b7c50" loc="63:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7e6b8cb8" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10;</short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param msg&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6b88b8" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7e6b8a50" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7e6b78f8" loc="58:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short> &#10;</short>
          <long> &#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6b7740" loc="58:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7e6b73e8" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10;</short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6b7030" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7e6b71c8" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7e6b5330" loc="68:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6b5190" loc="68:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7e6a6768" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   msg     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6a60d0" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e6a6258" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7e6a31c8" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; The length of this region is maxPayloadLength(). This command&#10; behaves similarly to &#60;tt>Packet.getPayload&#60;/tt> (minus the&#10; length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param   msg    the packet&#10; @return         a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6a4dd8" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7e6a4a90" loc="101:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e6a6e38" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   msg    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6a6ab0" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e6a4640" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param msg   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6a4190" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7e6a4318" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7e695da0" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10;</short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7e695968" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7e695af8" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7e695640" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7e6952d0" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @param on TRUE to turn address recognition on, FALSE to turn it off&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7e695118" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7e697630" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7e6974c8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7e696600" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7e696498" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7e697df0" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7e697c88" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7e6934c0" loc="101:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7e696de0" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7e696c78" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7e693160" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7e696170" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sync" ref="0x7e6971a8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7e697968" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7e696950" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.&#10;</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeader" ref="0x7e6a0658" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10;</short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:11" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7ebe48c0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7ebe32a8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6a0488" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7e6a0bb0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10;</short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:9" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7ebe3788"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7ebe1160"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6a09d8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="36:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7e690a80" loc="48:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10;</short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="changed" ref="0x7e68a140" loc="58:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.&#10;</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7e690dd8" loc="53:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10;</short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7eba3580"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7e690718" loc="43:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10;</short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7eba3580"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7e690368" loc="43:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7eba3580"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7e6904f8" loc="43:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7e630178" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10;</short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e631da0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7e631f28" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e630a98" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.&#10;&#10;</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="modify" ref="0x7e62ab68" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e62a568" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7e62a710" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e62a898" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e62a228" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10;</short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e630e00" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7e62a010" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7e6306f0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10;</short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7e6304b8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7e635c70" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7e634ab0" loc="97:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.&#10;&#10;</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7e634730" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.&#10;&#10;</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7e635190" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7e635878" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.&#10;&#10;</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7e634010" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7e6343b0" loc="83:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.&#10;&#10;</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7e6354e0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <short>&#10; Constants for manipulating LEDs.&#10;&#10;</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7e6247a8" loc="50:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7e624b80" loc="56:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7e624ef0" loc="61:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7e622658" loc="72:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7e621120" loc="89:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e621668" loc="106:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7e622280" loc="66:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e621d40" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask. </short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7e6219a0" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7e624438" loc="45:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7e6229c8" loc="78:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7e622d38" loc="83:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7e639468" loc="110:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.  &#10;&#10;</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request 	  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7e63ab08" loc="87:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="request" ref="0x7e63a6d8" loc="78:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0x7e63ae28" loc="92:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7e639870" loc="118:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7e5da8b0" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e5da8b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7e5dad10" loc="55:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.&#10; &#10;</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7e5d9418" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().&#10;&#10;</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e5da8b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e5d9068" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7e5d91f0" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e5da8b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7e5b90e8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.&#10;&#10;</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe4730"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e5bbeb0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e5b9650" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.&#10; &#10;</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe4730"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e5b9438" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.&#10;</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7e5b5bc8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe4730"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7e5c2a68" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe4730"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e5c24a0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7e5c2648" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e5c27d0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e5c1430" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe4730"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e5c2db0" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7e5c1010" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e5c1198" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7e5c53b8" loc="57:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7e5c5010" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10;</short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7e5c6b88" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7e5c6860" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7e53cee0" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0823a8"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f0825f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x7e541ea8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b1640"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1890"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e541d40" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b1640"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1890"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7e53c6d0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0901a8"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0903f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x7e542ea8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c2708"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c2958"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7e53cb88" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0901a8"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0903f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7e53ca20" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0901a8"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0903f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7e53b3b8" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0823a8"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f0825f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7e53b250" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0823a8"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f0825f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x7e541528" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0700"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0950"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x7e5411f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b1640"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1890"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x7e5419e8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c2708"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c2958"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e541880" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c2708"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c2958"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x7e53c378" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0700"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0950"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e53c210" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0700"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0950"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7e544ce0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e544ce0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7e5351f8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.&#10;</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7e535010" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7e536908" loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10;</short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e538168" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.&#10;</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e544ce0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x7e538bb8" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.&#10;</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e544ce0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e5389d8" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e544ce0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7e538ef0" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7e536c90" loc="73:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10;</short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e538690" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.&#10;</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e544ce0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e5384a8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e544ce0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e536240" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e536570" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7e3a0a38" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7e39e340" loc="55:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.&#10;</short>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x7e39e010" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7e3a0d80" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7e3a0710" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.&#10;&#10;</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7e387010" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7e387ce0" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7e388c88" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="edge" ref="0x7e3879a0" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.&#10;</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7e387728" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7e388938" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7e3873e8" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10;</short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7e372a98" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="17:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip. </short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7e333ef0" loc="24:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released. </short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7e3302b0" loc="31:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus. </short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7e3306d8" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10;</short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7e326198" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e328d30" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e328eb8" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7e325b90" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e325610" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e325798" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7e325920" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e3252b0" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe4730"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e326dd0" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e325010" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7e3289c8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe4730"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e328598" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e328720" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7e326a68" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e3264f8" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e326680" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7e326808" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus. </short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7e30fcb8" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.&#10;&#10;</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param txBuf A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param rxBuf A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7e30f598" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7e30f740" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e30f8d0" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e30e830" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.&#10;&#10;</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param txBuf The buffer used for transmission&#10; @param rxBuf The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7e30e030" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7e30e1d8" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e30e368" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7e30e500" loc="72:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7e315ec0" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10;</short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7e315c88" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7e2a8360" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7e2a4cf8" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7e2a5498" loc="100:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7e2a21d0" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7e2a2068" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7e2a8010" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7e2a4178" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7e2a4010" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7e2a7920" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7e2a77b8" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7e2a8a10" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10;</short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7e2a1b10" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7e2a19a8" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7e2a7c48" loc="97:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7e2a2998" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7e2a2830" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7e2a1010" loc="120:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7e2a49d0" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7e2a4868" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7e2a1660" loc="124:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7e2a5948" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7e2a57e0" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e2a8f18" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10;</short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e2a8d48" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7e2a5178" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7e2a5010" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7e2a4518" loc="106:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7e2a24f0" loc="112:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7e2a2cb8" loc="115:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7e2a1338" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7e2a5c68" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7e2a86a0" loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7e2a7478" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete. &#10;</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e2a7270" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7e28c010" loc="80:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.&#10;&#10;</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="userId" ref="0x7e28c410" loc="88:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.&#10; &#10;</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7e242898" loc="74:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e242d30" loc="84:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10;</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7e1e7d98" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7e1e6288" loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7e1e33f0" loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.&#10;</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="configure" ref="0x7e1e3018" loc="49:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.&#10;</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7e1ccc30" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10;</short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7e1e5ed8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7e1cc9f8" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7e1e5ed8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7e1cec40" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.&#10;&#10;</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7e1cc298" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10;</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7e1e5ed8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7e1cc010" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7e1e5ed8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7e1cc6a8" loc="60:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue. &#10;</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7e1e5ed8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10;</short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7e0e8bb0" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="RadioTimeStamping" loc="33:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <short>&#10; Interface for receiving time stamp information from the radio.&#10;</short>
        <long>&#10; Interface for receiving time stamp information from the radio.&#10; This information is also embedded in packet metadata.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   October 10 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="transmittedSFD" ref="0x7e0e70b0" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter has been&#10; transmitted: units are in terms of a 32kHz clock.&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7e0ead00" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
          <variable name="p_msg" ref="0x7e0eaeb0" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedSFD" ref="0x7e0e7768" loc="50:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock. </short>
          <long> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock.  &#60;b>NOTE&#60;/b> that receiving&#10; a receivedSFD() event does NOT mean that a packet will be&#10; received; the transmission may stop, become corrupted, or be&#10; filtered by the physical or link layers.  The number of rxSFD&#10; events will always be great than or equal to the number of&#10; Receive message events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7e0e73f8" loc="50:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7e0a6ae0" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.&#10;&#10;</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7e0a6708" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7e0a68b8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7e0a63d0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7e0a6010" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.&#10;&#10;</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7e0aade8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SinglePacket" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
        <short>&#10;&#10; Access and set the properties of a multihop packet with a single&#10;&#10; node address based destination.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access and set the properties of a multihop packet with a single&#10;&#10; node address based destination.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="source" ref="0x7dee0660" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; Returns the address of the source of the multihop packet.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns the address of the source of the multihop packet.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @return The source node of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7dee0418" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7ded39c8" loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="61:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; Returns the address of the destination of the multihop packet.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns the address of the destination of the multihop packet.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @return The destination node of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ded3770" loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7ded31f8" loc="59:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; Sets the address of the source of the multihop packet. </short>
          <long>&#10;&#10; Sets the address of the source of the multihop packet.  As with&#10;&#10; the AM layer, this is set by the multihop layer, and should not&#10;&#10; need to be used when sending a packet.  However, buffers or other&#10;&#10; storage components may wish to use it to store the address for&#10;&#10; later retrieval.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @param src The source node of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7dee0bc8" loc="59:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="src" ref="0x7dee0d58" loc="59:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7ded24d8" loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="69:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; Sets the address of the destination of the multihop packet. </short>
          <long>&#10;&#10; Sets the address of the destination of the multihop packet.  As&#10;&#10; with the AM layer, this is set by the multihop layer, and should not&#10;&#10; need to be used when sending a packet.  However, buffers or other&#10;&#10; storage components may wish to use it to store the address for&#10;&#10; later retrieval.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @param dest The destination node of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ded2010" loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dest" ref="0x7ded21a0" loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7ded2d80" loc="89:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="81:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; As with the AM layer, returns whether this node is the destination&#10;&#10; for the packet, but can also include special processing for broadcast&#10;&#10; addresses or similar values.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; As with the AM layer, returns whether this node is the destination&#10;&#10; for the packet, but can also include special processing for broadcast&#10;&#10; addresses or similar values.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @return Whether this node is the destination of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ded2a40" loc="89:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StaticIndexedIterator" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
      <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
        <short>&#10;&#10; Iteration operations using indices. </short>
        <long>&#10;&#10; Iteration operations using indices.  This interface is the static or&#10;&#10; stateless version which requires a pointer to the structure containing&#10;&#10; the data to be passed in along with the index.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="iterator_item_t" ref="0x7de74d00" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
          <interfacedef-ref qname="StaticIndexedIterator"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7de74d00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="end" ref="0x7de72130" loc="60:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
        <documentation loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
          <short>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10; @param d Pointer to the data source.&#10;&#10; @param m Current item's index.&#10;&#10; @return TRUE if the current item is the end, FALSE otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="iterator_end_t" ref="0x7eac27f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7de74d00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="d" ref="0x7de73cc0" loc="60:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="m" ref="0x7de73e50" loc="60:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7de74d00"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="next" ref="0x7de73758" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
        <documentation loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
          <short>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10; @param d Pointer to the data source.&#10;&#10; @param m Current item's index.&#10;&#10; @return The next item's index.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7de74d00"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7de74d00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="d" ref="0x7de73398" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="m" ref="0x7de73528" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7de74d00"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tlv" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
      <function command="" provided="0" name="value" ref="0x7de8a2d0" loc="75:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
        <documentation loc="68:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
          <short>&#10;&#10; Returns the value in this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the value in this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then NULL is returned.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @return Pointer to the value in this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tlv"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7de8a010" loc="75:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x7de89960" loc="102:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
        <documentation loc="94:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
          <short>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param maxLen Maximum length that the TLV block can occupy.&#10;&#10; @return SUCCESS if the type instance was found and removed, EINVAL&#10;&#10;         otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tlv"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7de89538" loc="102:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="maxLen" ref="0x7de896c0" loc="102:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="length" ref="0x7de8de20" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
        <documentation loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
          <short>&#10;&#10; Returns the length of this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the length of this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then 0 is returned.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @return Length of this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tlv"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7de8db90" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x7de8cad0" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
        <documentation loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
          <short>&#10;&#10; Sets the length of a type instance within the TLV block. </short>
          <long>&#10;&#10; Sets the length of a type instance within the TLV block.  This&#10;&#10; operation moves data around and should always be performed before&#10;&#10; storing a value with a different length than the one currently&#10;&#10; stored.  If the type instance is not found in the block or there&#10;&#10; is not enough room for the new length, returns ESIZE.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @param maxLen Maximum length that the TLV block can occupy.&#10;&#10; @return SUCCESS if the type instance was found, enough space was&#10;&#10;         available, and the length was set, ESIZE if there wasn't&#10;&#10;         enough space, EINVAL if the instance wasn't found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tlv"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7de8c368" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7de8c4f0" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7de8c678" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x7de89010" loc="92:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
        <documentation loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
          <short>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance. </short>
          <long>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance.  This operation moves data around and&#10;&#10; should always be performed before storing a value of the given&#10;&#10; type.  The type instance will be added to the block as long as&#10;&#10; there are at least len + 2 bytes available in the buffer holding&#10;&#10; the TLV block.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @param maxLen Maximum length that the TLV block can occupy.&#10;&#10; @return SUCCESS if enough space was available and the length was&#10;&#10;         set, EALREADY if an instance already exists, ESIZE if&#10;&#10;         there wasn't enough space.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tlv"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7de8a7f8" loc="92:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7de8a980" loc="92:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7de8ab08" loc="92:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TlvBlock" loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
      <documentation loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
        <short>&#10;&#10; Manipulate a TLV block independent of the types it contains.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Manipulate a TLV block independent of the types it contains.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="remove" ref="0x7de922c0" loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
        <documentation loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
          <short>&#10;&#10; Removes a TLV block from the beginning of a given data buffer.  &#10;&#10;</short>
          <long>&#10;&#10; Removes a TLV block from the beginning of a given data buffer.  &#10;&#10; Other data is moved to fill the gap.&#10;&#10; &#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param maxLen Maximum length that the TLV block can occupy.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvBlock"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7de93e88" loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="maxLen" ref="0x7de92030" loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="length" ref="0x7de92a78" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
        <documentation loc="59:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
          <short>&#10;&#10; Returns the length of the entire TLV block, including the block &#10;&#10; length value itself.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Returns the length of the entire TLV block, including the block &#10;&#10; length value itself.&#10;&#10; &#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @return Length of the TLV block.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvBlock"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7de92800" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x7de93950" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
        <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
          <short>&#10;&#10; Adds a TLV block at the beginning of a given data buffer. </short>
          <long>&#10;&#10; Adds a TLV block at the beginning of a given data buffer.  Other&#10;&#10; data is moved to accomidate it.  This must be called on any new TLV &#10;&#10; block before using any other TLV commands.&#10;&#10; &#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param maxLen Maximum length that the TLV block can occupy.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvBlock"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7de934f0" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="maxLen" ref="0x7de93678" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TlvMultiple" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
      <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
        <short>&#10;&#10; Access data stored in a generalized Type-Length-Value (TLV) block.&#10;&#10;</short>
        <long>&#10;&#10; Access data stored in a generalized Type-Length-Value (TLV) block.&#10;&#10; This interface, when used together with the TlvList interface, has&#10;&#10; no restrictions of the number of instances of a type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="value" ref="0x7de84a48" loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="74:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Returns the value in this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the value in this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then NULL is returned.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @return Pointer to the value in this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7de8e6c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7de845c8" loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7de84758" loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7de8e6c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="list" ref="0x7de81cd8" loc="120:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="112:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Access a list of all instances of a type within the TLV block.&#10;&#10;</short>
          <long>&#10;&#10; Access a list of all instances of a type within the TLV block.&#10;&#10; This command gives the key for the first such instance.&#10;&#10; Traverse the rest of the list with the TlvList interface.&#10;&#10;&#10;&#10; @return The key for the first instance of a type in the TLV&#10;&#10;         block.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7de8e6c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7de81a18" loc="120:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x7de814c8" loc="110:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="101:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @param maxLen Maximum length that the TLV block can occupy.&#10;&#10; @return SUCCESS if the type instance was found and removed, EINVAL&#10;&#10;         otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7de8e6c0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7de82ea8" loc="110:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7de81068" loc="110:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7de8e6c0"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7de811f0" loc="110:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="length" ref="0x7de85188" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Returns the length of this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the length of this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then 0 is returned.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @return Length of this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7de8e6c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7de86cb8" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7de86e48" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7de8e6c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x7de84088" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Sets the length of a type instance within the TLV block. </short>
          <long>&#10;&#10; Sets the length of a type instance within the TLV block.  This&#10;&#10; operation moves data around and should always be performed before&#10;&#10; storing a value with a different length than the one currently&#10;&#10; stored.  If the type instance is not found in the block or there&#10;&#10; is not enough room for the new length, returns ESIZE.&#10;&#10;&#10;&#10; Setting the length of a type instance typically invalidates any&#10;&#10; keys received prior to the change.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @param maxLen Maximum length that the TLV block can occupy.&#10;&#10; @return SUCCESS if the type instance was found, enough space was&#10;&#10;         available, and the length was set, ESIZE if wasn't enough&#10;&#10;         space, EINVAL if the instance wasn't found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7de8e6c0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7de856d8" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7de85868" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7de8e6c0"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x7de859f0" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7de85b78" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x7de82960" loc="99:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="84:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance. </short>
          <long>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance.  This operation moves data around and&#10;&#10; should always be performed before storing a value of the given&#10;&#10; type.  The type instance will be added to the block as long as&#10;&#10; there are at least len + 2 bytes available in the buffer holding&#10;&#10; the TLV block.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Pointer to store the key for the TLV type instance.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @param maxLen Maximum length that the TLV block can occupy.&#10;&#10; @return SUCCESS if enough space was available and the length was&#10;&#10;         set, ESIZE if there wasn't enough space.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="tlv_key_t" ref="0x7de8e6c0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7de82010" loc="99:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7de821c0" loc="99:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="tlv_key_t" ref="0x7de8e6c0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7de82348" loc="99:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7de824d0" loc="99:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DataCache" loc="31:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
      <documentation loc="31:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
        <short>&#10; A data cache. </short>
        <long>&#10; A data cache.  While this is quite similar to the Cache interface, here a&#10; pointer to the element in the cache matching the given input item is&#10; returned.&#10;&#10; @author Ryan Stinnett&#10;</long>
      </documentation>
      <parameters>
        <typedef name="item_t" ref="0x7ddce3d0" loc="31:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
          <interfacedef-ref qname="DataCache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7ddce3d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="remove" ref="0x7ddcd6f0" loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
        <documentation loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
          <short>&#10; Removes an item from the cache.&#10;&#10;</short>
          <long>&#10; Removes an item from the cache.&#10;&#10; @param item Pointer to the data item to remove from the cache.&#10; @return SUCCESS if found and removed, EINVAL if not found.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7ddce3d0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7ddcd4c0" loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7ddce3d0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insert" ref="0x7ddcea88" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
        <documentation loc="33:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary. </short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.  An atomic lookup&#10; after insert should return true.&#10;&#10; @param item Pointer to the data item to insert into the cache.&#10; @return A pointer to the item in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7ddce3d0"/></type-var>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7ddce3d0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7ddce7e8" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7ddce3d0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7ddcda08" loc="62:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
        <documentation loc="59:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
          <short>&#10; Flush the cache of all entries.&#10;</short>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="lookup" ref="0x7ddcd180" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
        <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
          <short>&#10; Returns a pointer to the item in the cache by matching various keys or&#10; NULL if it was not found.&#10;&#10;</short>
          <long>&#10; Returns a pointer to the item in the cache by matching various keys or&#10; NULL if it was not found.&#10;&#10; @param item Pointer to the data item to find in the cache.&#10; @return A pointer to the item in the cache, or NULL if not found.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7ddce3d0"/></type-var>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7ddce3d0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7ddcedc8" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7ddce3d0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DataTimer" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
      <parameters>
        <typedef name="data_t" ref="0x7ddc6778" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
          <interfacedef-ref qname="DataTimer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7ddc6778"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="expired" ref="0x7ddc4100" loc="68:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
        <documentation loc="63:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
          <short>&#10;&#10; The timer for a given data item has expired.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The timer for a given data item has expired.&#10;&#10;&#10;&#10; @param data The data item which expired.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7ddc6778"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ddc5ed8" loc="68:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7ddc6778"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7ddc5200" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
        <documentation loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
          <short>&#10;&#10; Starts the non-periodic timer for a given data item. </short>
          <long>&#10;&#10; Starts the non-periodic timer for a given data item.  If the same&#10;&#10; item is started multiple times, it will be tracked multiple times.&#10;&#10;&#10;&#10; @param data The data item to start timing.&#10;&#10; @param delay Time units before the data expires.&#10;&#10; @return SUCCESS, or FAIL if already full.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7ddc6778"/></type-var>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="data_timer_time_t" ref="0x7ddc6380"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ddc6d78" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7ddc6778"/></type-var>
          </variable>
          <variable name="delay" ref="0x7ddc6f10" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="data_timer_time_t" ref="0x7ddc6380"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ddc59b8" loc="61:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
        <documentation loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
          <short>&#10;&#10; Stops the timer for a given data item. </short>
          <long>&#10;&#10; Stops the timer for a given data item.  If the item was started&#10;&#10; multiple times, this removes the instance that was closest to&#10;&#10; expiring.&#10;&#10;&#10;&#10; @param data The data item to stop timing.&#10;&#10; @return SUCCESS, or EINVAL if the item was not found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7ddc6778"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ddc5728" loc="61:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7ddc6778"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Equal" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Equal.nc">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Equal.nc">
        <short>&#10;&#10; Generalized equality interface between two items. </short>
        <long>&#10;&#10; Generalized equality interface between two items.  Many uses are possible&#10;&#10; here, since the inputs could be array indices, as just one example.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="equal_t" ref="0x7ddec128" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Equal.nc">
          <interfacedef-ref qname="Equal"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7ddec128"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7ddecad8" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Equal.nc">
        <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Equal.nc">
          <short>&#10;&#10; Checks whether two items are equal.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks whether two items are equal.&#10;&#10;&#10;&#10; @param a First item to test.&#10;&#10; @param b Second item to test.&#10;&#10; @return TRUE if they are equal, FALSE if they are not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Equal"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7ddec128"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7ddec128"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x7ddec708" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Equal.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7ddec128"/></type-var>
          </variable>
          <variable name="b" ref="0x7ddec890" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Equal.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7ddec128"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="29:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.&#10;&#10;</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x7ddb55b8" loc="34:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.&#10;</short>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clear" ref="0x7ddb4838" loc="58:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.&#10;</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7ddb4670" loc="58:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7ddb4d40" loc="64:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.&#10;</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7ddb4b78" loc="64:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7ddb5e08" loc="46:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.&#10;</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7ddb5c30" loc="46:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x7ddb2400" loc="71:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.&#10;</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7ddb2090" loc="71:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x7ddb2218" loc="71:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x7ddb58e8" loc="39:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.&#10;</short>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7ddb4330" loc="52:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.&#10;</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7ddb4170" loc="52:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7ddb2780" loc="77:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.&#10;</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="RouteCache" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
        <short>&#10;&#10; Access some kind of route cache or table that stores information about&#10;&#10; paths or links in the network and looks for routes when requested.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access some kind of route cache or table that stores information about&#10;&#10; paths or links in the network and looks for routes when requested.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="removeLink" ref="0x7ddd4c88" loc="61:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
        <documentation loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
          <short>&#10;&#10; Removes any information stored for a given link from the route cache.&#10;&#10;</short>
          <long>&#10;&#10; Removes any information stored for a given link from the route cache.&#10;&#10; If the cache stores entire paths, then any path containing the link&#10;&#10; must at least be shortened enough to remove the given link or else&#10;&#10; discarded entirely.&#10;&#10;&#10;&#10; @param src The source node in the link to remove.&#10;&#10; @param dest The destination node in the link to remove.&#10;&#10; @param reverse If TRUE, the reverse path is also removed.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7ddf1940"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7ddf1940"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7ddd4608" loc="61:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7ddf1940"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7ddd47a0" loc="61:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7ddf1940"/></typename>
            </type-int>
          </variable>
          <variable name="reverse" ref="0x7ddd4928" loc="61:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="routeUpdate" ref="0x7ddd13f8" loc="89:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
        <documentation loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
          <short>&#10;&#10; Provides the newest information available pertaining to a requested&#10;&#10; route. </short>
          <long>&#10;&#10; Provides the newest information available pertaining to a requested&#10;&#10; route.  Whether or not a route is available when the request is made,&#10;&#10; a routeUpdate will be signaled once the current availability is known.&#10;&#10; If the route is not initially available, a subsequent routeUpdate will&#10;&#10; be signaled if a route is later found.  If a route was found, numLinks&#10;&#10; is the number of links along the route.  If a route was not found,&#10;&#10; numLinks is 0.  The route itself is accessible via the RouteNodeList&#10;&#10; interface.  Note that RouteNodeList traverses the route &#60;b>in&#10;&#10; reverse&#60;/b>, returning the previous or source node for a given node in&#10;&#10; the route.&#10;&#10;&#10;&#10; @param src The source node of the route.&#10;&#10; @param dest The destination node of the route.&#10;&#10; @param numLinks Number of links along the route if one was found, 0&#10;&#10;                 if no route was found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7ddf1940"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7ddf1940"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7ddf1768"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7ddd3b48" loc="89:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7ddf1940"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7ddd3ce0" loc="89:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7ddf1940"/></typename>
            </type-int>
          </variable>
          <variable name="numLinks" ref="0x7ddd3e90" loc="90:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7ddf1768"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addPath" ref="0x7ddd40c8" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
        <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
          <short>&#10;&#10; Adds a path to the route cache with a given number of links along the&#10;&#10; path and optionally adds the reverse path as well.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Adds a path to the route cache with a given number of links along the&#10;&#10; path and optionally adds the reverse path as well.&#10;&#10;&#10;&#10; @param nodes An array of nodes that make up the path to add.&#10;&#10; @param numLinks The number of links along the path.&#10;&#10; @param reverse If TRUE, the reverse path is also added.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="route_cache_node_id_t" ref="0x7ddf1940"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7ddf1768"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="nodes" ref="0x7ddd5a58" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="route_cache_node_id_t" ref="0x7ddf1940"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numLinks" ref="0x7ddd5bf8" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7ddf1768"/></typename>
            </type-int>
          </variable>
          <variable name="reverse" ref="0x7ddd5d80" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="needRoute" ref="0x7ddd3608" loc="70:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
        <documentation loc="63:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
          <short>&#10;&#10; Indicates the need for a route from node src to node dest. </short>
          <long>&#10;&#10; Indicates the need for a route from node src to node dest.  This is&#10;&#10; tracked by the route cache until the need is met.&#10;&#10;&#10;&#10; @param src The source node of the route.&#10;&#10; @param dest The destination node of the route.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7ddf1940"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7ddf1940"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7ddd31e0" loc="70:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7ddf1940"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7ddd3378" loc="70:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7ddf1940"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Graph" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <short>&#10;&#10; Basic operations for processsing and modifying a graph. &#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Basic operations for processsing and modifying a graph. &#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="maxEdges" ref="0x7dca6a50" loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="69:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Gets the maximum number of edges that the graph can hold. </short>
          <long>&#10;&#10; Gets the maximum number of edges that the graph can hold.  This should &#10;&#10; return the number of &#34;conceptual&#34; edges.  For example, an undirected graph &#10;&#10; might use two directed edges for each undirected edge in its &#10;&#10; implementation, but this only counts as one edge here.&#10;&#10; &#10;&#10; @return The maximum number of edges that the graph can hold.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="removed" ref="0x7dca1d30" loc="150:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="145:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; The structure of the graph changed because an edge was removed.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; The structure of the graph changed because an edge was removed.&#10;&#10; &#10;&#10; @param m The key for the edge that was removed.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dca1b00" loc="150:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x7dca3bf8" loc="115:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="107:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Remove an edge from the graph between vertices s and d.  &#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Remove an edge from the graph between vertices s and d.  &#10;&#10; &#10;&#10; @param s The first vertex or source of the edge.&#10;&#10; @param d The second vertex or destination of the edge.&#10;&#10; @return SUCCESS if the edge was found and removed, EINVAL if it was not.&#10;&#10;         ESIZE returned if either vertex is too large.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7dca3770" loc="115:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </variable>
          <variable name="d" ref="0x7dca3908" loc="115:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7dca2630" loc="126:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="117:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Retrieves an edge between vertices s and d, if it exists. </short>
          <long>&#10;&#10; Retrieves an edge between vertices s and d, if it exists.  If the graph is&#10;&#10; directed, s is taken to be the source and d is taken to be the destination&#10;&#10; of the directed edge.&#10;&#10; &#10;&#10; @param s The first vertex or source of the edge.&#10;&#10; @param d The second vertex or destination of the edge.&#10;&#10; @return The edge key if the edge was found, maxEdges() if it was not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7dca2178" loc="126:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </variable>
          <variable name="d" ref="0x7dca2310" loc="126:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="directed" ref="0x7dca5058" loc="85:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Checks if the graph is directed or not. </short>
          <long>&#10;&#10; Checks if the graph is directed or not.  This value should not change at &#10;&#10; run-time.&#10;&#10; &#10;&#10; @return TRUE if the graph is directed, FALSE if it is undirected.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="vertices" ref="0x7dca76d0" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Gets the number of vertices currently in the graph. </short>
          <long>&#10;&#10; Gets the number of vertices currently in the graph.  For some&#10;&#10; implementations, this will always equal maxVertices() if all vertices&#10;&#10; are preallocated.&#10;&#10; &#10;&#10; @return The number of vertices currently in the graph.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="parallelEdges" ref="0x7dca5638" loc="93:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="87:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Checks if parallel edges are allowed or not. </short>
          <long>&#10;&#10; Checks if parallel edges are allowed or not.  This value should not change&#10;&#10; at run-time.&#10;&#10; &#10;&#10; @return TRUE if parallel edges are allowed, FALSE if they are not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="maxVertices" ref="0x7dca7cb0" loc="56:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Gets the maximum number of vertices that the graph can hold.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Gets the maximum number of vertices that the graph can hold.&#10;&#10; &#10;&#10; @return The maximum number of vertices that the graph can hold.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="insert" ref="0x7dca3240" loc="105:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="95:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Add a new edge to the graph between vertices s and d.  &#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Add a new edge to the graph between vertices s and d.  &#10;&#10; &#10;&#10; @param s The first vertex or source of the edge.&#10;&#10; @param d The second vertex or destination of the edge.&#10;&#10; @return If all of the edges have already been allocated or if parallel &#10;&#10;         edges are not supported and this edge has already been added or if either&#10;&#10;         vertex is too large, then maxEdges() is returned.  Otherwise, the key for &#10;&#10;         the new edge is returned.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7dca5b70" loc="105:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </variable>
          <variable name="d" ref="0x7dca5d08" loc="105:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="inserted" ref="0x7dca15e0" loc="143:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="138:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; The structure of the graph changed because an edge was inserted.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; The structure of the graph changed because an edge was inserted.&#10;&#10; &#10;&#10; @param m The key for the edge that was inserted.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dca13a8" loc="143:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeList" ref="0x7dca2e38" loc="136:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="128:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Retrieves a list of edges adjacent to vertex s. </short>
          <long>&#10;&#10; Retrieves a list of edges adjacent to vertex s.  If the graph is directed, &#10;&#10; s is taken to be the source of the directed edge.&#10;&#10; &#10;&#10; @param s The first vertex or source of the edge.&#10;&#10; @return The key to the first node of the list if the vertex was valid,&#10;&#10;         maxEdges() if it was not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7dca2b70" loc="136:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edges" ref="0x7dca63b0" loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="58:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Gets the number of edges currently in the graph. </short>
          <long>&#10;&#10; Gets the number of edges currently in the graph.  This should return the &#10;&#10; number of &#34;conceptual&#34; edges.  For example, an undirected graph might use &#10;&#10; two directed edges for each undirected edge in its implementation, but this&#10;&#10; only counts as one edge here.  For some implementations, this will always &#10;&#10; equal maxEdges() if all edges are preallocated.&#10;&#10; &#10;&#10; @return The number of edges currently in the graph.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SourceShortestPath" loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
      <documentation loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
        <short>&#10;&#10; Access details on the shortest path between vertices of a graph.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access details on the shortest path between vertices of a graph.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="rebuildNeeded" ref="0x7dc9a840" loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="75:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; Checks if the tree should be rebuilt either because the source has changed&#10;&#10; or because the underlying graph structure has changed.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if the tree should be rebuilt either because the source has changed&#10;&#10; or because the underlying graph structure has changed.&#10;&#10;&#10;&#10; @param src The source vertex.&#10;&#10; @return Whether a rebuild is needed.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7dc9a570" loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="buildTree" ref="0x7dc9d3e8" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; Build a shortest path tree from vertex src.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Build a shortest path tree from vertex src.&#10;&#10;&#10;&#10; @param src The source vertex.&#10;&#10; @return If the vertex is too large then ESIZE or if a tree is currently&#10;&#10;         being built then EBUSY, else SUCCESS.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7dc9d178" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="builtTree" ref="0x7dc9db48" loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; The shortest path tree from vertex src is complete.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The shortest path tree from vertex src is complete.&#10;&#10;&#10;&#10; @param src The source vertex.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7dc9d940" loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="buildingTree" ref="0x7dc9ae00" loc="89:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="84:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; Checks if the tree is currently being built.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if the tree is currently being built.&#10;&#10;&#10;&#10; @return Whether the tree is being built.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="edgeCount" ref="0x7dc99688" loc="100:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="91:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; Get the number of edges to the destination vertex.&#10;&#10;</short>
          <long>&#10;&#10; Get the number of edges to the destination vertex.&#10;&#10; For example, if the shortest path from A to C was A -> D -> C, edgeCount()&#10;&#10; would return 2.&#10;&#10;&#10;&#10; @param dest The destination vertex.&#10;&#10; @return The number of edges.  If there is no path to the given destination,&#10;&#10;         or if an input vertex is too large, then the count is 0.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7dc99398" loc="100:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="buildTreeTo" ref="0x7dc9b510" loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="56:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; Build the shortest path from vertex src to vertex dest.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Build the shortest path from vertex src to vertex dest.&#10;&#10;&#10;&#10; @param src The source vertex.&#10;&#10; @param dest The destination vertex.&#10;&#10; @return If the vertex is too large then ESIZE or if a tree is currently&#10;&#10;         being built then EBUSY, else SUCCESS.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7dc9b0c8" loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7dc9b260" loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="builtTreeTo" ref="0x7dc9a010" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; The shortest path from vertex src to vertex dest is complete.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The shortest path from vertex src to vertex dest is complete.&#10;&#10;&#10;&#10; @param src The source vertex.&#10;&#10; @param dest The destination vertex.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7dc9ba68" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7dc9bc00" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
            </type-int>
          </variable>
          <variable name="pathResult" ref="0x7dc9bda0" loc="73:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GraphEdge" loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdge.nc">
      <documentation loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdge.nc">
        <short>&#10;&#10; Access information about an edge of the graph.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access information about an edge of the graph.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="src" ref="0x7dc7b3d8" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdge.nc">
        <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdge.nc">
          <short>&#10;&#10; Get the first or source vertex of the edge.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Get the first or source vertex of the edge.&#10;&#10; &#10;&#10; @param m The key for the edge.&#10;&#10; @return The first or source vertex.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdge"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dc7b1b8" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdge.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dest" ref="0x7dc7bb48" loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdge.nc">
        <documentation loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdge.nc">
          <short>&#10;&#10; Get the second or destination vertex of the edge.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Get the second or destination vertex of the edge.&#10;&#10; &#10;&#10; @param m The key for the edge.&#10;&#10; @return The second or destination vertex.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdge"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dccfd30"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dc7b918" loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdge.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GraphEdgeWeight" loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
      <documentation loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
        <short>&#10;&#10; Access information about the weight of an edge of the graph.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access information about the weight of an edge of the graph.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="weight_t" ref="0x7dc753a0" loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
          <interfacedef-ref qname="GraphEdgeWeight"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="weight_t" scoped="" ref="0x7dc753a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="canChangeWeights" ref="0x7dc75a78" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
        <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
          <short>&#10;&#10; Checks if the graph weights can be changed. </short>
          <long>&#10;&#10; Checks if the graph weights can be changed.  This value should not change &#10;&#10; at run-time.&#10;&#10; &#10;&#10; @return TRUE if the graph weights can change, FALSE if they cannot.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="weightChanged" ref="0x7dc722d8" loc="71:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
        <documentation loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
          <short>&#10;&#10; The weight of an edge in the graph changed.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; The weight of an edge in the graph changed.&#10;&#10; &#10;&#10; @param m The key for the edge that had its weight changed.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dc720c0" loc="71:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setWeight" ref="0x7dc74b58" loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
        <documentation loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
          <short>&#10;&#10; Set the weight of the edge. </short>
          <long>&#10;&#10; Set the weight of the edge.  If the graph is actually unweighted, no&#10;&#10; action is taken.&#10;&#10; &#10;&#10; @param m The key for the edge.&#10;&#10; @param w The updated weight.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="weight_t" scoped="" ref="0x7dc753a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dc74798" loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
            </type-int>
          </variable>
          <variable name="w" ref="0x7dc74928" loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="weight_t" scoped="" ref="0x7dc753a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="weight" ref="0x7dc74250" loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
        <documentation loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
          <short>&#10;&#10; Get the weight of the edge. </short>
          <long>&#10;&#10; Get the weight of the edge.  If the graph is actually unweighted, a unit&#10;&#10; weight is always returned.&#10;&#10; &#10;&#10; @param m The key for the edge.&#10;&#10; @return The weight of the edge.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="weight_t" scoped="" ref="0x7dc753a0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dc74010" loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dccff00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IndexedAlloc" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
      <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
        <short>&#10;&#10; Interface to a component that implements a run-time allocation policy on top&#10;&#10; of a static size array via indices. </short>
        <long>&#10;&#10; Interface to a component that implements a run-time allocation policy on top&#10;&#10; of a static size array via indices.  This simplifies component design by&#10;&#10; moving the policy out of each component, leading to cleaner code.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="size" ref="0x7dc59330" loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="58:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; The number of elements currently allocated.&#10;&#10;</short>
          <long>&#10;&#10; The number of elements currently allocated.&#10;&#10; Always less than or equal to maxSize().&#10;&#10;&#10;&#10; @return The number of elements currently allocated.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dc60cb8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="allocated" ref="0x7dc58e58" loc="95:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="90:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Checks if an index is currently allocated.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Checks if an index is currently allocated.&#10;&#10; &#10;&#10; @return TRUE if the index is allocated, FALSE if it is not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dc60cb8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dc58c40" loc="95:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dc60cb8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7dc598f8" loc="71:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; The maximum number of elements that can be allocated.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The maximum number of elements that can be allocated.&#10;&#10;&#10;&#10; @return The maximum size that can be allocated.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dc60cb8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="alloc" ref="0x7dc59f00" loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="73:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Allocate an index in the set.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Allocate an index in the set.&#10;&#10; &#10;&#10; @return If an index is free, it will be allocated and returned.  Otherwise,&#10;&#10;         maxSize() is returned to indicate that all elements are allocated.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dc60cb8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="none" ref="0x7dc5a750" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Checks if none of the elements are allocated.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if none of the elements are allocated.&#10;&#10;&#10;&#10; @return TRUE if none of the elements are allocated, FALSE otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="free" ref="0x7dc586f8" loc="88:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="81:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Frees an index in the set.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Frees an index in the set.&#10;&#10; &#10;&#10; @return If an index is allocated, it will be freed and SUCCESS is returned.&#10;&#10;         If it was already free, no change is made and EALREADY is returned.&#10;&#10;         If the index is too large, ESIZE is returned.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dc60cb8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dc58470" loc="88:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dc60cb8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="all" ref="0x7dc5ad10" loc="56:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Checks if all of the elements are allocated.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if all of the elements are allocated.&#10;&#10;&#10;&#10; @return TRUE if all of the elements are allocated, FALSE otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="PriorityQueue" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <short>&#10;&#10; Interface to a priority queue sitting on top of an index heap. </short>
        <long>&#10;&#10; Interface to a priority queue sitting on top of an index heap.  The meaning&#10;&#10; of some terms defined here is implementation dependent since either a min or&#10;&#10; max heap could be used.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7dbd39f0" loc="122:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="119:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Removes all elements from the priority queue.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="findBest" ref="0x7dbd4e20" loc="109:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="103:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Finds the index of the element with the best priority (at the root of the&#10;&#10; heap), but does not remove it.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Finds the index of the element with the best priority (at the root of the&#10;&#10; heap), but does not remove it.&#10;&#10; &#10;&#10; @return Index of the element with the best priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7dbdd650"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7dbd7010" loc="62:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; The maximum number of elements the priority queue can hold.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The maximum number of elements the priority queue can hold.&#10;&#10;&#10;&#10; @return The maximum priority queue size.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7dbdd650"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="insert" ref="0x7dbd7828" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Insert the element at index m into the priority queue.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Insert the element at index m into the priority queue.&#10;&#10;&#10;&#10; @param m Index of the element to insert.&#10;&#10; @return If the priority queue is full then FAIL, if m is too large for the&#10;&#10;         queue then ESIZE, if m has already been inserted then EALREADY,&#10;&#10;         otherwise SUCCESS.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7dbdd650"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dbd7560" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7dbdd650"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="moveUp" ref="0x7dbd57b8" loc="87:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; If the priority of element m has improved, move that element up the heap&#10;&#10; if needed.&#10;&#10;</short>
          <long>&#10;&#10; If the priority of element m has improved, move that element up the heap&#10;&#10; if needed.&#10;&#10; @param m Index of the element with altered priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7dbdd650"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dbd5558" loc="87:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7dbdd650"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="move" ref="0x7dbd47c8" loc="101:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="96:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; If the priority of element m has changed, move that element up or down the &#10;&#10; heap if needed.&#10;&#10;</short>
          <long>&#10;&#10; If the priority of element m has changed, move that element up or down the &#10;&#10; heap if needed.&#10;&#10; @param m Index of the element with altered priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7dbdd650"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dbd4558" loc="101:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7dbdd650"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inserted" ref="0x7dbd5010" loc="80:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="74:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Checks whether element m has already been inserted.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Checks whether element m has already been inserted.&#10;&#10; &#10;&#10; @param m Index of the element to check on.&#10;&#10; @return TRUE if element m has already been inserted, otherwise FALSE.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7dbdd650"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dbd7d80" loc="80:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7dbdd650"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="moveDown" ref="0x7dbd4010" loc="94:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="89:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; If the priority of element m has worsened, move that element down the heap&#10;&#10; if needed.&#10;&#10;</short>
          <long>&#10;&#10; If the priority of element m has worsened, move that element down the heap&#10;&#10; if needed.&#10;&#10; @param m Index of the element with altered priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7dbdd650"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dbd5d08" loc="94:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7dbdd650"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7dbd83d8" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Checks if the priority queue is empty.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if the priority queue is empty.&#10;&#10;&#10;&#10; @return Whether the priority queue is empty.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="removeBest" ref="0x7dbd34a8" loc="117:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="111:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Finds the index of the element with the best priority (at the root of the&#10;&#10; heap) and removes it from the priority queue.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Finds the index of the element with the best priority (at the root of the&#10;&#10; heap) and removes it from the priority queue.&#10;&#10; &#10;&#10; @return Index of the element with the best priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7dbdd650"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="size" ref="0x7dbd89e8" loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; The number of elements currently in the priority queue.&#10;&#10;</short>
          <long>&#10;&#10; The number of elements currently in the priority queue.&#10;&#10; Always less than or equal to maxSize().&#10;&#10;&#10;&#10; @return The number of elements in the priority queue.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7dbdd650"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Compare" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Compare.nc">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Compare.nc">
        <short>&#10;&#10; Generalized comparison interface between two items. </short>
        <long>&#10;&#10; Generalized comparison interface between two items.  Many uses are possible&#10;&#10; here, since the inputs could be array indices, as just one example.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="compare_t" ref="0x7dbd0828" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Compare.nc">
          <interfacedef-ref qname="Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7dbd0828"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7dbc9318" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Compare.nc">
        <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Compare.nc">
          <short>&#10;&#10; Returns a negative integer, zero, or a positive integer if the first&#10;&#10; argument is less than, equal to, or greater than the second.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns a negative integer, zero, or a positive integer if the first&#10;&#10; argument is less than, equal to, or greater than the second.&#10;&#10;&#10;&#10; @param a First item to test.&#10;&#10; @param b Second item to test.&#10;&#10; @return A negative integer, zero, or a positive integer.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1">
            <typename><typedef-ref name="int16_t" ref="0x7fea00f0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7dbd0828"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7dbd0828"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x7dbd0e18" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7dbd0828"/></type-var>
          </variable>
          <variable name="b" ref="0x7dbc9010" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7dbd0828"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>

<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="54:TestDsrAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ec045f8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ef92930"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ef92930"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ec14300"/></to>
    </wire>
    <wire loc="56:TestDsrAppC.nc">
      <from><interface-ref name="PEControl" scoped="" ref="0x7ebf1bd8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7eb05a78"/></to>
    </wire>
    <wire loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7eb05a78"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7eab4338"/></to>
    </wire>
    <wire loc="57:TestDsrAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7ebf4ee8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e708af0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e708af0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e6f5c08"/></to>
    </wire>
    <wire loc="59:TestDsrAppC.nc">
      <from><interface-ref name="SendA" scoped="" ref="0x7eb83710"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da59938"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7da59938"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dab7790"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:TestDsrAppC.nc">
      <from><interface-ref name="SendB" scoped="" ref="0x7eb83dd8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da56a38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7da56a38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dab7790"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:TestDsrAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7eb617d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7da586a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7da586a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e702088"/></to>
    </wire>
    <wire loc="62:TestDsrAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7eb516e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7da57310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7da57310"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7dab65e0"/></to>
    </wire>
    <wire loc="64:TestDsrAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7eb74408"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7da51ec0"/></to>
    </wire>
    <wire loc="65:TestDsrAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7eb74408"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7da43d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7da43d30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7dab6100"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7da51ec0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7dab6100"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:TestDsrAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7eb408c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7da409e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7da409e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7e8b81e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d5b59a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d5c9ed0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d5e7d40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d6206d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d62c030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d65b1e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d6710b0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7df6d678"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7df8dd88"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e02b2a0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e0d1770"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e57a060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d75c4e8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e5e83f0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e8b1358"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e8e2540"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e910cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d877070"/></to>
    </wire>
    <wire loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7eab4010"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7ec14648"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f232c50"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f232c50"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f071598"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7ec14b78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ef81e58"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ef81e58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ef53d58"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ec14ee8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ef72068"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e4d6580"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ef63940"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ec43160"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7ef52518"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ec44d58"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7ef521a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e16b9f8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7ef521a8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7ef61b50"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7ef61b50"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7ef31030"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ef61eb8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7ef72068"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7ef13800"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7ef00068"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7ef00068"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ede1ac8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ef231a0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7ef61eb8"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7ee91e78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ece02d8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7eec3e98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ed92330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ed92330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d950718"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7eeb0068"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ed74d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ed74d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9140f8"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7eea0e78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ed60410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ed60410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8e06c0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7eef3428"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ede0e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ede0e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9f1ac8"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7eea1af8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ed61090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ed61090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8e3228"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7eef27a8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7edd0bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7edd0bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9c32b0"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7eee0980"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7edb05d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7edb05d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d987c08"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7eec1bd8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ed90030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ed90030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d94b570"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7eea3d98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ed71ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ed71ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d90f010"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7ef02348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ede3e70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ede3e70"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9f98a0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7eef0508"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7edc3890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7edc3890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9bb0f8"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7eed26c8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7eda3250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7eda3250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d981a88"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7eeb3980"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ed84c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ed84c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d946538"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7ee92b00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ed52170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ed52170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8d9538"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7ee83d98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ecc3bc0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7eeb2cb8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ed80a18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ed80a18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d918c78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ede1ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9f4718"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7eee2268"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7edc15d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7edc15d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9b6010"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7ee90aa0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ecd3590"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7eee15e8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7edb12a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7edb12a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d98a7f8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7eec2858"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ed92c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ed92c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d94e0f8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7eeb09d8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ed72790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ed72790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d913ac8"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7ee93808"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ed60d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ed60d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8dd0b0"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7eef3d98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7edd37d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7edd37d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9ef570"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7eef1188"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7edc45d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7edc45d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9c2c78"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7eed3348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7edb0f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7edb0f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9856c0"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7eec05e8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ed90988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ed90988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d949010"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7eea27a8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ed704f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ed704f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d90e9e8"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7ef02cb8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ede27f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ede27f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9f72d0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7eef0e78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7edc2250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7edc2250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9baac8"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7eed1068"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7eda3ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7eda3ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d97d538"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7ee91508"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ed52ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ed52ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8d7010"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7eec3428"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ed939c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ed939c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d954d08"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7eeb16c8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ed74410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ed74410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d916718"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7eea0508"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ed619e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ed619e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8e2c08"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7ee827a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ecc1f20"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7ef009d8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ede04f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ede04f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9f20f8"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7eee2bd8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7edc1f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7edc1f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9b59e8"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7eea1188"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ed626f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ed626f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8e57f8"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7eee0010"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7edb1bf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7edb1bf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d988228"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7eec1268"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ed916b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ed916b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d94dac8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7eea3428"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ed71170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ed71170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d911570"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7ee92190"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ed54790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ed54790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8dba88"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7ef039a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ede3518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ede3518"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7da22ed8"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7eef1af8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7edc4f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7edc4f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9c0718"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7eed3cb8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7eda4890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7eda4890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9830b0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7eeb3010"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ed84330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ed84330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9489e8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7ee83428"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ecd0880"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7eeb2348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ed800c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ed800c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9192b0"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7eed19d8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7eda25d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7eda25d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d97b010"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7ef016c8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ede1170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ede1170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9f6c90"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7eee3878"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7edc2ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7edc2ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9b8570"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f071d30"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f052188"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f0108c0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7efe3e38"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7e7e08d8"/></to>
    </wire>
    <wire loc="70:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x7eaf4808"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7eab1310"/></to>
    </wire>
    <wire loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7eb04178"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7eab4a08"/></to>
    </wire>
    <wire loc="69:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7eb03258"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7eab3b80"/></to>
    </wire>
    <wire loc="71:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7eaf4b28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7eab1630"/></to>
    </wire>
    <wire loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="PacketEngine" scoped="" ref="0x7eae0eb0"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7eab0010"/></to>
    </wire>
    <wire loc="68:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7eb04aa8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7eab33e8"/></to>
    </wire>
    <wire loc="73:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="PacketWaitList" scoped="" ref="0x7ead0a98"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7eab0e78"/></to>
    </wire>
    <wire loc="74:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7eaa6c70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7ead6890"/></to>
    </wire>
    <wire loc="75:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7eaa55e0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7ead5208"/></to>
    </wire>
    <wire loc="76:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7eaa5d80"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7ead59a8"/></to>
    </wire>
    <wire loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="PacketEngineClient" scoped="" ref="0x7eaa3790"/></from>
      <to><interface-ref name="PacketEngineClient" scoped="" ref="0x7eac3210"/></to>
    </wire>
    <wire loc="81:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="ReceivePool" scoped="" ref="0x7ea94e40"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7e9535e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x7e9535e0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7d877418"/></to>
    </wire>
    <wire loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7ea84430"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7e9243d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7e9243d8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7e914100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7ea82f18"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e8e7138"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e8e7138"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e8e1298"/></to>
    </wire>
    <wire loc="84:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SendBackoff" scoped="" ref="0x7ea903f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e8f2a40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e8f2a40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7e8b81e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7eaa3c18"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e702088"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e702088"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e6f3ab8"/></to>
    </wire>
    <wire loc="189:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <from><interface-ref name="msgAdded" scoped="" ref="0x7ea64778"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <from><interface-ref name="msgAction" scoped="" ref="0x7ea64ea8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7e914100"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7e907278"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e8e1298"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e8d4298"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7e8e5870"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7e8e2958"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7e8e2958"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7e8d5928"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e923bb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e8e2540"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e8e2540"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e8d5510"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7e8b81e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7e8b19f0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7e8b19f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e760da8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e8b1358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e897928"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7e8a2230"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7e7174c8"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e897928"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e7e61e8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7e724dc0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e788b60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7e766b60"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7e888540"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7e888540"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7e7e6620"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7e717de8"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7e882438"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7e882438"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e791e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x7e791e40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7d865190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7e7e61e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d867538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7e7e6620"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d867970"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d863170"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e7f50f8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e7f50f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e7e5b08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7d862ec0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7e7f4e90"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7e7f4e90"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7e7e2938"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x7d861710"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7e7f26f8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e7f26f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7e7e1228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7d84fe68"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7e7f1e90"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7e7f1e90"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7e7e0c38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x7e7632d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7e721c90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e6f5c08"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7df465c0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7e7053e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e6f44c8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7e6f44c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e6c7dd0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7e7044f0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e6f35d0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7e6f35d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e6c6f00"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7e7049d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e6f1778"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7e6f1778"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e6c3010"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e705d18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e6f4df8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e6f4df8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e6c6768"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e6f8dd8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e6e6d38"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e6e6d38"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7dfd0b20"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e6f3ab8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e6c4400"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7df465c0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7df43070"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7e6e08f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7e65b5d0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7e65b5d0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7e655ad0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7e6e6768"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7dfd0528"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7e6d4b98"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7df47a08"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7df47a08"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7df344b0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7e6c90b0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7df27ae8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7df27ae8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7df22770"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7df43070"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e6600c8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e6600c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e659b20"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7e6c1010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dfa0a38"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7dfa0a38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7df8d6e8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7df911c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7df27440"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7df27440"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7df262a0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7df262a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7df6fe60"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7df6fe60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7df45460"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7df45460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7df4c7e0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7df4c7e0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7df4b8f0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7df4b8f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e6606a8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7e6606a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e655178"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7e6c16e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7df47518"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7df47518"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7df45b30"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7df45b30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7df738d0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7df738d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7df6ec68"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7df72388"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7df4ce80"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7df4ce80"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7df4b3e8"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7df4b3e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e660d68"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e660d68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e030ab8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e6a6010"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e123608"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7e6c1bc8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7dfd0528"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e6b39c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dfcf040"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7e6a73f0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7e5f5340"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7e5f5340"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7e5e8e00"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e030ab8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e02bf10"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e645e58"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e6f3ab8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e64b8b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e5f6bb8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e5f6bb8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e5e8738"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7e646a80"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7e5f4200"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7e5f4200"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7e5e7c80"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7e64a450"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7e108b98"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7e64a450"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7e030190"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7e030190"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7e02b5e8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7e108b98"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7e0d1ab8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7e641b18"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7e107010"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7e107010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e0d1f08"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7e645290"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7e1076b8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7e1076b8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7e0d05e0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7e63aa40"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7dfd0528"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e639060"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dfcf040"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e645a30"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e8e7138"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7e639538"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7dfa6d18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7dfa6d18"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7e914100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e633da8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e1a0578"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e1a0578"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e18d330"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7e630170"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7e631960"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7e631010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7e5eb670"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7e5e6788"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e5cabd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e6f3ab8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7e5e5478"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7e57a508"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7e57a508"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7e575c90"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7e5e3bb8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7e3bd188"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7e3bd188"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7eef27a8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7e5e2608"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7e3bce78"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7e3bce78"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7eef3428"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7e5e1010"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7e3ba190"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7e3ba190"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x7ef009d8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7e5d8570"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7e3adb10"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7e3adb10"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7e34f298"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7e5c98b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e163010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e163010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e32f450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7e5c8d78"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7e1626c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7e1626c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7e5ca1a8"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7e162a18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7e162a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7e5ca890"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7e1604e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7e1604e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7e5ca520"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7e160840"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7e160840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7e5d0800"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7e160ef0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7e160ef0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7e5d0cd0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7e1513e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7e1513e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7e5d51a8"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7e151820"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7e151820"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7e5d5600"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7e151c58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7e151c58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e5d5a58"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7e1500b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e1500b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7e5d35e0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7e14f6a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7e14f6a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e32ec80"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7e5d5ea8"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7e150920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7e150920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7e5d2338"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7e150d58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7e150d58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7e5c67c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e149230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e149230"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e32f450"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7e5c60d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e131010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e131010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e32f450"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e5d8b60"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e123608"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7e5c29c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7e5c2298"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e57a060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e3c43c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7e3c43c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e3c6b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7e575c90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d7ffea0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7d7ffea0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d7f80e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7d7f5980"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d7fc988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7d7fc988"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d7f1d78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x7d7f6910"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e4a5a28"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7e4a5a28"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e3f70c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7d7ee540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e560db0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e560db0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e542ef8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7d7eb340"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7e54a278"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7e54c570"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7e53bcc8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7e547448"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7e539930"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e54a278"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7e537530"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e54a278"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7e535cc8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e54a278"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7e532490"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x7e531c20"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7e7f4e90"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e4d6968"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e560db0"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7e3e8150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e40de30"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7e40de30"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e409890"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e3fd878"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e560db0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7e3bdaf8"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7eee2bd8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7e3bc508"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7eea3d98"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7e3be760"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7eeb3010"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7e3bb808"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7eec1bd8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7e3ad4f8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7e3a2c60"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7e3b11b0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7e39d720"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x7e3ac300"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7e547448"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7e39dd18"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7e38abe8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7e38abe8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e35a978"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x7e34f8c8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7e3be760"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7e38c430"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e3656c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7e38bbe8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e35e788"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7e389430"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e357a88"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7e38cbe8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e3636c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7e38a430"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e35c8f0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7e38dc50"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e3726c0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7e38b430"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e3606c0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e372e78"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7e381c48"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e365e78"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7e383010"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e363e78"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7e383388"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e360e78"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7e383700"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e35d010"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7e383a78"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e35b0b8"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7e383df0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e358190"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7e3821b0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e356270"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7e382528"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x7e34edf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7e160190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e14ff18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e32ec80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7e1504e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7e1636c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7e32fb18"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7e32fb18"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7e32bc58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7e162010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7e160b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7e14fae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e32ec80"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7e14e368"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e32e2f8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7e162368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7e14f270"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e32ec80"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7e163be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7e162d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7e14eb40"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e32e2f8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7e32e2f8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e327d50"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7e32ec80"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e3266c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7e32d438"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e326d88"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e32f450"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e3273f0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e3254f8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7e31cdd8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7e2ee6c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7e2ee6c8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7e914100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7e325890"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e2ea220"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e2ea220"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e2e3010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7e31f050"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7e2ea8d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x7e2ea8d8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7e2e4590"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7e31c9a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7e2eac10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7e2eac10"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7e2e48d8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e3215b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e1a0578"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7e31be90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7e2e48d8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7e2d0d68"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7e2e4590"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7e2d0a40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7e2ebe98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e2e4250"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e2e4250"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e2d0720"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e2e3010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e2cf4d0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7e2cb880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e1a80c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e1a80c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d75b908"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7e2aa588"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7e1a8c10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7e1a8c10"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7d75a470"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7e2afcc0"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7e26a1c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7e26a1c0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7e267ed0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7e2aa990"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff2d38"/></to>
    </wire>
    <wire loc="207:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7e290010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7e24f9d8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff2d38"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7e261348"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7eef27a8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7e261cb8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7eef1188"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7e2606c8"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7eef1af8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7e24f068"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7eef0508"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7e1a8808"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7d75a068"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7d75a930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e1a70f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x7d75ad58"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7d75c820"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x7d759430"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e16b9f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e18d010"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7e18c010"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7e16dd48"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7e16dd48"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7ef02cb8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7e18c980"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7e16c6f0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7e16c6f0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7ef02348"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7e18b348"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7e16b098"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7e16b098"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7ef039a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7e145a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7e146d38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7e147260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e142010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e32ec80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7e1455c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7e145e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7e1464c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7e1498e8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7e32fb18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7e148190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7e147c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7e147910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e145190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7e1475b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7e143b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e32ec80"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7e142448"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e32e2f8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7e1484e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7e146900"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7e146010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7e148840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7e1436e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e32ec80"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7e1432b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e32ec80"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7e149e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7e148ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7e148b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7e142c20"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e32e2f8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7e12c920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7e12dc58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7e12f190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e12bf18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e32ec80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7e12c4e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7e12cd58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7e12d3e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7e1316c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7e32fb18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7e130010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7e12fb98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7e12f840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e12c0b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7e12f4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7e12bae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e32ec80"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7e12a368"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e32e2f8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7e130368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7e12d820"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7e12fef0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7e1306c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7e12b6a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e32ec80"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7e12b270"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e32ec80"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7e131be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7e130d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7e130a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7e12ab40"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e32e2f8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7e101198"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7e0cf618"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7e103d68"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7e0cf298"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioTimeStamping" scoped="" ref="0x7e1028e0"/></from>
      <to><interface-ref name="TimeStamp" scoped="" ref="0x7e0d0dc0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7e0cfac0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7e57a508"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7e0cb288"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7e3be760"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7e0cbc18"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7e3bd188"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7e0ca6e8"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7e3bb808"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7e0ccc58"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7e3ad4f8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7e0c9090"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e04cce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e04cce0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e32f450"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7e0c9758"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7e04a410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7e04a410"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7e32fb18"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7e0c8cf0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7e049010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7e049010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7e0c7088"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7e049a18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7e049a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7e0c7400"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7e049d70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7e049d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7e0c7778"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7e04ac80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7e04ac80"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7e0c88a0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7e046190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7e046190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7e0c9c88"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7e0437e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7e0437e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e32e2f8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e0c8450"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e044b20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e044b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e32ec80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e0c7af0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7e047d28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e047d28"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7e0c2c58"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7e0305b8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7e0305b8"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7e02ba10"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7e0cc210"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7dfd0528"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e0cc800"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dfcf040"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e0c4338"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e1a0578"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7e0465c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7e0478f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7e046a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7e047080"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7e048840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7e0484e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7e048190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7e0446e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e32ec80"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7e043010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e32e2f8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7e0474b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7e048b98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7e049368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7e0442b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e32ec80"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7e046e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e32ec80"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7e04a928"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7e0496c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7e02f010"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7e02a470"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e025ab8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e1a0578"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7e02a7e0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7e3bd188"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7e0291a8"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7e3bdaf8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7e029b38"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7e3bc508"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7e028530"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7e3b11b0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7e028b48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dfd2590"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7dfd2590"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e32f450"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7e027288"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7dfb17a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7dfb17a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e32e2f8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7e027cf0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7dfd1190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7dfd1190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7e027978"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7dfc1010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7dfc1010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7e026180"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7dfd0528"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e026770"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dfcf040"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7e026b98"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7e5f5340"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7e020eb8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7dfc0d58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7dfc00b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7dfc25b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dfb1368"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e32ec80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7dfc0920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7dfb2270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7dfc1820"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7dfd2c48"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7e32fb18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7dfd14e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7dfc2c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7dfc04e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7dfc2910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7dfb2f18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e32ec80"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7dfd1840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7dfc1c58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7dfc1368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e32d438"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7dfd1b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7dfb2ae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e32ec80"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7dfb26a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e32ec80"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7dfc2260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7dfd1ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dfb0010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e32e2f8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7df8c1c0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7df911c0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7df8c860"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7df8e0e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7df8e0e8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7e914100"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7df8b010"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e8e7138"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7df8b420"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dfcf040"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7df73de8"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7df6d198"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7df6da08"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7df72388"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7df6def8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dfcf040"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7df46bb0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7df2ae50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7df2ae50"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7e914100"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7df22e60"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e6f8dd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7da58010"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7dabade8"/></to>
    </wire>
    <wire loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7dabade8"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7daaf760"/></to>
    </wire>
    <wire loc="58:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7dab65e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7daaef10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x7dab5010"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Send" scoped="" ref="0x7d6b9a00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d6b9a00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7eb04178"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleProtocolC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7da605b8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7da60c90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x7da60c90"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e7049d0"/></to>
    </wire>
    <wire loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7db2cef8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ded0588"/></to>
    </wire>
    <wire loc="73:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ded0588"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7deab9c8"/></to>
    </wire>
    <wire loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7dec9af8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7db2b5e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x7db2b5e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e7049d0"/></to>
    </wire>
    <wire loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7ded0ca8"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7dac89e0"/></to>
    </wire>
    <wire loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7ded0ca8"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7dac2e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketEngine" scoped="" ref="0x7dac2e48"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7eae0eb0"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PacketEngine" scoped="" ref="0x7dac89e0"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7eae0eb0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SinglePacketEngine" scoped="" ref="0x7decf898"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7dac89e0"/></to>
    </wire>
    <wire loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="DsrPacketEngine" scoped="" ref="0x7dece430"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7dac2e48"/></to>
    </wire>
    <wire loc="56:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7decd030"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7dac7660"/></to>
    </wire>
    <wire loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7decd030"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7dac1a20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketWaitList" scoped="" ref="0x7dac1a20"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7ead0a98"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PacketWaitList" scoped="" ref="0x7dac7660"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7ead0a98"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7decdbf8"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7dac7660"/></to>
    </wire>
    <wire loc="59:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7decb7f8"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7dac1a20"/></to>
    </wire>
    <wire loc="61:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7deca330"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e6f8dd8"/></to>
    </wire>
    <wire loc="62:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7deca818"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7dabade8"/></to>
    </wire>
    <wire loc="63:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7decaec0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e702088"/></to>
    </wire>
    <wire loc="65:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7dec8260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da66cb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7da66cb0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dab7790"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7de90a20"/></from>
      <to><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7ded0ca8"/></to>
    </wire>
    <wire loc="76:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SinglePacketEngine" scoped="" ref="0x7de885f8"/></from>
      <to><interface-ref name="SinglePacketEngine" scoped="" ref="0x7decf898"/></to>
    </wire>
    <wire loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="DsrPacketEngine" scoped="" ref="0x7de83190"/></from>
      <to><interface-ref name="DsrPacketEngine" scoped="" ref="0x7dece430"/></to>
    </wire>
    <wire loc="78:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7de83d70"/></from>
      <to><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7decd030"/></to>
    </wire>
    <wire loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7de829e8"/></from>
      <to><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7decdbf8"/></to>
    </wire>
    <wire loc="80:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7de805e8"/></from>
      <to><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7decb7f8"/></to>
    </wire>
    <wire loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7de65c60"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7deca330"/></to>
    </wire>
    <wire loc="83:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7de64160"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7deca818"/></to>
    </wire>
    <wire loc="84:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7de64808"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7decaec0"/></to>
    </wire>
    <wire loc="85:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7de55430"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7dec9af8"/></to>
    </wire>
    <wire loc="87:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7de536c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dec8260"/></to>
    </wire>
    <wire loc="89:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Header" scoped="" ref="0x7dea6030"/></from>
      <to><interface-ref name="Header" scoped="" ref="0x7dda8598"/></to>
    </wire>
    <wire loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="Header" scoped="" ref="0x7dda8598"/></from>
      <to><interface-ref name="TlvBlock" scoped="" ref="0x7dd960d8"/></to>
    </wire>
    <wire loc="90:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteRequest" scoped="" ref="0x7de92e48"/></from>
      <to><interface-ref name="RouteRequest" scoped="" ref="0x7dda8aa8"/></to>
    </wire>
    <wire loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteRequest" scoped="" ref="0x7dda8aa8"/></from>
      <to><interface-ref name="Tlv" scoped="" ref="0x7dd965b0"/></to>
    </wire>
    <wire loc="91:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteError" scoped="" ref="0x7de891c8"/></from>
      <to><interface-ref name="RouteError" scoped="" ref="0x7dda66c0"/></to>
    </wire>
    <wire loc="71:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteError" scoped="" ref="0x7dda66c0"/></from>
      <to><interface-ref name="TlvMultiple" scoped="" ref="0x7dd43b78"/></to>
    </wire>
    <wire loc="92:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteErrorList" scoped="" ref="0x7de84660"/></from>
      <to><interface-ref name="RouteErrorList" scoped="" ref="0x7dda6f20"/></to>
    </wire>
    <wire loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteErrorList" scoped="" ref="0x7dda6f20"/></from>
      <to><interface-ref name="TlvList" scoped="" ref="0x7dd413c0"/></to>
    </wire>
    <wire loc="93:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SourceRoute" scoped="" ref="0x7de90340"/></from>
      <to><interface-ref name="SourceRoute" scoped="" ref="0x7dda2850"/></to>
    </wire>
    <wire loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="SourceRoute" scoped="" ref="0x7dda2850"/></from>
      <to><interface-ref name="Tlv" scoped="" ref="0x7dd33150"/></to>
    </wire>
    <wire loc="95:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteCache" scoped="" ref="0x7de73010"/></from>
      <to><interface-ref name="RouteCache" scoped="" ref="0x7dd2eb50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RouteCache" scoped="" ref="0x7dd2eb50"/></from>
      <to><interface-ref name="RouteCache" scoped="" ref="0x7d690210"/></to>
    </wire>
    <wire loc="96:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteNodeList" scoped="" ref="0x7de736b0"/></from>
      <to><interface-ref name="RouteNodeList" scoped="" ref="0x7dd2d200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RouteNodeList" scoped="" ref="0x7dd2d200"/></from>
      <to><interface-ref name="RouteNodeList" scoped="" ref="0x7d690878"/></to>
    </wire>
    <wire loc="97:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteRequestInCache" scoped="" ref="0x7de686e0"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7db96b38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DataCache" scoped="" ref="0x7db96b38"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7d5e5100"/></to>
    </wire>
    <wire loc="98:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteRequestOutCache" scoped="" ref="0x7de6c7f8"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7db6f3d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DataCache" scoped="" ref="0x7db6f3d8"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7d5c7290"/></to>
    </wire>
    <wire loc="99:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteRequestOutTimer" scoped="" ref="0x7de61de0"/></from>
      <to><interface-ref name="DataTimer" scoped="" ref="0x7db69058"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DataTimer" scoped="" ref="0x7db69058"/></from>
      <to><interface-ref name="DataTimer" scoped="" ref="0x7d5b5d48"/></to>
    </wire>
    <wire loc="101:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Equal" scoped="" ref="0x7db95c68"/></from>
      <to><interface-ref name="RouteRequestInEqual" scoped="" ref="0x7dea9668"/></to>
    </wire>
    <wire loc="102:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Equal" scoped="" ref="0x7db6d518"/></from>
      <to><interface-ref name="RouteRequestOutEqual" scoped="" ref="0x7deab0c0"/></to>
    </wire>
    <wire loc="104:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Compose" scoped="" ref="0x7de4ec10"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7db39d20"/></to>
    </wire>
    <wire loc="105:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7de53d90"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7db37108"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7db37108"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7e914100"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="107:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7de525b8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e8e7138"/></to>
    </wire>
    <wire loc="109:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7dea80c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ef92930"/></to>
    </wire>
    <wire loc="146:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <from><interface-ref name="composePkt" scoped="" ref="0x7de4db20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TlvList" scoped="" ref="0x7dd413c0"/></from>
      <to><interface-ref name="TlvList" scoped="" ref="0x7dd8dbe8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="AckList" scoped="" ref="0x7dda4ba0"/></from>
      <to><interface-ref name="TlvList" scoped="" ref="0x7dd35200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvList" scoped="" ref="0x7dd35200"/></from>
      <to><interface-ref name="TlvList" scoped="" ref="0x7dd8dbe8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Tlv" scoped="" ref="0x7dd965b0"/></from>
      <to><interface-ref name="Tlv" scoped="" ref="0x7dd8e780"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteReplyList" scoped="" ref="0x7dda79f8"/></from>
      <to><interface-ref name="TlvList" scoped="" ref="0x7dd49d10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvList" scoped="" ref="0x7dd49d10"/></from>
      <to><interface-ref name="TlvList" scoped="" ref="0x7dd8dbe8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Tlv" scoped="" ref="0x7dd33150"/></from>
      <to><interface-ref name="Tlv" scoped="" ref="0x7dd8e780"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TlvBlock" scoped="" ref="0x7dd960d8"/></from>
      <to><interface-ref name="TlvBlock" scoped="" ref="0x7dd8e010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvMultiple" scoped="" ref="0x7dd43b78"/></from>
      <to><interface-ref name="TlvMultiple" scoped="" ref="0x7dd8d100"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="AckRequest" scoped="" ref="0x7dda5bd0"/></from>
      <to><interface-ref name="Tlv" scoped="" ref="0x7dd37230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Tlv" scoped="" ref="0x7dd37230"/></from>
      <to><interface-ref name="Tlv" scoped="" ref="0x7dd8e780"/>
      <arguments>
        <value cst="I:160">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteReply" scoped="" ref="0x7dda7198"/></from>
      <to><interface-ref name="TlvMultiple" scoped="" ref="0x7dd494e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvMultiple" scoped="" ref="0x7dd494e8"/></from>
      <to><interface-ref name="TlvMultiple" scoped="" ref="0x7dd8d100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="Ack" scoped="" ref="0x7dda4348"/></from>
      <to><interface-ref name="TlvMultiple" scoped="" ref="0x7dd369a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvMultiple" scoped="" ref="0x7dd369a8"/></from>
      <to><interface-ref name="TlvMultiple" scoped="" ref="0x7dd8d100"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TlvBlock" scoped="" ref="0x7dd49010"/></from>
      <to><interface-ref name="TlvBlock" scoped="" ref="0x7dd8e010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvBlock" scoped="" ref="0x7dd436a0"/></from>
      <to><interface-ref name="TlvBlock" scoped="" ref="0x7dd8e010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvBlock" scoped="" ref="0x7dd40d20"/></from>
      <to><interface-ref name="TlvBlock" scoped="" ref="0x7dd8e010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvBlock" scoped="" ref="0x7dd364d0"/></from>
      <to><interface-ref name="TlvBlock" scoped="" ref="0x7dd8e010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvBlock" scoped="" ref="0x7dd34bb8"/></from>
      <to><interface-ref name="TlvBlock" scoped="" ref="0x7dd8e010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RouteCache" scoped="" ref="0x7d690210"/></from>
      <to><interface-ref name="RouteCache" scoped="" ref="0x7dd15010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RouteNodeList" scoped="" ref="0x7d690878"/></from>
      <to><interface-ref name="PathEdgeList" scoped="" ref="0x7d68a200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PathEdgeList" scoped="" ref="0x7d68a200"/></from>
      <to><interface-ref name="PathEdgeList" scoped="" ref="0x7d67c010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d68ad90"/></from>
      <to><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7dba53b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7dd08050"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7d68ebc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7d68ebc0"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7d682c08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SourceShortestPath" scoped="" ref="0x7dd01488"/></from>
      <to><interface-ref name="SourceShortestPath" scoped="" ref="0x7d68b900"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SourceShortestPath" scoped="" ref="0x7d68b900"/></from>
      <to><interface-ref name="SourceShortestPath" scoped="" ref="0x7d67d7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeedRouteTo" scoped="" ref="0x7dd15958"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7d687240"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7dd14320"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e702088"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7d682c08"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7d6713c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PathEdgeList" scoped="" ref="0x7d67c010"/></from>
      <to><interface-ref name="PathEdgeList" scoped="" ref="0x7d62cb70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SourceShortestPath" scoped="" ref="0x7d67d7d0"/></from>
      <to><interface-ref name="SourceShortestPath" scoped="" ref="0x7d62c348"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdge" scoped="" ref="0x7d68d930"/></from>
      <to><interface-ref name="GraphEdge" scoped="" ref="0x7d67f930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdge" scoped="" ref="0x7d67f930"/></from>
      <to><interface-ref name="GraphEdge" scoped="" ref="0x7d670150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeList" scoped="" ref="0x7d68ddd8"/></from>
      <to><interface-ref name="GraphEdgeList" scoped="" ref="0x7d67fdd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeList" scoped="" ref="0x7d67fdd8"/></from>
      <to><interface-ref name="GraphEdgeList" scoped="" ref="0x7d6705f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7d67cb20"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7d682c08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdge" scoped="" ref="0x7d67b850"/></from>
      <to><interface-ref name="GraphEdge" scoped="" ref="0x7d67f930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeList" scoped="" ref="0x7d679db8"/></from>
      <to><interface-ref name="GraphEdgeList" scoped="" ref="0x7d67fdd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d67bcd8"/></from>
      <to><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d68ad90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IndexedAlloc" scoped="" ref="0x7d661128"/></from>
      <to><interface-ref name="IndexedAlloc" scoped="" ref="0x7d674a58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IndexedAlloc" scoped="" ref="0x7d674a58"/></from>
      <to><interface-ref name="IndexedAlloc" scoped="" ref="0x7d65d690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IndexedAlloc" scoped="" ref="0x7d65d690"/></from>
      <to><interface-ref name="IndexedAlloc" scoped="" ref="0x7d65aa00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Boot" scoped="" ref="0x7d659340"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ef92930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BitVector" scoped="" ref="0x7d659658"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7d65b520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7d629c48"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7d67cb20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdge" scoped="" ref="0x7d628930"/></from>
      <to><interface-ref name="GraphEdge" scoped="" ref="0x7d67b850"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d628db8"/></from>
      <to><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d67bcd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeList" scoped="" ref="0x7d627e58"/></from>
      <to><interface-ref name="GraphEdgeList" scoped="" ref="0x7d679db8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x7d62e9e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7d62a728"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PriorityQueue" scoped="" ref="0x7d629070"/></from>
      <to><interface-ref name="PriorityQueue" scoped="" ref="0x7d630ce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PriorityQueue" scoped="" ref="0x7d630ce0"/></from>
      <to><interface-ref name="PriorityQueue" scoped="" ref="0x7d6209e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x7d61f740"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7d62e9e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="buildTreeTask" scoped="" ref="0x7d6269b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Equal" scoped="" ref="0x7d5e3278"/></from>
      <to><interface-ref name="Equal" scoped="" ref="0x7db95c68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Equal" scoped="" ref="0x7d5c6360"/></from>
      <to><interface-ref name="Equal" scoped="" ref="0x7db6d518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d5b4c58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d5b9eb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d5b9eb8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7e8b81e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x7ead6890"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d58c1f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x7d58c1f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d5825f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ead5208"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d58aee0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d58aee0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e705d18"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d58aee0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e7044f0"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x7ead59a8"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Packet" scoped="" ref="0x7db2cef8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d58c890"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e7049d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d58cf28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e702088"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x7d58bb30"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e6f8dd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d582cc0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7db0c010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d5813f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e702088"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7db0c010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7db089e8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7dae0218"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e7053e8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7dae08c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e702088"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7dada4d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e7049d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x7dadaba8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x7dad9010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d5893e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e7049d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d589a78"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e702088"/></to>
    </wire>
    <wire loc="56:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7dab7790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7daae100"/></to>
    </wire>
    <wire loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7dab6100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7daaea30"/></to>
    </wire>
    <wire loc="59:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7daad8c8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7dab5010"/></to>
    </wire>
    <wire loc="60:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7daac258"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7dab5970"/></to>
    </wire>
    <wire loc="62:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7daac768"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7eaf4b28"/></to>
    </wire>
    <wire loc="63:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7daace10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e702088"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7da653f0"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7dabade8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7da64690"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7dab65e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7da65a88"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e702088"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x7dab5010"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Send" scoped="" ref="0x7d535220"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d535220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7eb04178"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d5358b8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7eaf4b28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketEngineClient" scoped="" ref="0x7eac3210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PacketEngineClient" scoped="" ref="0x7d530930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x7ead6890"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d52b0d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x7d52b0d8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d521608"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ead5208"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d529dd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d529dd8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e705d18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d529dd8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e7044f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x7ead59a8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Packet" scoped="" ref="0x7da605b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d52b770"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e7049d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d52be08"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e702088"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x7d52aa30"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e6f8dd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d521cd0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7db0c010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d5203f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e702088"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d528310"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e7049d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d5289a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e702088"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d6b7150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7eaf4b28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketEngineClient" scoped="" ref="0x7eac3210"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PacketEngineClient" scoped="" ref="0x7d5058d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7da55150"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7dabade8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7da543f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7dab65e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7da557e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e702088"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x7dab5010"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Send" scoped="" ref="0x7d4fe398"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d4fe398"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7eb04178"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d4fea30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7eaf4b28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketEngineClient" scoped="" ref="0x7eac3210"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PacketEngineClient" scoped="" ref="0x7d4f9a10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7da503c0"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7dabade8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7da44690"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7dab65e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7da50a58"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e702088"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x7dab5970"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d4f33c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d4f33c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7eb04aa8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d4f3898"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7eaf4b28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7da42230"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7dabade8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7da414d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7dab65e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7da428c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e702088"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x7dab5970"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d4e2bd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d4e2bd0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7eb04aa8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d4df150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7eaf4b28"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="15:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10;</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <documentation loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10;</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10;</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10;</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.8 2007/04/08 01:17:12 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestDsrP" loc="38:TestDsrP.nc">
      <documentation loc="38:TestDsrP.nc">
        <short>&#10;&#10; Test cases to verify that DSR works correctly.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Test cases to verify that DSR works correctly.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketEngineC" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <configuration/>
    </component>
    <component qname="PacketEngineP" loc="80:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <documentation loc="80:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
        <short>&#10;&#10; Queues packets sent, received, and overheard for a multihop routing&#10;&#10; protocol. </short>
        <long>&#10;&#10; Queues packets sent, received, and overheard for a multihop routing&#10;&#10; protocol.  This &#34;packet engine&#34; is intended to be flexible enough to&#10;&#10; support a wide array of possible protocols.&#10;&#10;&#10;&#10; A control component using the PacketEngine interfaces provided here&#10;&#10; is notified of and can control all of the above packets, while not&#10;&#10; having to deal with packet management issues itself.&#10;&#10;&#10;&#10; At any time after being notified of a packet's reception, the control&#10;&#10; component can modify the packet (if needed) and then instruct this engine&#10;&#10; to take one of the following actions:&#10;&#10;   - Send (pass to lower layer)&#10;&#10;   - Send with Intercept (pass to lower layer if upper layer approves)&#10;&#10;   - Receive (pass to upper layer)&#10;&#10;   - Drop (silently remove)&#10;&#10;&#10;&#10; Note that this allows for some unusual actions to take place, such as&#10;&#10; forcing a receive on a packet the upper layer has sent (which also&#10;&#10; means it won't go on the radio anymore).&#10;&#10;&#10;&#10; The control component is responsible for ensuring the packet is valid&#10;&#10; if it makes any modifications.  For example, it must update the payload&#10;&#10; length if the size of the payload changes.&#10;&#10;&#10;&#10; This component does not request acknowledgements or use any kind of&#10;&#10; automatic retry scheme.  However, the return value of the&#10;&#10; PacketEngine.sendDone event allows the control component to request&#10;&#10; a retry for any packet that failed to send.  The control component or&#10;&#10; the upper layer is certainly free to request acknowledgments on its own.&#10;&#10;&#10;&#10; When disabled, no new packets are accepted into the buffer and the&#10;&#10; packets already in the buffer are not processed but do remain in&#10;&#10; the buffer.  Processing resumes when enabled again.&#10;&#10;&#10;&#10; The AM type of packets sent from the upper layer is copied into the&#10;&#10; packet payload for storage so that multihop protocols can use AM types&#10;&#10; of their own without collisions.&#10;&#10;&#10;&#10; Based on TransceiverM by David Moss, CtpForwardingEngineP by Phil Levis,&#10;&#10; Kyle Jamieson, Omprakash Gnawali, and Rodrigo Fonseca, and&#10;&#10; ForwardingEngineM by Roamin Thouvenin.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketEngineC.ReceivePoolC" loc="41(PacketEngineC.ReceivePoolC):/opt/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="41(PacketEngineC.ReceivePoolC):/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.&#10;&#10; </short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
            <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketEngineC.ReceivePoolC.PoolP" loc="53(PacketEngineC.ReceivePoolC.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="53(PacketEngineC.ReceivePoolC.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.&#10; </short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7e954990"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PacketEngineC.SendStateC" loc="65(PacketEngineC.SendStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(PacketEngineC.SendStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/system/StateImplC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.x/tos/system/StateImplP.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/system/StateImplP.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="31:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10;</short>
        <long>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10; @author  Barbara Hohlt&#10; @author  Philip Levis&#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgP" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers. </short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;		S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketEngineC.SendBackoffC" loc="36(PacketEngineC.SendBackoffC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(PacketEngineC.SendBackoffC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer. </short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7e8774c8"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10;</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="47:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaZ platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaZ platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio.</short>
        <long>&#10; The Active Message layer for the CC2420 radio. This configuration&#10; just layers the AM dispatch (CC2420ActiveMessageM) on top of the&#10; underlying CC2420 radio packet (CC2420CsmaCsmaCC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group). Note that snooping may not work, due to CC2420&#10; early packet rejection if acknowledgements are enabled.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @version $Revision: 1.8 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.8 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x7f080b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <documentation loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10;</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.4 2006/12/12 18:23:44 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.&#10;</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.5 2007/04/30 17:31:08 rincon Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.&#10;&#10;</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller. </short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.6 2007/02/28 17:33:59 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10;</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <documentation loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10;</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10;</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10;</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.&#10;&#10;</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10;</short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10;</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(UniqueSendC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10;</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10;</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="61:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks. </short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10;</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10;</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(DummyLplC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10;</short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10;</short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestDsrAppC.SendAC" loc="41(TestDsrAppC.SendAC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <instance number="0">
        <component-ref qname="SingleSenderC"/>
        <arguments>
          <value cst="I:23">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
        <short>&#10;&#10; Bundles the components which route and process DSR.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Bundles the components which route and process DSR.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DsrControlP" loc="83:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <module/>
    </component>
    <component qname="DsrOptionsC" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
        <short>&#10;&#10; Provides access to the various types of DSR Options.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Provides access to the various types of DSR Options.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DsrOptionsC.RouteRequestC" loc="42(DsrOptionsC.RouteRequestC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
      <documentation loc="42(DsrOptionsC.RouteRequestC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
        <short>&#10;&#10; A generic TLV type processor. </short>
        <long>&#10;&#10; A generic TLV type processor.  Pass in the type to access as the &#10;&#10; parameter to this component.  Allows at most one instance of the type&#10;&#10; in a given TLV block.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TlvC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TlvP" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvP.nc">
      <documentation loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvP.nc">
        <short>&#10;&#10; A general Type-Length-Value (TLV) data processor. </short>
        <long>&#10;&#10; A general Type-Length-Value (TLV) data processor.  This component&#10;&#10; does not assume any ordering by type among the TLV types in a&#10;&#10; block of types.  If at most one instance of a type is allowed,&#10;&#10; access the type via the Tlv interface.  If any number of instances&#10;&#10; are allowed, access the type via the TlvMultiple and TlvList&#10;&#10; interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DsrOptionsC.RouteReplyC" loc="42(DsrOptionsC.RouteReplyC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
      <documentation loc="42(DsrOptionsC.RouteReplyC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
        <short>&#10;&#10; A generic TLV type processor. </short>
        <long>&#10;&#10; A generic TLV type processor.  Pass in the type to access as the &#10;&#10; parameter to this component.  Allows any number of instances of the &#10;&#10; type in a given TLV block.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TlvMultipleC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrOptionsC.RouteErrorC" loc="42(DsrOptionsC.RouteErrorC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
      <documentation loc="42(DsrOptionsC.RouteErrorC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
        <short>&#10;&#10; A generic TLV type processor. </short>
        <long>&#10;&#10; A generic TLV type processor.  Pass in the type to access as the &#10;&#10; parameter to this component.  Allows any number of instances of the &#10;&#10; type in a given TLV block.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TlvMultipleC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrOptionsC.AckRequestC" loc="42(DsrOptionsC.AckRequestC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
      <documentation loc="42(DsrOptionsC.AckRequestC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
        <short>&#10;&#10; A generic TLV type processor. </short>
        <long>&#10;&#10; A generic TLV type processor.  Pass in the type to access as the &#10;&#10; parameter to this component.  Allows at most one instance of the type&#10;&#10; in a given TLV block.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TlvC"/>
        <arguments>
          <value cst="I:160">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrOptionsC.AckC" loc="42(DsrOptionsC.AckC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
      <documentation loc="42(DsrOptionsC.AckC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
        <short>&#10;&#10; A generic TLV type processor. </short>
        <long>&#10;&#10; A generic TLV type processor.  Pass in the type to access as the &#10;&#10; parameter to this component.  Allows any number of instances of the &#10;&#10; type in a given TLV block.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TlvMultipleC"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrOptionsC.SourceRouteC" loc="42(DsrOptionsC.SourceRouteC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
      <documentation loc="42(DsrOptionsC.SourceRouteC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
        <short>&#10;&#10; A generic TLV type processor. </short>
        <long>&#10;&#10; A generic TLV type processor.  Pass in the type to access as the &#10;&#10; parameter to this component.  Allows at most one instance of the type&#10;&#10; in a given TLV block.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TlvC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC" loc="40(DsrP.DsrRouteCacheC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrRouteCacheC.nc">
      <documentation loc="40(DsrP.DsrRouteCacheC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrRouteCacheC.nc">
        <short>&#10;&#10; Defines the default route cache to use with DSR.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Defines the default route cache to use with DSR.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DsrRouteCacheC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC" loc="42(DsrP.DsrRouteCacheC.SimpleLinkCacheC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
      <instance number="0">
        <component-ref qname="SimpleLinkCacheC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7deae540"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7deae368"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleLinkCacheP" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
        <short>&#10;&#10; A simple link cache that does not automatically remove links and&#10;&#10; assigns a weight of 1 to all links.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; A simple link cache that does not automatically remove links and&#10;&#10; assigns a weight of 1 to all links.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC" loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
      <documentation loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
        <short>&#10;&#10; Builds a weighted graph as edges are added and supports finding the single &#10;&#10; source shortest path.  &#10;&#10; &#10;&#10;</short>
        <long>&#10;&#10; Builds a weighted graph as edges are added and supports finding the single &#10;&#10; source shortest path.  &#10;&#10; &#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GraphWeightedC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7deae540"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7deae368"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7dd26d10"/></typename>
          </type-int>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC" loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
      <documentation loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
        <short>&#10;&#10; Wires supporting modules needed by any GraphSparseP. </short>
        <long>&#10;&#10; Wires supporting modules needed by any GraphSparseP.  This should be&#10;&#10; combined with a weight module and any processing modules.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GraphSparseC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC" loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocC.nc">
      <instance number="0">
        <component-ref qname="IndexedAllocC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits" loc="39(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsC.nc">
      <documentation loc="39(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsC.nc">
        <short>&#10;&#10; Packages IndexedAllocBitsP together with its dependencies to create an&#10;&#10; easily usable component.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Packages IndexedAllocBitsP together with its dependencies to create an&#10;&#10; easily usable component.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IndexedAllocBitsC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dcc9408"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits" loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dcc9408"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits" loc="42(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsP.nc">
      <documentation loc="42(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsP.nc">
        <short>&#10;&#10; A compact indexed allocation scheme using only a bit vector to track the&#10;&#10; elements. </short>
        <long>&#10;&#10; A compact indexed allocation scheme using only a bit vector to track the&#10;&#10; elements.  While this is surely slower than a pointer-based system, it uses&#10;&#10; much less memory.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IndexedAllocBitsP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dcc9408"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP" loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
      <documentation loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
        <short>&#10;&#10; A sparse graph using adjacency lists.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; A sparse graph using adjacency lists.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GraphSparseP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC" loc="38(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
      <documentation loc="38(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
        <short>&#10;&#10; Wires supporting modules needed by any SourceShortestPathP.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Wires supporting modules needed by any SourceShortestPathP.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SourceShortestPathC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </value>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7dcea840"/></type-var>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC" loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueC.nc">
      <instance number="0">
        <component-ref qname="PriorityQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP" loc="44(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueP.nc">
      <documentation loc="44(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueP.nc">
        <short>&#10;&#10; Implements a priority queue sitting on top of an index heap. </short>
        <long>&#10;&#10; Implements a priority queue sitting on top of an index heap.  It be either a&#10;&#10; min or max heap depending on the implementation of the Compare.test command.&#10;&#10; Since this is an index heap, none of the priorities are actually stored here.&#10;&#10; Instead, a component needs only to answer calls of Compare.test (which would&#10;&#10; typically be based on the priorities in some array owned by that component).&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PriorityQueueP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7dc43050"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP" loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <documentation loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
        <short>&#10;&#10; Uses Djikstra's algorithm with a priority queue holding fringe vertices to&#10;&#10; find the single source shortest path. </short>
        <long>&#10;&#10; Uses Djikstra's algorithm with a priority queue holding fringe vertices to&#10;&#10; find the single source shortest path.  All weights are assumed to be&#10;&#10; non-negative.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SourceShortestPathP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </value>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7dc4d2d8"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.NeedRouteToC" loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.NeedRouteToC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.NeedRouteToC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7deae540"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="GraphEdgeUnitWeightC" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeUnitWeightC.nc">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeUnitWeightC.nc">
        <short>&#10;&#10; All edges are fixed at unit weight.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; All edges are fixed at unit weight.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DsrP.RouteRequestInCacheC" loc="30(DsrP.RouteRequestInCacheC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
      <documentation loc="30(DsrP.RouteRequestInCacheC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10;</short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10; @author Ryan Stinnett&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruDataCacheC"/>
        <arguments>
          <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7dee06d0"/>
            <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7dee09f0"/></typename>
          </type-tag>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.RouteRequestInCacheC.CacheP" loc="67(DsrP.RouteRequestInCacheC.CacheP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <documentation loc="67(DsrP.RouteRequestInCacheC.CacheP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;. </short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.  Inserting a data item not in the cache will replace&#10; the oldest, and inserting an element already in the cache will refresh&#10; its age.  Insert and lookup return a pointer to the cached data.  This&#10; component should be wired to an Equal interface to check for equality&#10; on the data type used.&#10;&#10; @author Ryan Stinnett&#10; @author Rodrigo Fonseca&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruDataCacheP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_cache_item_t" scoped="" ref="0x7db94090"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.RouteRequestOutCacheC" loc="30(DsrP.RouteRequestOutCacheC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
      <documentation loc="30(DsrP.RouteRequestOutCacheC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10;</short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10; @author Ryan Stinnett&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="LruDataCacheC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7dee1df8"/>
            <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7dee0168"/></typename>
          </type-tag>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.RouteRequestOutCacheC.CacheP" loc="67(DsrP.RouteRequestOutCacheC.CacheP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <documentation loc="67(DsrP.RouteRequestOutCacheC.CacheP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;. </short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.  Inserting a data item not in the cache will replace&#10; the oldest, and inserting an element already in the cache will refresh&#10; its age.  Insert and lookup return a pointer to the cached data.  This&#10; component should be wired to an Equal interface to check for equality&#10; on the data type used.&#10;&#10; @author Ryan Stinnett&#10; @author Rodrigo Fonseca&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="LruDataCacheP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_cache_item_t" scoped="" ref="0x7db94090"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.RouteRequestOutTimerC" loc="39(DsrP.RouteRequestOutTimerC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerC.nc">
      <documentation loc="39(DsrP.RouteRequestOutTimerC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerC.nc">
        <short>&#10;&#10; A timed series of data items. </short>
        <long>&#10;&#10; A timed series of data items.  The client is notified as each item&#10;&#10; expires.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DataTimerC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
          </type-int>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.RouteRequestOutTimerC.TimerMilliC" loc="36(DsrP.RouteRequestOutTimerC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(DsrP.RouteRequestOutTimerC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.RouteRequestOutTimerC.DataTimerP" loc="44(DsrP.RouteRequestOutTimerC.DataTimerP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc">
      <documentation loc="44(DsrP.RouteRequestOutTimerC.DataTimerP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc">
        <short>&#10;&#10; A timed series of data items. </short>
        <long>&#10;&#10; A timed series of data items.  The client is notified as each item&#10;&#10; expires.  Uses the Equal interface to allow complex data types, but&#10;&#10; the default supplied works for primitive types.&#10;&#10;&#10;&#10; TODO: Change to use a &#34;first&#34;.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DataTimerP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_timer_data_t" scoped="" ref="0x7db686d0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.ComposeC" loc="33(DsrP.ComposeC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="33(DsrP.ComposeC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.SendStateC" loc="65(DsrP.SendStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(DsrP.SendStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrTransceiverC" loc="42(DsrC.DsrTransceiverC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <documentation loc="42(DsrC.DsrTransceiverC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
        <short>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type. </short>
        <long>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type.  The Packet&#10;&#10; interface used by this component should be provided by the protocol.&#10;&#10; Similarly, the SubPacket interface provided by this component should&#10;&#10; be used by the protocol to complete the chain of Packet interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketTransceiverC"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrTransceiverC.AMSenderC" loc="39(DsrC.DsrTransceiverC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="39(DsrC.DsrTransceiverC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP" loc="35(DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="35(DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.&#10;&#10;</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrC.DsrTransceiverC.AMSnoopingReceiverC" loc="36(DsrC.DsrTransceiverC.AMSnoopingReceiverC):/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <documentation loc="36(DsrC.DsrTransceiverC.AMSnoopingReceiverC):/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
        <short>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10;</short>
        <long>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnoopingReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.SinglePacketProcessorC" loc="39(DsrC.SinglePacketProcessorC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
      <documentation loc="39(DsrC.SinglePacketProcessorC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
        <short>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketProcessorC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrPacketProcessorC" loc="39(DsrC.DsrPacketProcessorC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
      <documentation loc="39(DsrC.DsrPacketProcessorC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
        <short>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketProcessorC"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SinglePacketC" loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <documentation loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
        <short>&#10;&#10; Connects to SinglePacketP to supporting modules.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Connects to SinglePacketP to supporting modules.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SinglePacketP" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
        <short>&#10;&#10; Access and set the properties of a multihop packet with a single&#10;&#10; node address based destination.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access and set the properties of a multihop packet with a single&#10;&#10; node address based destination.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DsrC.DsrSingleSenderC" loc="41(DsrC.DsrSingleSenderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrSingleSenderC.nc">
      <documentation loc="41(DsrC.DsrSingleSenderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrSingleSenderC.nc">
        <short>&#10;&#10; Modified sender for single destination multihop packets of a given&#10;&#10; application layer AM type that already contains a DSR header.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Modified sender for single destination multihop packets of a given&#10;&#10; application layer AM type that already contains a DSR header.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DsrSingleSenderC"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrSingleSenderC.PacketSenderC" loc="39(DsrC.DsrSingleSenderC.PacketSenderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <documentation loc="39(DsrC.DsrSingleSenderC.PacketSenderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
        <short>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrSingleSenderC.PacketSenderC.PacketEngineClientP" loc="40(DsrC.DsrSingleSenderC.PacketSenderC.PacketEngineClientP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <documentation loc="40(DsrC.DsrSingleSenderC.PacketSenderC.PacketEngineClientP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
        <short>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client. </short>
        <long>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.  These values are stored statically so that no&#10;&#10; RAM is used up to hold them.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketEngineClientP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SingleProtocolC.TransceiverC" loc="42(SingleProtocolC.TransceiverC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <documentation loc="42(SingleProtocolC.TransceiverC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
        <short>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type. </short>
        <long>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type.  The Packet&#10;&#10; interface used by this component should be provided by the protocol.&#10;&#10; Similarly, the SubPacket interface provided by this component should&#10;&#10; be used by the protocol to complete the chain of Packet interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketTransceiverC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SingleProtocolC.TransceiverC.AMSenderC" loc="39(SingleProtocolC.TransceiverC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="39(SingleProtocolC.TransceiverC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP" loc="35(SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="35(SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SingleProtocolC.TransceiverC.AMSnoopingReceiverC" loc="36(SingleProtocolC.TransceiverC.AMSnoopingReceiverC):/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <documentation loc="36(SingleProtocolC.TransceiverC.AMSnoopingReceiverC):/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
        <short>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10;</short>
        <long>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSnoopingReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestDsrAppC.SendAC.PacketSenderC" loc="39(TestDsrAppC.SendAC.PacketSenderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <documentation loc="39(TestDsrAppC.SendAC.PacketSenderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
        <short>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestDsrAppC.SendAC.PacketSenderC.PacketEngineClientP" loc="40(TestDsrAppC.SendAC.PacketSenderC.PacketEngineClientP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <documentation loc="40(TestDsrAppC.SendAC.PacketSenderC.PacketEngineClientP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
        <short>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client. </short>
        <long>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.  These values are stored statically so that no&#10;&#10; RAM is used up to hold them.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketEngineClientP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestDsrAppC.SendBC" loc="41(TestDsrAppC.SendBC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <instance number="1">
        <component-ref qname="SingleSenderC"/>
        <arguments>
          <value cst="I:25">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestDsrAppC.SendBC.PacketSenderC" loc="39(TestDsrAppC.SendBC.PacketSenderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <documentation loc="39(TestDsrAppC.SendBC.PacketSenderC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
        <short>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PacketSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestDsrAppC.SendBC.PacketSenderC.PacketEngineClientP" loc="40(TestDsrAppC.SendBC.PacketSenderC.PacketEngineClientP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <documentation loc="40(TestDsrAppC.SendBC.PacketSenderC.PacketEngineClientP):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
        <short>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client. </short>
        <long>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.  These values are stored statically so that no&#10;&#10; RAM is used up to hold them.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PacketEngineClientP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestDsrAppC.ReceiveAC" loc="41(TestDsrAppC.ReceiveAC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <documentation loc="41(TestDsrAppC.ReceiveAC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
        <short>&#10;&#10; Receiver for single destination multihop packets of a given&#10;&#10; application layer AM type that are destined for this node.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Receiver for single destination multihop packets of a given&#10;&#10; application layer AM type that are destined for this node.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SingleReceiverC"/>
        <arguments>
          <value cst="I:23">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestDsrAppC.ReceiveAC.PacketReceiverC" loc="39(TestDsrAppC.ReceiveAC.PacketReceiverC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
      <documentation loc="39(TestDsrAppC.ReceiveAC.PacketReceiverC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
        <short>&#10;&#10; Receiver for generic multihop packets of a given application layer&#10;&#10; AM type that are destined for this node.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Receiver for generic multihop packets of a given application layer&#10;&#10; AM type that are destined for this node.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestDsrAppC.ReceiveBC" loc="41(TestDsrAppC.ReceiveBC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <documentation loc="41(TestDsrAppC.ReceiveBC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
        <short>&#10;&#10; Receiver for single destination multihop packets of a given&#10;&#10; application layer AM type that are destined for this node.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Receiver for single destination multihop packets of a given&#10;&#10; application layer AM type that are destined for this node.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SingleReceiverC"/>
        <arguments>
          <value cst="I:25">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestDsrAppC.ReceiveBC.PacketReceiverC" loc="39(TestDsrAppC.ReceiveBC.PacketReceiverC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
      <documentation loc="39(TestDsrAppC.ReceiveBC.PacketReceiverC):/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
        <short>&#10;&#10; Receiver for generic multihop packets of a given application layer&#10;&#10; AM type that are destined for this node.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Receiver for generic multihop packets of a given application layer&#10;&#10; AM type that are destined for this node.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestDsrAppC.TimerMilliC" loc="36(TestDsrAppC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(TestDsrAppC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ee73c20" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ee73db0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ee63010" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ee42218" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ee423b8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ee42558" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7ee426f0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ed40218" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ed403b8" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ed40558" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7ed406f0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.&#10;&#10; </short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7e954990" loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7e954990"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x7e954b20" loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc" abstract="">
      <documentation loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.&#10; </short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7e943118" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7e943118"/></type-var>
        </typedef>
        <constant name="size" ref="0x7e9432a0" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.x/tos/system/StateC.nc" abstract="">
      <documentation loc="65:/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7e8774c8" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7e8774c8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7e877648" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7e868708" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7e868708"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7e868888" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e786478" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e786478"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e762d20" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e762d20"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7e762ea8" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e715c68" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e715c68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="66:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7e4d4998" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e4d4998"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7e4d4b28" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7e4c9c78" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7e4c9c78"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7e4c6010" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e4c6010"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7e4c61a0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7e407090" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7e407090"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7e407350" loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e407350"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="">
      <documentation loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7e3f6038" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7e3f6038"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7e3f62f8" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7e3f62f8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7e3f64c0" loc="46:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7e3f64c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7e3f6780" loc="47:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7e3f6780"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7e3f6920" loc="48:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7e3f6be8" loc="49:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7e3f6be8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="">
      <documentation loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7e3e43c0" loc="41:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7e3e43c0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7e3e4680" loc="42:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7e3e4680"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7e3e4848" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7e3e4848"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7e3e4b08" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7e3e4b08"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7e3e4ca8" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="">
      <documentation loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="">
      <documentation loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7e370968" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7e370b08" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7e370ca8" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7e370e40" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7e2080a8" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="">
      <parameters>
        <constant name="size" ref="0x7e1ee328" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="">
      <documentation loc="49:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SingleSenderC" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc" abstract="">
      <parameters>
        <constant name="upperId" ref="0x7def36f0" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
          <component-ref qname="SingleSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TlvC" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc" abstract="">
      <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
        <short>&#10;&#10; A generic TLV type processor. </short>
        <long>&#10;&#10; A generic TLV type processor.  Pass in the type to access as the &#10;&#10; parameter to this component.  Allows at most one instance of the type&#10;&#10; in a given TLV block.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="type" ref="0x7dd947f8" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
          <component-ref qname="TlvC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TlvMultipleC" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc" abstract="">
      <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
        <short>&#10;&#10; A generic TLV type processor. </short>
        <long>&#10;&#10; A generic TLV type processor.  Pass in the type to access as the &#10;&#10; parameter to this component.  Allows any number of instances of the &#10;&#10; type in a given TLV block.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="type" ref="0x7dd48900" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
          <component-ref qname="TlvMultipleC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DsrRouteCacheC" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrRouteCacheC.nc" abstract="">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrRouteCacheC.nc">
        <short>&#10;&#10; Defines the default route cache to use with DSR.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Defines the default route cache to use with DSR.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxNodes" ref="0x7dd2c4b0" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrRouteCacheC.nc">
          <component-ref qname="DsrRouteCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7deae540"/></typename>
          </type-int>
        </constant>
        <constant name="maxLinks" ref="0x7dd2c660" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrRouteCacheC.nc">
          <component-ref qname="DsrRouteCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_link_id_t" ref="0x7deae368"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleLinkCacheC" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheC.nc" abstract="">
      <parameters>
        <constant name="maxNodes" ref="0x7dd240f0" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
          <component-ref qname="SimpleLinkCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7deae540"/></typename>
          </type-int>
        </constant>
        <constant name="maxLinks" ref="0x7dd242a0" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
          <component-ref qname="SimpleLinkCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_link_id_t" ref="0x7deae368"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="GraphWeightedC" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc" abstract="">
      <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
        <short>&#10;&#10; Builds a weighted graph as edges are added and supports finding the single &#10;&#10; source shortest path.  &#10;&#10; &#10;&#10;</short>
        <long>&#10;&#10; Builds a weighted graph as edges are added and supports finding the single &#10;&#10; source shortest path.  &#10;&#10; &#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7dcea230" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
          <component-ref qname="GraphWeightedC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
          </type-int>
        </constant>
        <constant name="maxEdges" ref="0x7dcea3d8" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
          <component-ref qname="GraphWeightedC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
          </type-int>
        </constant>
        <constant name="parallelEdges" ref="0x7dcea578" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
          <component-ref qname="GraphWeightedC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
        </constant>
        <typedef name="graph_edge_weight_t" ref="0x7dcea840" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
          <component-ref qname="GraphWeightedC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7dcea840"/></type-var>
        </typedef>
      </parameters>
      <configuration/>
    </component>
    <component qname="GraphSparseC" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc" abstract="">
      <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
        <short>&#10;&#10; Wires supporting modules needed by any GraphSparseP. </short>
        <long>&#10;&#10; Wires supporting modules needed by any GraphSparseP.  This should be&#10;&#10; combined with a weight module and any processing modules.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7dcd0790" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
          <component-ref qname="GraphSparseC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
          </type-int>
        </constant>
        <constant name="maxEdges" ref="0x7dcd0938" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
          <component-ref qname="GraphSparseC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
          </type-int>
        </constant>
        <constant name="parallelEdges" ref="0x7dcd0ad8" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
          <component-ref qname="GraphSparseC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="IndexedAllocC" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocC.nc" abstract="">
      <parameters>
        <constant name="MAX_SIZE" ref="0x7dcc98a8" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocC.nc">
          <component-ref qname="IndexedAllocC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dcc9408"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="IndexedAllocBitsC" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsC.nc" abstract="">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsC.nc">
        <short>&#10;&#10; Packages IndexedAllocBitsP together with its dependencies to create an&#10;&#10; easily usable component.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Packages IndexedAllocBitsP together with its dependencies to create an&#10;&#10; easily usable component.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxSize" ref="0x7dcb5868" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsC.nc">
          <component-ref qname="IndexedAllocBitsC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dcc9408"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="BitVectorC" loc="33:/opt/tinyos-2.x/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x7dcb0370" loc="33:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="IndexedAllocBitsP" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsP.nc" abstract="">
      <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsP.nc">
        <short>&#10;&#10; A compact indexed allocation scheme using only a bit vector to track the&#10;&#10; elements. </short>
        <long>&#10;&#10; A compact indexed allocation scheme using only a bit vector to track the&#10;&#10; elements.  While this is surely slower than a pointer-based system, it uses&#10;&#10; much less memory.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxSize" ref="0x7dc96710" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsP.nc">
          <component-ref qname="IndexedAllocBitsP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dcc9408"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GraphSparseP" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc" abstract="">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
        <short>&#10;&#10; A sparse graph using adjacency lists.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; A sparse graph using adjacency lists.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7dc849c8" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
          <component-ref qname="GraphSparseP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
          </type-int>
        </constant>
        <constant name="maxEdges" ref="0x7dc84b70" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
          <component-ref qname="GraphSparseP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
          </type-int>
        </constant>
        <constant name="parallelEdges" ref="0x7dc84d10" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
          <component-ref qname="GraphSparseP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SourceShortestPathC" loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc" abstract="">
      <documentation loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
        <short>&#10;&#10; Wires supporting modules needed by any SourceShortestPathP.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Wires supporting modules needed by any SourceShortestPathP.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7dc4d010" loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
          <component-ref qname="SourceShortestPathC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
          </type-int>
        </constant>
        <typedef name="graph_edge_weight_t" ref="0x7dc4d2d8" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
          <component-ref qname="SourceShortestPathC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7dc4d2d8"/></type-var>
        </typedef>
      </parameters>
      <configuration/>
    </component>
    <component qname="PriorityQueueC" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueC.nc" abstract="">
      <parameters>
        <constant name="maxSize" ref="0x7dc434e8" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueC.nc">
          <component-ref qname="PriorityQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7dc43050"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PriorityQueueP" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueP.nc" abstract="">
      <documentation loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueP.nc">
        <short>&#10;&#10; Implements a priority queue sitting on top of an index heap. </short>
        <long>&#10;&#10; Implements a priority queue sitting on top of an index heap.  It be either a&#10;&#10; min or max heap depending on the implementation of the Compare.test command.&#10;&#10; Since this is an index heap, none of the priorities are actually stored here.&#10;&#10; Instead, a component needs only to answer calls of Compare.test (which would&#10;&#10; typically be based on the priorities in some array owned by that component).&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxSize" ref="0x7dc2b378" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueP.nc">
          <component-ref qname="PriorityQueueP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7dc43050"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SourceShortestPathP" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc" abstract="">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
        <short>&#10;&#10; Uses Djikstra's algorithm with a priority queue holding fringe vertices to&#10;&#10; find the single source shortest path. </short>
        <long>&#10;&#10; Uses Djikstra's algorithm with a priority queue holding fringe vertices to&#10;&#10; find the single source shortest path.  All weights are assumed to be&#10;&#10; non-negative.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7dbf4230" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
          <component-ref qname="SourceShortestPathP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
          </type-int>
        </constant>
        <typedef name="graph_edge_weight_t" ref="0x7dbf44f8" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
          <component-ref qname="SourceShortestPathP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7dbf44f8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="LruDataCacheC" loc="30:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc" abstract="">
      <documentation loc="30:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10;</short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10; @author Ryan Stinnett&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_cache_item_t" ref="0x7db94090" loc="30:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
          <component-ref qname="LruDataCacheC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_cache_item_t" scoped="" ref="0x7db94090"/></type-var>
        </typedef>
        <constant name="size" ref="0x7db94218" loc="30:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
          <component-ref qname="LruDataCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruDataCacheP" loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc" abstract="">
      <documentation loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;. </short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.  Inserting a data item not in the cache will replace&#10; the oldest, and inserting an element already in the cache will refresh&#10; its age.  Insert and lookup return a pointer to the cached data.  This&#10; component should be wired to an Equal interface to check for equality&#10; on the data type used.&#10;&#10; @author Ryan Stinnett&#10; @author Rodrigo Fonseca&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_cache_item_t" ref="0x7db8d308" loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
          <component-ref qname="LruDataCacheP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_cache_item_t" scoped="" ref="0x7db8d308"/></type-var>
        </typedef>
        <constant name="size" ref="0x7db8d490" loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
          <component-ref qname="LruDataCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DataTimerC" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerC.nc" abstract="">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerC.nc">
        <short>&#10;&#10; A timed series of data items. </short>
        <long>&#10;&#10; A timed series of data items.  The client is notified as each item&#10;&#10; expires.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_timer_data_t" ref="0x7db686d0" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerC.nc">
          <component-ref qname="DataTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_timer_data_t" scoped="" ref="0x7db686d0"/></type-var>
        </typedef>
        <constant name="maxSize" ref="0x7db68858" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerC.nc">
          <component-ref qname="DataTimerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DataTimerP" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc" abstract="">
      <documentation loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc">
        <short>&#10;&#10; A timed series of data items. </short>
        <long>&#10;&#10; A timed series of data items.  The client is notified as each item&#10;&#10; expires.  Uses the Equal interface to allow complex data types, but&#10;&#10; the default supplied works for primitive types.&#10;&#10;&#10;&#10; TODO: Change to use a &#34;first&#34;.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_timer_data_t" ref="0x7db57010" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc">
          <component-ref qname="DataTimerP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_timer_data_t" scoped="" ref="0x7db57010"/></type-var>
        </typedef>
        <constant name="maxSize" ref="0x7db57198" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc">
          <component-ref qname="DataTimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PacketTransceiverC" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc" abstract="">
      <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
        <short>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type. </short>
        <long>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type.  The Packet&#10;&#10; interface used by this component should be provided by the protocol.&#10;&#10; Similarly, the SubPacket interface provided by this component should&#10;&#10; be used by the protocol to complete the chain of Packet interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="lowerId" ref="0x7db2a5a0" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
          <component-ref qname="PacketTransceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7db25b60" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7db19010" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="">
      <documentation loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7db07010" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSnoopingReceiverC" loc="36:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc" abstract="">
      <documentation loc="36:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
        <short>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10;</short>
        <long>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7dad02f8" loc="36:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
          <component-ref qname="AMSnoopingReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketProcessorC" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc" abstract="">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
        <short>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="lowerId" ref="0x7dac6570" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
          <component-ref qname="PacketProcessorC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DsrSingleSenderC" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrSingleSenderC.nc" abstract="">
      <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrSingleSenderC.nc">
        <short>&#10;&#10; Modified sender for single destination multihop packets of a given&#10;&#10; application layer AM type that already contains a DSR header.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Modified sender for single destination multihop packets of a given&#10;&#10; application layer AM type that already contains a DSR header.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="upperId" ref="0x7da77990" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrSingleSenderC.nc">
          <component-ref qname="DsrSingleSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketSenderC" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc" abstract="">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
        <short>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="upperId" ref="0x7da70538" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
          <component-ref qname="PacketSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
        <constant name="defLowerId" ref="0x7da706c8" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
          <component-ref qname="PacketSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketEngineClientP" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc" abstract="">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
        <short>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client. </short>
        <long>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.  These values are stored statically so that no&#10;&#10; RAM is used up to hold them.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="upper" ref="0x7da6a448" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
          <component-ref qname="PacketEngineClientP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
        <constant name="defLower" ref="0x7da6a5d8" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
          <component-ref qname="PacketEngineClientP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SingleReceiverC" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc" abstract="">
      <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
        <short>&#10;&#10; Receiver for single destination multihop packets of a given&#10;&#10; application layer AM type that are destined for this node.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Receiver for single destination multihop packets of a given&#10;&#10; application layer AM type that are destined for this node.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="upperId" ref="0x7da4fc10" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
          <component-ref qname="SingleReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketReceiverC" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc" abstract="">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
        <short>&#10;&#10; Receiver for generic multihop packets of a given application layer&#10;&#10; AM type that are destined for this node.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Receiver for generic multihop packets of a given application layer&#10;&#10; AM type that are destined for this node.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="upperId" ref="0x7da485f0" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
          <component-ref qname="PacketReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7ef830b8" loc="47:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7ef830b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef83290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7ef92930" loc="46:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7ef92930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ef92b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7ef72068" loc="43:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7ef72068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef72240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ef81e58" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ef81e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef80050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7ef63940" loc="41:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ef63940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7ef63b18"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7ef63bf8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7ef63cd8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7ef63db8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7ef63e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7ef521a8" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7ef521a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef52380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ef53d58" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ef53d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef52010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7ef52518" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7ef52518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef526f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7ef61eb8" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7ef61eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef410c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7ef61b50" loc="17:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7ef61b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef61d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7ef231a0" loc="22:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7ef231a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef23378"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7ef13800" loc="21:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7ef13800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef139d8"/>
        <function-ref name="isInput" scoped="" ref="0x7ef13ab8"/>
        <function-ref name="toggle" scoped="" ref="0x7ef13b98"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef13c78"/>
        <function-ref name="get" scoped="" ref="0x7ef13d58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ef13e38"/>
        <function-ref name="set" scoped="" ref="0x7ef13f18"/>
        <function-ref name="clr" scoped="" ref="0x7ef23010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7ef31030" loc="20:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7ef31030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef31208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7ee91e78" loc="91:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7ee91e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee90308"/>
        <function-ref name="isInput" scoped="" ref="0x7ee903e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ee904c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee905a8"/>
        <function-ref name="get" scoped="" ref="0x7ee90688"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee90768"/>
        <function-ref name="set" scoped="" ref="0x7ee90848"/>
        <function-ref name="clr" scoped="" ref="0x7ee90928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7eec3e98" loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7eec3e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eec20c0"/>
        <function-ref name="isInput" scoped="" ref="0x7eec21a0"/>
        <function-ref name="toggle" scoped="" ref="0x7eec2280"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec2360"/>
        <function-ref name="get" scoped="" ref="0x7eec2440"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec2520"/>
        <function-ref name="set" scoped="" ref="0x7eec2600"/>
        <function-ref name="clr" scoped="" ref="0x7eec26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7eeb0068" loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7eeb0068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb0240"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb0320"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb0400"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb04e0"/>
        <function-ref name="get" scoped="" ref="0x7eeb05c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eeb06a0"/>
        <function-ref name="set" scoped="" ref="0x7eeb0780"/>
        <function-ref name="clr" scoped="" ref="0x7eeb0860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7eea0e78" loc="85:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7eea0e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee93070"/>
        <function-ref name="isInput" scoped="" ref="0x7ee93150"/>
        <function-ref name="toggle" scoped="" ref="0x7ee93230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee93310"/>
        <function-ref name="get" scoped="" ref="0x7ee933f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee934d0"/>
        <function-ref name="set" scoped="" ref="0x7ee935b0"/>
        <function-ref name="clr" scoped="" ref="0x7ee93690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7eef3428" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7eef3428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef3600"/>
        <function-ref name="isInput" scoped="" ref="0x7eef36e0"/>
        <function-ref name="toggle" scoped="" ref="0x7eef37c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef38a0"/>
        <function-ref name="get" scoped="" ref="0x7eef3980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef3a60"/>
        <function-ref name="set" scoped="" ref="0x7eef3b40"/>
        <function-ref name="clr" scoped="" ref="0x7eef3c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7eea1af8" loc="83:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7eea1af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eea1cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7eea1db0"/>
        <function-ref name="toggle" scoped="" ref="0x7eea1e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea0010"/>
        <function-ref name="get" scoped="" ref="0x7eea00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea01d0"/>
        <function-ref name="set" scoped="" ref="0x7eea02b0"/>
        <function-ref name="clr" scoped="" ref="0x7eea0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7eef27a8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7eef27a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef2980"/>
        <function-ref name="isInput" scoped="" ref="0x7eef2a60"/>
        <function-ref name="toggle" scoped="" ref="0x7eef2b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef2c20"/>
        <function-ref name="get" scoped="" ref="0x7eef2d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef2de0"/>
        <function-ref name="set" scoped="" ref="0x7eef2ec0"/>
        <function-ref name="clr" scoped="" ref="0x7eef1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7eee0980" loc="57:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7eee0980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eee0b58"/>
        <function-ref name="isInput" scoped="" ref="0x7eee0c38"/>
        <function-ref name="toggle" scoped="" ref="0x7eee0d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7eee0df8"/>
        <function-ref name="get" scoped="" ref="0x7eee0ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eed3010"/>
        <function-ref name="set" scoped="" ref="0x7eed30f0"/>
        <function-ref name="clr" scoped="" ref="0x7eed31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7eec1bd8" loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7eec1bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eec1db0"/>
        <function-ref name="isInput" scoped="" ref="0x7eec1e90"/>
        <function-ref name="toggle" scoped="" ref="0x7eec0010"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec00f0"/>
        <function-ref name="get" scoped="" ref="0x7eec01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec02b0"/>
        <function-ref name="set" scoped="" ref="0x7eec0390"/>
        <function-ref name="clr" scoped="" ref="0x7eec0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7eea3d98" loc="79:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7eea3d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eea2010"/>
        <function-ref name="isInput" scoped="" ref="0x7eea20f0"/>
        <function-ref name="toggle" scoped="" ref="0x7eea21d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea22b0"/>
        <function-ref name="get" scoped="" ref="0x7eea2390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea2470"/>
        <function-ref name="set" scoped="" ref="0x7eea2550"/>
        <function-ref name="clr" scoped="" ref="0x7eea2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7ef02348" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7ef02348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef02520"/>
        <function-ref name="isInput" scoped="" ref="0x7ef02600"/>
        <function-ref name="toggle" scoped="" ref="0x7ef026e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef027c0"/>
        <function-ref name="get" scoped="" ref="0x7ef028a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ef02980"/>
        <function-ref name="set" scoped="" ref="0x7ef02a60"/>
        <function-ref name="clr" scoped="" ref="0x7ef02b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7eef0508" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7eef0508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef06e0"/>
        <function-ref name="isInput" scoped="" ref="0x7eef07c0"/>
        <function-ref name="toggle" scoped="" ref="0x7eef08a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef0980"/>
        <function-ref name="get" scoped="" ref="0x7eef0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef0b40"/>
        <function-ref name="set" scoped="" ref="0x7eef0c20"/>
        <function-ref name="clr" scoped="" ref="0x7eef0d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7eed26c8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7eed26c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eed28a0"/>
        <function-ref name="isInput" scoped="" ref="0x7eed2980"/>
        <function-ref name="toggle" scoped="" ref="0x7eed2a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7eed2b40"/>
        <function-ref name="get" scoped="" ref="0x7eed2c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eed2d00"/>
        <function-ref name="set" scoped="" ref="0x7eed2de0"/>
        <function-ref name="clr" scoped="" ref="0x7eed2ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7eeb3980" loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7eeb3980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb3b58"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb3c38"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb3d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb3df8"/>
        <function-ref name="get" scoped="" ref="0x7eeb3ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eeb2010"/>
        <function-ref name="set" scoped="" ref="0x7eeb20f0"/>
        <function-ref name="clr" scoped="" ref="0x7eeb21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7ee92b00" loc="88:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7ee92b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee92cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7ee92db8"/>
        <function-ref name="toggle" scoped="" ref="0x7ee92e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee91010"/>
        <function-ref name="get" scoped="" ref="0x7ee910f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee911d0"/>
        <function-ref name="set" scoped="" ref="0x7ee912b0"/>
        <function-ref name="clr" scoped="" ref="0x7ee91390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7ee83d98" loc="94:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7ee83d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee82010"/>
        <function-ref name="isInput" scoped="" ref="0x7ee820f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ee821d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee822b0"/>
        <function-ref name="get" scoped="" ref="0x7ee82390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee82470"/>
        <function-ref name="set" scoped="" ref="0x7ee82550"/>
        <function-ref name="clr" scoped="" ref="0x7ee82630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7eeb2cb8" loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7eeb2cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb2e90"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb1010"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb11d0"/>
        <function-ref name="get" scoped="" ref="0x7eeb12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eeb1390"/>
        <function-ref name="set" scoped="" ref="0x7eeb1470"/>
        <function-ref name="clr" scoped="" ref="0x7eeb1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7ef00068" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7ef00068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef00240"/>
        <function-ref name="isInput" scoped="" ref="0x7ef00320"/>
        <function-ref name="toggle" scoped="" ref="0x7ef00400"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef004e0"/>
        <function-ref name="get" scoped="" ref="0x7ef005c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ef006a0"/>
        <function-ref name="set" scoped="" ref="0x7ef00780"/>
        <function-ref name="clr" scoped="" ref="0x7ef00860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7eee2268" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7eee2268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eee2440"/>
        <function-ref name="isInput" scoped="" ref="0x7eee2520"/>
        <function-ref name="toggle" scoped="" ref="0x7eee2600"/>
        <function-ref name="isOutput" scoped="" ref="0x7eee26e0"/>
        <function-ref name="get" scoped="" ref="0x7eee27c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eee28a0"/>
        <function-ref name="set" scoped="" ref="0x7eee2980"/>
        <function-ref name="clr" scoped="" ref="0x7eee2a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7ee90aa0" loc="92:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7ee90aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee90c78"/>
        <function-ref name="isInput" scoped="" ref="0x7ee90d58"/>
        <function-ref name="toggle" scoped="" ref="0x7ee90e38"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee90f18"/>
        <function-ref name="get" scoped="" ref="0x7ee83010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee830f0"/>
        <function-ref name="set" scoped="" ref="0x7ee831d0"/>
        <function-ref name="clr" scoped="" ref="0x7ee832b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7eee15e8" loc="55:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7eee15e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eee17c0"/>
        <function-ref name="isInput" scoped="" ref="0x7eee18a0"/>
        <function-ref name="toggle" scoped="" ref="0x7eee1980"/>
        <function-ref name="isOutput" scoped="" ref="0x7eee1a60"/>
        <function-ref name="get" scoped="" ref="0x7eee1b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eee1c20"/>
        <function-ref name="set" scoped="" ref="0x7eee1d00"/>
        <function-ref name="clr" scoped="" ref="0x7eee1de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7eec2858" loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7eec2858"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eec2a30"/>
        <function-ref name="isInput" scoped="" ref="0x7eec2b10"/>
        <function-ref name="toggle" scoped="" ref="0x7eec2bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec2cd0"/>
        <function-ref name="get" scoped="" ref="0x7eec2db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec2e90"/>
        <function-ref name="set" scoped="" ref="0x7eec1010"/>
        <function-ref name="clr" scoped="" ref="0x7eec10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7eeb09d8" loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7eeb09d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb0bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb0c90"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb0e50"/>
        <function-ref name="get" scoped="" ref="0x7eea3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea30f0"/>
        <function-ref name="set" scoped="" ref="0x7eea31d0"/>
        <function-ref name="clr" scoped="" ref="0x7eea32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7ee93808" loc="86:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7ee93808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee939e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ee93ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7ee93ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee93c80"/>
        <function-ref name="get" scoped="" ref="0x7ee93d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee93e40"/>
        <function-ref name="set" scoped="" ref="0x7ee93f20"/>
        <function-ref name="clr" scoped="" ref="0x7ee92018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7eef3d98" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7eef3d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef2010"/>
        <function-ref name="isInput" scoped="" ref="0x7eef20f0"/>
        <function-ref name="toggle" scoped="" ref="0x7eef21d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef22b0"/>
        <function-ref name="get" scoped="" ref="0x7eef2390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef2470"/>
        <function-ref name="set" scoped="" ref="0x7eef2550"/>
        <function-ref name="clr" scoped="" ref="0x7eef2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7eef1188" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7eef1188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef1360"/>
        <function-ref name="isInput" scoped="" ref="0x7eef1440"/>
        <function-ref name="toggle" scoped="" ref="0x7eef1520"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef1600"/>
        <function-ref name="get" scoped="" ref="0x7eef16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef17c0"/>
        <function-ref name="set" scoped="" ref="0x7eef18a0"/>
        <function-ref name="clr" scoped="" ref="0x7eef1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7eed3348" loc="58:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7eed3348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eed3520"/>
        <function-ref name="isInput" scoped="" ref="0x7eed3600"/>
        <function-ref name="toggle" scoped="" ref="0x7eed36e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eed37c0"/>
        <function-ref name="get" scoped="" ref="0x7eed38a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eed3980"/>
        <function-ref name="set" scoped="" ref="0x7eed3a60"/>
        <function-ref name="clr" scoped="" ref="0x7eed3b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7eec05e8" loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7eec05e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eec07c0"/>
        <function-ref name="isInput" scoped="" ref="0x7eec08a0"/>
        <function-ref name="toggle" scoped="" ref="0x7eec0980"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec0a60"/>
        <function-ref name="get" scoped="" ref="0x7eec0b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec0c20"/>
        <function-ref name="set" scoped="" ref="0x7eec0d00"/>
        <function-ref name="clr" scoped="" ref="0x7eec0de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7eea27a8" loc="80:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7eea27a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eea2980"/>
        <function-ref name="isInput" scoped="" ref="0x7eea2a60"/>
        <function-ref name="toggle" scoped="" ref="0x7eea2b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea2c20"/>
        <function-ref name="get" scoped="" ref="0x7eea2d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea2de0"/>
        <function-ref name="set" scoped="" ref="0x7eea2ec0"/>
        <function-ref name="clr" scoped="" ref="0x7eea1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7ef02cb8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7ef02cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef02e90"/>
        <function-ref name="isInput" scoped="" ref="0x7ef01010"/>
        <function-ref name="toggle" scoped="" ref="0x7ef010f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef011d0"/>
        <function-ref name="get" scoped="" ref="0x7ef012b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ef01390"/>
        <function-ref name="set" scoped="" ref="0x7ef01470"/>
        <function-ref name="clr" scoped="" ref="0x7ef01550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7eef0e78" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7eef0e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eee30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7eee31c0"/>
        <function-ref name="toggle" scoped="" ref="0x7eee32a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eee3380"/>
        <function-ref name="get" scoped="" ref="0x7eee3460"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eee3540"/>
        <function-ref name="set" scoped="" ref="0x7eee3620"/>
        <function-ref name="clr" scoped="" ref="0x7eee3700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7eed1068" loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7eed1068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eed1240"/>
        <function-ref name="isInput" scoped="" ref="0x7eed1320"/>
        <function-ref name="toggle" scoped="" ref="0x7eed1400"/>
        <function-ref name="isOutput" scoped="" ref="0x7eed14e0"/>
        <function-ref name="get" scoped="" ref="0x7eed15c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eed16a0"/>
        <function-ref name="set" scoped="" ref="0x7eed1780"/>
        <function-ref name="clr" scoped="" ref="0x7eed1860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7ee91508" loc="89:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7ee91508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee916e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ee917c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ee918a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee91980"/>
        <function-ref name="get" scoped="" ref="0x7ee91a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee91b40"/>
        <function-ref name="set" scoped="" ref="0x7ee91c20"/>
        <function-ref name="clr" scoped="" ref="0x7ee91d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7eec3428" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7eec3428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eec3700"/>
        <function-ref name="isInput" scoped="" ref="0x7eec37e0"/>
        <function-ref name="toggle" scoped="" ref="0x7eec38c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec39a0"/>
        <function-ref name="get" scoped="" ref="0x7eec3a80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec3b60"/>
        <function-ref name="set" scoped="" ref="0x7eec3c40"/>
        <function-ref name="clr" scoped="" ref="0x7eec3d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7eeb16c8" loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7eeb16c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb18a0"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb1980"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb1a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb1b40"/>
        <function-ref name="get" scoped="" ref="0x7eeb1c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eeb1d00"/>
        <function-ref name="set" scoped="" ref="0x7eeb1de0"/>
        <function-ref name="clr" scoped="" ref="0x7eeb1ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7eea0508" loc="84:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7eea0508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eea06e0"/>
        <function-ref name="isInput" scoped="" ref="0x7eea07c0"/>
        <function-ref name="toggle" scoped="" ref="0x7eea08a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea0980"/>
        <function-ref name="get" scoped="" ref="0x7eea0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea0b40"/>
        <function-ref name="set" scoped="" ref="0x7eea0c20"/>
        <function-ref name="clr" scoped="" ref="0x7eea0d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7ee827a8" loc="95:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7ee827a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee82980"/>
        <function-ref name="isInput" scoped="" ref="0x7ee82a60"/>
        <function-ref name="toggle" scoped="" ref="0x7ee82b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee82c20"/>
        <function-ref name="get" scoped="" ref="0x7ee82d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee82de0"/>
        <function-ref name="set" scoped="" ref="0x7ee82ec0"/>
        <function-ref name="clr" scoped="" ref="0x7ee81010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7ef009d8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7ef009d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef00bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7ef00c90"/>
        <function-ref name="toggle" scoped="" ref="0x7ef00d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef00e50"/>
        <function-ref name="get" scoped="" ref="0x7eef3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef30f0"/>
        <function-ref name="set" scoped="" ref="0x7eef31d0"/>
        <function-ref name="clr" scoped="" ref="0x7eef32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7eee2bd8" loc="53:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7eee2bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eee2db0"/>
        <function-ref name="isInput" scoped="" ref="0x7eee2e90"/>
        <function-ref name="toggle" scoped="" ref="0x7eee1010"/>
        <function-ref name="isOutput" scoped="" ref="0x7eee10f0"/>
        <function-ref name="get" scoped="" ref="0x7eee11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eee12b0"/>
        <function-ref name="set" scoped="" ref="0x7eee1390"/>
        <function-ref name="clr" scoped="" ref="0x7eee1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7eea1188" loc="82:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7eea1188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eea1360"/>
        <function-ref name="isInput" scoped="" ref="0x7eea1440"/>
        <function-ref name="toggle" scoped="" ref="0x7eea1520"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea1600"/>
        <function-ref name="get" scoped="" ref="0x7eea16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea17c0"/>
        <function-ref name="set" scoped="" ref="0x7eea18a0"/>
        <function-ref name="clr" scoped="" ref="0x7eea1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7eee0010" loc="56:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7eee0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eee01e8"/>
        <function-ref name="isInput" scoped="" ref="0x7eee02c8"/>
        <function-ref name="toggle" scoped="" ref="0x7eee03a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eee0488"/>
        <function-ref name="get" scoped="" ref="0x7eee0568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eee0648"/>
        <function-ref name="set" scoped="" ref="0x7eee0728"/>
        <function-ref name="clr" scoped="" ref="0x7eee0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7eec1268" loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7eec1268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eec1440"/>
        <function-ref name="isInput" scoped="" ref="0x7eec1520"/>
        <function-ref name="toggle" scoped="" ref="0x7eec1600"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec16e0"/>
        <function-ref name="get" scoped="" ref="0x7eec17c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec18a0"/>
        <function-ref name="set" scoped="" ref="0x7eec1980"/>
        <function-ref name="clr" scoped="" ref="0x7eec1a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7eea3428" loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7eea3428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eea3600"/>
        <function-ref name="isInput" scoped="" ref="0x7eea36e0"/>
        <function-ref name="toggle" scoped="" ref="0x7eea37c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea38a0"/>
        <function-ref name="get" scoped="" ref="0x7eea3980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea3a60"/>
        <function-ref name="set" scoped="" ref="0x7eea3b40"/>
        <function-ref name="clr" scoped="" ref="0x7eea3c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7ee92190" loc="87:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7ee92190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee92368"/>
        <function-ref name="isInput" scoped="" ref="0x7ee92448"/>
        <function-ref name="toggle" scoped="" ref="0x7ee92528"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee92608"/>
        <function-ref name="get" scoped="" ref="0x7ee926e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee927c8"/>
        <function-ref name="set" scoped="" ref="0x7ee928a8"/>
        <function-ref name="clr" scoped="" ref="0x7ee92988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7ef039a0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7ef039a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef03b78"/>
        <function-ref name="isInput" scoped="" ref="0x7ef03c58"/>
        <function-ref name="toggle" scoped="" ref="0x7ef03d38"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef03e18"/>
        <function-ref name="get" scoped="" ref="0x7ef03ef8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ef02010"/>
        <function-ref name="set" scoped="" ref="0x7ef020f0"/>
        <function-ref name="clr" scoped="" ref="0x7ef021d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7eef1af8" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7eef1af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef1cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7eef1db0"/>
        <function-ref name="toggle" scoped="" ref="0x7eef1e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef0010"/>
        <function-ref name="get" scoped="" ref="0x7eef00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef01d0"/>
        <function-ref name="set" scoped="" ref="0x7eef02b0"/>
        <function-ref name="clr" scoped="" ref="0x7eef0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7eed3cb8" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7eed3cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eed3e90"/>
        <function-ref name="isInput" scoped="" ref="0x7eed2010"/>
        <function-ref name="toggle" scoped="" ref="0x7eed20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eed21d0"/>
        <function-ref name="get" scoped="" ref="0x7eed22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eed2390"/>
        <function-ref name="set" scoped="" ref="0x7eed2470"/>
        <function-ref name="clr" scoped="" ref="0x7eed2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7eeb3010" loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7eeb3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb31e8"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb32c8"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb33a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb3488"/>
        <function-ref name="get" scoped="" ref="0x7eeb3568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eeb3648"/>
        <function-ref name="set" scoped="" ref="0x7eeb3728"/>
        <function-ref name="clr" scoped="" ref="0x7eeb3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7ee83428" loc="93:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7ee83428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee83600"/>
        <function-ref name="isInput" scoped="" ref="0x7ee836e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ee837c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee838a0"/>
        <function-ref name="get" scoped="" ref="0x7ee83980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee83a60"/>
        <function-ref name="set" scoped="" ref="0x7ee83b40"/>
        <function-ref name="clr" scoped="" ref="0x7ee83c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7eeb2348" loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7eeb2348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb2520"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb2600"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb26e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb27c0"/>
        <function-ref name="get" scoped="" ref="0x7eeb28a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eeb2980"/>
        <function-ref name="set" scoped="" ref="0x7eeb2a60"/>
        <function-ref name="clr" scoped="" ref="0x7eeb2b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7eed19d8" loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7eed19d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eed1bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7eed1c90"/>
        <function-ref name="toggle" scoped="" ref="0x7eed1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7eed1e50"/>
        <function-ref name="get" scoped="" ref="0x7eec3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec30f0"/>
        <function-ref name="set" scoped="" ref="0x7eec31d0"/>
        <function-ref name="clr" scoped="" ref="0x7eec32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7ef016c8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7ef016c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef018a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ef01980"/>
        <function-ref name="toggle" scoped="" ref="0x7ef01a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef01b40"/>
        <function-ref name="get" scoped="" ref="0x7ef01c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ef01d00"/>
        <function-ref name="set" scoped="" ref="0x7ef01de0"/>
        <function-ref name="clr" scoped="" ref="0x7ef01ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7eee3878" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7eee3878"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eee3a50"/>
        <function-ref name="isInput" scoped="" ref="0x7eee3b30"/>
        <function-ref name="toggle" scoped="" ref="0x7eee3c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7eee3cf0"/>
        <function-ref name="get" scoped="" ref="0x7eee3dd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eee3eb0"/>
        <function-ref name="set" scoped="" ref="0x7eee2010"/>
        <function-ref name="clr" scoped="" ref="0x7eee20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ede27f0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ede27f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede29c8"/>
        <function-ref name="isInput" scoped="" ref="0x7ede2aa8"/>
        <function-ref name="toggle" scoped="" ref="0x7ede2b88"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede2c68"/>
        <function-ref name="get" scoped="" ref="0x7ede2d48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede2e28"/>
        <function-ref name="set" scoped="" ref="0x7ede2f08"/>
        <function-ref name="clr" scoped="" ref="0x7ede1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ede04f0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ede04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede06c8"/>
        <function-ref name="isInput" scoped="" ref="0x7ede07a8"/>
        <function-ref name="toggle" scoped="" ref="0x7ede0888"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede0968"/>
        <function-ref name="get" scoped="" ref="0x7ede0a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede0b28"/>
        <function-ref name="set" scoped="" ref="0x7ede0c08"/>
        <function-ref name="clr" scoped="" ref="0x7ede0ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ede3518" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ede3518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede36f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ede37d0"/>
        <function-ref name="toggle" scoped="" ref="0x7ede38b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede3990"/>
        <function-ref name="get" scoped="" ref="0x7ede3a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede3b50"/>
        <function-ref name="set" scoped="" ref="0x7ede3c30"/>
        <function-ref name="clr" scoped="" ref="0x7ede3d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ede1170" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ede1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede1348"/>
        <function-ref name="isInput" scoped="" ref="0x7ede1428"/>
        <function-ref name="toggle" scoped="" ref="0x7ede1508"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede15e8"/>
        <function-ref name="get" scoped="" ref="0x7ede16c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede17a8"/>
        <function-ref name="set" scoped="" ref="0x7ede1888"/>
        <function-ref name="clr" scoped="" ref="0x7ede1968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ede0e48" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ede0e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd3050"/>
        <function-ref name="isInput" scoped="" ref="0x7edd3130"/>
        <function-ref name="toggle" scoped="" ref="0x7edd3210"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd32f0"/>
        <function-ref name="get" scoped="" ref="0x7edd33d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd34b0"/>
        <function-ref name="set" scoped="" ref="0x7edd3590"/>
        <function-ref name="clr" scoped="" ref="0x7edd3670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ede3e70" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ede3e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede2070"/>
        <function-ref name="isInput" scoped="" ref="0x7ede2150"/>
        <function-ref name="toggle" scoped="" ref="0x7ede2230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede2310"/>
        <function-ref name="get" scoped="" ref="0x7ede23f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede24d0"/>
        <function-ref name="set" scoped="" ref="0x7ede25b0"/>
        <function-ref name="clr" scoped="" ref="0x7ede2690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ede1ac8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ede1ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede1ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7ede1d80"/>
        <function-ref name="toggle" scoped="" ref="0x7ede1e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede0010"/>
        <function-ref name="get" scoped="" ref="0x7ede00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede01d0"/>
        <function-ref name="set" scoped="" ref="0x7ede02b0"/>
        <function-ref name="clr" scoped="" ref="0x7ede0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7edd37d0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7edd37d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd39a8"/>
        <function-ref name="isInput" scoped="" ref="0x7edd3a88"/>
        <function-ref name="toggle" scoped="" ref="0x7edd3b68"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd3c48"/>
        <function-ref name="get" scoped="" ref="0x7edd3d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd3e08"/>
        <function-ref name="set" scoped="" ref="0x7edd3ee8"/>
        <function-ref name="clr" scoped="" ref="0x7edd2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7da22ed8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7da22ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9fa0c0"/>
        <function-ref name="isInput" scoped="" ref="0x7d9fa1a0"/>
        <function-ref name="toggle" scoped="" ref="0x7d9fa280"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9fa360"/>
        <function-ref name="get" scoped="" ref="0x7d9fa440"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9fa520"/>
        <function-ref name="set" scoped="" ref="0x7d9fa600"/>
        <function-ref name="clr" scoped="" ref="0x7d9fa6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9f98a0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9f98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9f9a78"/>
        <function-ref name="isInput" scoped="" ref="0x7d9f9b58"/>
        <function-ref name="toggle" scoped="" ref="0x7d9f9c38"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9f9d18"/>
        <function-ref name="get" scoped="" ref="0x7d9f9df8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9f9ed8"/>
        <function-ref name="set" scoped="" ref="0x7d9f8010"/>
        <function-ref name="clr" scoped="" ref="0x7d9f80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9f72d0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9f72d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9f74a8"/>
        <function-ref name="isInput" scoped="" ref="0x7d9f7588"/>
        <function-ref name="toggle" scoped="" ref="0x7d9f7668"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9f7748"/>
        <function-ref name="get" scoped="" ref="0x7d9f7828"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9f7908"/>
        <function-ref name="set" scoped="" ref="0x7d9f79e8"/>
        <function-ref name="clr" scoped="" ref="0x7d9f7ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9f6c90" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9f6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9f6e68"/>
        <function-ref name="isInput" scoped="" ref="0x7d9f5010"/>
        <function-ref name="toggle" scoped="" ref="0x7d9f50f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9f51d0"/>
        <function-ref name="get" scoped="" ref="0x7d9f52b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9f5390"/>
        <function-ref name="set" scoped="" ref="0x7d9f5470"/>
        <function-ref name="clr" scoped="" ref="0x7d9f5550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9f4718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9f4718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9f48f0"/>
        <function-ref name="isInput" scoped="" ref="0x7d9f49d0"/>
        <function-ref name="toggle" scoped="" ref="0x7d9f4ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9f4b90"/>
        <function-ref name="get" scoped="" ref="0x7d9f4c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9f4d50"/>
        <function-ref name="set" scoped="" ref="0x7d9f4e30"/>
        <function-ref name="clr" scoped="" ref="0x7d9f4f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9f20f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9f20f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9f22d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d9f23b0"/>
        <function-ref name="toggle" scoped="" ref="0x7d9f2490"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9f2570"/>
        <function-ref name="get" scoped="" ref="0x7d9f2650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9f2730"/>
        <function-ref name="set" scoped="" ref="0x7d9f2810"/>
        <function-ref name="clr" scoped="" ref="0x7d9f28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9f1ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9f1ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9f1ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7d9f1d80"/>
        <function-ref name="toggle" scoped="" ref="0x7d9f1e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9f0010"/>
        <function-ref name="get" scoped="" ref="0x7d9f00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9f01d0"/>
        <function-ref name="set" scoped="" ref="0x7d9f02b0"/>
        <function-ref name="clr" scoped="" ref="0x7d9f0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9ef570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9ef570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9ef748"/>
        <function-ref name="isInput" scoped="" ref="0x7d9ef828"/>
        <function-ref name="toggle" scoped="" ref="0x7d9ef908"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9ef9e8"/>
        <function-ref name="get" scoped="" ref="0x7d9efac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9efba8"/>
        <function-ref name="set" scoped="" ref="0x7d9efc88"/>
        <function-ref name="clr" scoped="" ref="0x7d9efd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7edc4f28" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7edc4f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc3110"/>
        <function-ref name="isInput" scoped="" ref="0x7edc31f0"/>
        <function-ref name="toggle" scoped="" ref="0x7edc32d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc33b0"/>
        <function-ref name="get" scoped="" ref="0x7edc3490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc3570"/>
        <function-ref name="set" scoped="" ref="0x7edc3650"/>
        <function-ref name="clr" scoped="" ref="0x7edc3730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7edc2ba8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7edc2ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc2d80"/>
        <function-ref name="isInput" scoped="" ref="0x7edc2e60"/>
        <function-ref name="toggle" scoped="" ref="0x7edc1010"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc10f0"/>
        <function-ref name="get" scoped="" ref="0x7edc11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc12b0"/>
        <function-ref name="set" scoped="" ref="0x7edc1390"/>
        <function-ref name="clr" scoped="" ref="0x7edc1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7edd0bc0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7edd0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd0d98"/>
        <function-ref name="isInput" scoped="" ref="0x7edd0e78"/>
        <function-ref name="toggle" scoped="" ref="0x7edc4010"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc40f0"/>
        <function-ref name="get" scoped="" ref="0x7edc41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc42b0"/>
        <function-ref name="set" scoped="" ref="0x7edc4390"/>
        <function-ref name="clr" scoped="" ref="0x7edc4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7edc3890" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7edc3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc3a68"/>
        <function-ref name="isInput" scoped="" ref="0x7edc3b48"/>
        <function-ref name="toggle" scoped="" ref="0x7edc3c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc3d08"/>
        <function-ref name="get" scoped="" ref="0x7edc3de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc3ec8"/>
        <function-ref name="set" scoped="" ref="0x7edc2010"/>
        <function-ref name="clr" scoped="" ref="0x7edc20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7edc15d0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7edc15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc17a8"/>
        <function-ref name="isInput" scoped="" ref="0x7edc1888"/>
        <function-ref name="toggle" scoped="" ref="0x7edc1968"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc1a48"/>
        <function-ref name="get" scoped="" ref="0x7edc1b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc1c08"/>
        <function-ref name="set" scoped="" ref="0x7edc1ce8"/>
        <function-ref name="clr" scoped="" ref="0x7edc1dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7edc45d0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7edc45d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc47a8"/>
        <function-ref name="isInput" scoped="" ref="0x7edc4888"/>
        <function-ref name="toggle" scoped="" ref="0x7edc4968"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc4a48"/>
        <function-ref name="get" scoped="" ref="0x7edc4b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc4c08"/>
        <function-ref name="set" scoped="" ref="0x7edc4ce8"/>
        <function-ref name="clr" scoped="" ref="0x7edc4dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7edc2250" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7edc2250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc2428"/>
        <function-ref name="isInput" scoped="" ref="0x7edc2508"/>
        <function-ref name="toggle" scoped="" ref="0x7edc25e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc26c8"/>
        <function-ref name="get" scoped="" ref="0x7edc27a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc2888"/>
        <function-ref name="set" scoped="" ref="0x7edc2968"/>
        <function-ref name="clr" scoped="" ref="0x7edc2a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7edc1f28" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7edc1f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc0110"/>
        <function-ref name="isInput" scoped="" ref="0x7edc01f0"/>
        <function-ref name="toggle" scoped="" ref="0x7edc02d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc03b0"/>
        <function-ref name="get" scoped="" ref="0x7edc0490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc0570"/>
        <function-ref name="set" scoped="" ref="0x7edc0650"/>
        <function-ref name="clr" scoped="" ref="0x7edc0730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9c32b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9c32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9c3488"/>
        <function-ref name="isInput" scoped="" ref="0x7d9c3568"/>
        <function-ref name="toggle" scoped="" ref="0x7d9c3648"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9c3728"/>
        <function-ref name="get" scoped="" ref="0x7d9c3808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9c38e8"/>
        <function-ref name="set" scoped="" ref="0x7d9c39c8"/>
        <function-ref name="clr" scoped="" ref="0x7d9c3aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9c2c78" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9c2c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9c2e50"/>
        <function-ref name="isInput" scoped="" ref="0x7d9c1010"/>
        <function-ref name="toggle" scoped="" ref="0x7d9c10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9c11d0"/>
        <function-ref name="get" scoped="" ref="0x7d9c12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9c1390"/>
        <function-ref name="set" scoped="" ref="0x7d9c1470"/>
        <function-ref name="clr" scoped="" ref="0x7d9c1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9c0718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9c0718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9c08f0"/>
        <function-ref name="isInput" scoped="" ref="0x7d9c09d0"/>
        <function-ref name="toggle" scoped="" ref="0x7d9c0ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9c0b90"/>
        <function-ref name="get" scoped="" ref="0x7d9c0c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9c0d50"/>
        <function-ref name="set" scoped="" ref="0x7d9c0e30"/>
        <function-ref name="clr" scoped="" ref="0x7d9c0f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9bb0f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9bb0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9bb2d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d9bb3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7d9bb490"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9bb570"/>
        <function-ref name="get" scoped="" ref="0x7d9bb650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9bb730"/>
        <function-ref name="set" scoped="" ref="0x7d9bb810"/>
        <function-ref name="clr" scoped="" ref="0x7d9bb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9baac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9baac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9baca0"/>
        <function-ref name="isInput" scoped="" ref="0x7d9bad80"/>
        <function-ref name="toggle" scoped="" ref="0x7d9bae60"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9b9010"/>
        <function-ref name="get" scoped="" ref="0x7d9b90f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9b91d0"/>
        <function-ref name="set" scoped="" ref="0x7d9b92b0"/>
        <function-ref name="clr" scoped="" ref="0x7d9b9390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9b8570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9b8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9b8748"/>
        <function-ref name="isInput" scoped="" ref="0x7d9b8828"/>
        <function-ref name="toggle" scoped="" ref="0x7d9b8908"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9b89e8"/>
        <function-ref name="get" scoped="" ref="0x7d9b8ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9b8ba8"/>
        <function-ref name="set" scoped="" ref="0x7d9b8c88"/>
        <function-ref name="clr" scoped="" ref="0x7d9b8d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9b6010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9b6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9b61e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d9b62c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d9b63a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9b6488"/>
        <function-ref name="get" scoped="" ref="0x7d9b6568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9b6648"/>
        <function-ref name="set" scoped="" ref="0x7d9b6728"/>
        <function-ref name="clr" scoped="" ref="0x7d9b6808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9b59e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9b59e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9b5bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7d9b5ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7d9b5d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9b5e60"/>
        <function-ref name="get" scoped="" ref="0x7d9b4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9b40f0"/>
        <function-ref name="set" scoped="" ref="0x7d9b41d0"/>
        <function-ref name="clr" scoped="" ref="0x7d9b42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7edb05d0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7edb05d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb07a8"/>
        <function-ref name="isInput" scoped="" ref="0x7edb0888"/>
        <function-ref name="toggle" scoped="" ref="0x7edb0968"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb0a48"/>
        <function-ref name="get" scoped="" ref="0x7edb0b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb0c08"/>
        <function-ref name="set" scoped="" ref="0x7edb0ce8"/>
        <function-ref name="clr" scoped="" ref="0x7edb0dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7eda3250" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7eda3250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda3428"/>
        <function-ref name="isInput" scoped="" ref="0x7eda3508"/>
        <function-ref name="toggle" scoped="" ref="0x7eda35e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda36c8"/>
        <function-ref name="get" scoped="" ref="0x7eda37a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda3888"/>
        <function-ref name="set" scoped="" ref="0x7eda3968"/>
        <function-ref name="clr" scoped="" ref="0x7eda3a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7edb12a0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7edb12a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb1478"/>
        <function-ref name="isInput" scoped="" ref="0x7edb1558"/>
        <function-ref name="toggle" scoped="" ref="0x7edb1638"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb1718"/>
        <function-ref name="get" scoped="" ref="0x7edb17f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb18d8"/>
        <function-ref name="set" scoped="" ref="0x7edb19b8"/>
        <function-ref name="clr" scoped="" ref="0x7edb1a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7edb0f28" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7edb0f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda4110"/>
        <function-ref name="isInput" scoped="" ref="0x7eda41f0"/>
        <function-ref name="toggle" scoped="" ref="0x7eda42d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda43b0"/>
        <function-ref name="get" scoped="" ref="0x7eda4490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda4570"/>
        <function-ref name="set" scoped="" ref="0x7eda4650"/>
        <function-ref name="clr" scoped="" ref="0x7eda4730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7eda3ba8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7eda3ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda3d80"/>
        <function-ref name="isInput" scoped="" ref="0x7eda3e60"/>
        <function-ref name="toggle" scoped="" ref="0x7eda2010"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda20f0"/>
        <function-ref name="get" scoped="" ref="0x7eda21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda22b0"/>
        <function-ref name="set" scoped="" ref="0x7eda2390"/>
        <function-ref name="clr" scoped="" ref="0x7eda2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7edb1bf8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7edb1bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb1dd0"/>
        <function-ref name="isInput" scoped="" ref="0x7edb1eb0"/>
        <function-ref name="toggle" scoped="" ref="0x7edb0010"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb00f0"/>
        <function-ref name="get" scoped="" ref="0x7edb01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb02b0"/>
        <function-ref name="set" scoped="" ref="0x7edb0390"/>
        <function-ref name="clr" scoped="" ref="0x7edb0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7eda4890" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7eda4890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda4a68"/>
        <function-ref name="isInput" scoped="" ref="0x7eda4b48"/>
        <function-ref name="toggle" scoped="" ref="0x7eda4c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda4d08"/>
        <function-ref name="get" scoped="" ref="0x7eda4de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda4ec8"/>
        <function-ref name="set" scoped="" ref="0x7eda3010"/>
        <function-ref name="clr" scoped="" ref="0x7eda30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7eda25d0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7eda25d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda27a8"/>
        <function-ref name="isInput" scoped="" ref="0x7eda2888"/>
        <function-ref name="toggle" scoped="" ref="0x7eda2968"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda2a48"/>
        <function-ref name="get" scoped="" ref="0x7eda2b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda2c08"/>
        <function-ref name="set" scoped="" ref="0x7eda2ce8"/>
        <function-ref name="clr" scoped="" ref="0x7eda2dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d98a7f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d98a7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d98a9d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d98aab0"/>
        <function-ref name="toggle" scoped="" ref="0x7d98ab90"/>
        <function-ref name="isOutput" scoped="" ref="0x7d98ac70"/>
        <function-ref name="get" scoped="" ref="0x7d98ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d98ae30"/>
        <function-ref name="set" scoped="" ref="0x7d98af10"/>
        <function-ref name="clr" scoped="" ref="0x7d989010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d988228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d988228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d988400"/>
        <function-ref name="isInput" scoped="" ref="0x7d9884e0"/>
        <function-ref name="toggle" scoped="" ref="0x7d9885c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9886a0"/>
        <function-ref name="get" scoped="" ref="0x7d988780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d988860"/>
        <function-ref name="set" scoped="" ref="0x7d988940"/>
        <function-ref name="clr" scoped="" ref="0x7d988a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d987c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d987c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d987de0"/>
        <function-ref name="isInput" scoped="" ref="0x7d987ec0"/>
        <function-ref name="toggle" scoped="" ref="0x7d986010"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9860f0"/>
        <function-ref name="get" scoped="" ref="0x7d9861d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9862b0"/>
        <function-ref name="set" scoped="" ref="0x7d986390"/>
        <function-ref name="clr" scoped="" ref="0x7d986470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9856c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9856c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d985898"/>
        <function-ref name="isInput" scoped="" ref="0x7d985978"/>
        <function-ref name="toggle" scoped="" ref="0x7d985a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7d985b38"/>
        <function-ref name="get" scoped="" ref="0x7d985c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d985cf8"/>
        <function-ref name="set" scoped="" ref="0x7d985dd8"/>
        <function-ref name="clr" scoped="" ref="0x7d985eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9830b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9830b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d983288"/>
        <function-ref name="isInput" scoped="" ref="0x7d983368"/>
        <function-ref name="toggle" scoped="" ref="0x7d983448"/>
        <function-ref name="isOutput" scoped="" ref="0x7d983528"/>
        <function-ref name="get" scoped="" ref="0x7d983608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9836e8"/>
        <function-ref name="set" scoped="" ref="0x7d9837c8"/>
        <function-ref name="clr" scoped="" ref="0x7d9838a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d981a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d981a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d981c60"/>
        <function-ref name="isInput" scoped="" ref="0x7d981d40"/>
        <function-ref name="toggle" scoped="" ref="0x7d981e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7d981f00"/>
        <function-ref name="get" scoped="" ref="0x7d980010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9800f0"/>
        <function-ref name="set" scoped="" ref="0x7d9801d0"/>
        <function-ref name="clr" scoped="" ref="0x7d9802b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d97d538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d97d538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d97d710"/>
        <function-ref name="isInput" scoped="" ref="0x7d97d7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d97d8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d97d9b0"/>
        <function-ref name="get" scoped="" ref="0x7d97da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d97db70"/>
        <function-ref name="set" scoped="" ref="0x7d97dc50"/>
        <function-ref name="clr" scoped="" ref="0x7d97dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d97b010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d97b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d97b1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d97b2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d97b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d97b488"/>
        <function-ref name="get" scoped="" ref="0x7d97b568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d97b648"/>
        <function-ref name="set" scoped="" ref="0x7d97b728"/>
        <function-ref name="clr" scoped="" ref="0x7d97b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ed92c88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ed92c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed92e60"/>
        <function-ref name="isInput" scoped="" ref="0x7ed91010"/>
        <function-ref name="toggle" scoped="" ref="0x7ed910f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed911d0"/>
        <function-ref name="get" scoped="" ref="0x7ed912b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed91390"/>
        <function-ref name="set" scoped="" ref="0x7ed91470"/>
        <function-ref name="clr" scoped="" ref="0x7ed91550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ed90988" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ed90988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed90b60"/>
        <function-ref name="isInput" scoped="" ref="0x7ed90c40"/>
        <function-ref name="toggle" scoped="" ref="0x7ed90d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed90e00"/>
        <function-ref name="get" scoped="" ref="0x7ed90ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed84010"/>
        <function-ref name="set" scoped="" ref="0x7ed840f0"/>
        <function-ref name="clr" scoped="" ref="0x7ed841d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ed939c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ed939c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed93b98"/>
        <function-ref name="isInput" scoped="" ref="0x7ed93c78"/>
        <function-ref name="toggle" scoped="" ref="0x7ed93d58"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed93e38"/>
        <function-ref name="get" scoped="" ref="0x7ed93f18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed92010"/>
        <function-ref name="set" scoped="" ref="0x7ed920f0"/>
        <function-ref name="clr" scoped="" ref="0x7ed921d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ed916b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ed916b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed91888"/>
        <function-ref name="isInput" scoped="" ref="0x7ed91968"/>
        <function-ref name="toggle" scoped="" ref="0x7ed91a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed91b28"/>
        <function-ref name="get" scoped="" ref="0x7ed91c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed91ce8"/>
        <function-ref name="set" scoped="" ref="0x7ed91dc8"/>
        <function-ref name="clr" scoped="" ref="0x7ed91ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ed84330" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ed84330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed84508"/>
        <function-ref name="isInput" scoped="" ref="0x7ed845e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed846c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed847a8"/>
        <function-ref name="get" scoped="" ref="0x7ed84888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed84968"/>
        <function-ref name="set" scoped="" ref="0x7ed84a48"/>
        <function-ref name="clr" scoped="" ref="0x7ed84b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ed92330" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ed92330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed92508"/>
        <function-ref name="isInput" scoped="" ref="0x7ed925e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed926c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed927a8"/>
        <function-ref name="get" scoped="" ref="0x7ed92888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed92968"/>
        <function-ref name="set" scoped="" ref="0x7ed92a48"/>
        <function-ref name="clr" scoped="" ref="0x7ed92b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ed90030" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ed90030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed90208"/>
        <function-ref name="isInput" scoped="" ref="0x7ed902e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed903c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed904a8"/>
        <function-ref name="get" scoped="" ref="0x7ed90588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed90668"/>
        <function-ref name="set" scoped="" ref="0x7ed90748"/>
        <function-ref name="clr" scoped="" ref="0x7ed90828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ed84c88" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ed84c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed84e60"/>
        <function-ref name="isInput" scoped="" ref="0x7ed83010"/>
        <function-ref name="toggle" scoped="" ref="0x7ed830f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed831d0"/>
        <function-ref name="get" scoped="" ref="0x7ed832b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed83390"/>
        <function-ref name="set" scoped="" ref="0x7ed83470"/>
        <function-ref name="clr" scoped="" ref="0x7ed83550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d954d08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d954d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d954ee0"/>
        <function-ref name="isInput" scoped="" ref="0x7d951010"/>
        <function-ref name="toggle" scoped="" ref="0x7d9510f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9511d0"/>
        <function-ref name="get" scoped="" ref="0x7d9512b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d951390"/>
        <function-ref name="set" scoped="" ref="0x7d951470"/>
        <function-ref name="clr" scoped="" ref="0x7d951550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d950718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d950718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9508f0"/>
        <function-ref name="isInput" scoped="" ref="0x7d9509d0"/>
        <function-ref name="toggle" scoped="" ref="0x7d950ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d950b90"/>
        <function-ref name="get" scoped="" ref="0x7d950c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d950d50"/>
        <function-ref name="set" scoped="" ref="0x7d950e30"/>
        <function-ref name="clr" scoped="" ref="0x7d950f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d94e0f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d94e0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d94e2d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d94e3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7d94e490"/>
        <function-ref name="isOutput" scoped="" ref="0x7d94e570"/>
        <function-ref name="get" scoped="" ref="0x7d94e650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d94e730"/>
        <function-ref name="set" scoped="" ref="0x7d94e810"/>
        <function-ref name="clr" scoped="" ref="0x7d94e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d94dac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d94dac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d94dca0"/>
        <function-ref name="isInput" scoped="" ref="0x7d94dd80"/>
        <function-ref name="toggle" scoped="" ref="0x7d94de60"/>
        <function-ref name="isOutput" scoped="" ref="0x7d94c010"/>
        <function-ref name="get" scoped="" ref="0x7d94c0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d94c1d0"/>
        <function-ref name="set" scoped="" ref="0x7d94c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7d94c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d94b570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d94b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d94b748"/>
        <function-ref name="isInput" scoped="" ref="0x7d94b828"/>
        <function-ref name="toggle" scoped="" ref="0x7d94b908"/>
        <function-ref name="isOutput" scoped="" ref="0x7d94b9e8"/>
        <function-ref name="get" scoped="" ref="0x7d94bac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d94bba8"/>
        <function-ref name="set" scoped="" ref="0x7d94bc88"/>
        <function-ref name="clr" scoped="" ref="0x7d94bd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d949010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d949010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9491e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d9492c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d9493a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d949488"/>
        <function-ref name="get" scoped="" ref="0x7d949568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d949648"/>
        <function-ref name="set" scoped="" ref="0x7d949728"/>
        <function-ref name="clr" scoped="" ref="0x7d949808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9489e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9489e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d948bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7d948ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7d948d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7d948e60"/>
        <function-ref name="get" scoped="" ref="0x7d947010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9470f0"/>
        <function-ref name="set" scoped="" ref="0x7d9471d0"/>
        <function-ref name="clr" scoped="" ref="0x7d9472b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d946538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d946538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d946710"/>
        <function-ref name="isInput" scoped="" ref="0x7d9467f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d9468d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9469b0"/>
        <function-ref name="get" scoped="" ref="0x7d946a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d946b70"/>
        <function-ref name="set" scoped="" ref="0x7d946c50"/>
        <function-ref name="clr" scoped="" ref="0x7d946d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ed74410" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ed74410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed745e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ed746c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed747a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed74888"/>
        <function-ref name="get" scoped="" ref="0x7ed74968"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed74a48"/>
        <function-ref name="set" scoped="" ref="0x7ed74b28"/>
        <function-ref name="clr" scoped="" ref="0x7ed74c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ed71170" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ed71170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed71348"/>
        <function-ref name="isInput" scoped="" ref="0x7ed71428"/>
        <function-ref name="toggle" scoped="" ref="0x7ed71508"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed715e8"/>
        <function-ref name="get" scoped="" ref="0x7ed716c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed717a8"/>
        <function-ref name="set" scoped="" ref="0x7ed71888"/>
        <function-ref name="clr" scoped="" ref="0x7ed71968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ed800c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ed800c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed80298"/>
        <function-ref name="isInput" scoped="" ref="0x7ed80378"/>
        <function-ref name="toggle" scoped="" ref="0x7ed80458"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed80538"/>
        <function-ref name="get" scoped="" ref="0x7ed80618"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed806f8"/>
        <function-ref name="set" scoped="" ref="0x7ed807d8"/>
        <function-ref name="clr" scoped="" ref="0x7ed808b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ed74d68" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ed74d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed72010"/>
        <function-ref name="isInput" scoped="" ref="0x7ed720f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed721d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed722b0"/>
        <function-ref name="get" scoped="" ref="0x7ed72390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed72470"/>
        <function-ref name="set" scoped="" ref="0x7ed72550"/>
        <function-ref name="clr" scoped="" ref="0x7ed72630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ed71ac8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ed71ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed71ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed71d80"/>
        <function-ref name="toggle" scoped="" ref="0x7ed71e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed70010"/>
        <function-ref name="get" scoped="" ref="0x7ed700f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed701d0"/>
        <function-ref name="set" scoped="" ref="0x7ed702b0"/>
        <function-ref name="clr" scoped="" ref="0x7ed70390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ed80a18" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ed80a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed80bf0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed80cd0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed80db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed80e90"/>
        <function-ref name="get" scoped="" ref="0x7ed74010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed740f0"/>
        <function-ref name="set" scoped="" ref="0x7ed741d0"/>
        <function-ref name="clr" scoped="" ref="0x7ed742b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ed72790" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ed72790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed72968"/>
        <function-ref name="isInput" scoped="" ref="0x7ed72a48"/>
        <function-ref name="toggle" scoped="" ref="0x7ed72b28"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed72c08"/>
        <function-ref name="get" scoped="" ref="0x7ed72ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed72dc8"/>
        <function-ref name="set" scoped="" ref="0x7ed72ea8"/>
        <function-ref name="clr" scoped="" ref="0x7ed71010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ed704f0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ed704f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed706c8"/>
        <function-ref name="isInput" scoped="" ref="0x7ed707a8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed70888"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed70968"/>
        <function-ref name="get" scoped="" ref="0x7ed70a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed70b28"/>
        <function-ref name="set" scoped="" ref="0x7ed70c08"/>
        <function-ref name="clr" scoped="" ref="0x7ed70ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9192b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9192b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d919488"/>
        <function-ref name="isInput" scoped="" ref="0x7d919568"/>
        <function-ref name="toggle" scoped="" ref="0x7d919648"/>
        <function-ref name="isOutput" scoped="" ref="0x7d919728"/>
        <function-ref name="get" scoped="" ref="0x7d919808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9198e8"/>
        <function-ref name="set" scoped="" ref="0x7d9199c8"/>
        <function-ref name="clr" scoped="" ref="0x7d919aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d918c78" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d918c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d918e50"/>
        <function-ref name="isInput" scoped="" ref="0x7d917010"/>
        <function-ref name="toggle" scoped="" ref="0x7d9170f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9171d0"/>
        <function-ref name="get" scoped="" ref="0x7d9172b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d917390"/>
        <function-ref name="set" scoped="" ref="0x7d917470"/>
        <function-ref name="clr" scoped="" ref="0x7d917550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d916718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d916718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9168f0"/>
        <function-ref name="isInput" scoped="" ref="0x7d9169d0"/>
        <function-ref name="toggle" scoped="" ref="0x7d916ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d916b90"/>
        <function-ref name="get" scoped="" ref="0x7d916c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d916d50"/>
        <function-ref name="set" scoped="" ref="0x7d916e30"/>
        <function-ref name="clr" scoped="" ref="0x7d916f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9140f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9140f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9142d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d9143b0"/>
        <function-ref name="toggle" scoped="" ref="0x7d914490"/>
        <function-ref name="isOutput" scoped="" ref="0x7d914570"/>
        <function-ref name="get" scoped="" ref="0x7d914650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d914730"/>
        <function-ref name="set" scoped="" ref="0x7d914810"/>
        <function-ref name="clr" scoped="" ref="0x7d9148f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d913ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d913ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d913ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7d913d80"/>
        <function-ref name="toggle" scoped="" ref="0x7d913e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7d912010"/>
        <function-ref name="get" scoped="" ref="0x7d9120f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9121d0"/>
        <function-ref name="set" scoped="" ref="0x7d9122b0"/>
        <function-ref name="clr" scoped="" ref="0x7d912390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d911570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d911570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d911748"/>
        <function-ref name="isInput" scoped="" ref="0x7d911828"/>
        <function-ref name="toggle" scoped="" ref="0x7d911908"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9119e8"/>
        <function-ref name="get" scoped="" ref="0x7d911ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d911ba8"/>
        <function-ref name="set" scoped="" ref="0x7d911c88"/>
        <function-ref name="clr" scoped="" ref="0x7d911d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d90f010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d90f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d90f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d90f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d90f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d90f488"/>
        <function-ref name="get" scoped="" ref="0x7d90f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d90f648"/>
        <function-ref name="set" scoped="" ref="0x7d90f728"/>
        <function-ref name="clr" scoped="" ref="0x7d90f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d90e9e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d90e9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d90ebc0"/>
        <function-ref name="isInput" scoped="" ref="0x7d90eca0"/>
        <function-ref name="toggle" scoped="" ref="0x7d90ed80"/>
        <function-ref name="isOutput" scoped="" ref="0x7d90ee60"/>
        <function-ref name="get" scoped="" ref="0x7d90d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d90d0f0"/>
        <function-ref name="set" scoped="" ref="0x7d90d1d0"/>
        <function-ref name="clr" scoped="" ref="0x7d90d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ed619e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ed619e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed61bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed61ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed61d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed61e60"/>
        <function-ref name="get" scoped="" ref="0x7ed60010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed600f0"/>
        <function-ref name="set" scoped="" ref="0x7ed601d0"/>
        <function-ref name="clr" scoped="" ref="0x7ed602b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ed54790" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ed54790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed54968"/>
        <function-ref name="isInput" scoped="" ref="0x7ed54a48"/>
        <function-ref name="toggle" scoped="" ref="0x7ed54b28"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed54c08"/>
        <function-ref name="get" scoped="" ref="0x7ed54ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed54dc8"/>
        <function-ref name="set" scoped="" ref="0x7ed54ea8"/>
        <function-ref name="clr" scoped="" ref="0x7ed52010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ed626f8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ed626f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed628d0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed629b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed62a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed62b70"/>
        <function-ref name="get" scoped="" ref="0x7ed62c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed62d30"/>
        <function-ref name="set" scoped="" ref="0x7ed62e10"/>
        <function-ref name="clr" scoped="" ref="0x7ed62ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ed60410" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ed60410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed605e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ed606c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed607a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed60888"/>
        <function-ref name="get" scoped="" ref="0x7ed60968"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed60a48"/>
        <function-ref name="set" scoped="" ref="0x7ed60b28"/>
        <function-ref name="clr" scoped="" ref="0x7ed60c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ed52170" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ed52170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed52348"/>
        <function-ref name="isInput" scoped="" ref="0x7ed52428"/>
        <function-ref name="toggle" scoped="" ref="0x7ed52508"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed525e8"/>
        <function-ref name="get" scoped="" ref="0x7ed526c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed527a8"/>
        <function-ref name="set" scoped="" ref="0x7ed52888"/>
        <function-ref name="clr" scoped="" ref="0x7ed52968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ed61090" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ed61090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed61268"/>
        <function-ref name="isInput" scoped="" ref="0x7ed61348"/>
        <function-ref name="toggle" scoped="" ref="0x7ed61428"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed61508"/>
        <function-ref name="get" scoped="" ref="0x7ed615e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed616c8"/>
        <function-ref name="set" scoped="" ref="0x7ed617a8"/>
        <function-ref name="clr" scoped="" ref="0x7ed61888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ed60d68" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ed60d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed54010"/>
        <function-ref name="isInput" scoped="" ref="0x7ed540f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed541d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed542b0"/>
        <function-ref name="get" scoped="" ref="0x7ed54390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed54470"/>
        <function-ref name="set" scoped="" ref="0x7ed54550"/>
        <function-ref name="clr" scoped="" ref="0x7ed54630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ed52ac8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ed52ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed52ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed52d80"/>
        <function-ref name="toggle" scoped="" ref="0x7ed52e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed51010"/>
        <function-ref name="get" scoped="" ref="0x7ed510f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed511d0"/>
        <function-ref name="set" scoped="" ref="0x7ed512b0"/>
        <function-ref name="clr" scoped="" ref="0x7ed51390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8e57f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8e57f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8e59d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d8e5ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8e5b90"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8e5c70"/>
        <function-ref name="get" scoped="" ref="0x7d8e5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8e5e30"/>
        <function-ref name="set" scoped="" ref="0x7d8e5f10"/>
        <function-ref name="clr" scoped="" ref="0x7d8e4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8e3228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8e3228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8e3400"/>
        <function-ref name="isInput" scoped="" ref="0x7d8e34e0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8e35c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8e36a0"/>
        <function-ref name="get" scoped="" ref="0x7d8e3780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8e3860"/>
        <function-ref name="set" scoped="" ref="0x7d8e3940"/>
        <function-ref name="clr" scoped="" ref="0x7d8e3a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8e2c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8e2c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8e2de0"/>
        <function-ref name="isInput" scoped="" ref="0x7d8e2ec0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8e1010"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8e10f0"/>
        <function-ref name="get" scoped="" ref="0x7d8e11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8e12b0"/>
        <function-ref name="set" scoped="" ref="0x7d8e1390"/>
        <function-ref name="clr" scoped="" ref="0x7d8e1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8e06c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8e06c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8e0898"/>
        <function-ref name="isInput" scoped="" ref="0x7d8e0978"/>
        <function-ref name="toggle" scoped="" ref="0x7d8e0a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8e0b38"/>
        <function-ref name="get" scoped="" ref="0x7d8e0c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8e0cf8"/>
        <function-ref name="set" scoped="" ref="0x7d8e0dd8"/>
        <function-ref name="clr" scoped="" ref="0x7d8e0eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8dd0b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8dd0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8dd288"/>
        <function-ref name="isInput" scoped="" ref="0x7d8dd368"/>
        <function-ref name="toggle" scoped="" ref="0x7d8dd448"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8dd528"/>
        <function-ref name="get" scoped="" ref="0x7d8dd608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8dd6e8"/>
        <function-ref name="set" scoped="" ref="0x7d8dd7c8"/>
        <function-ref name="clr" scoped="" ref="0x7d8dd8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8dba88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8dba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8dbc60"/>
        <function-ref name="isInput" scoped="" ref="0x7d8dbd40"/>
        <function-ref name="toggle" scoped="" ref="0x7d8dbe20"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8dbf00"/>
        <function-ref name="get" scoped="" ref="0x7d8da010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8da0f0"/>
        <function-ref name="set" scoped="" ref="0x7d8da1d0"/>
        <function-ref name="clr" scoped="" ref="0x7d8da2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8d9538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8d9538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8d9710"/>
        <function-ref name="isInput" scoped="" ref="0x7d8d97f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8d98d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8d99b0"/>
        <function-ref name="get" scoped="" ref="0x7d8d9a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8d9b70"/>
        <function-ref name="set" scoped="" ref="0x7d8d9c50"/>
        <function-ref name="clr" scoped="" ref="0x7d8d9d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8d7010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8d7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8d71e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d8d72c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d8d73a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8d7488"/>
        <function-ref name="get" scoped="" ref="0x7d8d7568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8d7648"/>
        <function-ref name="set" scoped="" ref="0x7d8d7728"/>
        <function-ref name="clr" scoped="" ref="0x7d8d7808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ed42228" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ed42228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed42400"/>
        <function-ref name="isInput" scoped="" ref="0x7ed424e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed425c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed426a0"/>
        <function-ref name="get" scoped="" ref="0x7ed42780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed42860"/>
        <function-ref name="set" scoped="" ref="0x7ed42940"/>
        <function-ref name="clr" scoped="" ref="0x7ed42a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ed145e8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ed145e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed147c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed148a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed14980"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed14a60"/>
        <function-ref name="get" scoped="" ref="0x7ed14b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed14c20"/>
        <function-ref name="set" scoped="" ref="0x7ed14d00"/>
        <function-ref name="clr" scoped="" ref="0x7ed14de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ed12a90" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ed12a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed12c68"/>
        <function-ref name="isInput" scoped="" ref="0x7ed12d48"/>
        <function-ref name="toggle" scoped="" ref="0x7ed12e28"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed12f08"/>
        <function-ref name="get" scoped="" ref="0x7ed11010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed110f0"/>
        <function-ref name="set" scoped="" ref="0x7ed111d0"/>
        <function-ref name="clr" scoped="" ref="0x7ed112b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ed04e60" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ed04e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed03050"/>
        <function-ref name="isInput" scoped="" ref="0x7ed03130"/>
        <function-ref name="toggle" scoped="" ref="0x7ed03210"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed032f0"/>
        <function-ref name="get" scoped="" ref="0x7ed033d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed034b0"/>
        <function-ref name="set" scoped="" ref="0x7ed03590"/>
        <function-ref name="clr" scoped="" ref="0x7ed03670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ed01228" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ed01228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed01400"/>
        <function-ref name="isInput" scoped="" ref="0x7ed014e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed015c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed016a0"/>
        <function-ref name="get" scoped="" ref="0x7ed01780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed01860"/>
        <function-ref name="set" scoped="" ref="0x7ed01940"/>
        <function-ref name="clr" scoped="" ref="0x7ed01a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ecf35e8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ecf35e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecf37c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ecf38a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ecf3980"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecf3a60"/>
        <function-ref name="get" scoped="" ref="0x7ecf3b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecf3c20"/>
        <function-ref name="set" scoped="" ref="0x7ecf3d00"/>
        <function-ref name="clr" scoped="" ref="0x7ecf3de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ecf1b10" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ecf1b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecf1ce8"/>
        <function-ref name="isInput" scoped="" ref="0x7ecf1dc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ecf1ea8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecf0010"/>
        <function-ref name="get" scoped="" ref="0x7ecf00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecf01d0"/>
        <function-ref name="set" scoped="" ref="0x7ecf02b0"/>
        <function-ref name="clr" scoped="" ref="0x7ecf0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ece3010" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ece3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ece31e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ece32c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ece33a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ece3488"/>
        <function-ref name="get" scoped="" ref="0x7ece3568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ece3648"/>
        <function-ref name="set" scoped="" ref="0x7ece3728"/>
        <function-ref name="clr" scoped="" ref="0x7ece3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ece02d8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ece02d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ece04b0"/>
        <function-ref name="isInput" scoped="" ref="0x7ece0590"/>
        <function-ref name="toggle" scoped="" ref="0x7ece0670"/>
        <function-ref name="isOutput" scoped="" ref="0x7ece0750"/>
        <function-ref name="get" scoped="" ref="0x7ece0830"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ece0910"/>
        <function-ref name="set" scoped="" ref="0x7ece09f0"/>
        <function-ref name="clr" scoped="" ref="0x7ece0ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ecd3590" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ecd3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecd3768"/>
        <function-ref name="isInput" scoped="" ref="0x7ecd3848"/>
        <function-ref name="toggle" scoped="" ref="0x7ecd3928"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecd3a08"/>
        <function-ref name="get" scoped="" ref="0x7ecd3ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecd3bc8"/>
        <function-ref name="set" scoped="" ref="0x7ecd3ca8"/>
        <function-ref name="clr" scoped="" ref="0x7ecd3d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ecd0880" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ecd0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecd0a58"/>
        <function-ref name="isInput" scoped="" ref="0x7ecd0b38"/>
        <function-ref name="toggle" scoped="" ref="0x7ecd0c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecd0cf8"/>
        <function-ref name="get" scoped="" ref="0x7ecd0dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecd0eb8"/>
        <function-ref name="set" scoped="" ref="0x7ecc4010"/>
        <function-ref name="clr" scoped="" ref="0x7ecc40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ecc3bc0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ecc3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecc3d98"/>
        <function-ref name="isInput" scoped="" ref="0x7ecc3e78"/>
        <function-ref name="toggle" scoped="" ref="0x7ecc2010"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecc20f0"/>
        <function-ref name="get" scoped="" ref="0x7ecc21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecc22b0"/>
        <function-ref name="set" scoped="" ref="0x7ecc2390"/>
        <function-ref name="clr" scoped="" ref="0x7ecc2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ecc1f20" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ecc1f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecc0110"/>
        <function-ref name="isInput" scoped="" ref="0x7ecc01f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ecc02d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecc03b0"/>
        <function-ref name="get" scoped="" ref="0x7ecc0490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecc0570"/>
        <function-ref name="set" scoped="" ref="0x7ecc0650"/>
        <function-ref name="clr" scoped="" ref="0x7ecc0730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ec44d58" loc="27:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ec44d58"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f252238"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f252238"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ec43010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7ec43160" loc="28:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ec43160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7ec43338"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7ec43418"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7ec434f8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7ec435d8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7ec436b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7ec14ee8" loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7ec14ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ec130e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7ec14300" loc="46:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7ec14300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ec144d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7ec14b78" loc="48:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7ec14b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ec14d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7ec14648" loc="47:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7ec14648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ec14820"/>
        <function-ref name="taskLoop" scoped="" ref="0x7ec14900"/>
        <function-ref name="runNextTask" scoped="" ref="0x7ec149e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f212e58" loc="37:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f212e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f230050"/>
        <function-ref name="runTask" scoped="" ref="0x7f230130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f232c50" loc="36:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f232c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f232e28"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f232f08"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f241010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f071d30" loc="45:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f071d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f071f08"/>
        <function-ref name="runTask" scoped="" ref="0x7f070010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f052188" loc="46:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f052188"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f052360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f071598" loc="44:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f071598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f071770"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f071850"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f071930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7efe3e38" loc="46:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7efe3e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7eff1050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f0108c0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f0108c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f010a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7eff2d38" loc="43:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7eff2d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7eff2f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7eb408c0" loc="48:TestDsrP.nc">
      <component-ref qname="TestDsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7eb408c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7eb45208"/>
        <function-ref name="fired" scoped="" ref="0x7eb50600"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7eb50ba0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7eb509c0"/>
        <function-ref name="getdt" scoped="" ref="0x7eb455c8"/>
        <function-ref name="gett0" scoped="" ref="0x7eb453e8"/>
        <function-ref name="isRunning" scoped="" ref="0x7eb507e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7eb40ee8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7eb50ec0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7eb501a0"/>
        <function-ref name="stop" scoped="" ref="0x7eb50420"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7ebf4ee8" loc="41:TestDsrP.nc">
      <component-ref qname="TestDsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x7ebf4ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ec020e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7ec021c0"/>
        <function-ref name="start" scoped="" ref="0x7ec022a0"/>
        <function-ref name="stop" scoped="" ref="0x7ec02380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7ec045f8" loc="40:TestDsrP.nc">
      <component-ref qname="TestDsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7ec045f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ec047d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7eb516e0" loc="47:TestDsrP.nc">
      <component-ref qname="TestDsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7eb516e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7eb518b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7eb51998"/>
        <function-ref name="getPayload" scoped="" ref="0x7eb51a78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7eb51b58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7eb51c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PEControl" ref="0x7ebf1bd8" loc="42:TestDsrP.nc">
      <component-ref qname="TestDsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PEControl" scoped="" ref="0x7ebf1bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ebf1db0"/>
        <function-ref name="stop" scoped="" ref="0x7ebf1e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendB" ref="0x7eb83dd8" loc="44:TestDsrP.nc">
      <component-ref qname="TestDsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendB" scoped="" ref="0x7eb83dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ebf0010"/>
        <function-ref name="getPayload" scoped="" ref="0x7ebf00f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ebf01d0"/>
        <function-ref name="cancel" scoped="" ref="0x7ebf02b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ebf0390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7eb74408" loc="45:TestDsrP.nc">
      <component-ref qname="TestDsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7eb74408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7eb745e0"/>
        <function-ref name="receive" scoped="" ref="0x7eb746c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7eb747a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7eb617d0" loc="46:TestDsrP.nc">
      <component-ref qname="TestDsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7eb617d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7eb619a8"/>
        <function-ref name="source" scoped="" ref="0x7eb61a88"/>
        <function-ref name="address" scoped="" ref="0x7eb61b68"/>
        <function-ref name="destination" scoped="" ref="0x7eb61c48"/>
        <function-ref name="setSource" scoped="" ref="0x7eb61d28"/>
        <function-ref name="setDestination" scoped="" ref="0x7eb61e08"/>
        <function-ref name="type" scoped="" ref="0x7eb61ee8"/>
        <function-ref name="setType" scoped="" ref="0x7eb81010"/>
        <function-ref name="isForMe" scoped="" ref="0x7eb810f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7eb811d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7eb812b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendA" ref="0x7eb83710" loc="43:TestDsrP.nc">
      <component-ref qname="TestDsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendA" scoped="" ref="0x7eb83710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7eb838e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7eb839c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7eb83aa8"/>
        <function-ref name="cancel" scoped="" ref="0x7eb83b88"/>
        <function-ref name="sendDone" scoped="" ref="0x7eb83c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ead6890" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7ead6890"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ead6a68"/>
        <function-ref name="getPayload" scoped="" ref="0x7ead6b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ead6c28"/>
        <function-ref name="cancel" scoped="" ref="0x7ead6d08"/>
        <function-ref name="sendDone" scoped="" ref="0x7ead6de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ead5208" loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7ead5208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7ead53e0"/>
        <function-ref name="receive" scoped="" ref="0x7ead54c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ead55a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketEngineClient" ref="0x7eac3210" loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngineClient" scoped="" ref="0x7eac3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngineClient"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eb12a48"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7eac33e8"/>
        <function-ref name="defaultLowerType" scoped="" ref="0x7eac34c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7eaf4808" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7eaf4808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7eaf49e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7eb04178" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7eb04178"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eb12a48"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7eb04350"/>
        <function-ref name="getPayload" scoped="" ref="0x7eb04430"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7eb04510"/>
        <function-ref name="cancel" scoped="" ref="0x7eb045f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7eb046d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7eb03258" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7eb03258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7eb03430"/>
        <function-ref name="receive" scoped="" ref="0x7eb03510"/>
        <function-ref name="getPayload" scoped="" ref="0x7eb035f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7eaf4b28" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7eaf4b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7eaf4d00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7eaf4de0"/>
        <function-ref name="getPayload" scoped="" ref="0x7eaf4ec0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7eb01010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7eb010f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngine" ref="0x7eae0eb0" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngine" scoped="" ref="0x7eae0eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7eaf30c0"/>
        <function-ref name="receive" scoped="" ref="0x7eaf31a0"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7eaf3280"/>
        <function-ref name="sendAdded" scoped="" ref="0x7eaf3360"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7eaf3440"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7eaf3520"/>
        <function-ref name="packet" scoped="" ref="0x7eaf3600"/>
        <function-ref name="sendDone" scoped="" ref="0x7eaf36e0"/>
        <function-ref name="drop" scoped="" ref="0x7eaf37c0"/>
        <function-ref name="waitList" scoped="" ref="0x7eaf38a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7eb04aa8" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7eb04aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7eb04c80"/>
        <function-ref name="receive" scoped="" ref="0x7eb04d60"/>
        <function-ref name="getPayload" scoped="" ref="0x7eb04e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketWaitList" ref="0x7ead0a98" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketWaitList" scoped="" ref="0x7ead0a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7ead6358"/>
        <function-ref name="next" scoped="" ref="0x7ead60d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7ead59a8" loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7ead59a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ead5b80"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ead5c60"/>
        <function-ref name="getPayload" scoped="" ref="0x7ead5d40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ead5e20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ead5f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7eb05a78" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7eb05a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7eb05c50"/>
        <function-ref name="stop" scoped="" ref="0x7eb05d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7eaa55e0" loc="94:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7eaa55e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7eaa57b8"/>
        <function-ref name="receive" scoped="" ref="0x7eaa5898"/>
        <function-ref name="getPayload" scoped="" ref="0x7eaa5978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7eaa6c70" loc="93:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7eaa6c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7eaa6e48"/>
        <function-ref name="getPayload" scoped="" ref="0x7eaa6f28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7eaa5018"/>
        <function-ref name="cancel" scoped="" ref="0x7eaa50f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7eaa51d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketEngineClient" ref="0x7eaa3790" loc="96:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngineClient" scoped="" ref="0x7eaa3790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngineClient"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eb12a48"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7eaa39e8"/>
        <function-ref name="defaultLowerType" scoped="" ref="0x7eaa3ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7eab1310" loc="87:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7eab1310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7eab14e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7eab1630" loc="88:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7eab1630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7eab1808"/>
        <function-ref name="payloadLength" scoped="" ref="0x7eab18e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7eab19c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7eab1aa8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7eab1b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7eab3b80" loc="86:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7eab3b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7eab3d58"/>
        <function-ref name="receive" scoped="" ref="0x7eab3e38"/>
        <function-ref name="getPayload" scoped="" ref="0x7eab3f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7eab4a08" loc="84:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7eab4a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eb12a48"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7eab4be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7eab4cc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7eab4da0"/>
        <function-ref name="cancel" scoped="" ref="0x7eab4e80"/>
        <function-ref name="sendDone" scoped="" ref="0x7eab3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceivePool" ref="0x7ea94e40" loc="98:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceivePool" scoped="" ref="0x7ea94e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
            <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7eaa0cf8"/>
        <function-ref name="maxSize" scoped="" ref="0x7eaa0878"/>
        <function-ref name="empty" scoped="" ref="0x7eaa04b8"/>
        <function-ref name="put" scoped="" ref="0x7eaa0a58"/>
        <function-ref name="size" scoped="" ref="0x7eaa0698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketWaitList" ref="0x7eab0e78" loc="90:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketWaitList" scoped="" ref="0x7eab0e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7eaa6738"/>
        <function-ref name="next" scoped="" ref="0x7eaa64b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x7ea84430" loc="99:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x7ea84430"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ea84608"/>
        <function-ref name="toIdle" scoped="" ref="0x7ea846e8"/>
        <function-ref name="isState" scoped="" ref="0x7ea847c8"/>
        <function-ref name="isIdle" scoped="" ref="0x7ea848a8"/>
        <function-ref name="requestState" scoped="" ref="0x7ea84988"/>
        <function-ref name="forceState" scoped="" ref="0x7ea84a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7eaa5d80" loc="95:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7eaa5d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7eaa3010"/>
        <function-ref name="payloadLength" scoped="" ref="0x7eaa30f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7eaa31d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7eaa32b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7eaa3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7eab4010" loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7eab4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eab41e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngine" ref="0x7eab0010" loc="89:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngine" scoped="" ref="0x7eab0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7eab01e8"/>
        <function-ref name="receive" scoped="" ref="0x7eab02c8"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7eab03a8"/>
        <function-ref name="sendAdded" scoped="" ref="0x7eab0488"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7eab0568"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7eab0648"/>
        <function-ref name="packet" scoped="" ref="0x7eab0728"/>
        <function-ref name="sendDone" scoped="" ref="0x7eab0808"/>
        <function-ref name="drop" scoped="" ref="0x7eab08e8"/>
        <function-ref name="waitList" scoped="" ref="0x7eab09c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7eab33e8" loc="85:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7eab33e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7eab35c0"/>
        <function-ref name="receive" scoped="" ref="0x7eab36a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7eab3780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7ea82f18" loc="100:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7ea82f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7ea90108"/>
        <function-ref name="rand32" scoped="" ref="0x7ea901e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="msgAdded" ref="0x7ea64778" loc="189:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="msgAdded" scoped="" ref="0x7ea64778"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ea64950"/>
        <function-ref name="runTask" scoped="" ref="0x7ea64a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="msgAction" ref="0x7ea64ea8" loc="190:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="msgAction" scoped="" ref="0x7ea64ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ea630c0"/>
        <function-ref name="runTask" scoped="" ref="0x7ea631a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBackoff" ref="0x7ea903f8" loc="101:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBackoff" scoped="" ref="0x7ea903f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ea83cf8"/>
        <function-ref name="fired" scoped="" ref="0x7ea83118"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ea836b8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ea834d8"/>
        <function-ref name="getdt" scoped="" ref="0x7ea800d8"/>
        <function-ref name="gett0" scoped="" ref="0x7ea83ed8"/>
        <function-ref name="isRunning" scoped="" ref="0x7ea832f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ea90a20"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ea839d8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ea90ca0"/>
        <function-ref name="stop" scoped="" ref="0x7ea90f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7eab4338" loc="83:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7eab4338"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7eab4510"/>
        <function-ref name="stop" scoped="" ref="0x7eab45f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7eaa3c18" loc="97:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7eaa3c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7eaa3df0"/>
        <function-ref name="source" scoped="" ref="0x7eaa3ed0"/>
        <function-ref name="address" scoped="" ref="0x7eaa2010"/>
        <function-ref name="destination" scoped="" ref="0x7eaa20f0"/>
        <function-ref name="setSource" scoped="" ref="0x7eaa21d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7eaa22b0"/>
        <function-ref name="type" scoped="" ref="0x7eaa2390"/>
        <function-ref name="setType" scoped="" ref="0x7eaa2470"/>
        <function-ref name="isForMe" scoped="" ref="0x7eaa2550"/>
        <function-ref name="setGroup" scoped="" ref="0x7eaa2630"/>
        <function-ref name="localGroup" scoped="" ref="0x7eaa2710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7e9535e0" loc="42:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="PacketEngineC.ReceivePoolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7e9535e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
            <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e952490"/>
        <function-ref name="maxSize" scoped="" ref="0x7e952010"/>
        <function-ref name="empty" scoped="" ref="0x7e953c08"/>
        <function-ref name="put" scoped="" ref="0x7e9521f0"/>
        <function-ref name="size" scoped="" ref="0x7e953de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7d877418" loc="56:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="PacketEngineC.ReceivePoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7d877418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
            <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d8762b0"/>
        <function-ref name="maxSize" scoped="" ref="0x7d877e00"/>
        <function-ref name="empty" scoped="" ref="0x7d877a40"/>
        <function-ref name="put" scoped="" ref="0x7d876010"/>
        <function-ref name="size" scoped="" ref="0x7d877c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d877070" loc="55:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="PacketEngineC.ReceivePoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d877070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d877248"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7e9243d8" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="PacketEngineC.SendStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7e9243d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7e9245b0"/>
        <function-ref name="toIdle" scoped="" ref="0x7e924690"/>
        <function-ref name="isState" scoped="" ref="0x7e924770"/>
        <function-ref name="isIdle" scoped="" ref="0x7e924850"/>
        <function-ref name="requestState" scoped="" ref="0x7e924930"/>
        <function-ref name="forceState" scoped="" ref="0x7e924a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7e914100" loc="66:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7e914100"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7e9142d8"/>
        <function-ref name="toIdle" scoped="" ref="0x7e9143b8"/>
        <function-ref name="isState" scoped="" ref="0x7e914498"/>
        <function-ref name="isIdle" scoped="" ref="0x7e914578"/>
        <function-ref name="requestState" scoped="" ref="0x7e914658"/>
        <function-ref name="forceState" scoped="" ref="0x7e914738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e910cb8" loc="66:/opt/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e910cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e910e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7e907278" loc="67:/opt/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7e907278"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7e907450"/>
        <function-ref name="toIdle" scoped="" ref="0x7e907530"/>
        <function-ref name="isState" scoped="" ref="0x7e907610"/>
        <function-ref name="isIdle" scoped="" ref="0x7e9076f0"/>
        <function-ref name="requestState" scoped="" ref="0x7e9077d0"/>
        <function-ref name="forceState" scoped="" ref="0x7e9078b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7e8e7138" loc="35:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e8e7138"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e8e7310"/>
        <function-ref name="rand32" scoped="" ref="0x7e8e73f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7e8e5870" loc="34:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7e8e5870"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e8e5e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e923bb8" loc="33:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e923bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e923d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7e8e1298" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e8e1298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e8e1470"/>
        <function-ref name="rand32" scoped="" ref="0x7e8e1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7e8e2958" loc="33:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7e8e2958"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e8e1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e8e2540" loc="32:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e8e2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e8e2718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7e8d4298" loc="37:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e8d4298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e8d4470"/>
        <function-ref name="rand32" scoped="" ref="0x7e8d4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7e8d5928" loc="36:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7e8d5928"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e8d4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e8d5510" loc="35:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e8d5510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e8d56e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e8f2a40" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="PacketEngineC.SendBackoffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e8f2a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e70a368"/>
        <function-ref name="fired" scoped="" ref="0x7e8e3768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8e3d08"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8e3b28"/>
        <function-ref name="getdt" scoped="" ref="0x7e70a728"/>
        <function-ref name="gett0" scoped="" ref="0x7e70a548"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8e3948"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8e3088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e70a048"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e8e3308"/>
        <function-ref name="stop" scoped="" ref="0x7e8e3588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7e8b81e8" loc="38:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7e8b81e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8b6b08"/>
        <function-ref name="fired" scoped="" ref="0x7e8b8ef0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8b64c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8b62e8"/>
        <function-ref name="getdt" scoped="" ref="0x7e8b6ec8"/>
        <function-ref name="gett0" scoped="" ref="0x7e8b6ce8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8b6108"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8b8810"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8b67e8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e8b8a90"/>
        <function-ref name="stop" scoped="" ref="0x7e8b8d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7e8b19f0" loc="35:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7e8b19f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8a7330"/>
        <function-ref name="fired" scoped="" ref="0x7e8b0728"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8b0cc8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8b0ae8"/>
        <function-ref name="getdt" scoped="" ref="0x7e8a76f0"/>
        <function-ref name="gett0" scoped="" ref="0x7e8a7510"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8b0908"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8b0048"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8a7010"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e8b02c8"/>
        <function-ref name="stop" scoped="" ref="0x7e8b0548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7e8a2230" loc="36:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7e8a2230"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e8a2878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e8b1358" loc="34:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e8b1358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e8b1530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7e882438" loc="29:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7e882438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e882b88"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e885010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e882d88"/>
        <function-ref name="overflow" scoped="" ref="0x7e885210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e897928" loc="27:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e897928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e897b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7e888540" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7e888540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e893950"/>
        <function-ref name="fired" scoped="" ref="0x7e893210"/>
        <function-ref name="startAt" scoped="" ref="0x7e893610"/>
        <function-ref name="isRunning" scoped="" ref="0x7e893410"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e893b50"/>
        <function-ref name="start" scoped="" ref="0x7e888c90"/>
        <function-ref name="stop" scoped="" ref="0x7e893010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7e7e6620" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7e7e6620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e791988"/>
        <function-ref name="fired" scoped="" ref="0x7e791248"/>
        <function-ref name="startAt" scoped="" ref="0x7e791648"/>
        <function-ref name="isRunning" scoped="" ref="0x7e791448"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e791b88"/>
        <function-ref name="start" scoped="" ref="0x7e7e6d70"/>
        <function-ref name="stop" scoped="" ref="0x7e791048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e7e61e8" loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e7e61e8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f252010"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f252010"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e7e63c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e791e40" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e791e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e7905e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e7909e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e7907e0"/>
        <function-ref name="overflow" scoped="" ref="0x7e790be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7d862ec0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7d862ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7d8610c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7d8611a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7d861280"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7d861360"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7d861440"/>
        <function-ref name="setControl" scoped="" ref="0x7d861520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d867970" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d867970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d866cb8"/>
        <function-ref name="fired" scoped="" ref="0x7d866578"/>
        <function-ref name="startAt" scoped="" ref="0x7d866978"/>
        <function-ref name="isRunning" scoped="" ref="0x7d866778"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d866eb8"/>
        <function-ref name="start" scoped="" ref="0x7d8660d8"/>
        <function-ref name="stop" scoped="" ref="0x7d866378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d867538" loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d867538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d867710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7d865190" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7d865190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d8658e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7d865ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7d865ae0"/>
        <function-ref name="overflow" scoped="" ref="0x7d865ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7d84fe68" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7d84fe68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7d84e050"/>
        <function-ref name="compareBusy" scoped="" ref="0x7d84e130"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7d84e210"/>
        <function-ref name="countBusy" scoped="" ref="0x7d84e2f0"/>
        <function-ref name="getAssr" scoped="" ref="0x7d84e3d0"/>
        <function-ref name="setAssr" scoped="" ref="0x7d84e4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7d861710" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7d861710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d84fab0"/>
        <function-ref name="fired" scoped="" ref="0x7d84f2b0"/>
        <function-ref name="get" scoped="" ref="0x7d861d58"/>
        <function-ref name="reset" scoped="" ref="0x7d84f4b0"/>
        <function-ref name="isOn" scoped="" ref="0x7d84fcb0"/>
        <function-ref name="set" scoped="" ref="0x7d84f010"/>
        <function-ref name="start" scoped="" ref="0x7d84f6b0"/>
        <function-ref name="stop" scoped="" ref="0x7d84f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7d863170" loc="30:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d863170"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7d862868"/>
        <function-ref name="test" scoped="" ref="0x7d862468"/>
        <function-ref name="get" scoped="" ref="0x7d8637b8"/>
        <function-ref name="setScale" scoped="" ref="0x7d862a68"/>
        <function-ref name="getScale" scoped="" ref="0x7d862d08"/>
        <function-ref name="reset" scoped="" ref="0x7d863e58"/>
        <function-ref name="overflow" scoped="" ref="0x7d863c58"/>
        <function-ref name="isOn" scoped="" ref="0x7d862668"/>
        <function-ref name="set" scoped="" ref="0x7d8639b8"/>
        <function-ref name="start" scoped="" ref="0x7d862068"/>
        <function-ref name="stop" scoped="" ref="0x7d862268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e7f4e90" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e7f4e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7e7f2080"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e7f2160"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e7f2240"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e7f2320"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e7f2400"/>
        <function-ref name="setControl" scoped="" ref="0x7e7f24e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7e7f1e90" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7e7f1e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7e7f0080"/>
        <function-ref name="compareBusy" scoped="" ref="0x7e7f0160"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7e7f0240"/>
        <function-ref name="countBusy" scoped="" ref="0x7e7f0320"/>
        <function-ref name="getAssr" scoped="" ref="0x7e7f0400"/>
        <function-ref name="setAssr" scoped="" ref="0x7e7f04e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7e7f26f8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7e7f26f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e7f1ab0"/>
        <function-ref name="fired" scoped="" ref="0x7e7f12b0"/>
        <function-ref name="get" scoped="" ref="0x7e7f2d40"/>
        <function-ref name="reset" scoped="" ref="0x7e7f14b0"/>
        <function-ref name="isOn" scoped="" ref="0x7e7f1cb0"/>
        <function-ref name="set" scoped="" ref="0x7e7f1010"/>
        <function-ref name="start" scoped="" ref="0x7e7f16b0"/>
        <function-ref name="stop" scoped="" ref="0x7e7f18b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e7f50f8" loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e7f50f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e7f4810"/>
        <function-ref name="test" scoped="" ref="0x7e7f4410"/>
        <function-ref name="get" scoped="" ref="0x7e7f5740"/>
        <function-ref name="setScale" scoped="" ref="0x7e7f4a10"/>
        <function-ref name="getScale" scoped="" ref="0x7e7f4cb0"/>
        <function-ref name="reset" scoped="" ref="0x7e7f5de0"/>
        <function-ref name="overflow" scoped="" ref="0x7e7f5be0"/>
        <function-ref name="isOn" scoped="" ref="0x7e7f4610"/>
        <function-ref name="set" scoped="" ref="0x7e7f5940"/>
        <function-ref name="start" scoped="" ref="0x7e7f4010"/>
        <function-ref name="stop" scoped="" ref="0x7e7f4210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e7e2938" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e7e2938"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7e7e2b10"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e7e2bf0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e7e2cd0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e7e2db0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e7e2e90"/>
        <function-ref name="setControl" scoped="" ref="0x7e7e1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7e7e08d8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7e7e08d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7e7e0ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7e7e0c38" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7e7e0c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7e7e0e10"/>
        <function-ref name="compareBusy" scoped="" ref="0x7e7e0ef0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7e7d8010"/>
        <function-ref name="countBusy" scoped="" ref="0x7e7d80f0"/>
        <function-ref name="getAssr" scoped="" ref="0x7e7d81d0"/>
        <function-ref name="setAssr" scoped="" ref="0x7e7d82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7e7e1228" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7e7e1228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e7e0528"/>
        <function-ref name="fired" scoped="" ref="0x7e7e1d10"/>
        <function-ref name="get" scoped="" ref="0x7e7e1870"/>
        <function-ref name="reset" scoped="" ref="0x7e7e1f10"/>
        <function-ref name="isOn" scoped="" ref="0x7e7e0728"/>
        <function-ref name="set" scoped="" ref="0x7e7e1a70"/>
        <function-ref name="start" scoped="" ref="0x7e7e0128"/>
        <function-ref name="stop" scoped="" ref="0x7e7e0328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e7e5b08" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e7e5b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e7e22b8"/>
        <function-ref name="test" scoped="" ref="0x7e7e4ea0"/>
        <function-ref name="get" scoped="" ref="0x7e7e4200"/>
        <function-ref name="setScale" scoped="" ref="0x7e7e24b8"/>
        <function-ref name="getScale" scoped="" ref="0x7e7e2758"/>
        <function-ref name="reset" scoped="" ref="0x7e7e48a0"/>
        <function-ref name="overflow" scoped="" ref="0x7e7e46a0"/>
        <function-ref name="isOn" scoped="" ref="0x7e7e20b8"/>
        <function-ref name="set" scoped="" ref="0x7e7e4400"/>
        <function-ref name="start" scoped="" ref="0x7e7e4aa0"/>
        <function-ref name="stop" scoped="" ref="0x7e7e4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7e7632d0" loc="63:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7e7632d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e7634a8"/>
        <function-ref name="runTask" scoped="" ref="0x7e763588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7e766b60" loc="38:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7e766b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e764ee8"/>
        <function-ref name="fired" scoped="" ref="0x7e7647a8"/>
        <function-ref name="startAt" scoped="" ref="0x7e764ba8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e7649a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e7630f8"/>
        <function-ref name="start" scoped="" ref="0x7e764308"/>
        <function-ref name="stop" scoped="" ref="0x7e7645a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e788b60" loc="37:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e788b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e7664c8"/>
        <function-ref name="fired" scoped="" ref="0x7e7878c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e787e60"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e787c80"/>
        <function-ref name="getdt" scoped="" ref="0x7e766888"/>
        <function-ref name="gett0" scoped="" ref="0x7e7666a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e787aa0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e7871e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e7661a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e787460"/>
        <function-ref name="stop" scoped="" ref="0x7e7876e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7e721c90" loc="60:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7e721c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e721e68"/>
        <function-ref name="runTask" scoped="" ref="0x7e720010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7e724dc0" loc="38:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7e724dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e7216f8"/>
        <function-ref name="fired" scoped="" ref="0x7e722ae8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e7210b8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e722ea8"/>
        <function-ref name="getdt" scoped="" ref="0x7e721ab8"/>
        <function-ref name="gett0" scoped="" ref="0x7e7218d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e722cc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e722408"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e7213d8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e722688"/>
        <function-ref name="stop" scoped="" ref="0x7e722908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e760da8" loc="37:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e760da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e724768"/>
        <function-ref name="fired" scoped="" ref="0x7e759b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e724108"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e759ee0"/>
        <function-ref name="getdt" scoped="" ref="0x7e724b48"/>
        <function-ref name="gett0" scoped="" ref="0x7e724958"/>
        <function-ref name="isRunning" scoped="" ref="0x7e759cf0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e7593f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e724438"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e759680"/>
        <function-ref name="stop" scoped="" ref="0x7e759910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7e7174c8" loc="37:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7e7174c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e717b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7e717de8" loc="38:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e717de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e716570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e716970"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e716770"/>
        <function-ref name="overflow" scoped="" ref="0x7e716b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e708af0" loc="49:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e708af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e708cc8"/>
        <function-ref name="stopDone" scoped="" ref="0x7e708da8"/>
        <function-ref name="start" scoped="" ref="0x7e708e88"/>
        <function-ref name="stop" scoped="" ref="0x7e705010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e7053e8" loc="51:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e7053e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e7055c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e7056a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e705780"/>
        <function-ref name="cancel" scoped="" ref="0x7e705860"/>
        <function-ref name="sendDone" scoped="" ref="0x7e705940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7e7044f0" loc="53:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7e7044f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e7046c8"/>
        <function-ref name="receive" scoped="" ref="0x7e7047a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e704888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e7049d0" loc="55:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e7049d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e704ba8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e704c88"/>
        <function-ref name="getPayload" scoped="" ref="0x7e704d68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e704e48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e704f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e705d18" loc="52:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e705d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e705ef0"/>
        <function-ref name="receive" scoped="" ref="0x7e704010"/>
        <function-ref name="getPayload" scoped="" ref="0x7e7040f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7e6f8dd8" loc="57:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e6f8dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7e700010"/>
        <function-ref name="noAck" scoped="" ref="0x7e7000f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7e7001d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e702088" loc="56:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e702088"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e702260"/>
        <function-ref name="source" scoped="" ref="0x7e702340"/>
        <function-ref name="address" scoped="" ref="0x7e702420"/>
        <function-ref name="destination" scoped="" ref="0x7e702500"/>
        <function-ref name="setSource" scoped="" ref="0x7e7025e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7e7026c0"/>
        <function-ref name="type" scoped="" ref="0x7e7027a0"/>
        <function-ref name="setType" scoped="" ref="0x7e702880"/>
        <function-ref name="isForMe" scoped="" ref="0x7e702960"/>
        <function-ref name="setGroup" scoped="" ref="0x7e702a40"/>
        <function-ref name="localGroup" scoped="" ref="0x7e702b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e6f5c08" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e6f5c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e6f5de0"/>
        <function-ref name="stopDone" scoped="" ref="0x7e6f5ec0"/>
        <function-ref name="start" scoped="" ref="0x7e6f4010"/>
        <function-ref name="stop" scoped="" ref="0x7e6f40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7e6e08f0" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7e6e08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7e6e0ac8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7e6e0ba8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7e6e0c88"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7e6e0d68"/>
        <function-ref name="setCca" scoped="" ref="0x7e6e0e48"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7e6e0f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e6f44c8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e6f44c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e6f46a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6f4780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e6f4860"/>
        <function-ref name="cancel" scoped="" ref="0x7e6f4940"/>
        <function-ref name="sendDone" scoped="" ref="0x7e6f4a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7e6f35d0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7e6f35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e6f37a8"/>
        <function-ref name="receive" scoped="" ref="0x7e6f3888"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6f3968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e6f1778" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e6f1778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e6f1950"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e6f1a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6f1b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e6f1bf0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e6f1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7e6e6768" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7e6e6768"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7e6e6940"/>
        <function-ref name="getRssi" scoped="" ref="0x7e6e6a20"/>
        <function-ref name="getPower" scoped="" ref="0x7e6e6b00"/>
        <function-ref name="getLqi" scoped="" ref="0x7e6e6be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7e6d4b98" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7e6d4b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x7e6d4d70"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x7e6d4e50"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x7e6da010"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x7e6da0f0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x7e6da1d0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x7e6da2b0"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x7e6da390"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x7e6da470"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x7e6da550"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x7e6da630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e6f4df8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e6f4df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e6f3010"/>
        <function-ref name="receive" scoped="" ref="0x7e6f30f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6f31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7e6e6d38" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e6e6d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7e6e6f10"/>
        <function-ref name="noAck" scoped="" ref="0x7e6e9010"/>
        <function-ref name="wasAcked" scoped="" ref="0x7e6e90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7e6c90b0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7e6c90b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7e6c9288"/>
        <function-ref name="setRetries" scoped="" ref="0x7e6c9368"/>
        <function-ref name="getRetries" scoped="" ref="0x7e6c9448"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7e6c9528"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7e6c9608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e6f3ab8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e6f3ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e6f3c90"/>
        <function-ref name="source" scoped="" ref="0x7e6f3d70"/>
        <function-ref name="address" scoped="" ref="0x7e6f3e50"/>
        <function-ref name="destination" scoped="" ref="0x7e6f1010"/>
        <function-ref name="setSource" scoped="" ref="0x7e6f10f0"/>
        <function-ref name="setDestination" scoped="" ref="0x7e6f11d0"/>
        <function-ref name="type" scoped="" ref="0x7e6f12b0"/>
        <function-ref name="setType" scoped="" ref="0x7e6f1390"/>
        <function-ref name="isForMe" scoped="" ref="0x7e6f1470"/>
        <function-ref name="setGroup" scoped="" ref="0x7e6f1550"/>
        <function-ref name="localGroup" scoped="" ref="0x7e6f1630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7e6c1010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7e6c1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e6c11e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6c12c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e6c13a8"/>
        <function-ref name="cancel" scoped="" ref="0x7e6c1488"/>
        <function-ref name="sendDone" scoped="" ref="0x7e6c1568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7e6c16e0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7e6c16e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e6c18b8"/>
        <function-ref name="receive" scoped="" ref="0x7e6c1998"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6c1a78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7e6a73f0" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e6a73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7e6a75c8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7e6a76a8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7e6a7788"/>
        <function-ref name="syncDone" scoped="" ref="0x7e6a7868"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e6a7948"/>
        <function-ref name="setChannel" scoped="" ref="0x7e6a7a28"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7e6a7b08"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e6a7be8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7e6a7cc8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e6a7da8"/>
        <function-ref name="sync" scoped="" ref="0x7e6a7e88"/>
        <function-ref name="getChannel" scoped="" ref="0x7e6b2010"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e6b20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e6c7dd0" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e6c7dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e6c6010"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6c60f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e6c61d0"/>
        <function-ref name="cancel" scoped="" ref="0x7e6c62b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e6c6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7e6c6f00" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7e6c6f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e6c40f0"/>
        <function-ref name="receive" scoped="" ref="0x7e6c41d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6c42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e6c3010" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e6c3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e6c31e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e6c32c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6c33a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e6c3488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e6c3568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7e6c1bc8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7e6c1bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7e6c1da0"/>
        <function-ref name="getRssi" scoped="" ref="0x7e6c1e80"/>
        <function-ref name="getPower" scoped="" ref="0x7e6c0010"/>
        <function-ref name="getLqi" scoped="" ref="0x7e6c00f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7e6b39c0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e6b39c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7e6b3b98"/>
        <function-ref name="getMetadata" scoped="" ref="0x7e6b3c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e6c6768" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e6c6768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e6c6940"/>
        <function-ref name="receive" scoped="" ref="0x7e6c6a20"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6c6b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7e6a6010" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e6a6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7e6a61e8"/>
        <function-ref name="changed" scoped="" ref="0x7e6a62c8"/>
        <function-ref name="amGroup" scoped="" ref="0x7e6a63a8"/>
        <function-ref name="setAddress" scoped="" ref="0x7e6a6488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e6c4400" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e6c4400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e6c45d8"/>
        <function-ref name="source" scoped="" ref="0x7e6c46b8"/>
        <function-ref name="address" scoped="" ref="0x7e6c4798"/>
        <function-ref name="destination" scoped="" ref="0x7e6c4878"/>
        <function-ref name="setSource" scoped="" ref="0x7e6c4958"/>
        <function-ref name="setDestination" scoped="" ref="0x7e6c4a38"/>
        <function-ref name="type" scoped="" ref="0x7e6c4b18"/>
        <function-ref name="setType" scoped="" ref="0x7e6c4bf8"/>
        <function-ref name="isForMe" scoped="" ref="0x7e6c4cd8"/>
        <function-ref name="setGroup" scoped="" ref="0x7e6c4db8"/>
        <function-ref name="localGroup" scoped="" ref="0x7e6c4e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e6600c8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e6600c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e6602a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7e660380"/>
        <function-ref name="start" scoped="" ref="0x7e660460"/>
        <function-ref name="stop" scoped="" ref="0x7e660540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7e65b5d0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7e65b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7e65b7a8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7e65b888"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7e65b968"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7e65ba48"/>
        <function-ref name="setCca" scoped="" ref="0x7e65bb28"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7e65bc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e6606a8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e6606a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e660880"/>
        <function-ref name="getPayload" scoped="" ref="0x7e660960"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e660a40"/>
        <function-ref name="cancel" scoped="" ref="0x7e660b20"/>
        <function-ref name="sendDone" scoped="" ref="0x7e660c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e660d68" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e660d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e65b010"/>
        <function-ref name="receive" scoped="" ref="0x7e65b0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e65b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e659b20" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e659b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e659cf8"/>
        <function-ref name="stopDone" scoped="" ref="0x7e659dd8"/>
        <function-ref name="start" scoped="" ref="0x7e659eb8"/>
        <function-ref name="stop" scoped="" ref="0x7e655010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7e655ad0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7e655ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7e655ca8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7e655d88"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7e655e68"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7e654010"/>
        <function-ref name="setCca" scoped="" ref="0x7e6540f0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7e6541d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7e645290" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7e645290"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7e645468"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7e645548"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7e645628"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7e645708"/>
        <function-ref name="setCca" scoped="" ref="0x7e6457e8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7e6458c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7e63aa40" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7e63aa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7e63ac18"/>
        <function-ref name="getRssi" scoped="" ref="0x7e63acf8"/>
        <function-ref name="getPower" scoped="" ref="0x7e63add8"/>
        <function-ref name="getLqi" scoped="" ref="0x7e63aeb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7e641b18" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7e641b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e641cf0"/>
        <function-ref name="cancel" scoped="" ref="0x7e641dd0"/>
        <function-ref name="modify" scoped="" ref="0x7e641eb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e645010"/>
        <function-ref name="resend" scoped="" ref="0x7e6450f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e655178" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e655178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e655350"/>
        <function-ref name="getPayload" scoped="" ref="0x7e655430"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e655510"/>
        <function-ref name="cancel" scoped="" ref="0x7e6555f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e6556d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7e645a30" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e645a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e645c08"/>
        <function-ref name="rand32" scoped="" ref="0x7e645ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7e64a450" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7e64a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e64a628"/>
        <function-ref name="stop" scoped="" ref="0x7e64a708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7e639060" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e639060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7e6392b8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7e639398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7e646a80" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e646a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e646c58"/>
        <function-ref name="rfOff" scoped="" ref="0x7e646d38"/>
        <function-ref name="rxOn" scoped="" ref="0x7e646e18"/>
        <function-ref name="startVReg" scoped="" ref="0x7e646ef8"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e64a010"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e64a0f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e64a1d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e64a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e633da8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e633da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e63a010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e63a0f0"/>
        <function-ref name="led1On" scoped="" ref="0x7e63a1d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e63a2b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e63a390"/>
        <function-ref name="get" scoped="" ref="0x7e63a470"/>
        <function-ref name="led1Off" scoped="" ref="0x7e63a550"/>
        <function-ref name="led2Off" scoped="" ref="0x7e63a8d0"/>
        <function-ref name="set" scoped="" ref="0x7e63a630"/>
        <function-ref name="led0On" scoped="" ref="0x7e63a710"/>
        <function-ref name="led2On" scoped="" ref="0x7e63a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7e64b8b0" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e64b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e64ba88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e64bb68"/>
        <function-ref name="request" scoped="" ref="0x7e64bc48"/>
        <function-ref name="granted" scoped="" ref="0x7e64bd28"/>
        <function-ref name="isOwner" scoped="" ref="0x7e64be08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7e639538" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x7e639538"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7e639710"/>
        <function-ref name="toIdle" scoped="" ref="0x7e6397f0"/>
        <function-ref name="isState" scoped="" ref="0x7e6398d0"/>
        <function-ref name="isIdle" scoped="" ref="0x7e6399b0"/>
        <function-ref name="requestState" scoped="" ref="0x7e639a90"/>
        <function-ref name="forceState" scoped="" ref="0x7e639b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e645e58" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e645e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e644050"/>
        <function-ref name="source" scoped="" ref="0x7e644130"/>
        <function-ref name="address" scoped="" ref="0x7e644210"/>
        <function-ref name="destination" scoped="" ref="0x7e6442f0"/>
        <function-ref name="setSource" scoped="" ref="0x7e6443d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7e6444b0"/>
        <function-ref name="type" scoped="" ref="0x7e644590"/>
        <function-ref name="setType" scoped="" ref="0x7e644670"/>
        <function-ref name="isForMe" scoped="" ref="0x7e644750"/>
        <function-ref name="setGroup" scoped="" ref="0x7e644830"/>
        <function-ref name="localGroup" scoped="" ref="0x7e644910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7e630170" loc="78:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x7e630170"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e630348"/>
        <function-ref name="runTask" scoped="" ref="0x7e630428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7e631960" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x7e631960"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e631b38"/>
        <function-ref name="runTask" scoped="" ref="0x7e631c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7e631010" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x7e631010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e6311e8"/>
        <function-ref name="runTask" scoped="" ref="0x7e6312c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7e5f5340" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e5f5340"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7e5f5518"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7e5f55f8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7e5f56d8"/>
        <function-ref name="syncDone" scoped="" ref="0x7e5f57b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e5f5898"/>
        <function-ref name="setChannel" scoped="" ref="0x7e5f5978"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7e5f5a58"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e5f5b38"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7e5f5c18"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e5f5cf8"/>
        <function-ref name="sync" scoped="" ref="0x7e5f5dd8"/>
        <function-ref name="getChannel" scoped="" ref="0x7e5f5eb8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e5f4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7e5eb670" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7e5eb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e5ebc98"/>
        <function-ref name="readDone" scoped="" ref="0x7e5ebe78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7e5f4200" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e5f4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e5f43d8"/>
        <function-ref name="rfOff" scoped="" ref="0x7e5f44b8"/>
        <function-ref name="rxOn" scoped="" ref="0x7e5f4598"/>
        <function-ref name="startVReg" scoped="" ref="0x7e5f4678"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e5f4758"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e5f4838"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e5f4918"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e5f49f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e5f6bb8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e5f6bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e5f6d90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e5f6e70"/>
        <function-ref name="request" scoped="" ref="0x7e5f5010"/>
        <function-ref name="granted" scoped="" ref="0x7e5f50f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7e5f51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7e5e8e00" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e5e8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7e5e7010"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7e5e70f0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7e5e71d0"/>
        <function-ref name="syncDone" scoped="" ref="0x7e5e72b0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e5e7390"/>
        <function-ref name="setChannel" scoped="" ref="0x7e5e7470"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7e5e7550"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e5e7630"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7e5e7710"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e5e77f0"/>
        <function-ref name="sync" scoped="" ref="0x7e5e78d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7e5e79b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e5e7a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7e5d5ea8" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7e5d5ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e5d20c0"/>
        <function-ref name="write" scoped="" ref="0x7e5d21a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7e5e5478" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x7e5e5478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e5e37c8"/>
        <function-ref name="fired" scoped="" ref="0x7e5e3088"/>
        <function-ref name="startAt" scoped="" ref="0x7e5e3488"/>
        <function-ref name="isRunning" scoped="" ref="0x7e5e3288"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e5e39c8"/>
        <function-ref name="start" scoped="" ref="0x7e5e5bc8"/>
        <function-ref name="stop" scoped="" ref="0x7e5e5e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7e5d5600" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7e5d5600"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e5d57d8"/>
        <function-ref name="write" scoped="" ref="0x7e5d58b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7e5e2608" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7e5e2608"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e5e27e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e5e28c0"/>
        <function-ref name="toggle" scoped="" ref="0x7e5e29a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e5e2a80"/>
        <function-ref name="get" scoped="" ref="0x7e5e2b60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e5e2c40"/>
        <function-ref name="set" scoped="" ref="0x7e5e2d20"/>
        <function-ref name="clr" scoped="" ref="0x7e5e2e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7e5e6788" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7e5e6788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e5e6db0"/>
        <function-ref name="readDone" scoped="" ref="0x7e5e5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7e5c29c8" loc="113:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x7e5c29c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e5c2ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7e5c2c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7e5d2338" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7e5d2338"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e5d2510"/>
        <function-ref name="write" scoped="" ref="0x7e5d25f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7e5d0cd0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7e5d0cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e5d0ea8"/>
        <function-ref name="write" scoped="" ref="0x7e5d5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7e5d8b60" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e5d8b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7e5d8d38"/>
        <function-ref name="changed" scoped="" ref="0x7e5d8e18"/>
        <function-ref name="amGroup" scoped="" ref="0x7e5d8ef8"/>
        <function-ref name="setAddress" scoped="" ref="0x7e5db010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7e5e3bb8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7e5e3bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e5e3d90"/>
        <function-ref name="isInput" scoped="" ref="0x7e5e3e70"/>
        <function-ref name="toggle" scoped="" ref="0x7e5e2010"/>
        <function-ref name="isOutput" scoped="" ref="0x7e5e20f0"/>
        <function-ref name="get" scoped="" ref="0x7e5e21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e5e22b0"/>
        <function-ref name="set" scoped="" ref="0x7e5e2390"/>
        <function-ref name="clr" scoped="" ref="0x7e5e2470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7e5ca520" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7e5ca520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e5ca6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7e5e1010" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7e5e1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e5e11e8"/>
        <function-ref name="isInput" scoped="" ref="0x7e5e12c8"/>
        <function-ref name="toggle" scoped="" ref="0x7e5e13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e5e1488"/>
        <function-ref name="get" scoped="" ref="0x7e5e1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e5e1648"/>
        <function-ref name="set" scoped="" ref="0x7e5e1728"/>
        <function-ref name="clr" scoped="" ref="0x7e5e1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e5e83f0" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e5e83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e5e85c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7e5d5a58" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e5d5a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e5d5c30"/>
        <function-ref name="write" scoped="" ref="0x7e5d5d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7e5ca890" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7e5ca890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e5caa68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7e5c98b0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7e5c98b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e5c9b88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e5c9c68"/>
        <function-ref name="request" scoped="" ref="0x7e5c9d48"/>
        <function-ref name="granted" scoped="" ref="0x7e5c9e28"/>
        <function-ref name="isOwner" scoped="" ref="0x7e5c9f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7e5c67c8" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x7e5c67c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e5c69a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e5c6a80"/>
        <function-ref name="request" scoped="" ref="0x7e5c6b60"/>
        <function-ref name="granted" scoped="" ref="0x7e5c6c40"/>
        <function-ref name="isOwner" scoped="" ref="0x7e5c6d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7e5e7c80" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e5e7c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e5e7e58"/>
        <function-ref name="rfOff" scoped="" ref="0x7e5e6010"/>
        <function-ref name="rxOn" scoped="" ref="0x7e5e60f0"/>
        <function-ref name="startVReg" scoped="" ref="0x7e5e61d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e5e62b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e5e6390"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e5e6470"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e5e6550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7e5d51a8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7e5d51a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e5d5380"/>
        <function-ref name="write" scoped="" ref="0x7e5d5460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7e5d0800" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7e5d0800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e5d0a58"/>
        <function-ref name="write" scoped="" ref="0x7e5d0b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7e5c8d78" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7e5c8d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e5ca010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e5c6e88" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e5c6e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e5c5070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e5c5150"/>
        <function-ref name="led1On" scoped="" ref="0x7e5c5230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e5c5310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e5c53f0"/>
        <function-ref name="get" scoped="" ref="0x7e5c54d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7e5c55b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7e5c5930"/>
        <function-ref name="set" scoped="" ref="0x7e5c5690"/>
        <function-ref name="led0On" scoped="" ref="0x7e5c5770"/>
        <function-ref name="led2On" scoped="" ref="0x7e5c5850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7e5c2298" loc="112:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x7e5c2298"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e5c2470"/>
        <function-ref name="runTask" scoped="" ref="0x7e5c2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e5e8738" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e5e8738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e5e8910"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e5e89f0"/>
        <function-ref name="request" scoped="" ref="0x7e5e8ad0"/>
        <function-ref name="granted" scoped="" ref="0x7e5e8bb0"/>
        <function-ref name="isOwner" scoped="" ref="0x7e5e8c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7e5d35e0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7e5d35e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e5d37b8"/>
        <function-ref name="write" scoped="" ref="0x7e5d3898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7e5d8570" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7e5d8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e5d8748"/>
        <function-ref name="disable" scoped="" ref="0x7e5d8828"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e5d8908"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e5d89e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e5cabd8" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e5cabd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e5cadb0"/>
        <function-ref name="source" scoped="" ref="0x7e5cae90"/>
        <function-ref name="address" scoped="" ref="0x7e5c9010"/>
        <function-ref name="destination" scoped="" ref="0x7e5c90f0"/>
        <function-ref name="setSource" scoped="" ref="0x7e5c91d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7e5c92b0"/>
        <function-ref name="type" scoped="" ref="0x7e5c9390"/>
        <function-ref name="setType" scoped="" ref="0x7e5c9470"/>
        <function-ref name="isForMe" scoped="" ref="0x7e5c9550"/>
        <function-ref name="setGroup" scoped="" ref="0x7e5c9630"/>
        <function-ref name="localGroup" scoped="" ref="0x7e5c9710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7e5c60d0" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x7e5c60d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e5c62a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e5c6388"/>
        <function-ref name="request" scoped="" ref="0x7e5c6468"/>
        <function-ref name="granted" scoped="" ref="0x7e5c6548"/>
        <function-ref name="isOwner" scoped="" ref="0x7e5c6628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7e5ca1a8" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7e5ca1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e5ca380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e57a060" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e57a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e57a238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7e57a508" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x7e57a508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e579868"/>
        <function-ref name="fired" scoped="" ref="0x7e579128"/>
        <function-ref name="startAt" scoped="" ref="0x7e579528"/>
        <function-ref name="isRunning" scoped="" ref="0x7e579328"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e579a68"/>
        <function-ref name="start" scoped="" ref="0x7e57ac58"/>
        <function-ref name="stop" scoped="" ref="0x7e57aef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7e575c90" loc="67:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7e575c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e3c4010"/>
        <function-ref name="fired" scoped="" ref="0x7e574890"/>
        <function-ref name="startAt" scoped="" ref="0x7e574c90"/>
        <function-ref name="isRunning" scoped="" ref="0x7e574a90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e3c4210"/>
        <function-ref name="start" scoped="" ref="0x7e5743f0"/>
        <function-ref name="stop" scoped="" ref="0x7e574690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e3c43c8" loc="68:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e3c43c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e3c45a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d7ffea0" loc="28:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d7ffea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d7fd208"/>
        <function-ref name="fired" scoped="" ref="0x7d7feaa0"/>
        <function-ref name="startAt" scoped="" ref="0x7d7feea0"/>
        <function-ref name="isRunning" scoped="" ref="0x7d7feca0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d7fd408"/>
        <function-ref name="start" scoped="" ref="0x7d7fe600"/>
        <function-ref name="stop" scoped="" ref="0x7d7fe8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d7fc988" loc="30:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d7fc988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d7facd8"/>
        <function-ref name="fired" scoped="" ref="0x7d7fa598"/>
        <function-ref name="startAt" scoped="" ref="0x7d7fa998"/>
        <function-ref name="isRunning" scoped="" ref="0x7d7fa798"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d7faed8"/>
        <function-ref name="start" scoped="" ref="0x7d7fa0f8"/>
        <function-ref name="stop" scoped="" ref="0x7d7fa398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e54c570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e54c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e54c748"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7e54c828"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e54c908"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7e54c9e8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e54cac8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e54cba8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7e54cc88"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7e54cd68"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7e54ce48"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7e54cf28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7e547448" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7e547448"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7e54bcb0"/>
        <function-ref name="test" scoped="" ref="0x7e54b8b0"/>
        <function-ref name="get" scoped="" ref="0x7e547a90"/>
        <function-ref name="captured" scoped="" ref="0x7e54b010"/>
        <function-ref name="reset" scoped="" ref="0x7e54b2b0"/>
        <function-ref name="isOn" scoped="" ref="0x7e54bab0"/>
        <function-ref name="set" scoped="" ref="0x7e547c90"/>
        <function-ref name="start" scoped="" ref="0x7e54b4b0"/>
        <function-ref name="stop" scoped="" ref="0x7e54b6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7e54a278" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7e54a278"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e545610"/>
        <function-ref name="fired" scoped="" ref="0x7e54ad60"/>
        <function-ref name="get" scoped="" ref="0x7e54a8c0"/>
        <function-ref name="reset" scoped="" ref="0x7e545010"/>
        <function-ref name="isOn" scoped="" ref="0x7e545810"/>
        <function-ref name="set" scoped="" ref="0x7e54aac0"/>
        <function-ref name="start" scoped="" ref="0x7e545210"/>
        <function-ref name="stop" scoped="" ref="0x7e545410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e560db0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e560db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e5584d8"/>
        <function-ref name="test" scoped="" ref="0x7e5580d8"/>
        <function-ref name="get" scoped="" ref="0x7e559410"/>
        <function-ref name="setScale" scoped="" ref="0x7e5586d8"/>
        <function-ref name="getScale" scoped="" ref="0x7e558978"/>
        <function-ref name="reset" scoped="" ref="0x7e559ab0"/>
        <function-ref name="overflow" scoped="" ref="0x7e5598b0"/>
        <function-ref name="isOn" scoped="" ref="0x7e5582d8"/>
        <function-ref name="set" scoped="" ref="0x7e559610"/>
        <function-ref name="start" scoped="" ref="0x7e559cb0"/>
        <function-ref name="stop" scoped="" ref="0x7e559eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e53bcc8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e53bcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e53bea0"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7e539010"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e5390f0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7e5391d0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e5392b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e539390"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7e539470"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7e539550"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7e539630"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7e539710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x7e531c20" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x7e531c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7e531df8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e531ed8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e530010"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e5300f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e5301d0"/>
        <function-ref name="setControl" scoped="" ref="0x7e5302b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7e537530" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7e537530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e535848"/>
        <function-ref name="fired" scoped="" ref="0x7e535048"/>
        <function-ref name="get" scoped="" ref="0x7e537b78"/>
        <function-ref name="reset" scoped="" ref="0x7e535248"/>
        <function-ref name="isOn" scoped="" ref="0x7e535a48"/>
        <function-ref name="set" scoped="" ref="0x7e537d78"/>
        <function-ref name="start" scoped="" ref="0x7e535448"/>
        <function-ref name="stop" scoped="" ref="0x7e535648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7e539930" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7e539930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7e537210"/>
        <function-ref name="test" scoped="" ref="0x7e538d50"/>
        <function-ref name="get" scoped="" ref="0x7e538010"/>
        <function-ref name="captured" scoped="" ref="0x7e5384b0"/>
        <function-ref name="reset" scoped="" ref="0x7e538750"/>
        <function-ref name="isOn" scoped="" ref="0x7e537010"/>
        <function-ref name="set" scoped="" ref="0x7e538210"/>
        <function-ref name="start" scoped="" ref="0x7e538950"/>
        <function-ref name="stop" scoped="" ref="0x7e538b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7e535cc8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7e535cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e532010"/>
        <function-ref name="fired" scoped="" ref="0x7e5347d0"/>
        <function-ref name="get" scoped="" ref="0x7e534330"/>
        <function-ref name="reset" scoped="" ref="0x7e5349d0"/>
        <function-ref name="isOn" scoped="" ref="0x7e532210"/>
        <function-ref name="set" scoped="" ref="0x7e534530"/>
        <function-ref name="start" scoped="" ref="0x7e534bd0"/>
        <function-ref name="stop" scoped="" ref="0x7e534dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7e532490" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7e532490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e531810"/>
        <function-ref name="fired" scoped="" ref="0x7e531010"/>
        <function-ref name="get" scoped="" ref="0x7e532ad8"/>
        <function-ref name="reset" scoped="" ref="0x7e531210"/>
        <function-ref name="isOn" scoped="" ref="0x7e531a10"/>
        <function-ref name="set" scoped="" ref="0x7e532cd8"/>
        <function-ref name="start" scoped="" ref="0x7e531410"/>
        <function-ref name="stop" scoped="" ref="0x7e531610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e542ef8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e542ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e53b648"/>
        <function-ref name="test" scoped="" ref="0x7e53b248"/>
        <function-ref name="get" scoped="" ref="0x7e53c578"/>
        <function-ref name="setScale" scoped="" ref="0x7e53b848"/>
        <function-ref name="getScale" scoped="" ref="0x7e53bae8"/>
        <function-ref name="reset" scoped="" ref="0x7e53cc18"/>
        <function-ref name="overflow" scoped="" ref="0x7e53ca18"/>
        <function-ref name="isOn" scoped="" ref="0x7e53b448"/>
        <function-ref name="set" scoped="" ref="0x7e53c778"/>
        <function-ref name="start" scoped="" ref="0x7e53ce18"/>
        <function-ref name="stop" scoped="" ref="0x7e53b048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e4d6580" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e4d6580"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f252010"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f252010"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e4d6758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e4d6968" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e4d6968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e4ca0d8"/>
        <function-ref name="test" scoped="" ref="0x7e4d5cb0"/>
        <function-ref name="get" scoped="" ref="0x7e4d5010"/>
        <function-ref name="setScale" scoped="" ref="0x7e4ca2d8"/>
        <function-ref name="getScale" scoped="" ref="0x7e4ca578"/>
        <function-ref name="reset" scoped="" ref="0x7e4d56b0"/>
        <function-ref name="overflow" scoped="" ref="0x7e4d54b0"/>
        <function-ref name="isOn" scoped="" ref="0x7e4d5eb0"/>
        <function-ref name="set" scoped="" ref="0x7e4d5210"/>
        <function-ref name="start" scoped="" ref="0x7e4d58b0"/>
        <function-ref name="stop" scoped="" ref="0x7e4d5ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d7f1d78" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d7f1d78"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f260dc0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f260dc0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d7ee0f8"/>
        <function-ref name="fired" scoped="" ref="0x7d7ef988"/>
        <function-ref name="startAt" scoped="" ref="0x7d7efd88"/>
        <function-ref name="isRunning" scoped="" ref="0x7d7efb88"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d7ee2f8"/>
        <function-ref name="start" scoped="" ref="0x7d7ef4e8"/>
        <function-ref name="stop" scoped="" ref="0x7d7ef788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7d7eb340" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7d7eb340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d7ea648"/>
        <function-ref name="fired" scoped="" ref="0x7d7ebe28"/>
        <function-ref name="get" scoped="" ref="0x7d7eb988"/>
        <function-ref name="reset" scoped="" ref="0x7d7ea048"/>
        <function-ref name="isOn" scoped="" ref="0x7d7ea848"/>
        <function-ref name="set" scoped="" ref="0x7d7ebb88"/>
        <function-ref name="start" scoped="" ref="0x7d7ea248"/>
        <function-ref name="stop" scoped="" ref="0x7d7ea448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7d7ee540" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7d7ee540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7d7edc48"/>
        <function-ref name="test" scoped="" ref="0x7d7ed848"/>
        <function-ref name="get" scoped="" ref="0x7d7eeb88"/>
        <function-ref name="setScale" scoped="" ref="0x7d7ede48"/>
        <function-ref name="getScale" scoped="" ref="0x7d7eb0f8"/>
        <function-ref name="reset" scoped="" ref="0x7d7ed248"/>
        <function-ref name="overflow" scoped="" ref="0x7d7ed048"/>
        <function-ref name="isOn" scoped="" ref="0x7d7eda48"/>
        <function-ref name="set" scoped="" ref="0x7d7eed88"/>
        <function-ref name="start" scoped="" ref="0x7d7ed448"/>
        <function-ref name="stop" scoped="" ref="0x7d7ed648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e4a5a28" loc="24:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e4a5a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e4a4200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e4a4600"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e4a4400"/>
        <function-ref name="overflow" scoped="" ref="0x7e4a4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e40de30" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e40de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e40c590"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e40c990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e40c790"/>
        <function-ref name="overflow" scoped="" ref="0x7e40cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e409890" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e409890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e3fd010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e3fd410"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e3fd210"/>
        <function-ref name="overflow" scoped="" ref="0x7e3fd610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e3fd878" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e3fd878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e3fb010"/>
        <function-ref name="test" scoped="" ref="0x7e3fcb78"/>
        <function-ref name="get" scoped="" ref="0x7e3fdec0"/>
        <function-ref name="setScale" scoped="" ref="0x7e3fb210"/>
        <function-ref name="getScale" scoped="" ref="0x7e3fb4b0"/>
        <function-ref name="reset" scoped="" ref="0x7e3fc578"/>
        <function-ref name="overflow" scoped="" ref="0x7e3fc378"/>
        <function-ref name="isOn" scoped="" ref="0x7e3fcd78"/>
        <function-ref name="set" scoped="" ref="0x7e3fc0d8"/>
        <function-ref name="start" scoped="" ref="0x7e3fc778"/>
        <function-ref name="stop" scoped="" ref="0x7e3fc978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7e3e8150" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7e3e8150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e3e88a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e3e8ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e3e8aa0"/>
        <function-ref name="overflow" scoped="" ref="0x7e3e8ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e3f70c0" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e3f70c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e3f7810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e3f7c10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e3f7a10"/>
        <function-ref name="overflow" scoped="" ref="0x7e3f7e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d7f80e8" loc="50:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d7f80e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d7f6438"/>
        <function-ref name="fired" scoped="" ref="0x7d7f8cd8"/>
        <function-ref name="startAt" scoped="" ref="0x7d7f60f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7d7f8ed8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d7f6638"/>
        <function-ref name="start" scoped="" ref="0x7d7f8838"/>
        <function-ref name="stop" scoped="" ref="0x7d7f8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7d7f5980" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7d7f5980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d7f4cd8"/>
        <function-ref name="fired" scoped="" ref="0x7d7f4598"/>
        <function-ref name="startAt" scoped="" ref="0x7d7f4998"/>
        <function-ref name="isRunning" scoped="" ref="0x7d7f4798"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d7f4ed8"/>
        <function-ref name="start" scoped="" ref="0x7d7f40f8"/>
        <function-ref name="stop" scoped="" ref="0x7d7f4398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7d7f6910" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7d7f6910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d7f5088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7d7f5488"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7d7f5288"/>
        <function-ref name="overflow" scoped="" ref="0x7d7f5688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e3c6b80" loc="18:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e3c6b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e3c6d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7e3bdaf8" loc="68:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7e3bdaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3bdcd0"/>
        <function-ref name="isInput" scoped="" ref="0x7e3bddb0"/>
        <function-ref name="toggle" scoped="" ref="0x7e3bde90"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3bc010"/>
        <function-ref name="get" scoped="" ref="0x7e3bc0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3bc1d0"/>
        <function-ref name="set" scoped="" ref="0x7e3bc2b0"/>
        <function-ref name="clr" scoped="" ref="0x7e3bc390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7e3bc508" loc="69:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7e3bc508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3bc6e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e3bc7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7e3bc8a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3bc980"/>
        <function-ref name="get" scoped="" ref="0x7e3bca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3bcb40"/>
        <function-ref name="set" scoped="" ref="0x7e3bcc20"/>
        <function-ref name="clr" scoped="" ref="0x7e3bcd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7e3bce78" loc="70:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7e3bce78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3bb070"/>
        <function-ref name="isInput" scoped="" ref="0x7e3bb150"/>
        <function-ref name="toggle" scoped="" ref="0x7e3bb230"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3bb310"/>
        <function-ref name="get" scoped="" ref="0x7e3bb3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3bb4d0"/>
        <function-ref name="set" scoped="" ref="0x7e3bb5b0"/>
        <function-ref name="clr" scoped="" ref="0x7e3bb690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7e3bd188" loc="67:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7e3bd188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3bd360"/>
        <function-ref name="isInput" scoped="" ref="0x7e3bd440"/>
        <function-ref name="toggle" scoped="" ref="0x7e3bd520"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3bd600"/>
        <function-ref name="get" scoped="" ref="0x7e3bd6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3bd7c0"/>
        <function-ref name="set" scoped="" ref="0x7e3bd8a0"/>
        <function-ref name="clr" scoped="" ref="0x7e3bd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7e3ba190" loc="72:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7e3ba190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3ba368"/>
        <function-ref name="isInput" scoped="" ref="0x7e3ba448"/>
        <function-ref name="toggle" scoped="" ref="0x7e3ba528"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3ba608"/>
        <function-ref name="get" scoped="" ref="0x7e3ba6e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3ba7c8"/>
        <function-ref name="set" scoped="" ref="0x7e3ba8a8"/>
        <function-ref name="clr" scoped="" ref="0x7e3ba988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7e3be760" loc="66:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7e3be760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3be938"/>
        <function-ref name="isInput" scoped="" ref="0x7e3bea18"/>
        <function-ref name="toggle" scoped="" ref="0x7e3beaf8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3bebd8"/>
        <function-ref name="get" scoped="" ref="0x7e3becb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3bed98"/>
        <function-ref name="set" scoped="" ref="0x7e3bee78"/>
        <function-ref name="clr" scoped="" ref="0x7e3bd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7e3bb808" loc="71:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7e3bb808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3bb9e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e3bbac0"/>
        <function-ref name="toggle" scoped="" ref="0x7e3bbba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3bbc80"/>
        <function-ref name="get" scoped="" ref="0x7e3bbd60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3bbe40"/>
        <function-ref name="set" scoped="" ref="0x7e3bbf20"/>
        <function-ref name="clr" scoped="" ref="0x7e3ba018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7e3ad4f8" loc="39:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7e3ad4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7e3ad6d0"/>
        <function-ref name="disable" scoped="" ref="0x7e3ad7b0"/>
        <function-ref name="captured" scoped="" ref="0x7e3ad890"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7e3ad970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7e3adb10" loc="40:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7e3adb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e3adce8"/>
        <function-ref name="disable" scoped="" ref="0x7e3addc8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e3adea8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e3b1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7e3b11b0" loc="41:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7e3b11b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e3b1388"/>
        <function-ref name="disable" scoped="" ref="0x7e3b1468"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e3b1548"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e3b1628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7e3a2c60" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7e3a2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7e3a2e38"/>
        <function-ref name="disable" scoped="" ref="0x7e3a2f18"/>
        <function-ref name="captured" scoped="" ref="0x7e3ac010"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7e3ac0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x7e3ac300" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x7e3ac300"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7e3abaa8"/>
        <function-ref name="test" scoped="" ref="0x7e3ab6a8"/>
        <function-ref name="get" scoped="" ref="0x7e3ac948"/>
        <function-ref name="captured" scoped="" ref="0x7e3acde8"/>
        <function-ref name="reset" scoped="" ref="0x7e3ab0a8"/>
        <function-ref name="isOn" scoped="" ref="0x7e3ab8a8"/>
        <function-ref name="set" scoped="" ref="0x7e3acb48"/>
        <function-ref name="start" scoped="" ref="0x7e3ab2a8"/>
        <function-ref name="stop" scoped="" ref="0x7e3ab4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7e39dd18" loc="9:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7e39dd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e39def0"/>
        <function-ref name="fired" scoped="" ref="0x7e392010"/>
        <function-ref name="disable" scoped="" ref="0x7e3920f0"/>
        <function-ref name="edge" scoped="" ref="0x7e3921d0"/>
        <function-ref name="enable" scoped="" ref="0x7e3922b0"/>
        <function-ref name="getValue" scoped="" ref="0x7e392390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7e39d720" loc="8:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7e39d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e39d8f8"/>
        <function-ref name="disable" scoped="" ref="0x7e39d9d8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e39dab8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e39db98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7e38abe8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7e38abe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e38adc0"/>
        <function-ref name="fired" scoped="" ref="0x7e38aea0"/>
        <function-ref name="disable" scoped="" ref="0x7e389010"/>
        <function-ref name="edge" scoped="" ref="0x7e3890f0"/>
        <function-ref name="enable" scoped="" ref="0x7e3891d0"/>
        <function-ref name="getValue" scoped="" ref="0x7e3892b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7e38c430" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7e38c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e38c608"/>
        <function-ref name="fired" scoped="" ref="0x7e38c6e8"/>
        <function-ref name="disable" scoped="" ref="0x7e38c7c8"/>
        <function-ref name="edge" scoped="" ref="0x7e38c8a8"/>
        <function-ref name="enable" scoped="" ref="0x7e38c988"/>
        <function-ref name="getValue" scoped="" ref="0x7e38ca68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7e38bbe8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7e38bbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e38bdc0"/>
        <function-ref name="fired" scoped="" ref="0x7e38bea0"/>
        <function-ref name="disable" scoped="" ref="0x7e38a010"/>
        <function-ref name="edge" scoped="" ref="0x7e38a0f0"/>
        <function-ref name="enable" scoped="" ref="0x7e38a1d0"/>
        <function-ref name="getValue" scoped="" ref="0x7e38a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7e389430" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7e389430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e389608"/>
        <function-ref name="fired" scoped="" ref="0x7e3896e8"/>
        <function-ref name="disable" scoped="" ref="0x7e3897c8"/>
        <function-ref name="edge" scoped="" ref="0x7e3898a8"/>
        <function-ref name="enable" scoped="" ref="0x7e389988"/>
        <function-ref name="getValue" scoped="" ref="0x7e389a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7e38cbe8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7e38cbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e38cdc0"/>
        <function-ref name="fired" scoped="" ref="0x7e38cea0"/>
        <function-ref name="disable" scoped="" ref="0x7e38b010"/>
        <function-ref name="edge" scoped="" ref="0x7e38b0f0"/>
        <function-ref name="enable" scoped="" ref="0x7e38b1d0"/>
        <function-ref name="getValue" scoped="" ref="0x7e38b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7e38a430" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7e38a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e38a608"/>
        <function-ref name="fired" scoped="" ref="0x7e38a6e8"/>
        <function-ref name="disable" scoped="" ref="0x7e38a7c8"/>
        <function-ref name="edge" scoped="" ref="0x7e38a8a8"/>
        <function-ref name="enable" scoped="" ref="0x7e38a988"/>
        <function-ref name="getValue" scoped="" ref="0x7e38aa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7e38dc50" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7e38dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e38de28"/>
        <function-ref name="fired" scoped="" ref="0x7e38df08"/>
        <function-ref name="disable" scoped="" ref="0x7e38c010"/>
        <function-ref name="edge" scoped="" ref="0x7e38c0f0"/>
        <function-ref name="enable" scoped="" ref="0x7e38c1d0"/>
        <function-ref name="getValue" scoped="" ref="0x7e38c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7e38b430" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7e38b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e38b608"/>
        <function-ref name="fired" scoped="" ref="0x7e38b6e8"/>
        <function-ref name="disable" scoped="" ref="0x7e38b7c8"/>
        <function-ref name="edge" scoped="" ref="0x7e38b8a8"/>
        <function-ref name="enable" scoped="" ref="0x7e38b988"/>
        <function-ref name="getValue" scoped="" ref="0x7e38ba68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7e3821b0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7e3821b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e382388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7e383010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7e383010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e3831e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7e383a78" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7e383a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e383c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7e382528" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7e382528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e382700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7e383388" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7e383388"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e383560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7e383df0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7e383df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e382010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7e381c48" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7e381c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e381e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7e383700" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7e383700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e3838d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e3726c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e3726c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e372898"/>
        <function-ref name="fired" scoped="" ref="0x7e372978"/>
        <function-ref name="disable" scoped="" ref="0x7e372a58"/>
        <function-ref name="edge" scoped="" ref="0x7e372b38"/>
        <function-ref name="enable" scoped="" ref="0x7e372c18"/>
        <function-ref name="getValue" scoped="" ref="0x7e372cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e372e78" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e372e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e371070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e3656c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e3656c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e365898"/>
        <function-ref name="fired" scoped="" ref="0x7e365978"/>
        <function-ref name="disable" scoped="" ref="0x7e365a58"/>
        <function-ref name="edge" scoped="" ref="0x7e365b38"/>
        <function-ref name="enable" scoped="" ref="0x7e365c18"/>
        <function-ref name="getValue" scoped="" ref="0x7e365cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e365e78" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e365e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e364070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e3636c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e3636c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e363898"/>
        <function-ref name="fired" scoped="" ref="0x7e363978"/>
        <function-ref name="disable" scoped="" ref="0x7e363a58"/>
        <function-ref name="edge" scoped="" ref="0x7e363b38"/>
        <function-ref name="enable" scoped="" ref="0x7e363c18"/>
        <function-ref name="getValue" scoped="" ref="0x7e363cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e363e78" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e363e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e361070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e3606c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e3606c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e360898"/>
        <function-ref name="fired" scoped="" ref="0x7e360978"/>
        <function-ref name="disable" scoped="" ref="0x7e360a58"/>
        <function-ref name="edge" scoped="" ref="0x7e360b38"/>
        <function-ref name="enable" scoped="" ref="0x7e360c18"/>
        <function-ref name="getValue" scoped="" ref="0x7e360cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e360e78" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e360e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e35f070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e35e788" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e35e788"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e35e960"/>
        <function-ref name="fired" scoped="" ref="0x7e35ea40"/>
        <function-ref name="disable" scoped="" ref="0x7e35eb20"/>
        <function-ref name="edge" scoped="" ref="0x7e35ec00"/>
        <function-ref name="enable" scoped="" ref="0x7e35ece0"/>
        <function-ref name="getValue" scoped="" ref="0x7e35edc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e35d010" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e35d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e35d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e35c8f0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e35c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e35cac8"/>
        <function-ref name="fired" scoped="" ref="0x7e35cba8"/>
        <function-ref name="disable" scoped="" ref="0x7e35cc88"/>
        <function-ref name="edge" scoped="" ref="0x7e35cd68"/>
        <function-ref name="enable" scoped="" ref="0x7e35ce48"/>
        <function-ref name="getValue" scoped="" ref="0x7e35cf28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e35b0b8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e35b0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e35b290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e35a978" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e35a978"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e35ab50"/>
        <function-ref name="fired" scoped="" ref="0x7e35ac30"/>
        <function-ref name="disable" scoped="" ref="0x7e35ad10"/>
        <function-ref name="edge" scoped="" ref="0x7e35adf0"/>
        <function-ref name="enable" scoped="" ref="0x7e35aed0"/>
        <function-ref name="getValue" scoped="" ref="0x7e358010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e358190" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e358190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e358368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e357a88" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e357a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e357c60"/>
        <function-ref name="fired" scoped="" ref="0x7e357d40"/>
        <function-ref name="disable" scoped="" ref="0x7e357e20"/>
        <function-ref name="edge" scoped="" ref="0x7e357f00"/>
        <function-ref name="enable" scoped="" ref="0x7e356010"/>
        <function-ref name="getValue" scoped="" ref="0x7e3560f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e356270" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e356270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e356448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x7e34f8c8" loc="51:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x7e34f8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e34faa0"/>
        <function-ref name="isInput" scoped="" ref="0x7e34fb80"/>
        <function-ref name="toggle" scoped="" ref="0x7e34fc60"/>
        <function-ref name="isOutput" scoped="" ref="0x7e34fd40"/>
        <function-ref name="get" scoped="" ref="0x7e34fe20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e34ff00"/>
        <function-ref name="set" scoped="" ref="0x7e34e010"/>
        <function-ref name="clr" scoped="" ref="0x7e34e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7e34f298" loc="47:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7e34f298"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e34f470"/>
        <function-ref name="disable" scoped="" ref="0x7e34f550"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e34f630"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e34f710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x7e34edf8" loc="69:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x7e34edf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e34d010"/>
        <function-ref name="runTask" scoped="" ref="0x7e34d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7e150920" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7e150920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e150af8"/>
        <function-ref name="write" scoped="" ref="0x7e150bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7e151c58" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7e151c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e151e30"/>
        <function-ref name="write" scoped="" ref="0x7e151f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7e160190" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7e160190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e160368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7e14ff18" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e14ff18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e14e108"/>
        <function-ref name="write" scoped="" ref="0x7e14e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7e1504e8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7e1504e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e1506c0"/>
        <function-ref name="write" scoped="" ref="0x7e1507a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7e150d58" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7e150d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e14f010"/>
        <function-ref name="write" scoped="" ref="0x7e14f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7e1513e8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7e1513e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e1515c0"/>
        <function-ref name="write" scoped="" ref="0x7e1516a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7e1636c8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7e1636c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7e1638a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7e163980"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7e163a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7e162010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7e162010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e1621e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7e160b98" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7e160b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e160d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7e160840" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7e160840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e160a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7e1500b0" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e1500b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e150288"/>
        <function-ref name="write" scoped="" ref="0x7e150368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7e1604e8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7e1604e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e1606c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7e14fae0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7e14fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e14fcb8"/>
        <function-ref name="write" scoped="" ref="0x7e14fd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7e14e368" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7e14e368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e14e640"/>
        <function-ref name="writeDone" scoped="" ref="0x7e14e720"/>
        <function-ref name="write" scoped="" ref="0x7e14e800"/>
        <function-ref name="beginRead" scoped="" ref="0x7e14e8e0"/>
        <function-ref name="readDone" scoped="" ref="0x7e14e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7e162368" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7e162368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e162540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7e151820" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7e151820"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e1519f8"/>
        <function-ref name="write" scoped="" ref="0x7e151ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7e160ef0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7e160ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e151188"/>
        <function-ref name="write" scoped="" ref="0x7e151268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7e1626c0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7e1626c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e162898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e163010" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e163010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e1631e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e1632c8"/>
        <function-ref name="request" scoped="" ref="0x7e1633a8"/>
        <function-ref name="granted" scoped="" ref="0x7e163488"/>
        <function-ref name="isOwner" scoped="" ref="0x7e163568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7e14f6a8" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7e14f6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e14f880"/>
        <function-ref name="write" scoped="" ref="0x7e14f960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7e14f270" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7e14f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e14f448"/>
        <function-ref name="write" scoped="" ref="0x7e14f528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7e163be0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7e163be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e163db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7e162d70" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7e162d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e160010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7e162a18" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7e162a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e162bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7e14eb40" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7e14eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e14ed18"/>
        <function-ref name="writeDone" scoped="" ref="0x7e14edf8"/>
        <function-ref name="write" scoped="" ref="0x7e14eed8"/>
        <function-ref name="beginRead" scoped="" ref="0x7e14c010"/>
        <function-ref name="readDone" scoped="" ref="0x7e14c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7e32e2f8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7e32e2f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e32e4d0"/>
        <function-ref name="writeDone" scoped="" ref="0x7e32e5b0"/>
        <function-ref name="write" scoped="" ref="0x7e32e690"/>
        <function-ref name="beginRead" scoped="" ref="0x7e32e770"/>
        <function-ref name="readDone" scoped="" ref="0x7e32e850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7e32fb18" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7e32fb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7e32fcf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7e32fdd0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7e32feb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7e32ec80" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7e32ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e32ee58"/>
        <function-ref name="write" scoped="" ref="0x7e32d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7e32d438" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7e32d438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e32d610"/>
        <function-ref name="write" scoped="" ref="0x7e32d6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e32f450" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e32f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e32f628"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e32f708"/>
        <function-ref name="request" scoped="" ref="0x7e32f7e8"/>
        <function-ref name="granted" scoped="" ref="0x7e32f8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7e32f9a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7e32db18" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7e32db18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e32dcf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7e31c9a8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7e31c9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e31cb80"/>
        <function-ref name="sendDone" scoped="" ref="0x7e31cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7e327d50" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7e327d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e327f28"/>
        <function-ref name="writeDone" scoped="" ref="0x7e326018"/>
        <function-ref name="write" scoped="" ref="0x7e3260f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7e3261d8"/>
        <function-ref name="readDone" scoped="" ref="0x7e3262b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7e32bc58" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7e32bc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7e32be30"/>
        <function-ref name="abortRelease" scoped="" ref="0x7e32bf10"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7e327010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7e31f050" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7e31f050"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7e31f228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7e31cdd8" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x7e31cdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7e321010"/>
        <function-ref name="toIdle" scoped="" ref="0x7e3210f0"/>
        <function-ref name="isState" scoped="" ref="0x7e3211d0"/>
        <function-ref name="isIdle" scoped="" ref="0x7e3212b0"/>
        <function-ref name="requestState" scoped="" ref="0x7e321390"/>
        <function-ref name="forceState" scoped="" ref="0x7e321470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7e325890" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7e325890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e325a68"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e325b48"/>
        <function-ref name="request" scoped="" ref="0x7e325c28"/>
        <function-ref name="granted" scoped="" ref="0x7e325d08"/>
        <function-ref name="isOwner" scoped="" ref="0x7e325de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7e3266c8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7e3266c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3268a0"/>
        <function-ref name="write" scoped="" ref="0x7e326980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7e326d88" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7e326d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e325010"/>
        <function-ref name="write" scoped="" ref="0x7e3250f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e3215b8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e3215b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e321790"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e321870"/>
        <function-ref name="led1On" scoped="" ref="0x7e321950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e321a30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e321b10"/>
        <function-ref name="get" scoped="" ref="0x7e321bf0"/>
        <function-ref name="led1Off" scoped="" ref="0x7e321cd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7e31e0f0"/>
        <function-ref name="set" scoped="" ref="0x7e321db0"/>
        <function-ref name="led0On" scoped="" ref="0x7e321e90"/>
        <function-ref name="led2On" scoped="" ref="0x7e31e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e3273f0" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e3273f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e3275c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e3276a8"/>
        <function-ref name="request" scoped="" ref="0x7e327788"/>
        <function-ref name="granted" scoped="" ref="0x7e327868"/>
        <function-ref name="isOwner" scoped="" ref="0x7e327948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7e31be90" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x7e31be90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e319080"/>
        <function-ref name="runTask" scoped="" ref="0x7e319160"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7e3254f8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7e3254f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3256d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7e2ee6c8" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7e2ee6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7e2ee8a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7e2ee980"/>
        <function-ref name="isState" scoped="" ref="0x7e2eea60"/>
        <function-ref name="isIdle" scoped="" ref="0x7e2eeb40"/>
        <function-ref name="requestState" scoped="" ref="0x7e2eec20"/>
        <function-ref name="forceState" scoped="" ref="0x7e2eed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7e2eac10" loc="43:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7e2eac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e2eade8"/>
        <function-ref name="sendDone" scoped="" ref="0x7e2eaec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7e2ea8d8" loc="42:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7e2ea8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7e2eaab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e2ebe98" loc="39:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e2ebe98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e2ea0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e2ea220" loc="40:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e2ea220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e2ea3f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e2ea4d8"/>
        <function-ref name="request" scoped="" ref="0x7e2ea5b8"/>
        <function-ref name="granted" scoped="" ref="0x7e2ea698"/>
        <function-ref name="isOwner" scoped="" ref="0x7e2ea778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7e2e48d8" loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7e2e48d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e2e4ab0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e2e4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7e2e4590" loc="67:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7e2e4590"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7e2e4768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e2e4250" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e2e4250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e2e4428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e2e3010" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e2e3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e2e31e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e2e32c8"/>
        <function-ref name="request" scoped="" ref="0x7e2e33a8"/>
        <function-ref name="granted" scoped="" ref="0x7e2e3488"/>
        <function-ref name="isOwner" scoped="" ref="0x7e2e3568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7e290010" loc="207:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7e290010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e2901e8"/>
        <function-ref name="runTask" scoped="" ref="0x7e2902c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7e2d0d68" loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7e2d0d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e2cf010"/>
        <function-ref name="sendDone" scoped="" ref="0x7e2cf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7e2cb880" loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7e2cb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e2cba58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e2cbb38"/>
        <function-ref name="request" scoped="" ref="0x7e2cbc18"/>
        <function-ref name="granted" scoped="" ref="0x7e2cbcf8"/>
        <function-ref name="isOwner" scoped="" ref="0x7e2cbdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7e2d0a40" loc="78:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7e2d0a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7e2d0c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e2d0720" loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e2d0720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e2d08f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7e2afcc0" loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7e2afcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7e2afe98"/>
        <function-ref name="sleep" scoped="" ref="0x7e2cb390"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7e2cc0f0"/>
        <function-ref name="dataReady" scoped="" ref="0x7e2cb470"/>
        <function-ref name="initMaster" scoped="" ref="0x7e2cc2b0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7e2cc390"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7e2cc470"/>
        <function-ref name="read" scoped="" ref="0x7e2cc550"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7e2cc630"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7e2cc710"/>
        <function-ref name="setClock" scoped="" ref="0x7e2cc7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7e2cc8d0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7e2cc9b0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7e2ccb10"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7e2ccbf0"/>
        <function-ref name="write" scoped="" ref="0x7e2cccd0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7e2ccdb0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7e2cce90"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7e2cb010"/>
        <function-ref name="getClock" scoped="" ref="0x7e2cb0f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7e2cb1d0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7e2cc010"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7e2cc1d0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7e2cb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e2cf4d0" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e2cf4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e2cf6a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e2cf788"/>
        <function-ref name="request" scoped="" ref="0x7e2cf868"/>
        <function-ref name="granted" scoped="" ref="0x7e2cf948"/>
        <function-ref name="isOwner" scoped="" ref="0x7e2cfa28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7e2aa990" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7e2aa990"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7e2aab68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7e2aa588" loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7e2aa588"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7e2aa760"/>
        <function-ref name="userId" scoped="" ref="0x7e2aa840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7e26a1c0" loc="59:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7e26a1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7e26a398"/>
        <function-ref name="sleep" scoped="" ref="0x7e2697f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7e26a558"/>
        <function-ref name="dataReady" scoped="" ref="0x7e2698d0"/>
        <function-ref name="initMaster" scoped="" ref="0x7e26a718"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7e26a7f8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7e26a8d8"/>
        <function-ref name="read" scoped="" ref="0x7e26a9b8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7e26aa98"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7e26ab78"/>
        <function-ref name="setClock" scoped="" ref="0x7e26ac58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7e26ad38"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7e26ae18"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7e269010"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7e2690f0"/>
        <function-ref name="write" scoped="" ref="0x7e2691d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7e2692b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7e269390"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7e269470"/>
        <function-ref name="getClock" scoped="" ref="0x7e269550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7e269630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7e26a478"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7e26a638"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7e269710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7e24f068" loc="64:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7e24f068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e24f240"/>
        <function-ref name="isInput" scoped="" ref="0x7e24f320"/>
        <function-ref name="toggle" scoped="" ref="0x7e24f400"/>
        <function-ref name="isOutput" scoped="" ref="0x7e24f4e0"/>
        <function-ref name="get" scoped="" ref="0x7e24f5c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e24f6a0"/>
        <function-ref name="set" scoped="" ref="0x7e24f780"/>
        <function-ref name="clr" scoped="" ref="0x7e24f860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7e261cb8" loc="62:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7e261cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e261e90"/>
        <function-ref name="isInput" scoped="" ref="0x7e260010"/>
        <function-ref name="toggle" scoped="" ref="0x7e2600f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e2601d0"/>
        <function-ref name="get" scoped="" ref="0x7e2602b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e260390"/>
        <function-ref name="set" scoped="" ref="0x7e260470"/>
        <function-ref name="clr" scoped="" ref="0x7e260550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7e261348" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7e261348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e261520"/>
        <function-ref name="isInput" scoped="" ref="0x7e261600"/>
        <function-ref name="toggle" scoped="" ref="0x7e2616e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e2617c0"/>
        <function-ref name="get" scoped="" ref="0x7e2618a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e261980"/>
        <function-ref name="set" scoped="" ref="0x7e261a60"/>
        <function-ref name="clr" scoped="" ref="0x7e261b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7e250ea8" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7e250ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e2610c0"/>
        <function-ref name="stop" scoped="" ref="0x7e2611a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7e24f9d8" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7e24f9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7e24fbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7e267ed0" loc="57:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7e267ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7e2640c0"/>
        <function-ref name="sleep" scoped="" ref="0x7e263550"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7e264280"/>
        <function-ref name="dataReady" scoped="" ref="0x7e263630"/>
        <function-ref name="initMaster" scoped="" ref="0x7e264440"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7e264520"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7e264600"/>
        <function-ref name="read" scoped="" ref="0x7e2646e0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7e2647c0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7e2648a0"/>
        <function-ref name="setClock" scoped="" ref="0x7e264980"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7e264a60"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7e264b40"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7e264ca0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7e264d80"/>
        <function-ref name="write" scoped="" ref="0x7e264e60"/>
        <function-ref name="enableSpi" scoped="" ref="0x7e263010"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7e2630f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7e2631d0"/>
        <function-ref name="getClock" scoped="" ref="0x7e2632b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7e263390"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7e2641a0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7e264360"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7e263470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7e2606c8" loc="63:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7e2606c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e2608a0"/>
        <function-ref name="isInput" scoped="" ref="0x7e260980"/>
        <function-ref name="toggle" scoped="" ref="0x7e260a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7e260b40"/>
        <function-ref name="get" scoped="" ref="0x7e260c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e260d00"/>
        <function-ref name="set" scoped="" ref="0x7e260de0"/>
        <function-ref name="clr" scoped="" ref="0x7e260ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7e1a8808" loc="76:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7e1a8808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7e1a89f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7e1a8ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7e1a70f8" loc="79:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e1a70f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e1a72e0"/>
        <function-ref name="configure" scoped="" ref="0x7e1a73c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e1a80c8" loc="75:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e1a80c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e1a82b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e1a8390"/>
        <function-ref name="request" scoped="" ref="0x7e1a8470"/>
        <function-ref name="granted" scoped="" ref="0x7e1a8550"/>
        <function-ref name="isOwner" scoped="" ref="0x7e1a8630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7e1a8c10" loc="77:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7e1a8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7e1a8de8"/>
        <function-ref name="userId" scoped="" ref="0x7e1a8ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d75c4e8" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d75c4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d75c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7d75c820" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7d75c820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7d75c9f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7d75cad8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7d75cbb8"/>
        <function-ref name="dequeue" scoped="" ref="0x7d75cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7d75a068" loc="52:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7d75a068"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7d75a250"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d75a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d75a930" loc="56:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d75a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d75ab18"/>
        <function-ref name="configure" scoped="" ref="0x7d75abf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7d75ad58" loc="57:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7d75ad58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7d759010"/>
        <function-ref name="isEmpty" scoped="" ref="0x7d7590f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7d7591d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7d7592b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d75b908" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d75b908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d75baf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d75bbd0"/>
        <function-ref name="request" scoped="" ref="0x7d75bcb0"/>
        <function-ref name="granted" scoped="" ref="0x7d75bd90"/>
        <function-ref name="isOwner" scoped="" ref="0x7d75be70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7d75a470" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d75a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d75a648"/>
        <function-ref name="userId" scoped="" ref="0x7d75a728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7d759430" loc="69:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7d759430"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d759608"/>
        <function-ref name="runTask" scoped="" ref="0x7d7596e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7e1a0578" loc="35:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e1a0578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e1a0750"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e1a0830"/>
        <function-ref name="led1On" scoped="" ref="0x7e1a0910"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e1a09f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e1a0ad0"/>
        <function-ref name="get" scoped="" ref="0x7e1a0bb0"/>
        <function-ref name="led1Off" scoped="" ref="0x7e1a0c90"/>
        <function-ref name="led2Off" scoped="" ref="0x7e1910f0"/>
        <function-ref name="set" scoped="" ref="0x7e1a0d70"/>
        <function-ref name="led0On" scoped="" ref="0x7e1a0e50"/>
        <function-ref name="led2On" scoped="" ref="0x7e191010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7e18c010" loc="39:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7e18c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e18c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7e18c2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7e18c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e18c488"/>
        <function-ref name="get" scoped="" ref="0x7e18c568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e18c648"/>
        <function-ref name="set" scoped="" ref="0x7e18c728"/>
        <function-ref name="clr" scoped="" ref="0x7e18c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e18d010" loc="35:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e18d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e18d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7e18c980" loc="40:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7e18c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e18cb58"/>
        <function-ref name="isInput" scoped="" ref="0x7e18cc38"/>
        <function-ref name="toggle" scoped="" ref="0x7e18cd18"/>
        <function-ref name="isOutput" scoped="" ref="0x7e18cdf8"/>
        <function-ref name="get" scoped="" ref="0x7e18ced8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e18b010"/>
        <function-ref name="set" scoped="" ref="0x7e18b0f0"/>
        <function-ref name="clr" scoped="" ref="0x7e18b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7e18d330" loc="36:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e18d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e18d508"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e18d5e8"/>
        <function-ref name="led1On" scoped="" ref="0x7e18d6c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e18d7a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e18d888"/>
        <function-ref name="get" scoped="" ref="0x7e18d968"/>
        <function-ref name="led1Off" scoped="" ref="0x7e18da48"/>
        <function-ref name="led2Off" scoped="" ref="0x7e18ddc8"/>
        <function-ref name="set" scoped="" ref="0x7e18db28"/>
        <function-ref name="led0On" scoped="" ref="0x7e18dc08"/>
        <function-ref name="led2On" scoped="" ref="0x7e18dce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7e18b348" loc="41:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7e18b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e18b520"/>
        <function-ref name="isInput" scoped="" ref="0x7e18b600"/>
        <function-ref name="toggle" scoped="" ref="0x7e18b6e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e18b7c0"/>
        <function-ref name="get" scoped="" ref="0x7e18b8a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e18b980"/>
        <function-ref name="set" scoped="" ref="0x7e18ba60"/>
        <function-ref name="clr" scoped="" ref="0x7e18bb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7e16dd48" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7e16dd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e16df20"/>
        <function-ref name="isInput" scoped="" ref="0x7e16c018"/>
        <function-ref name="toggle" scoped="" ref="0x7e16c0f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e16c1d8"/>
        <function-ref name="get" scoped="" ref="0x7e16c2b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e16c398"/>
        <function-ref name="set" scoped="" ref="0x7e16c478"/>
        <function-ref name="clr" scoped="" ref="0x7e16c558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7e16c6f0" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7e16c6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e16c8c8"/>
        <function-ref name="isInput" scoped="" ref="0x7e16c9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7e16ca88"/>
        <function-ref name="isOutput" scoped="" ref="0x7e16cb68"/>
        <function-ref name="get" scoped="" ref="0x7e16cc48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e16cd28"/>
        <function-ref name="set" scoped="" ref="0x7e16ce08"/>
        <function-ref name="clr" scoped="" ref="0x7e16cee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7e16b9f8" loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e16b9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e16bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7e16b098" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7e16b098"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e16b270"/>
        <function-ref name="isInput" scoped="" ref="0x7e16b350"/>
        <function-ref name="toggle" scoped="" ref="0x7e16b430"/>
        <function-ref name="isOutput" scoped="" ref="0x7e16b510"/>
        <function-ref name="get" scoped="" ref="0x7e16b5f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e16b6d0"/>
        <function-ref name="set" scoped="" ref="0x7e16b7b0"/>
        <function-ref name="clr" scoped="" ref="0x7e16b890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7e145a00" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7e145a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e145bd8"/>
        <function-ref name="write" scoped="" ref="0x7e145cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7e146d38" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7e146d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e146f10"/>
        <function-ref name="write" scoped="" ref="0x7e145010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7e147260" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7e147260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e147438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7e142010" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e142010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e1421e8"/>
        <function-ref name="write" scoped="" ref="0x7e1422c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7e1455c8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7e1455c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e1457a0"/>
        <function-ref name="write" scoped="" ref="0x7e145880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7e145e38" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7e145e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e143050"/>
        <function-ref name="write" scoped="" ref="0x7e143130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7e1464c8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7e1464c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e1466a0"/>
        <function-ref name="write" scoped="" ref="0x7e146780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7e1498e8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7e1498e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7e149ac0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7e149ba0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7e149c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7e148190" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7e148190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e148368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7e147c68" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7e147c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e147e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7e147910" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7e147910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e147ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7e145190" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e145190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e145368"/>
        <function-ref name="write" scoped="" ref="0x7e145448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7e1475b8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7e1475b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e147790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7e143b20" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7e143b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e143cf8"/>
        <function-ref name="write" scoped="" ref="0x7e143dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7e142448" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7e142448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e142720"/>
        <function-ref name="writeDone" scoped="" ref="0x7e142800"/>
        <function-ref name="write" scoped="" ref="0x7e1428e0"/>
        <function-ref name="beginRead" scoped="" ref="0x7e1429c0"/>
        <function-ref name="readDone" scoped="" ref="0x7e142aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7e1484e8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7e1484e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e1486c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7e146900" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7e146900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e146ad8"/>
        <function-ref name="write" scoped="" ref="0x7e146bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7e146010" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7e146010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e146268"/>
        <function-ref name="write" scoped="" ref="0x7e146348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7e148840" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7e148840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e148a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e149230" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e149230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e149408"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e1494e8"/>
        <function-ref name="request" scoped="" ref="0x7e1495c8"/>
        <function-ref name="granted" scoped="" ref="0x7e1496a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7e149788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7e1436e8" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7e1436e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e1438c0"/>
        <function-ref name="write" scoped="" ref="0x7e1439a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7e1432b0" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7e1432b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e143488"/>
        <function-ref name="write" scoped="" ref="0x7e143568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7e149e00" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7e149e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e148010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7e148ef0" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7e148ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e1470e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7e148b98" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7e148b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e148d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7e142c20" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7e142c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e142df8"/>
        <function-ref name="writeDone" scoped="" ref="0x7e142ed8"/>
        <function-ref name="write" scoped="" ref="0x7e141010"/>
        <function-ref name="beginRead" scoped="" ref="0x7e1410f0"/>
        <function-ref name="readDone" scoped="" ref="0x7e1411d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7e12c920" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7e12c920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e12caf8"/>
        <function-ref name="write" scoped="" ref="0x7e12cbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7e12dc58" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7e12dc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e12de30"/>
        <function-ref name="write" scoped="" ref="0x7e12df10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7e12f190" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7e12f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e12f368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7e12bf18" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e12bf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e12a108"/>
        <function-ref name="write" scoped="" ref="0x7e12a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7e12c4e8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7e12c4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e12c6c0"/>
        <function-ref name="write" scoped="" ref="0x7e12c7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7e12cd58" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7e12cd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e12b010"/>
        <function-ref name="write" scoped="" ref="0x7e12b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7e12d3e8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7e12d3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e12d5c0"/>
        <function-ref name="write" scoped="" ref="0x7e12d6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7e1316c8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7e1316c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7e1318a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7e131980"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7e131a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7e130010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7e130010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e1301e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7e12fb98" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7e12fb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e12fd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7e12f840" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7e12f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e12fa18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7e12c0b0" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e12c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e12c288"/>
        <function-ref name="write" scoped="" ref="0x7e12c368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7e12f4e8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7e12f4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e12f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7e12bae0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7e12bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e12bcb8"/>
        <function-ref name="write" scoped="" ref="0x7e12bd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7e12a368" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7e12a368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e12a640"/>
        <function-ref name="writeDone" scoped="" ref="0x7e12a720"/>
        <function-ref name="write" scoped="" ref="0x7e12a800"/>
        <function-ref name="beginRead" scoped="" ref="0x7e12a8e0"/>
        <function-ref name="readDone" scoped="" ref="0x7e12a9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7e130368" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7e130368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e130540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7e12d820" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7e12d820"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e12d9f8"/>
        <function-ref name="write" scoped="" ref="0x7e12dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7e12fef0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7e12fef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e12d188"/>
        <function-ref name="write" scoped="" ref="0x7e12d268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7e1306c0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7e1306c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e130898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e131010" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e131010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e1311e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e1312c8"/>
        <function-ref name="request" scoped="" ref="0x7e1313a8"/>
        <function-ref name="granted" scoped="" ref="0x7e131488"/>
        <function-ref name="isOwner" scoped="" ref="0x7e131568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7e12b6a8" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7e12b6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e12b880"/>
        <function-ref name="write" scoped="" ref="0x7e12b960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7e12b270" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7e12b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e12b448"/>
        <function-ref name="write" scoped="" ref="0x7e12b528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7e131be0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7e131be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e131db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7e130d70" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7e130d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e12f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7e130a18" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7e130a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e130bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7e12ab40" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7e12ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e12ad18"/>
        <function-ref name="writeDone" scoped="" ref="0x7e12adf8"/>
        <function-ref name="write" scoped="" ref="0x7e12aed8"/>
        <function-ref name="beginRead" scoped="" ref="0x7e129010"/>
        <function-ref name="readDone" scoped="" ref="0x7e1290f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7e123608" loc="43:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e123608"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7e1237e0"/>
        <function-ref name="changed" scoped="" ref="0x7e1238c0"/>
        <function-ref name="amGroup" scoped="" ref="0x7e1239a0"/>
        <function-ref name="setAddress" scoped="" ref="0x7e123a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7e101198" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7e101198"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7e101370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7e1076b8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7e1076b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7e107890"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7e107970"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7e107a50"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7e107b30"/>
        <function-ref name="setCca" scoped="" ref="0x7e107c10"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7e107cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7e103d68" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7e103d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7e101010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7e107010" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7e107010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e1071e8"/>
        <function-ref name="cancel" scoped="" ref="0x7e1072c8"/>
        <function-ref name="modify" scoped="" ref="0x7e1073a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7e107488"/>
        <function-ref name="resend" scoped="" ref="0x7e107568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7e108b98" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7e108b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e108d70"/>
        <function-ref name="stop" scoped="" ref="0x7e108e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTimeStamping" ref="0x7e1028e0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioTimeStamping" scoped="" ref="0x7e1028e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x7e102ab8"/>
        <function-ref name="receivedSFD" scoped="" ref="0x7e102b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7e0d05e0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7e0d05e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7e0d07b8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7e0d0898"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7e0d0978"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7e0d0a58"/>
        <function-ref name="setCca" scoped="" ref="0x7e0d0b38"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7e0d0c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7e0cf298" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7e0cf298"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7e0cf470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7e0c7400" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7e0c7400"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e0c75d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7e0ccc58" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7e0ccc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7e0cce30"/>
        <function-ref name="disable" scoped="" ref="0x7e0ccf10"/>
        <function-ref name="captured" scoped="" ref="0x7e0cb010"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7e0cb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7e0cfac0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x7e0cfac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e0cee08"/>
        <function-ref name="fired" scoped="" ref="0x7e0ce6c8"/>
        <function-ref name="startAt" scoped="" ref="0x7e0ceac8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e0ce8c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e0cc048"/>
        <function-ref name="start" scoped="" ref="0x7e0ce228"/>
        <function-ref name="stop" scoped="" ref="0x7e0ce4c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7e0cc210" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7e0cc210"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7e0cc3e8"/>
        <function-ref name="getRssi" scoped="" ref="0x7e0cc4c8"/>
        <function-ref name="getPower" scoped="" ref="0x7e0cc5a8"/>
        <function-ref name="getLqi" scoped="" ref="0x7e0cc688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7e0c8450" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e0c8450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e0c8628"/>
        <function-ref name="write" scoped="" ref="0x7e0c8708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7e0c88a0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7e0c88a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e0c8a78"/>
        <function-ref name="write" scoped="" ref="0x7e0c8b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7e0c2c58" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7e0c2c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e0c4010"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7e0c40f0"/>
        <function-ref name="sfd" scoped="" ref="0x7e0c41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e0d1f08" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e0d1f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e0d00f0"/>
        <function-ref name="cancel" scoped="" ref="0x7e0d01d0"/>
        <function-ref name="modify" scoped="" ref="0x7e0d02b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e0d0390"/>
        <function-ref name="resend" scoped="" ref="0x7e0d0470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7e0c9758" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7e0c9758"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7e0c9930"/>
        <function-ref name="abortRelease" scoped="" ref="0x7e0c9a10"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7e0c9af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7e0c7778" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7e0c7778"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e0c7950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7e0cbc18" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7e0cbc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e0cbe70"/>
        <function-ref name="isInput" scoped="" ref="0x7e0ca010"/>
        <function-ref name="toggle" scoped="" ref="0x7e0ca0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e0ca1d0"/>
        <function-ref name="get" scoped="" ref="0x7e0ca2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e0ca390"/>
        <function-ref name="set" scoped="" ref="0x7e0ca470"/>
        <function-ref name="clr" scoped="" ref="0x7e0ca550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e0d1770" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e0d1770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e0d1948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7e0cc800" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e0cc800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7e0cc9d8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7e0ccab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7e0c7af0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e0c7af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e0c7cc8"/>
        <function-ref name="write" scoped="" ref="0x7e0c7da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7e0c9090" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7e0c9090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e0c9268"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e0c9348"/>
        <function-ref name="request" scoped="" ref="0x7e0c9428"/>
        <function-ref name="granted" scoped="" ref="0x7e0c9508"/>
        <function-ref name="isOwner" scoped="" ref="0x7e0c95e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7e0cb288" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7e0cb288"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e0cb460"/>
        <function-ref name="isInput" scoped="" ref="0x7e0cb540"/>
        <function-ref name="toggle" scoped="" ref="0x7e0cb620"/>
        <function-ref name="isOutput" scoped="" ref="0x7e0cb700"/>
        <function-ref name="get" scoped="" ref="0x7e0cb7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e0cb8c0"/>
        <function-ref name="set" scoped="" ref="0x7e0cb9a0"/>
        <function-ref name="clr" scoped="" ref="0x7e0cba80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7e0c8cf0" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7e0c8cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e0c8ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7e0ca6e8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7e0ca6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e0ca8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7e0ca9a0"/>
        <function-ref name="toggle" scoped="" ref="0x7e0caa80"/>
        <function-ref name="isOutput" scoped="" ref="0x7e0cab60"/>
        <function-ref name="get" scoped="" ref="0x7e0cac40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e0cad20"/>
        <function-ref name="set" scoped="" ref="0x7e0cae00"/>
        <function-ref name="clr" scoped="" ref="0x7e0caee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e0c4338" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e0c4338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e0c4510"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e0c45f0"/>
        <function-ref name="led1On" scoped="" ref="0x7e0c46d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e0c47b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e0c4890"/>
        <function-ref name="get" scoped="" ref="0x7e0c4970"/>
        <function-ref name="led1Off" scoped="" ref="0x7e0c4a50"/>
        <function-ref name="led2Off" scoped="" ref="0x7e0c4dd0"/>
        <function-ref name="set" scoped="" ref="0x7e0c4b30"/>
        <function-ref name="led0On" scoped="" ref="0x7e0c4c10"/>
        <function-ref name="led2On" scoped="" ref="0x7e0c4cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeStamp" ref="0x7e0d0dc0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStamp" scoped="" ref="0x7e0d0dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x7e0cf010"/>
        <function-ref name="receivedSFD" scoped="" ref="0x7e0cf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7e0d1ab8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7e0d1ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e0d1c90"/>
        <function-ref name="stop" scoped="" ref="0x7e0d1d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7e0c9c88" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7e0c9c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e0c9e60"/>
        <function-ref name="writeDone" scoped="" ref="0x7e0c8010"/>
        <function-ref name="write" scoped="" ref="0x7e0c80f0"/>
        <function-ref name="beginRead" scoped="" ref="0x7e0c81d0"/>
        <function-ref name="readDone" scoped="" ref="0x7e0c82b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7e0c7088" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7e0c7088"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e0c7260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7e0cf618" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7e0cf618"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7e0cf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7e0465c8" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7e0465c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e0467a0"/>
        <function-ref name="write" scoped="" ref="0x7e046880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7e0478f0" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7e0478f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e047ac8"/>
        <function-ref name="write" scoped="" ref="0x7e047ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7e049d70" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7e049d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e048010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7e044b20" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e044b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e044cf8"/>
        <function-ref name="write" scoped="" ref="0x7e044dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7e046190" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7e046190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e046368"/>
        <function-ref name="write" scoped="" ref="0x7e046448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7e046a00" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7e046a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e046bd8"/>
        <function-ref name="write" scoped="" ref="0x7e046cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7e047080" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7e047080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e047258"/>
        <function-ref name="write" scoped="" ref="0x7e047338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7e04a410" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7e04a410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7e04a5e8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7e04a6c8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7e04a7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7e04ac80" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7e04ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e04ae58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7e048840" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7e048840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e048a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7e0484e8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7e0484e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e0486c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7e047d28" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e047d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e047f00"/>
        <function-ref name="write" scoped="" ref="0x7e046010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7e048190" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7e048190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e048368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7e0446e8" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7e0446e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e0448c0"/>
        <function-ref name="write" scoped="" ref="0x7e0449a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7e043010" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7e043010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e0432e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7e0433c8"/>
        <function-ref name="write" scoped="" ref="0x7e0434a8"/>
        <function-ref name="beginRead" scoped="" ref="0x7e043588"/>
        <function-ref name="readDone" scoped="" ref="0x7e043668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7e049010" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7e049010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e0491e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7e0474b8" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7e0474b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e047690"/>
        <function-ref name="write" scoped="" ref="0x7e047770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7e048b98" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7e048b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e048df0"/>
        <function-ref name="write" scoped="" ref="0x7e048ed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7e049368" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7e049368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e049540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e04cce0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e04cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e04ceb8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e04a010"/>
        <function-ref name="request" scoped="" ref="0x7e04a0f0"/>
        <function-ref name="granted" scoped="" ref="0x7e04a1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7e04a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7e0442b0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7e0442b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e044488"/>
        <function-ref name="write" scoped="" ref="0x7e044568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7e046e38" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7e046e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e044050"/>
        <function-ref name="write" scoped="" ref="0x7e044130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7e04a928" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7e04a928"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e04ab00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7e049a18" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7e049a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e049bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7e0496c0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7e0496c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e049898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7e0437e8" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7e0437e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e0439c0"/>
        <function-ref name="writeDone" scoped="" ref="0x7e043aa0"/>
        <function-ref name="write" scoped="" ref="0x7e043b80"/>
        <function-ref name="beginRead" scoped="" ref="0x7e043c60"/>
        <function-ref name="readDone" scoped="" ref="0x7e043d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7e0305b8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7e0305b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e030790"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7e030870"/>
        <function-ref name="sfd" scoped="" ref="0x7e030950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e030ab8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e030ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e030c90"/>
        <function-ref name="receive" scoped="" ref="0x7e030d70"/>
        <function-ref name="getPayload" scoped="" ref="0x7e030e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7e02f010" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7e02f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7e02f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7e030190" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7e030190"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e030368"/>
        <function-ref name="stop" scoped="" ref="0x7e030448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7e0291a8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7e0291a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e029380"/>
        <function-ref name="isInput" scoped="" ref="0x7e029460"/>
        <function-ref name="toggle" scoped="" ref="0x7e029540"/>
        <function-ref name="isOutput" scoped="" ref="0x7e029620"/>
        <function-ref name="get" scoped="" ref="0x7e029700"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e0297e0"/>
        <function-ref name="set" scoped="" ref="0x7e0298c0"/>
        <function-ref name="clr" scoped="" ref="0x7e0299a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7e026b98" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e026b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7e026d70"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7e026e50"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7e025010"/>
        <function-ref name="syncDone" scoped="" ref="0x7e0250f0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e0251d0"/>
        <function-ref name="setChannel" scoped="" ref="0x7e0252b0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7e025390"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e025470"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7e025550"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e025630"/>
        <function-ref name="sync" scoped="" ref="0x7e025710"/>
        <function-ref name="getChannel" scoped="" ref="0x7e0257f0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e0258d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7e020eb8" loc="109:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x7e020eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e0130c0"/>
        <function-ref name="runTask" scoped="" ref="0x7e0131a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7e029b38" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7e029b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e029d10"/>
        <function-ref name="isInput" scoped="" ref="0x7e029df0"/>
        <function-ref name="toggle" scoped="" ref="0x7e029ed0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e028010"/>
        <function-ref name="get" scoped="" ref="0x7e0280f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e0281d0"/>
        <function-ref name="set" scoped="" ref="0x7e0282b0"/>
        <function-ref name="clr" scoped="" ref="0x7e028390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7e026180" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7e026180"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7e026358"/>
        <function-ref name="getRssi" scoped="" ref="0x7e026438"/>
        <function-ref name="getPower" scoped="" ref="0x7e026518"/>
        <function-ref name="getLqi" scoped="" ref="0x7e0265f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7e02ba10" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7e02ba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e02bbe8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7e02bcc8"/>
        <function-ref name="sfd" scoped="" ref="0x7e02bda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7e027978" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7e027978"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e027b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7e02a7e0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7e02a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e02a9b8"/>
        <function-ref name="isInput" scoped="" ref="0x7e02aa98"/>
        <function-ref name="toggle" scoped="" ref="0x7e02ab78"/>
        <function-ref name="isOutput" scoped="" ref="0x7e02ac58"/>
        <function-ref name="get" scoped="" ref="0x7e02ad38"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e02ae18"/>
        <function-ref name="set" scoped="" ref="0x7e02aef8"/>
        <function-ref name="clr" scoped="" ref="0x7e029010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e02b2a0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e02b2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e02b478"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7e026770" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e026770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7e026948"/>
        <function-ref name="getMetadata" scoped="" ref="0x7e026a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e02bf10" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e02bf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e02a108"/>
        <function-ref name="receive" scoped="" ref="0x7e02a1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e02a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7e028b48" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7e028b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e028d20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e028e00"/>
        <function-ref name="request" scoped="" ref="0x7e028ee0"/>
        <function-ref name="granted" scoped="" ref="0x7e027010"/>
        <function-ref name="isOwner" scoped="" ref="0x7e0270f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7e027288" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7e027288"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e027460"/>
        <function-ref name="writeDone" scoped="" ref="0x7e027540"/>
        <function-ref name="write" scoped="" ref="0x7e027620"/>
        <function-ref name="beginRead" scoped="" ref="0x7e027700"/>
        <function-ref name="readDone" scoped="" ref="0x7e0277e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7e02a470" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7e02a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7e02a648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e025ab8" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e025ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e025c90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e025d70"/>
        <function-ref name="led1On" scoped="" ref="0x7e025e50"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e023010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e0230f0"/>
        <function-ref name="get" scoped="" ref="0x7e0231d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7e0232b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7e023630"/>
        <function-ref name="set" scoped="" ref="0x7e023390"/>
        <function-ref name="led0On" scoped="" ref="0x7e023470"/>
        <function-ref name="led2On" scoped="" ref="0x7e023550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7e028530" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7e028530"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e028708"/>
        <function-ref name="disable" scoped="" ref="0x7e0287e8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e0288c8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e0289a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7e027cf0" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7e027cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e026010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7e02b5e8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7e02b5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e02b7c0"/>
        <function-ref name="stop" scoped="" ref="0x7e02b8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7dfd0528" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7dfd0528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7dfd0700"/>
        <function-ref name="getRssi" scoped="" ref="0x7dfd07e0"/>
        <function-ref name="getPower" scoped="" ref="0x7dfd08c0"/>
        <function-ref name="getLqi" scoped="" ref="0x7dfd09a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7dfcf040" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dfcf040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7dfcf218"/>
        <function-ref name="getMetadata" scoped="" ref="0x7dfcf2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7dfd0b20" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7dfd0b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7dfd0cf8"/>
        <function-ref name="noAck" scoped="" ref="0x7dfd0dd8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7dfd0eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7dfc0d58" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7dfc0d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfb2010"/>
        <function-ref name="write" scoped="" ref="0x7dfb20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7dfc00b0" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7dfc00b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfc0288"/>
        <function-ref name="write" scoped="" ref="0x7dfc0368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7dfc25b8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7dfc25b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfc2790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7dfb1368" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dfb1368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfb1540"/>
        <function-ref name="write" scoped="" ref="0x7dfb1620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7dfc0920" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7dfc0920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfc0af8"/>
        <function-ref name="write" scoped="" ref="0x7dfc0bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7dfb2270" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7dfb2270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfb2448"/>
        <function-ref name="write" scoped="" ref="0x7dfb2528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7dfc1820" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7dfc1820"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfc19f8"/>
        <function-ref name="write" scoped="" ref="0x7dfc1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7dfd2c48" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7dfd2c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7dfd2e20"/>
        <function-ref name="abortRelease" scoped="" ref="0x7dfd2f00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7dfd1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7dfd14e8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7dfd14e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfd16c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7dfc1010" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7dfc1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfc11e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7dfc2c68" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7dfc2c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfc2e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7dfc04e8" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7dfc04e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfc06c0"/>
        <function-ref name="write" scoped="" ref="0x7dfc07a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7dfc2910" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7dfc2910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfc2ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7dfb2f18" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7dfb2f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfb1108"/>
        <function-ref name="write" scoped="" ref="0x7dfb11e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7dfb17a0" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7dfb17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dfb1a78"/>
        <function-ref name="writeDone" scoped="" ref="0x7dfb1b58"/>
        <function-ref name="write" scoped="" ref="0x7dfb1c38"/>
        <function-ref name="beginRead" scoped="" ref="0x7dfb1d18"/>
        <function-ref name="readDone" scoped="" ref="0x7dfb1df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7dfd1840" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7dfd1840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfd1a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7dfc1c58" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7dfc1c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfc1e30"/>
        <function-ref name="write" scoped="" ref="0x7dfc1f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7dfc1368" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7dfc1368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfc15c0"/>
        <function-ref name="write" scoped="" ref="0x7dfc16a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7dfd1b98" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7dfd1b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfd1d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dfd2590" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dfd2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dfd2768"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dfd2848"/>
        <function-ref name="request" scoped="" ref="0x7dfd2928"/>
        <function-ref name="granted" scoped="" ref="0x7dfd2a08"/>
        <function-ref name="isOwner" scoped="" ref="0x7dfd2ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7dfb2ae0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7dfb2ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfb2cb8"/>
        <function-ref name="write" scoped="" ref="0x7dfb2d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7dfb26a8" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7dfb26a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfb2880"/>
        <function-ref name="write" scoped="" ref="0x7dfb2960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7dfd1190" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7dfd1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfd1368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7dfc2260" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7dfc2260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfc2438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7dfd1ef0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7dfd1ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfc20e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7dfb0010" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dfb0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dfb01e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7dfb02c8"/>
        <function-ref name="write" scoped="" ref="0x7dfb03a8"/>
        <function-ref name="beginRead" scoped="" ref="0x7dfb0488"/>
        <function-ref name="readDone" scoped="" ref="0x7dfb0568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7dfa6d18" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7dfa6d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7dfa6ef0"/>
        <function-ref name="toIdle" scoped="" ref="0x7dfa5010"/>
        <function-ref name="isState" scoped="" ref="0x7dfa50f0"/>
        <function-ref name="isIdle" scoped="" ref="0x7dfa51d0"/>
        <function-ref name="requestState" scoped="" ref="0x7dfa52b0"/>
        <function-ref name="forceState" scoped="" ref="0x7dfa5390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7df911c0" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7df911c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7df91398"/>
        <function-ref name="getPayload" scoped="" ref="0x7df91478"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7df91558"/>
        <function-ref name="cancel" scoped="" ref="0x7df91638"/>
        <function-ref name="sendDone" scoped="" ref="0x7df91718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7dfa0a38" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dfa0a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dfa0c10"/>
        <function-ref name="getPayload" scoped="" ref="0x7dfa0cf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dfa0dd0"/>
        <function-ref name="cancel" scoped="" ref="0x7dfa0eb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7df91010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7df8c1c0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7df8c1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7df8c398"/>
        <function-ref name="getPayload" scoped="" ref="0x7df8c478"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7df8c558"/>
        <function-ref name="cancel" scoped="" ref="0x7df8c638"/>
        <function-ref name="sendDone" scoped="" ref="0x7df8c718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7df8d6e8" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7df8d6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7df8d8c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7df8d9a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7df8da80"/>
        <function-ref name="cancel" scoped="" ref="0x7df8db60"/>
        <function-ref name="sendDone" scoped="" ref="0x7df8dc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7df8b010" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7df8b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7df8b1e8"/>
        <function-ref name="rand32" scoped="" ref="0x7df8b2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7df8dd88" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7df8dd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7df8c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7df8b420" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7df8b420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7df8b5f8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7df8b6d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7df8c860" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7df8c860"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7df8ca38"/>
        <function-ref name="toIdle" scoped="" ref="0x7df8cb18"/>
        <function-ref name="isState" scoped="" ref="0x7df8cbf8"/>
        <function-ref name="isIdle" scoped="" ref="0x7df8ccd8"/>
        <function-ref name="requestState" scoped="" ref="0x7df8cdb8"/>
        <function-ref name="forceState" scoped="" ref="0x7df8ce98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7df8e0e8" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7df8e0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7df8e2c0"/>
        <function-ref name="toIdle" scoped="" ref="0x7df8e3a0"/>
        <function-ref name="isState" scoped="" ref="0x7df8e480"/>
        <function-ref name="isIdle" scoped="" ref="0x7df8e560"/>
        <function-ref name="requestState" scoped="" ref="0x7df8e640"/>
        <function-ref name="forceState" scoped="" ref="0x7df8e720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7df72388" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7df72388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7df72560"/>
        <function-ref name="receive" scoped="" ref="0x7df72640"/>
        <function-ref name="getPayload" scoped="" ref="0x7df72720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7df738d0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7df738d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7df73aa8"/>
        <function-ref name="receive" scoped="" ref="0x7df73b88"/>
        <function-ref name="getPayload" scoped="" ref="0x7df73c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7df73de8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7df73de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7df72010"/>
        <function-ref name="receive" scoped="" ref="0x7df720f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7df721d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7df6da08" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7df6da08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7df6dbe0"/>
        <function-ref name="receive" scoped="" ref="0x7df6dcc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7df6dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7df6d678" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7df6d678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7df6d850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7df6ec68" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7df6ec68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7df6ee40"/>
        <function-ref name="receive" scoped="" ref="0x7df6ef20"/>
        <function-ref name="getPayload" scoped="" ref="0x7df6d018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7df6def8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7df6def8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7df6c0e0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7df6c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7df6d198" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7df6d198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7df6d370"/>
        <function-ref name="receive" scoped="" ref="0x7df6d450"/>
        <function-ref name="getPayload" scoped="" ref="0x7df6d530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7df4b3e8" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7df4b3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7df4b5c0"/>
        <function-ref name="receive" scoped="" ref="0x7df4b6a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7df4b780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7df4b8f0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7df4b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7df4bac8"/>
        <function-ref name="getPayload" scoped="" ref="0x7df4bba8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7df4bc88"/>
        <function-ref name="cancel" scoped="" ref="0x7df4bd68"/>
        <function-ref name="sendDone" scoped="" ref="0x7df4be48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7df4c7e0" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7df4c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7df4c9b8"/>
        <function-ref name="getPayload" scoped="" ref="0x7df4ca98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7df4cb78"/>
        <function-ref name="cancel" scoped="" ref="0x7df4cc58"/>
        <function-ref name="sendDone" scoped="" ref="0x7df4cd38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7df4ce80" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7df4ce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7df4b070"/>
        <function-ref name="receive" scoped="" ref="0x7df4b150"/>
        <function-ref name="getPayload" scoped="" ref="0x7df4b230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7df465c0" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7df465c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7df46798"/>
        <function-ref name="stopDone" scoped="" ref="0x7df46878"/>
        <function-ref name="start" scoped="" ref="0x7df46958"/>
        <function-ref name="stop" scoped="" ref="0x7df46a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7df45460" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7df45460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7df45638"/>
        <function-ref name="getPayload" scoped="" ref="0x7df45718"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7df457f8"/>
        <function-ref name="cancel" scoped="" ref="0x7df458d8"/>
        <function-ref name="sendDone" scoped="" ref="0x7df459b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7df45b30" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7df45b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7df45d08"/>
        <function-ref name="receive" scoped="" ref="0x7df45de8"/>
        <function-ref name="getPayload" scoped="" ref="0x7df45ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7df6fe60" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7df6fe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7df47050"/>
        <function-ref name="getPayload" scoped="" ref="0x7df47130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7df47210"/>
        <function-ref name="cancel" scoped="" ref="0x7df472f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7df473d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7df47a08" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7df47a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x7df47be0"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x7df47cc0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x7df47da0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x7df47e80"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x7df46010"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x7df460f0"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x7df461d0"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x7df462b0"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x7df46390"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x7df46470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7df46bb0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x7df46bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7df46d88"/>
        <function-ref name="toIdle" scoped="" ref="0x7df46e68"/>
        <function-ref name="isState" scoped="" ref="0x7df45010"/>
        <function-ref name="isIdle" scoped="" ref="0x7df450f0"/>
        <function-ref name="requestState" scoped="" ref="0x7df451d0"/>
        <function-ref name="forceState" scoped="" ref="0x7df452b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7df43070" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7df43070"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7df43248"/>
        <function-ref name="stopDone" scoped="" ref="0x7df43328"/>
        <function-ref name="start" scoped="" ref="0x7df43408"/>
        <function-ref name="stop" scoped="" ref="0x7df434e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7df47518" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7df47518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7df476f0"/>
        <function-ref name="receive" scoped="" ref="0x7df477d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7df478b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7df344b0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7df344b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x7df34688"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x7df34768"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x7df34848"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x7df34928"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x7df34a08"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x7df34ae8"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x7df34bc8"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x7df34ca8"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x7df34d88"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x7df34e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7df2ae50" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7df2ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7df41050"/>
        <function-ref name="toIdle" scoped="" ref="0x7df41130"/>
        <function-ref name="isState" scoped="" ref="0x7df41210"/>
        <function-ref name="isIdle" scoped="" ref="0x7df412f0"/>
        <function-ref name="requestState" scoped="" ref="0x7df413d0"/>
        <function-ref name="forceState" scoped="" ref="0x7df414b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7df262a0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7df262a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7df26478"/>
        <function-ref name="getPayload" scoped="" ref="0x7df26558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7df26638"/>
        <function-ref name="cancel" scoped="" ref="0x7df26718"/>
        <function-ref name="sendDone" scoped="" ref="0x7df267f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7df27440" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7df27440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7df27618"/>
        <function-ref name="getPayload" scoped="" ref="0x7df276f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7df277d8"/>
        <function-ref name="cancel" scoped="" ref="0x7df278b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7df27998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7df27ae8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7df27ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7df27cc0"/>
        <function-ref name="setRetries" scoped="" ref="0x7df27da0"/>
        <function-ref name="getRetries" scoped="" ref="0x7df27e80"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7df26010"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7df260f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7df22e60" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7df22e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7df21050"/>
        <function-ref name="noAck" scoped="" ref="0x7df21130"/>
        <function-ref name="wasAcked" scoped="" ref="0x7df21210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7df22770" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7df22770"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7df22948"/>
        <function-ref name="setRetries" scoped="" ref="0x7df22a28"/>
        <function-ref name="getRetries" scoped="" ref="0x7df22b08"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7df22be8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7df22cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7da58010" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="TestDsrAppC.SendAC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7da58010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7da581e8"/>
        <function-ref name="destination" scoped="" ref="0x7da582c8"/>
        <function-ref name="setSource" scoped="" ref="0x7da583a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7da58488"/>
        <function-ref name="isForMe" scoped="" ref="0x7da58568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7da57310" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="TestDsrAppC.SendAC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7da57310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7da574e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7da575c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7da576a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da57788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7da57868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7da59938" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="TestDsrAppC.SendAC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7da59938"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7da59b10"/>
        <function-ref name="getPayload" scoped="" ref="0x7da59bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da59cd0"/>
        <function-ref name="cancel" scoped="" ref="0x7da59db0"/>
        <function-ref name="sendDone" scoped="" ref="0x7da59e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7da586a8" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="TestDsrAppC.SendAC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7da586a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7da58880"/>
        <function-ref name="source" scoped="" ref="0x7da58960"/>
        <function-ref name="address" scoped="" ref="0x7da58a40"/>
        <function-ref name="destination" scoped="" ref="0x7da58b20"/>
        <function-ref name="setSource" scoped="" ref="0x7da58c00"/>
        <function-ref name="setDestination" scoped="" ref="0x7da58ce0"/>
        <function-ref name="type" scoped="" ref="0x7da58dc0"/>
        <function-ref name="setType" scoped="" ref="0x7da58ea0"/>
        <function-ref name="isForMe" scoped="" ref="0x7da57010"/>
        <function-ref name="setGroup" scoped="" ref="0x7da570f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7da571d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleDsrPacketWaitList" ref="0x7decd030" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7decd030"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7decd8d8"/>
        <function-ref name="next" scoped="" ref="0x7decd658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacket" ref="0x7deca818" loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7deca818"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7deca9f0"/>
        <function-ref name="destination" scoped="" ref="0x7decaad0"/>
        <function-ref name="setSource" scoped="" ref="0x7decabb0"/>
        <function-ref name="setDestination" scoped="" ref="0x7decac90"/>
        <function-ref name="isForMe" scoped="" ref="0x7decad70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ded0588" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7ded0588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ded0760"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ded0840"/>
        <function-ref name="getPayload" scoped="" ref="0x7ded0920"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ded0a00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ded0ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleDsrPacketEngine" ref="0x7ded0ca8" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7ded0ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ded0e80"/>
        <function-ref name="receive" scoped="" ref="0x7decf010"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7decf0f0"/>
        <function-ref name="sendAdded" scoped="" ref="0x7decf1d0"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7decf2b0"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7decf390"/>
        <function-ref name="packet" scoped="" ref="0x7decf470"/>
        <function-ref name="sendDone" scoped="" ref="0x7decf550"/>
        <function-ref name="drop" scoped="" ref="0x7decf630"/>
        <function-ref name="waitList" scoped="" ref="0x7decf710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacketEngine" ref="0x7decf898" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacketEngine" scoped="" ref="0x7decf898"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7decfa70"/>
        <function-ref name="receive" scoped="" ref="0x7decfb50"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7decfc30"/>
        <function-ref name="sendAdded" scoped="" ref="0x7decfd10"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7decfdf0"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7decfed0"/>
        <function-ref name="packet" scoped="" ref="0x7dece010"/>
        <function-ref name="sendDone" scoped="" ref="0x7dece0f0"/>
        <function-ref name="drop" scoped="" ref="0x7dece1d0"/>
        <function-ref name="waitList" scoped="" ref="0x7dece2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7dec9af8" loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7dec9af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dec9cd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7dec9db0"/>
        <function-ref name="getPayload" scoped="" ref="0x7dec9e90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dec8010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7dec80f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DsrPacketEngine" ref="0x7dece430" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrPacketEngine" scoped="" ref="0x7dece430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dece608"/>
        <function-ref name="receive" scoped="" ref="0x7dece6e8"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7dece7c8"/>
        <function-ref name="sendAdded" scoped="" ref="0x7dece8a8"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7dece988"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7decea68"/>
        <function-ref name="packet" scoped="" ref="0x7deceb48"/>
        <function-ref name="sendDone" scoped="" ref="0x7decec28"/>
        <function-ref name="drop" scoped="" ref="0x7deced08"/>
        <function-ref name="waitList" scoped="" ref="0x7decede8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacketWaitList" ref="0x7decdbf8" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7decdbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7decb4d8"/>
        <function-ref name="next" scoped="" ref="0x7decb258"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7dec8260" loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dec8260"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dec8438"/>
        <function-ref name="getPayload" scoped="" ref="0x7dec8518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dec85f8"/>
        <function-ref name="cancel" scoped="" ref="0x7dec86d8"/>
        <function-ref name="sendDone" scoped="" ref="0x7dec87b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DsrPacketWaitList" ref="0x7decb7f8" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7decb7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7deca0b8"/>
        <function-ref name="next" scoped="" ref="0x7decbe20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7decaec0" loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7decaec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7dec90c0"/>
        <function-ref name="source" scoped="" ref="0x7dec91a0"/>
        <function-ref name="address" scoped="" ref="0x7dec9280"/>
        <function-ref name="destination" scoped="" ref="0x7dec9360"/>
        <function-ref name="setSource" scoped="" ref="0x7dec9440"/>
        <function-ref name="setDestination" scoped="" ref="0x7dec9520"/>
        <function-ref name="type" scoped="" ref="0x7dec9600"/>
        <function-ref name="setType" scoped="" ref="0x7dec96e0"/>
        <function-ref name="isForMe" scoped="" ref="0x7dec97c0"/>
        <function-ref name="setGroup" scoped="" ref="0x7dec98a0"/>
        <function-ref name="localGroup" scoped="" ref="0x7dec9980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Acks" ref="0x7deca330" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7deca330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7deca508"/>
        <function-ref name="noAck" scoped="" ref="0x7deca5e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7deca6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteRequestOutCache" ref="0x7de6c7f8" loc="109:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestOutCache" scoped="" ref="0x7de6c7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7dee1df8"/>
            <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7dee0168"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7de673b8"/>
        <function-ref name="insert" scoped="" ref="0x7de6ce20"/>
        <function-ref name="flush" scoped="" ref="0x7de67658"/>
        <function-ref name="lookup" scoped="" ref="0x7de670f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteRequestOutTimer" ref="0x7de61de0" loc="110:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestOutTimer" scoped="" ref="0x7de61de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataTimer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="expired" scoped="" ref="0x7de659e8"/>
        <function-ref name="start" scoped="" ref="0x7de65448"/>
        <function-ref name="stop" scoped="" ref="0x7de65768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteRequestInEqual" ref="0x7dea9668" loc="85:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestInEqual" scoped="" ref="0x7dea9668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7dee06d0"/>
              <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7dee09f0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dea9c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteErrorList" ref="0x7de84660" loc="96:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteErrorList" scoped="" ref="0x7de84660"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7deb0d70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7de90010"/>
        <function-ref name="next" scoped="" ref="0x7de84c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleDsrPacketWaitList" ref="0x7de83d70" loc="102:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7de83d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7de826c8"/>
        <function-ref name="next" scoped="" ref="0x7de82448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacket" ref="0x7de64160" loc="113:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7de64160"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7de64338"/>
        <function-ref name="destination" scoped="" ref="0x7de64418"/>
        <function-ref name="setSource" scoped="" ref="0x7de644f8"/>
        <function-ref name="setDestination" scoped="" ref="0x7de645d8"/>
        <function-ref name="isForMe" scoped="" ref="0x7de646b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7dea80c0" loc="91:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7dea80c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7dea8298"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7deab9c8" loc="88:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7deab9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7deabba0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7deabc80"/>
        <function-ref name="getPayload" scoped="" ref="0x7deabd60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7deabe40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7deabf20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleDsrPacketEngine" ref="0x7de90a20" loc="99:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7de90a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7de90bf8"/>
        <function-ref name="receive" scoped="" ref="0x7de90cd8"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7de90db8"/>
        <function-ref name="sendAdded" scoped="" ref="0x7de90e98"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7de88010"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7de880f0"/>
        <function-ref name="packet" scoped="" ref="0x7de881d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7de882b0"/>
        <function-ref name="drop" scoped="" ref="0x7de88390"/>
        <function-ref name="waitList" scoped="" ref="0x7de88470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteRequestInCache" ref="0x7de686e0" loc="108:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestInCache" scoped="" ref="0x7de686e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7dee06d0"/>
            <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7dee09f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7de6c2d0"/>
        <function-ref name="insert" scoped="" ref="0x7de68d08"/>
        <function-ref name="flush" scoped="" ref="0x7de6c570"/>
        <function-ref name="lookup" scoped="" ref="0x7de6c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacketEngine" ref="0x7de885f8" loc="100:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacketEngine" scoped="" ref="0x7de885f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7de887d0"/>
        <function-ref name="receive" scoped="" ref="0x7de888b0"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7de88990"/>
        <function-ref name="sendAdded" scoped="" ref="0x7de88a70"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7de88b50"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7de88c30"/>
        <function-ref name="packet" scoped="" ref="0x7de88d10"/>
        <function-ref name="sendDone" scoped="" ref="0x7de88df0"/>
        <function-ref name="drop" scoped="" ref="0x7de88ed0"/>
        <function-ref name="waitList" scoped="" ref="0x7de83010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7de525b8" loc="121:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7de525b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7de52790"/>
        <function-ref name="rand32" scoped="" ref="0x7de52870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteRequest" ref="0x7de92e48" loc="94:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequest" scoped="" ref="0x7de92e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tlv"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7dea2050"/>
        <function-ref name="remove" scoped="" ref="0x7dea2130"/>
        <function-ref name="length" scoped="" ref="0x7dea2210"/>
        <function-ref name="setLength" scoped="" ref="0x7dea22f0"/>
        <function-ref name="add" scoped="" ref="0x7dea23d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7de536c0" loc="118:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7de536c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7de53898"/>
        <function-ref name="getPayload" scoped="" ref="0x7de53978"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7de53a58"/>
        <function-ref name="cancel" scoped="" ref="0x7de53b38"/>
        <function-ref name="sendDone" scoped="" ref="0x7de53c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x7de53d90" loc="119:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x7de53d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7de52010"/>
        <function-ref name="toIdle" scoped="" ref="0x7de520f0"/>
        <function-ref name="isState" scoped="" ref="0x7de521d0"/>
        <function-ref name="isIdle" scoped="" ref="0x7de522b0"/>
        <function-ref name="requestState" scoped="" ref="0x7de52390"/>
        <function-ref name="forceState" scoped="" ref="0x7de52470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="composePkt" ref="0x7de4db20" loc="146:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="composePkt" scoped="" ref="0x7de4db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7de4dcf8"/>
        <function-ref name="runTask" scoped="" ref="0x7de4ddd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7de55430" loc="115:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7de55430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7de55608"/>
        <function-ref name="payloadLength" scoped="" ref="0x7de556e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7de557c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7de558a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7de55988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SourceRoute" ref="0x7de90340" loc="97:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceRoute" scoped="" ref="0x7de90340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tlv"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7de90518"/>
        <function-ref name="remove" scoped="" ref="0x7de905f8"/>
        <function-ref name="length" scoped="" ref="0x7de906d8"/>
        <function-ref name="setLength" scoped="" ref="0x7de907b8"/>
        <function-ref name="add" scoped="" ref="0x7de90898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DsrPacketEngine" ref="0x7de83190" loc="101:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrPacketEngine" scoped="" ref="0x7de83190"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7de83368"/>
        <function-ref name="receive" scoped="" ref="0x7de83448"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7de83528"/>
        <function-ref name="sendAdded" scoped="" ref="0x7de83608"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7de836e8"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7de837c8"/>
        <function-ref name="packet" scoped="" ref="0x7de838a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7de83988"/>
        <function-ref name="drop" scoped="" ref="0x7de83a68"/>
        <function-ref name="waitList" scoped="" ref="0x7de83b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacketWaitList" ref="0x7de829e8" loc="103:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7de829e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7de802c8"/>
        <function-ref name="next" scoped="" ref="0x7de80048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compose" ref="0x7de4ec10" loc="117:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compose" scoped="" ref="0x7de4ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7de4eee8"/>
        <function-ref name="clear" scoped="" ref="0x7de53010"/>
        <function-ref name="toggle" scoped="" ref="0x7de530f0"/>
        <function-ref name="get" scoped="" ref="0x7de531d0"/>
        <function-ref name="assign" scoped="" ref="0x7de532b0"/>
        <function-ref name="setAll" scoped="" ref="0x7de53390"/>
        <function-ref name="set" scoped="" ref="0x7de53470"/>
        <function-ref name="size" scoped="" ref="0x7de53550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Header" ref="0x7dea6030" loc="93:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Header" scoped="" ref="0x7dea6030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7dea6208"/>
        <function-ref name="length" scoped="" ref="0x7dea62e8"/>
        <function-ref name="add" scoped="" ref="0x7dea63c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteError" ref="0x7de891c8" loc="95:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteError" scoped="" ref="0x7de891c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7de893a0"/>
        <function-ref name="list" scoped="" ref="0x7de89480"/>
        <function-ref name="remove" scoped="" ref="0x7de89560"/>
        <function-ref name="length" scoped="" ref="0x7de89640"/>
        <function-ref name="setLength" scoped="" ref="0x7de89720"/>
        <function-ref name="add" scoped="" ref="0x7de89800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteNodeList" ref="0x7de736b0" loc="107:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteNodeList" scoped="" ref="0x7de736b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7deae540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7de72010"/>
        <function-ref name="next" scoped="" ref="0x7de73cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteCache" ref="0x7de73010" loc="106:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteCache" scoped="" ref="0x7de73010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteCache"/>
      </instance>
      <interface-functions>
        <function-ref name="removeLink" scoped="" ref="0x7de731e8"/>
        <function-ref name="routeUpdate" scoped="" ref="0x7de732c8"/>
        <function-ref name="addPath" scoped="" ref="0x7de733a8"/>
        <function-ref name="needRoute" scoped="" ref="0x7de73488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DsrPacketWaitList" ref="0x7de805e8" loc="104:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7de805e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7de80e90"/>
        <function-ref name="next" scoped="" ref="0x7de80c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteRequestOutEqual" ref="0x7deab0c0" loc="86:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestOutEqual" scoped="" ref="0x7deab0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7dee1df8"/>
              <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7dee0168"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7deab6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7de64808" loc="114:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7de64808"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7de649e0"/>
        <function-ref name="source" scoped="" ref="0x7de64ac0"/>
        <function-ref name="address" scoped="" ref="0x7de64ba0"/>
        <function-ref name="destination" scoped="" ref="0x7de64c80"/>
        <function-ref name="setSource" scoped="" ref="0x7de64d60"/>
        <function-ref name="setDestination" scoped="" ref="0x7de64e40"/>
        <function-ref name="type" scoped="" ref="0x7de64f20"/>
        <function-ref name="setType" scoped="" ref="0x7de55018"/>
        <function-ref name="isForMe" scoped="" ref="0x7de550f8"/>
        <function-ref name="setGroup" scoped="" ref="0x7de551d8"/>
        <function-ref name="localGroup" scoped="" ref="0x7de552b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Acks" ref="0x7de65c60" loc="112:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7de65c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7de65e38"/>
        <function-ref name="noAck" scoped="" ref="0x7de65f18"/>
        <function-ref name="wasAcked" scoped="" ref="0x7de64010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteErrorList" ref="0x7dda6f20" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteErrorList" scoped="" ref="0x7dda6f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7deb0d70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7dda58a0"/>
        <function-ref name="next" scoped="" ref="0x7dda5560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AckList" ref="0x7dda4ba0" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckList" scoped="" ref="0x7dda4ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7deb0d70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7dda2520"/>
        <function-ref name="next" scoped="" ref="0x7dda21e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteRequest" ref="0x7dda8aa8" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequest" scoped="" ref="0x7dda8aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tlv"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7dda8c80"/>
        <function-ref name="remove" scoped="" ref="0x7dda8d60"/>
        <function-ref name="length" scoped="" ref="0x7dda8e40"/>
        <function-ref name="setLength" scoped="" ref="0x7dda8f20"/>
        <function-ref name="add" scoped="" ref="0x7dda7018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteReplyList" ref="0x7dda79f8" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteReplyList" scoped="" ref="0x7dda79f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7deb0d70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7dda6388"/>
        <function-ref name="next" scoped="" ref="0x7dda6048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SourceRoute" ref="0x7dda2850" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceRoute" scoped="" ref="0x7dda2850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tlv"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7dda2a28"/>
        <function-ref name="remove" scoped="" ref="0x7dda2b08"/>
        <function-ref name="length" scoped="" ref="0x7dda2be8"/>
        <function-ref name="setLength" scoped="" ref="0x7dda2cc8"/>
        <function-ref name="add" scoped="" ref="0x7dda2da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Header" ref="0x7dda8598" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Header" scoped="" ref="0x7dda8598"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7dda8770"/>
        <function-ref name="length" scoped="" ref="0x7dda8850"/>
        <function-ref name="add" scoped="" ref="0x7dda8930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteError" ref="0x7dda66c0" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteError" scoped="" ref="0x7dda66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7dda6898"/>
        <function-ref name="list" scoped="" ref="0x7dda6978"/>
        <function-ref name="remove" scoped="" ref="0x7dda6a58"/>
        <function-ref name="length" scoped="" ref="0x7dda6b38"/>
        <function-ref name="setLength" scoped="" ref="0x7dda6c18"/>
        <function-ref name="add" scoped="" ref="0x7dda6cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AckRequest" ref="0x7dda5bd0" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckRequest" scoped="" ref="0x7dda5bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tlv"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7dda5da8"/>
        <function-ref name="remove" scoped="" ref="0x7dda5e88"/>
        <function-ref name="length" scoped="" ref="0x7dda4010"/>
        <function-ref name="setLength" scoped="" ref="0x7dda40f0"/>
        <function-ref name="add" scoped="" ref="0x7dda41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteReply" ref="0x7dda7198" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteReply" scoped="" ref="0x7dda7198"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7dda7370"/>
        <function-ref name="list" scoped="" ref="0x7dda7450"/>
        <function-ref name="remove" scoped="" ref="0x7dda7530"/>
        <function-ref name="length" scoped="" ref="0x7dda7610"/>
        <function-ref name="setLength" scoped="" ref="0x7dda76f0"/>
        <function-ref name="add" scoped="" ref="0x7dda77d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ack" ref="0x7dda4348" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ack" scoped="" ref="0x7dda4348"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7dda4520"/>
        <function-ref name="list" scoped="" ref="0x7dda4600"/>
        <function-ref name="remove" scoped="" ref="0x7dda46e0"/>
        <function-ref name="length" scoped="" ref="0x7dda47c0"/>
        <function-ref name="setLength" scoped="" ref="0x7dda48a0"/>
        <function-ref name="add" scoped="" ref="0x7dda4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvBlock" ref="0x7dd960d8" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
      <component-ref qname="DsrOptionsC.RouteRequestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlock" scoped="" ref="0x7dd960d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7dd962b0"/>
        <function-ref name="length" scoped="" ref="0x7dd96390"/>
        <function-ref name="add" scoped="" ref="0x7dd96470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tlv" ref="0x7dd965b0" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
      <component-ref qname="DsrOptionsC.RouteRequestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tlv" scoped="" ref="0x7dd965b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tlv"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7dd96788"/>
        <function-ref name="remove" scoped="" ref="0x7dd96868"/>
        <function-ref name="length" scoped="" ref="0x7dd96948"/>
        <function-ref name="setLength" scoped="" ref="0x7dd96a28"/>
        <function-ref name="add" scoped="" ref="0x7dd96b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvMultiple" ref="0x7dd8d100" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvP.nc">
      <component-ref qname="TlvP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvMultiple" scoped="" ref="0x7dd8d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiple"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7dd8d2d8"/>
        <function-ref name="list" scoped="" ref="0x7dd8d3b8"/>
        <function-ref name="remove" scoped="" ref="0x7dd8d498"/>
        <function-ref name="length" scoped="" ref="0x7dd8d578"/>
        <function-ref name="setLength" scoped="" ref="0x7dd8d658"/>
        <function-ref name="add" scoped="" ref="0x7dd8d738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvList" ref="0x7dd8dbe8" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvP.nc">
      <component-ref qname="TlvP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvList" scoped="" ref="0x7dd8dbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7deb0d70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7dd8b598"/>
        <function-ref name="next" scoped="" ref="0x7dd8b258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvBlock" ref="0x7dd8e010" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvP.nc">
      <component-ref qname="TlvP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlock" scoped="" ref="0x7dd8e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7dd8e1e8"/>
        <function-ref name="length" scoped="" ref="0x7dd8e2c8"/>
        <function-ref name="add" scoped="" ref="0x7dd8e3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tlv" ref="0x7dd8e780" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvP.nc">
      <component-ref qname="TlvP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tlv" scoped="" ref="0x7dd8e780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tlv"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7dd8e958"/>
        <function-ref name="remove" scoped="" ref="0x7dd8ea38"/>
        <function-ref name="length" scoped="" ref="0x7dd8eb18"/>
        <function-ref name="setLength" scoped="" ref="0x7dd8ebf8"/>
        <function-ref name="add" scoped="" ref="0x7dd8ecd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvMultiple" ref="0x7dd494e8" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
      <component-ref qname="DsrOptionsC.RouteReplyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvMultiple" scoped="" ref="0x7dd494e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7dd496c0"/>
        <function-ref name="list" scoped="" ref="0x7dd497a0"/>
        <function-ref name="remove" scoped="" ref="0x7dd49880"/>
        <function-ref name="length" scoped="" ref="0x7dd49960"/>
        <function-ref name="setLength" scoped="" ref="0x7dd49a40"/>
        <function-ref name="add" scoped="" ref="0x7dd49b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvList" ref="0x7dd49d10" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
      <component-ref qname="DsrOptionsC.RouteReplyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvList" scoped="" ref="0x7dd49d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7deb0d70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7dd44690"/>
        <function-ref name="next" scoped="" ref="0x7dd44350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvBlock" ref="0x7dd49010" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
      <component-ref qname="DsrOptionsC.RouteReplyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlock" scoped="" ref="0x7dd49010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7dd491e8"/>
        <function-ref name="length" scoped="" ref="0x7dd492c8"/>
        <function-ref name="add" scoped="" ref="0x7dd493a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvMultiple" ref="0x7dd43b78" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
      <component-ref qname="DsrOptionsC.RouteErrorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvMultiple" scoped="" ref="0x7dd43b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7dd43d50"/>
        <function-ref name="list" scoped="" ref="0x7dd43e30"/>
        <function-ref name="remove" scoped="" ref="0x7dd43f10"/>
        <function-ref name="length" scoped="" ref="0x7dd41010"/>
        <function-ref name="setLength" scoped="" ref="0x7dd410f0"/>
        <function-ref name="add" scoped="" ref="0x7dd411d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvList" ref="0x7dd413c0" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
      <component-ref qname="DsrOptionsC.RouteErrorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvList" scoped="" ref="0x7dd413c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7deb0d70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7dd41d28"/>
        <function-ref name="next" scoped="" ref="0x7dd419e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvBlock" ref="0x7dd436a0" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
      <component-ref qname="DsrOptionsC.RouteErrorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlock" scoped="" ref="0x7dd436a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7dd43878"/>
        <function-ref name="length" scoped="" ref="0x7dd43958"/>
        <function-ref name="add" scoped="" ref="0x7dd43a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvBlock" ref="0x7dd40d20" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
      <component-ref qname="DsrOptionsC.AckRequestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlock" scoped="" ref="0x7dd40d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7dd40ef8"/>
        <function-ref name="length" scoped="" ref="0x7dd37010"/>
        <function-ref name="add" scoped="" ref="0x7dd370f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tlv" ref="0x7dd37230" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
      <component-ref qname="DsrOptionsC.AckRequestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tlv" scoped="" ref="0x7dd37230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tlv"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7dd37408"/>
        <function-ref name="remove" scoped="" ref="0x7dd374e8"/>
        <function-ref name="length" scoped="" ref="0x7dd375c8"/>
        <function-ref name="setLength" scoped="" ref="0x7dd376a8"/>
        <function-ref name="add" scoped="" ref="0x7dd37788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvMultiple" ref="0x7dd369a8" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
      <component-ref qname="DsrOptionsC.AckC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvMultiple" scoped="" ref="0x7dd369a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7dd36b80"/>
        <function-ref name="list" scoped="" ref="0x7dd36c60"/>
        <function-ref name="remove" scoped="" ref="0x7dd36d40"/>
        <function-ref name="length" scoped="" ref="0x7dd36e20"/>
        <function-ref name="setLength" scoped="" ref="0x7dd36f00"/>
        <function-ref name="add" scoped="" ref="0x7dd35010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvList" ref="0x7dd35200" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
      <component-ref qname="DsrOptionsC.AckC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvList" scoped="" ref="0x7dd35200"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7deb0d70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7dd35b68"/>
        <function-ref name="next" scoped="" ref="0x7dd35828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvBlock" ref="0x7dd364d0" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultipleC.nc">
      <component-ref qname="DsrOptionsC.AckC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlock" scoped="" ref="0x7dd364d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7dd366a8"/>
        <function-ref name="length" scoped="" ref="0x7dd36788"/>
        <function-ref name="add" scoped="" ref="0x7dd36868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvBlock" ref="0x7dd34bb8" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
      <component-ref qname="DsrOptionsC.SourceRouteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlock" scoped="" ref="0x7dd34bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7dd34d90"/>
        <function-ref name="length" scoped="" ref="0x7dd34e70"/>
        <function-ref name="add" scoped="" ref="0x7dd33010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tlv" ref="0x7dd33150" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvC.nc">
      <component-ref qname="DsrOptionsC.SourceRouteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tlv" scoped="" ref="0x7dd33150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tlv"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7dd33328"/>
        <function-ref name="remove" scoped="" ref="0x7dd33408"/>
        <function-ref name="length" scoped="" ref="0x7dd334e8"/>
        <function-ref name="setLength" scoped="" ref="0x7dd335c8"/>
        <function-ref name="add" scoped="" ref="0x7dd336a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteCache" ref="0x7dd2eb50" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrRouteCacheC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteCache" scoped="" ref="0x7dd2eb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteCache"/>
      </instance>
      <interface-functions>
        <function-ref name="removeLink" scoped="" ref="0x7dd2ed28"/>
        <function-ref name="routeUpdate" scoped="" ref="0x7dd2ee08"/>
        <function-ref name="addPath" scoped="" ref="0x7dd2eee8"/>
        <function-ref name="needRoute" scoped="" ref="0x7dd2d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteNodeList" ref="0x7dd2d200" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrRouteCacheC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteNodeList" scoped="" ref="0x7dd2d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7deae540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7dd2daa8"/>
        <function-ref name="next" scoped="" ref="0x7dd2d828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteCache" ref="0x7d690210" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteCache" scoped="" ref="0x7d690210"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteCache"/>
      </instance>
      <interface-functions>
        <function-ref name="removeLink" scoped="" ref="0x7d6903e8"/>
        <function-ref name="routeUpdate" scoped="" ref="0x7d6904c8"/>
        <function-ref name="addPath" scoped="" ref="0x7d6905a8"/>
        <function-ref name="needRoute" scoped="" ref="0x7d690688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteNodeList" ref="0x7d690878" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteNodeList" scoped="" ref="0x7d690878"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7deae540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d68f150"/>
        <function-ref name="next" scoped="" ref="0x7d690ea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7dd15600" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7dd15600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7dd157d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Graph" ref="0x7dd08050" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7dd08050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7dd08228"/>
        <function-ref name="removed" scoped="" ref="0x7dd08308"/>
        <function-ref name="remove" scoped="" ref="0x7dd083e8"/>
        <function-ref name="edge" scoped="" ref="0x7dd084c8"/>
        <function-ref name="directed" scoped="" ref="0x7dd085a8"/>
        <function-ref name="vertices" scoped="" ref="0x7dd08688"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7dd08768"/>
        <function-ref name="maxVertices" scoped="" ref="0x7dd08848"/>
        <function-ref name="insert" scoped="" ref="0x7dd08928"/>
        <function-ref name="inserted" scoped="" ref="0x7dd08a08"/>
        <function-ref name="edgeList" scoped="" ref="0x7dd08ae8"/>
        <function-ref name="edges" scoped="" ref="0x7dd08bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeedRouteTo" ref="0x7dd15958" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeedRouteTo" scoped="" ref="0x7dd15958"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7dd15b30"/>
        <function-ref name="clear" scoped="" ref="0x7dd15c10"/>
        <function-ref name="toggle" scoped="" ref="0x7dd15cf0"/>
        <function-ref name="get" scoped="" ref="0x7dd15dd0"/>
        <function-ref name="assign" scoped="" ref="0x7dd15eb0"/>
        <function-ref name="setAll" scoped="" ref="0x7dd14010"/>
        <function-ref name="set" scoped="" ref="0x7dd140f0"/>
        <function-ref name="size" scoped="" ref="0x7dd141d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SourceShortestPath" ref="0x7dd01488" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceShortestPath" scoped="" ref="0x7dd01488"/></type-interface>
      <instance>
        <interfacedef-ref qname="SourceShortestPath"/>
      </instance>
      <interface-functions>
        <function-ref name="rebuildNeeded" scoped="" ref="0x7dd01660"/>
        <function-ref name="buildTree" scoped="" ref="0x7dd01740"/>
        <function-ref name="builtTree" scoped="" ref="0x7dd01820"/>
        <function-ref name="edgeCount" scoped="" ref="0x7dd01900"/>
        <function-ref name="buildTreeTo" scoped="" ref="0x7dd019e0"/>
        <function-ref name="builtTreeTo" scoped="" ref="0x7dd01ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteCache" ref="0x7dd15010" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteCache" scoped="" ref="0x7dd15010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteCache"/>
      </instance>
      <interface-functions>
        <function-ref name="removeLink" scoped="" ref="0x7dd151e8"/>
        <function-ref name="routeUpdate" scoped="" ref="0x7dd152c8"/>
        <function-ref name="addPath" scoped="" ref="0x7dd153a8"/>
        <function-ref name="needRoute" scoped="" ref="0x7dd15488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7dd14320" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7dd14320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7dd144f8"/>
        <function-ref name="source" scoped="" ref="0x7dd145d8"/>
        <function-ref name="address" scoped="" ref="0x7dd146b8"/>
        <function-ref name="destination" scoped="" ref="0x7dd14798"/>
        <function-ref name="setSource" scoped="" ref="0x7dd14878"/>
        <function-ref name="setDestination" scoped="" ref="0x7dd14958"/>
        <function-ref name="type" scoped="" ref="0x7dd14a38"/>
        <function-ref name="setType" scoped="" ref="0x7dd14b18"/>
        <function-ref name="isForMe" scoped="" ref="0x7dd14bf8"/>
        <function-ref name="setGroup" scoped="" ref="0x7dd14cd8"/>
        <function-ref name="localGroup" scoped="" ref="0x7dd14db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Graph" ref="0x7d68ebc0" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7d68ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7d68ed98"/>
        <function-ref name="removed" scoped="" ref="0x7d68ee78"/>
        <function-ref name="remove" scoped="" ref="0x7d68d010"/>
        <function-ref name="edge" scoped="" ref="0x7d68d0f0"/>
        <function-ref name="directed" scoped="" ref="0x7d68d1d0"/>
        <function-ref name="vertices" scoped="" ref="0x7d68d2b0"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7d68d390"/>
        <function-ref name="maxVertices" scoped="" ref="0x7d68d470"/>
        <function-ref name="insert" scoped="" ref="0x7d68d550"/>
        <function-ref name="inserted" scoped="" ref="0x7d68d630"/>
        <function-ref name="edgeList" scoped="" ref="0x7d68d710"/>
        <function-ref name="edges" scoped="" ref="0x7d68d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PathEdgeList" ref="0x7d68a200" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PathEdgeList" scoped="" ref="0x7d68a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d68aaa8"/>
        <function-ref name="next" scoped="" ref="0x7d68a828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SourceShortestPath" ref="0x7d68b900" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceShortestPath" scoped="" ref="0x7d68b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="SourceShortestPath"/>
      </instance>
      <interface-functions>
        <function-ref name="rebuildNeeded" scoped="" ref="0x7d68bad8"/>
        <function-ref name="buildTree" scoped="" ref="0x7d68bbb8"/>
        <function-ref name="builtTree" scoped="" ref="0x7d68bc98"/>
        <function-ref name="edgeCount" scoped="" ref="0x7d68bd78"/>
        <function-ref name="buildTreeTo" scoped="" ref="0x7d68be58"/>
        <function-ref name="builtTreeTo" scoped="" ref="0x7d68a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdge" ref="0x7d68d930" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7d68d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7d68db08"/>
        <function-ref name="dest" scoped="" ref="0x7d68dbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdgeList" ref="0x7d68ddd8" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7d68ddd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d68b6c8"/>
        <function-ref name="next" scoped="" ref="0x7d68b448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeWeight" ref="0x7d68ad90" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d68ad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7dd26d10"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="canChangeWeights" scoped="" ref="0x7d6893e0"/>
        <function-ref name="weightChanged" scoped="" ref="0x7d689b60"/>
        <function-ref name="setWeight" scoped="" ref="0x7d689840"/>
        <function-ref name="weight" scoped="" ref="0x7d6895c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Graph" ref="0x7d682c08" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7d682c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7d682de0"/>
        <function-ref name="removed" scoped="" ref="0x7d682ec0"/>
        <function-ref name="remove" scoped="" ref="0x7d67f010"/>
        <function-ref name="edge" scoped="" ref="0x7d67f0f0"/>
        <function-ref name="directed" scoped="" ref="0x7d67f1d0"/>
        <function-ref name="vertices" scoped="" ref="0x7d67f2b0"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7d67f390"/>
        <function-ref name="maxVertices" scoped="" ref="0x7d67f470"/>
        <function-ref name="insert" scoped="" ref="0x7d67f550"/>
        <function-ref name="inserted" scoped="" ref="0x7d67f630"/>
        <function-ref name="edgeList" scoped="" ref="0x7d67f710"/>
        <function-ref name="edges" scoped="" ref="0x7d67f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdge" ref="0x7d67f930" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7d67f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7d67fb08"/>
        <function-ref name="dest" scoped="" ref="0x7d67fbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdgeList" ref="0x7d67fdd8" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7d67fdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d67e6c8"/>
        <function-ref name="next" scoped="" ref="0x7d67e448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IndexedAlloc" ref="0x7d674a58" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IndexedAlloc" scoped="" ref="0x7d674a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedAlloc"/>
      </instance>
      <interface-functions>
        <function-ref name="all" scoped="" ref="0x7d6721d0"/>
        <function-ref name="allocated" scoped="" ref="0x7d674d10"/>
        <function-ref name="maxSize" scoped="" ref="0x7d674df0"/>
        <function-ref name="alloc" scoped="" ref="0x7d674ed0"/>
        <function-ref name="none" scoped="" ref="0x7d672010"/>
        <function-ref name="free" scoped="" ref="0x7d6720f0"/>
        <function-ref name="size" scoped="" ref="0x7d674c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IndexedAlloc" ref="0x7d65d690" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IndexedAlloc" scoped="" ref="0x7d65d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedAlloc"/>
      </instance>
      <interface-functions>
        <function-ref name="all" scoped="" ref="0x7d65dda8"/>
        <function-ref name="allocated" scoped="" ref="0x7d65d948"/>
        <function-ref name="maxSize" scoped="" ref="0x7d65da28"/>
        <function-ref name="alloc" scoped="" ref="0x7d65db08"/>
        <function-ref name="none" scoped="" ref="0x7d65dbe8"/>
        <function-ref name="free" scoped="" ref="0x7d65dcc8"/>
        <function-ref name="size" scoped="" ref="0x7d65d868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d65b1e8" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d65b1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d65b3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7d65b520" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7d65b520"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7d65b6f8"/>
        <function-ref name="clear" scoped="" ref="0x7d65b7d8"/>
        <function-ref name="toggle" scoped="" ref="0x7d65b8b8"/>
        <function-ref name="get" scoped="" ref="0x7d65b998"/>
        <function-ref name="assign" scoped="" ref="0x7d65ba78"/>
        <function-ref name="setAll" scoped="" ref="0x7d65bb58"/>
        <function-ref name="set" scoped="" ref="0x7d65bc38"/>
        <function-ref name="size" scoped="" ref="0x7d65bd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7d659340" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7d659340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7d659518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IndexedAlloc" ref="0x7d65aa00" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IndexedAlloc" scoped="" ref="0x7d65aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedAlloc"/>
      </instance>
      <interface-functions>
        <function-ref name="all" scoped="" ref="0x7d6591d0"/>
        <function-ref name="allocated" scoped="" ref="0x7d65acb8"/>
        <function-ref name="maxSize" scoped="" ref="0x7d65ad98"/>
        <function-ref name="alloc" scoped="" ref="0x7d65ae78"/>
        <function-ref name="none" scoped="" ref="0x7d659010"/>
        <function-ref name="free" scoped="" ref="0x7d6590f0"/>
        <function-ref name="size" scoped="" ref="0x7d65abd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BitVector" ref="0x7d659658" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAllocBitsP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7d659658"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7d659830"/>
        <function-ref name="clear" scoped="" ref="0x7d659910"/>
        <function-ref name="toggle" scoped="" ref="0x7d6599f0"/>
        <function-ref name="get" scoped="" ref="0x7d659ad0"/>
        <function-ref name="assign" scoped="" ref="0x7d659bb0"/>
        <function-ref name="setAll" scoped="" ref="0x7d659c90"/>
        <function-ref name="set" scoped="" ref="0x7d659d70"/>
        <function-ref name="size" scoped="" ref="0x7d659e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Graph" ref="0x7d6713c8" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7d6713c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7d6715a0"/>
        <function-ref name="removed" scoped="" ref="0x7d671680"/>
        <function-ref name="remove" scoped="" ref="0x7d671760"/>
        <function-ref name="edge" scoped="" ref="0x7d671840"/>
        <function-ref name="directed" scoped="" ref="0x7d671920"/>
        <function-ref name="vertices" scoped="" ref="0x7d671a00"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7d671ae0"/>
        <function-ref name="maxVertices" scoped="" ref="0x7d671bc0"/>
        <function-ref name="insert" scoped="" ref="0x7d671ca0"/>
        <function-ref name="inserted" scoped="" ref="0x7d671d80"/>
        <function-ref name="edgeList" scoped="" ref="0x7d671e60"/>
        <function-ref name="edges" scoped="" ref="0x7d670010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d6710b0" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d6710b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d671288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IndexedAlloc" ref="0x7d661128" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IndexedAlloc" scoped="" ref="0x7d661128"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedAlloc"/>
      </instance>
      <interface-functions>
        <function-ref name="all" scoped="" ref="0x7d661840"/>
        <function-ref name="allocated" scoped="" ref="0x7d6613e0"/>
        <function-ref name="maxSize" scoped="" ref="0x7d6614c0"/>
        <function-ref name="alloc" scoped="" ref="0x7d6615a0"/>
        <function-ref name="none" scoped="" ref="0x7d661680"/>
        <function-ref name="free" scoped="" ref="0x7d661760"/>
        <function-ref name="size" scoped="" ref="0x7d661300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdge" ref="0x7d670150" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7d670150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7d670328"/>
        <function-ref name="dest" scoped="" ref="0x7d670408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdgeList" ref="0x7d6705f8" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7d6705f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d670ea0"/>
        <function-ref name="next" scoped="" ref="0x7d670c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Graph" ref="0x7d67cb20" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7d67cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7d67ccf8"/>
        <function-ref name="removed" scoped="" ref="0x7d67cdd8"/>
        <function-ref name="remove" scoped="" ref="0x7d67ceb8"/>
        <function-ref name="edge" scoped="" ref="0x7d67b010"/>
        <function-ref name="directed" scoped="" ref="0x7d67b0f0"/>
        <function-ref name="vertices" scoped="" ref="0x7d67b1d0"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7d67b2b0"/>
        <function-ref name="maxVertices" scoped="" ref="0x7d67b390"/>
        <function-ref name="insert" scoped="" ref="0x7d67b470"/>
        <function-ref name="inserted" scoped="" ref="0x7d67b550"/>
        <function-ref name="edgeList" scoped="" ref="0x7d67b630"/>
        <function-ref name="edges" scoped="" ref="0x7d67b710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PathEdgeList" ref="0x7d67c010" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PathEdgeList" scoped="" ref="0x7d67c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d67c8b8"/>
        <function-ref name="next" scoped="" ref="0x7d67c638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SourceShortestPath" ref="0x7d67d7d0" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceShortestPath" scoped="" ref="0x7d67d7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SourceShortestPath"/>
      </instance>
      <interface-functions>
        <function-ref name="rebuildNeeded" scoped="" ref="0x7d67d9a8"/>
        <function-ref name="buildTree" scoped="" ref="0x7d67da88"/>
        <function-ref name="builtTree" scoped="" ref="0x7d67db68"/>
        <function-ref name="edgeCount" scoped="" ref="0x7d67dc48"/>
        <function-ref name="buildTreeTo" scoped="" ref="0x7d67dd28"/>
        <function-ref name="builtTreeTo" scoped="" ref="0x7d67de08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdge" ref="0x7d67b850" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7d67b850"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7d67ba28"/>
        <function-ref name="dest" scoped="" ref="0x7d67bb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeWeight" ref="0x7d67bcd8" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d67bcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7dd26d10"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="canChangeWeights" scoped="" ref="0x7d679350"/>
        <function-ref name="weightChanged" scoped="" ref="0x7d679ad0"/>
        <function-ref name="setWeight" scoped="" ref="0x7d6797b0"/>
        <function-ref name="weight" scoped="" ref="0x7d679530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeList" ref="0x7d679db8" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7d679db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d678670"/>
        <function-ref name="next" scoped="" ref="0x7d6783f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PriorityQueue" ref="0x7d630ce0" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PriorityQueue" scoped="" ref="0x7d630ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PriorityQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d630eb8"/>
        <function-ref name="findBest" scoped="" ref="0x7d62e010"/>
        <function-ref name="maxSize" scoped="" ref="0x7d62e0f0"/>
        <function-ref name="insert" scoped="" ref="0x7d62e1d0"/>
        <function-ref name="moveUp" scoped="" ref="0x7d62e2b0"/>
        <function-ref name="move" scoped="" ref="0x7d62e390"/>
        <function-ref name="inserted" scoped="" ref="0x7d62e470"/>
        <function-ref name="moveDown" scoped="" ref="0x7d62e550"/>
        <function-ref name="empty" scoped="" ref="0x7d62e630"/>
        <function-ref name="removeBest" scoped="" ref="0x7d62e710"/>
        <function-ref name="size" scoped="" ref="0x7d62e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7d62e9e0" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7d62e9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7dc43050"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d62d048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d6206d0" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d6206d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d6208a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PriorityQueue" ref="0x7d6209e8" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PriorityQueue" scoped="" ref="0x7d6209e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PriorityQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d620bc0"/>
        <function-ref name="findBest" scoped="" ref="0x7d620ca0"/>
        <function-ref name="maxSize" scoped="" ref="0x7d620d80"/>
        <function-ref name="insert" scoped="" ref="0x7d620e60"/>
        <function-ref name="moveUp" scoped="" ref="0x7d61f010"/>
        <function-ref name="move" scoped="" ref="0x7d61f0f0"/>
        <function-ref name="inserted" scoped="" ref="0x7d61f1d0"/>
        <function-ref name="moveDown" scoped="" ref="0x7d61f2b0"/>
        <function-ref name="empty" scoped="" ref="0x7d61f390"/>
        <function-ref name="removeBest" scoped="" ref="0x7d61f470"/>
        <function-ref name="size" scoped="" ref="0x7d61f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7d61f740" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueueP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7d61f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7dc43050"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d61fd68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeList" ref="0x7d627e58" loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7d627e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d626738"/>
        <function-ref name="next" scoped="" ref="0x7d6264b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="buildTreeTask" ref="0x7d6269b0" loc="84:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="buildTreeTask" scoped="" ref="0x7d6269b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d626b88"/>
        <function-ref name="runTask" scoped="" ref="0x7d626c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Graph" ref="0x7d629c48" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7d629c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7d629e20"/>
        <function-ref name="removed" scoped="" ref="0x7d629f00"/>
        <function-ref name="remove" scoped="" ref="0x7d628010"/>
        <function-ref name="edge" scoped="" ref="0x7d6280f0"/>
        <function-ref name="directed" scoped="" ref="0x7d6281d0"/>
        <function-ref name="vertices" scoped="" ref="0x7d6282b0"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7d628390"/>
        <function-ref name="maxVertices" scoped="" ref="0x7d628470"/>
        <function-ref name="insert" scoped="" ref="0x7d628550"/>
        <function-ref name="inserted" scoped="" ref="0x7d628630"/>
        <function-ref name="edgeList" scoped="" ref="0x7d628710"/>
        <function-ref name="edges" scoped="" ref="0x7d6287f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PathEdgeList" ref="0x7d62cb70" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PathEdgeList" scoped="" ref="0x7d62cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d62a460"/>
        <function-ref name="next" scoped="" ref="0x7d62a1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d62c030" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d62c030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d62c208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SourceShortestPath" ref="0x7d62c348" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceShortestPath" scoped="" ref="0x7d62c348"/></type-interface>
      <instance>
        <interfacedef-ref qname="SourceShortestPath"/>
      </instance>
      <interface-functions>
        <function-ref name="rebuildNeeded" scoped="" ref="0x7d62c520"/>
        <function-ref name="buildTree" scoped="" ref="0x7d62c600"/>
        <function-ref name="builtTree" scoped="" ref="0x7d62c6e0"/>
        <function-ref name="edgeCount" scoped="" ref="0x7d62c7c0"/>
        <function-ref name="buildTreeTo" scoped="" ref="0x7d62c8a0"/>
        <function-ref name="builtTreeTo" scoped="" ref="0x7d62c980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdge" ref="0x7d628930" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7d628930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7d628b08"/>
        <function-ref name="dest" scoped="" ref="0x7d628be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PriorityQueue" ref="0x7d629070" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PriorityQueue" scoped="" ref="0x7d629070"/></type-interface>
      <instance>
        <interfacedef-ref qname="PriorityQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d629248"/>
        <function-ref name="findBest" scoped="" ref="0x7d629328"/>
        <function-ref name="maxSize" scoped="" ref="0x7d629408"/>
        <function-ref name="insert" scoped="" ref="0x7d6294e8"/>
        <function-ref name="moveUp" scoped="" ref="0x7d6295c8"/>
        <function-ref name="move" scoped="" ref="0x7d6296a8"/>
        <function-ref name="inserted" scoped="" ref="0x7d629788"/>
        <function-ref name="moveDown" scoped="" ref="0x7d629868"/>
        <function-ref name="empty" scoped="" ref="0x7d629948"/>
        <function-ref name="removeBest" scoped="" ref="0x7d629a28"/>
        <function-ref name="size" scoped="" ref="0x7d629b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7d62a728" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7d62a728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d62ad50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeWeight" ref="0x7d628db8" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d628db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7dd26d10"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="canChangeWeights" scoped="" ref="0x7d6273f0"/>
        <function-ref name="weightChanged" scoped="" ref="0x7d627b70"/>
        <function-ref name="setWeight" scoped="" ref="0x7d627850"/>
        <function-ref name="weight" scoped="" ref="0x7d6275d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d688ee8" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.NeedRouteToC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d688ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d6870e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7d687240" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.NeedRouteToC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7d687240"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7d687418"/>
        <function-ref name="clear" scoped="" ref="0x7d6874f8"/>
        <function-ref name="toggle" scoped="" ref="0x7d6875d8"/>
        <function-ref name="get" scoped="" ref="0x7d6876b8"/>
        <function-ref name="assign" scoped="" ref="0x7d687798"/>
        <function-ref name="setAll" scoped="" ref="0x7d687878"/>
        <function-ref name="set" scoped="" ref="0x7d687958"/>
        <function-ref name="size" scoped="" ref="0x7d687a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdgeWeight" ref="0x7dba53b8" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeUnitWeightC.nc">
      <component-ref qname="GraphEdgeUnitWeightC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7dba53b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7dd26d10"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="canChangeWeights" scoped="" ref="0x7dba59e0"/>
        <function-ref name="weightChanged" scoped="" ref="0x7dba3170"/>
        <function-ref name="setWeight" scoped="" ref="0x7dba5e40"/>
        <function-ref name="weight" scoped="" ref="0x7dba5bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7db95c68" loc="32:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7db95c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7dee06d0"/>
              <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7dee09f0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7db702c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7db96b38" loc="31:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7db96b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7dee06d0"/>
            <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7dee09f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7db95760"/>
        <function-ref name="insert" scoped="" ref="0x7db951e0"/>
        <function-ref name="flush" scoped="" ref="0x7db95a00"/>
        <function-ref name="lookup" scoped="" ref="0x7db954a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d5e7d40" loc="69:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d5e7d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d5e7f18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7d5e3278" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7d5e3278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7dee06d0"/>
              <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7dee09f0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d5e38a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7d5e5100" loc="70:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7d5e5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7dee06d0"/>
            <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7dee09f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7d5e5ca8"/>
        <function-ref name="insert" scoped="" ref="0x7d5e5728"/>
        <function-ref name="flush" scoped="" ref="0x7d5e3010"/>
        <function-ref name="lookup" scoped="" ref="0x7d5e59e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7db6d518" loc="32:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7db6d518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7dee1df8"/>
              <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7dee0168"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7db6db40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7db6f3d8" loc="31:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7db6f3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7dee1df8"/>
            <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7dee0168"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7db6d010"/>
        <function-ref name="insert" scoped="" ref="0x7db6fa00"/>
        <function-ref name="flush" scoped="" ref="0x7db6d2b0"/>
        <function-ref name="lookup" scoped="" ref="0x7db6fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d5c9ed0" loc="69:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d5c9ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d5c70c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7d5c6360" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7d5c6360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7dee1df8"/>
              <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7dee0168"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d5c6988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7d5c7290" loc="70:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7d5c7290"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7dee1df8"/>
            <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7dee0168"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7d5c7e38"/>
        <function-ref name="insert" scoped="" ref="0x7d5c78b8"/>
        <function-ref name="flush" scoped="" ref="0x7d5c60f8"/>
        <function-ref name="lookup" scoped="" ref="0x7d5c7b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataTimer" ref="0x7db69058" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerC.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataTimer" scoped="" ref="0x7db69058"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataTimer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="expired" scoped="" ref="0x7db69c20"/>
        <function-ref name="start" scoped="" ref="0x7db69680"/>
        <function-ref name="stop" scoped="" ref="0x7db699a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d5b9eb8" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d5b9eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d5b6830"/>
        <function-ref name="fired" scoped="" ref="0x7d5b7be0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d5b61f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d5b6010"/>
        <function-ref name="getdt" scoped="" ref="0x7d5b6bf0"/>
        <function-ref name="gett0" scoped="" ref="0x7d5b6a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7d5b7dc0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d5b7500"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d5b6510"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d5b7780"/>
        <function-ref name="stop" scoped="" ref="0x7d5b7a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataTimer" ref="0x7d5b5d48" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC.DataTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataTimer" scoped="" ref="0x7d5b5d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataTimer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="expired" scoped="" ref="0x7d5b4960"/>
        <function-ref name="start" scoped="" ref="0x7d5b43c0"/>
        <function-ref name="stop" scoped="" ref="0x7d5b46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d5b59a0" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC.DataTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d5b59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d5b5b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7d5b4c58" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimerP.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC.DataTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d5b4c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d5b1650"/>
        <function-ref name="fired" scoped="" ref="0x7d5b29a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d5b1010"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d5b2d68"/>
        <function-ref name="getdt" scoped="" ref="0x7d5b1a10"/>
        <function-ref name="gett0" scoped="" ref="0x7d5b1830"/>
        <function-ref name="isRunning" scoped="" ref="0x7d5b2b88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d5b22c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d5b1330"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d5b2548"/>
        <function-ref name="stop" scoped="" ref="0x7d5b27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7db399e8" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.ComposeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7db399e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7db39bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7db39d20" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.ComposeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7db39d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7db39ef8"/>
        <function-ref name="clear" scoped="" ref="0x7db38010"/>
        <function-ref name="toggle" scoped="" ref="0x7db380f0"/>
        <function-ref name="get" scoped="" ref="0x7db381d0"/>
        <function-ref name="assign" scoped="" ref="0x7db382b0"/>
        <function-ref name="setAll" scoped="" ref="0x7db38390"/>
        <function-ref name="set" scoped="" ref="0x7db38470"/>
        <function-ref name="size" scoped="" ref="0x7db38550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7db37108" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="DsrP.SendStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7db37108"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7db372e0"/>
        <function-ref name="toIdle" scoped="" ref="0x7db373c0"/>
        <function-ref name="isState" scoped="" ref="0x7db374a0"/>
        <function-ref name="isIdle" scoped="" ref="0x7db37580"/>
        <function-ref name="requestState" scoped="" ref="0x7db37660"/>
        <function-ref name="forceState" scoped="" ref="0x7db37740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7db2cef8" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7db2cef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7db2b0e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7db2b1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7db2b2a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7db2b380"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7db2b460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SubPacket" ref="0x7db2b5e0" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7db2b5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7db2b7b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7db2b898"/>
        <function-ref name="getPayload" scoped="" ref="0x7db2b978"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7db2ba58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7db2bb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d58c1f8" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d58c1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d58c3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d58c4b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d58c590"/>
        <function-ref name="cancel" scoped="" ref="0x7d58c670"/>
        <function-ref name="sendDone" scoped="" ref="0x7d58c750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d58c890" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d58c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d58ca68"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d58cb48"/>
        <function-ref name="getPayload" scoped="" ref="0x7d58cc28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d58cd08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d58cde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d58cf28" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d58cf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d58b110"/>
        <function-ref name="source" scoped="" ref="0x7d58b1f0"/>
        <function-ref name="address" scoped="" ref="0x7d58b2d0"/>
        <function-ref name="destination" scoped="" ref="0x7d58b3b0"/>
        <function-ref name="setSource" scoped="" ref="0x7d58b490"/>
        <function-ref name="setDestination" scoped="" ref="0x7d58b570"/>
        <function-ref name="type" scoped="" ref="0x7d58b650"/>
        <function-ref name="setType" scoped="" ref="0x7d58b730"/>
        <function-ref name="isForMe" scoped="" ref="0x7d58b810"/>
        <function-ref name="setGroup" scoped="" ref="0x7d58b8f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7d58b9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7d58bb30" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7d58bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7d58bd08"/>
        <function-ref name="noAck" scoped="" ref="0x7d58bde8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7d58bec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d5825f8" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d5825f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d5827d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d5828b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d582990"/>
        <function-ref name="cancel" scoped="" ref="0x7d582a70"/>
        <function-ref name="sendDone" scoped="" ref="0x7d582b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7d582cc0" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d582cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d582e98"/>
        <function-ref name="getPayload" scoped="" ref="0x7d581010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d5810f0"/>
        <function-ref name="cancel" scoped="" ref="0x7d5811d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d5812b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7d5813f0" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d5813f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d5815c8"/>
        <function-ref name="source" scoped="" ref="0x7d5816a8"/>
        <function-ref name="address" scoped="" ref="0x7d581788"/>
        <function-ref name="destination" scoped="" ref="0x7d581868"/>
        <function-ref name="setSource" scoped="" ref="0x7d581948"/>
        <function-ref name="setDestination" scoped="" ref="0x7d581a28"/>
        <function-ref name="type" scoped="" ref="0x7d581b08"/>
        <function-ref name="setType" scoped="" ref="0x7d581be8"/>
        <function-ref name="isForMe" scoped="" ref="0x7d581cc8"/>
        <function-ref name="setGroup" scoped="" ref="0x7d581da8"/>
        <function-ref name="localGroup" scoped="" ref="0x7d581e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7db0c010" loc="35:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7db0c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7db0c1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7db0c2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7db0c3a8"/>
        <function-ref name="cancel" scoped="" ref="0x7db0c488"/>
        <function-ref name="sendDone" scoped="" ref="0x7db0c568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7dae0218" loc="40:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7dae0218"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dae0400"/>
        <function-ref name="getPayload" scoped="" ref="0x7dae04e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dae05c0"/>
        <function-ref name="cancel" scoped="" ref="0x7dae06a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7dae0780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7db089e8" loc="38:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7db089e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7db08bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7db08cb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7db08d90"/>
        <function-ref name="cancel" scoped="" ref="0x7db08e70"/>
        <function-ref name="sendDone" scoped="" ref="0x7dae0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7dada4d0" loc="42:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7dada4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dada6a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7dada788"/>
        <function-ref name="getPayload" scoped="" ref="0x7dada868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dada948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7dadaa28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7dadaba8" loc="161:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7dadaba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7dadad80"/>
        <function-ref name="runTask" scoped="" ref="0x7dadae60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7dad9010" loc="118:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7dad9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7dad91e8"/>
        <function-ref name="runTask" scoped="" ref="0x7dad92c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7dae08c0" loc="41:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7dae08c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7dae0a98"/>
        <function-ref name="source" scoped="" ref="0x7dae0b78"/>
        <function-ref name="address" scoped="" ref="0x7dae0c58"/>
        <function-ref name="destination" scoped="" ref="0x7dae0d38"/>
        <function-ref name="setSource" scoped="" ref="0x7dae0e18"/>
        <function-ref name="setDestination" scoped="" ref="0x7dae0ef8"/>
        <function-ref name="type" scoped="" ref="0x7dada010"/>
        <function-ref name="setType" scoped="" ref="0x7dada0f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7dada1d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7dada2b0"/>
        <function-ref name="localGroup" scoped="" ref="0x7dada390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d5893e0" loc="39:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d5893e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d5895b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d589698"/>
        <function-ref name="getPayload" scoped="" ref="0x7d589778"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d589858"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d589938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d58aee0" loc="38:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d58aee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d5890e0"/>
        <function-ref name="receive" scoped="" ref="0x7d5891c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d5892a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d589a78" loc="40:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d589a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d589c50"/>
        <function-ref name="source" scoped="" ref="0x7d589d30"/>
        <function-ref name="address" scoped="" ref="0x7d589e10"/>
        <function-ref name="destination" scoped="" ref="0x7d589ef0"/>
        <function-ref name="setSource" scoped="" ref="0x7d587010"/>
        <function-ref name="setDestination" scoped="" ref="0x7d5870f0"/>
        <function-ref name="type" scoped="" ref="0x7d5871d0"/>
        <function-ref name="setType" scoped="" ref="0x7d5872b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d587390"/>
        <function-ref name="setGroup" scoped="" ref="0x7d587470"/>
        <function-ref name="localGroup" scoped="" ref="0x7d587550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketWaitList" ref="0x7dac7660" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
      <component-ref qname="DsrC.SinglePacketProcessorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketWaitList" scoped="" ref="0x7dac7660"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7dac7f08"/>
        <function-ref name="next" scoped="" ref="0x7dac7c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngine" ref="0x7dac89e0" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
      <component-ref qname="DsrC.SinglePacketProcessorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngine" scoped="" ref="0x7dac89e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dac8bb8"/>
        <function-ref name="receive" scoped="" ref="0x7dac8c98"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7dac8d78"/>
        <function-ref name="sendAdded" scoped="" ref="0x7dac8e58"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7dac7010"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7dac70f0"/>
        <function-ref name="packet" scoped="" ref="0x7dac71d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7dac72b0"/>
        <function-ref name="drop" scoped="" ref="0x7dac7390"/>
        <function-ref name="waitList" scoped="" ref="0x7dac7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketWaitList" ref="0x7dac1a20" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
      <component-ref qname="DsrC.DsrPacketProcessorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketWaitList" scoped="" ref="0x7dac1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7dac02e8"/>
        <function-ref name="next" scoped="" ref="0x7dac0068"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngine" ref="0x7dac2e48" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketProcessorC.nc">
      <component-ref qname="DsrC.DsrPacketProcessorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngine" scoped="" ref="0x7dac2e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dac1050"/>
        <function-ref name="receive" scoped="" ref="0x7dac1130"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7dac1210"/>
        <function-ref name="sendAdded" scoped="" ref="0x7dac12f0"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7dac13d0"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7dac14b0"/>
        <function-ref name="packet" scoped="" ref="0x7dac1590"/>
        <function-ref name="sendDone" scoped="" ref="0x7dac1670"/>
        <function-ref name="drop" scoped="" ref="0x7dac1750"/>
        <function-ref name="waitList" scoped="" ref="0x7dac1830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7dab5010" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7dab5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dab51e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7dab52c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dab53a8"/>
        <function-ref name="cancel" scoped="" ref="0x7dab5488"/>
        <function-ref name="sendDone" scoped="" ref="0x7dab5568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7dabade8" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7dabade8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7dab7010"/>
        <function-ref name="destination" scoped="" ref="0x7dab70f0"/>
        <function-ref name="setSource" scoped="" ref="0x7dab71d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7dab72b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7dab7390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7dab5970" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7dab5970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7dab5b48"/>
        <function-ref name="receive" scoped="" ref="0x7dab5c28"/>
        <function-ref name="getPayload" scoped="" ref="0x7dab5d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7dab65e0" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7dab65e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dab67b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7dab6898"/>
        <function-ref name="getPayload" scoped="" ref="0x7dab6978"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dab6a58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7dab6b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7dab7790" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dab7790"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dab7968"/>
        <function-ref name="getPayload" scoped="" ref="0x7dab7a48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dab7b28"/>
        <function-ref name="cancel" scoped="" ref="0x7dab7c08"/>
        <function-ref name="sendDone" scoped="" ref="0x7dab7ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7dab6100" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7dab6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7dab62d8"/>
        <function-ref name="receive" scoped="" ref="0x7dab63b8"/>
        <function-ref name="getPayload" scoped="" ref="0x7dab6498"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7daad8c8" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7daad8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7daadaa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7daadb80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7daadc60"/>
        <function-ref name="cancel" scoped="" ref="0x7daadd40"/>
        <function-ref name="sendDone" scoped="" ref="0x7daade20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7daaf760" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7daaf760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7daaf938"/>
        <function-ref name="destination" scoped="" ref="0x7daafa18"/>
        <function-ref name="setSource" scoped="" ref="0x7daafaf8"/>
        <function-ref name="setDestination" scoped="" ref="0x7daafbd8"/>
        <function-ref name="isForMe" scoped="" ref="0x7daafcb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7daac258" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7daac258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7daac430"/>
        <function-ref name="receive" scoped="" ref="0x7daac510"/>
        <function-ref name="getPayload" scoped="" ref="0x7daac5f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7daaef10" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7daaef10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7daad108"/>
        <function-ref name="payloadLength" scoped="" ref="0x7daad1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7daad2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7daad3a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7daad488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7daae100" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7daae100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7daae2d8"/>
        <function-ref name="getPayload" scoped="" ref="0x7daae3b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7daae498"/>
        <function-ref name="cancel" scoped="" ref="0x7daae578"/>
        <function-ref name="sendDone" scoped="" ref="0x7daae658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7daac768" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7daac768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7daac940"/>
        <function-ref name="payloadLength" scoped="" ref="0x7daaca20"/>
        <function-ref name="getPayload" scoped="" ref="0x7daacb00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7daacbe0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7daaccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7daaea30" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7daaea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7daaec08"/>
        <function-ref name="receive" scoped="" ref="0x7daaece8"/>
        <function-ref name="getPayload" scoped="" ref="0x7daaedc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7daace10" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7daace10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7daab010"/>
        <function-ref name="source" scoped="" ref="0x7daab0f0"/>
        <function-ref name="address" scoped="" ref="0x7daab1d0"/>
        <function-ref name="destination" scoped="" ref="0x7daab2b0"/>
        <function-ref name="setSource" scoped="" ref="0x7daab390"/>
        <function-ref name="setDestination" scoped="" ref="0x7daab470"/>
        <function-ref name="type" scoped="" ref="0x7daab550"/>
        <function-ref name="setType" scoped="" ref="0x7daab630"/>
        <function-ref name="isForMe" scoped="" ref="0x7daab710"/>
        <function-ref name="setGroup" scoped="" ref="0x7daab7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7daab8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7da653f0" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrSingleSenderC.nc">
      <component-ref qname="DsrC.DsrSingleSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7da653f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7da655c8"/>
        <function-ref name="destination" scoped="" ref="0x7da656a8"/>
        <function-ref name="setSource" scoped="" ref="0x7da65788"/>
        <function-ref name="setDestination" scoped="" ref="0x7da65868"/>
        <function-ref name="isForMe" scoped="" ref="0x7da65948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7da64690" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrSingleSenderC.nc">
      <component-ref qname="DsrC.DsrSingleSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7da64690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7da64868"/>
        <function-ref name="payloadLength" scoped="" ref="0x7da64948"/>
        <function-ref name="getPayload" scoped="" ref="0x7da64a28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da64b08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7da64be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7da66cb0" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrSingleSenderC.nc">
      <component-ref qname="DsrC.DsrSingleSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7da66cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7da66e88"/>
        <function-ref name="getPayload" scoped="" ref="0x7da65010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da650f0"/>
        <function-ref name="cancel" scoped="" ref="0x7da651d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7da652b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7da65a88" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/DsrSingleSenderC.nc">
      <component-ref qname="DsrC.DsrSingleSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7da65a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7da65c60"/>
        <function-ref name="source" scoped="" ref="0x7da65d40"/>
        <function-ref name="address" scoped="" ref="0x7da65e20"/>
        <function-ref name="destination" scoped="" ref="0x7da65f00"/>
        <function-ref name="setSource" scoped="" ref="0x7da64010"/>
        <function-ref name="setDestination" scoped="" ref="0x7da640f0"/>
        <function-ref name="type" scoped="" ref="0x7da641d0"/>
        <function-ref name="setType" scoped="" ref="0x7da642b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7da64390"/>
        <function-ref name="setGroup" scoped="" ref="0x7da64470"/>
        <function-ref name="localGroup" scoped="" ref="0x7da64550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d5358b8" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="DsrC.DsrSingleSenderC.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d5358b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d535a90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d535b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7d535c50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d535d30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d535e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d535220" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="DsrC.DsrSingleSenderC.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d535220"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d5353f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d5354d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d5355b8"/>
        <function-ref name="cancel" scoped="" ref="0x7d535698"/>
        <function-ref name="sendDone" scoped="" ref="0x7d535778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngineClient" ref="0x7d530930" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <component-ref qname="DsrC.DsrSingleSenderC.PacketSenderC.PacketEngineClientP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngineClient" scoped="" ref="0x7d530930"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngineClient"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7d530b08"/>
        <function-ref name="defaultLowerType" scoped="" ref="0x7d530be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7da605b8" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7da605b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7da60790"/>
        <function-ref name="payloadLength" scoped="" ref="0x7da60870"/>
        <function-ref name="getPayload" scoped="" ref="0x7da60950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da60a30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7da60b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SubPacket" ref="0x7da60c90" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7da60c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7da60e68"/>
        <function-ref name="payloadLength" scoped="" ref="0x7da5b010"/>
        <function-ref name="getPayload" scoped="" ref="0x7da5b0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da5b1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7da5b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d52b0d8" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d52b0d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d52b2b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d52b390"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d52b470"/>
        <function-ref name="cancel" scoped="" ref="0x7d52b550"/>
        <function-ref name="sendDone" scoped="" ref="0x7d52b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d52b770" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d52b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d52b948"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d52ba28"/>
        <function-ref name="getPayload" scoped="" ref="0x7d52bb08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d52bbe8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d52bcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d52be08" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d52be08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d52a010"/>
        <function-ref name="source" scoped="" ref="0x7d52a0f0"/>
        <function-ref name="address" scoped="" ref="0x7d52a1d0"/>
        <function-ref name="destination" scoped="" ref="0x7d52a2b0"/>
        <function-ref name="setSource" scoped="" ref="0x7d52a390"/>
        <function-ref name="setDestination" scoped="" ref="0x7d52a470"/>
        <function-ref name="type" scoped="" ref="0x7d52a550"/>
        <function-ref name="setType" scoped="" ref="0x7d52a630"/>
        <function-ref name="isForMe" scoped="" ref="0x7d52a710"/>
        <function-ref name="setGroup" scoped="" ref="0x7d52a7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7d52a8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7d52aa30" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7d52aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7d52ac08"/>
        <function-ref name="noAck" scoped="" ref="0x7d52ace8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7d52adc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d521608" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d521608"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d5217e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d5218c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d5219a0"/>
        <function-ref name="cancel" scoped="" ref="0x7d521a80"/>
        <function-ref name="sendDone" scoped="" ref="0x7d521b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7d521cd0" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d521cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d521ea8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d520010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d5200f0"/>
        <function-ref name="cancel" scoped="" ref="0x7d5201d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d5202b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7d5203f0" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d5203f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d5205c8"/>
        <function-ref name="source" scoped="" ref="0x7d5206a8"/>
        <function-ref name="address" scoped="" ref="0x7d520788"/>
        <function-ref name="destination" scoped="" ref="0x7d520868"/>
        <function-ref name="setSource" scoped="" ref="0x7d520948"/>
        <function-ref name="setDestination" scoped="" ref="0x7d520a28"/>
        <function-ref name="type" scoped="" ref="0x7d520b08"/>
        <function-ref name="setType" scoped="" ref="0x7d520be8"/>
        <function-ref name="isForMe" scoped="" ref="0x7d520cc8"/>
        <function-ref name="setGroup" scoped="" ref="0x7d520da8"/>
        <function-ref name="localGroup" scoped="" ref="0x7d520e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d528310" loc="39:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d528310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d5284e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d5285c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d5286a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d528788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d528868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d529dd8" loc="38:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d529dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d528010"/>
        <function-ref name="receive" scoped="" ref="0x7d5280f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d5281d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d5289a8" loc="40:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d5289a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d528b80"/>
        <function-ref name="source" scoped="" ref="0x7d528c60"/>
        <function-ref name="address" scoped="" ref="0x7d528d40"/>
        <function-ref name="destination" scoped="" ref="0x7d528e20"/>
        <function-ref name="setSource" scoped="" ref="0x7d528f00"/>
        <function-ref name="setDestination" scoped="" ref="0x7d527010"/>
        <function-ref name="type" scoped="" ref="0x7d5270f0"/>
        <function-ref name="setType" scoped="" ref="0x7d5271d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d5272b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7d527390"/>
        <function-ref name="localGroup" scoped="" ref="0x7d527470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d6b7150" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="TestDsrAppC.SendAC.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d6b7150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d6b7328"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d6b7408"/>
        <function-ref name="getPayload" scoped="" ref="0x7d6b74e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d6b75c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d6b76a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d6b9a00" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="TestDsrAppC.SendAC.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d6b9a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d6b9bd8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d6b9cb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d6b9d98"/>
        <function-ref name="cancel" scoped="" ref="0x7d6b9e78"/>
        <function-ref name="sendDone" scoped="" ref="0x7d6b7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngineClient" ref="0x7d5058d8" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <component-ref qname="TestDsrAppC.SendAC.PacketSenderC.PacketEngineClientP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngineClient" scoped="" ref="0x7d5058d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngineClient"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7d505ab0"/>
        <function-ref name="defaultLowerType" scoped="" ref="0x7d505b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7da55150" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="TestDsrAppC.SendBC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7da55150"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7da55328"/>
        <function-ref name="destination" scoped="" ref="0x7da55408"/>
        <function-ref name="setSource" scoped="" ref="0x7da554e8"/>
        <function-ref name="setDestination" scoped="" ref="0x7da555c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7da556a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7da543f0" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="TestDsrAppC.SendBC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7da543f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7da545c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7da546a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7da54788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da54868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7da54948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7da56a38" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="TestDsrAppC.SendBC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7da56a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7da56c10"/>
        <function-ref name="getPayload" scoped="" ref="0x7da56cf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da56dd0"/>
        <function-ref name="cancel" scoped="" ref="0x7da56eb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7da55010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7da557e8" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="TestDsrAppC.SendBC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7da557e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7da559c0"/>
        <function-ref name="source" scoped="" ref="0x7da55aa0"/>
        <function-ref name="address" scoped="" ref="0x7da55b80"/>
        <function-ref name="destination" scoped="" ref="0x7da55c60"/>
        <function-ref name="setSource" scoped="" ref="0x7da55d40"/>
        <function-ref name="setDestination" scoped="" ref="0x7da55e20"/>
        <function-ref name="type" scoped="" ref="0x7da55f00"/>
        <function-ref name="setType" scoped="" ref="0x7da54010"/>
        <function-ref name="isForMe" scoped="" ref="0x7da540f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7da541d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7da542b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d4fea30" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="TestDsrAppC.SendBC.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d4fea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d4fec08"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d4fece8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d4fedc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d4feea8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d4fd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d4fe398" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="TestDsrAppC.SendBC.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d4fe398"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d4fe570"/>
        <function-ref name="getPayload" scoped="" ref="0x7d4fe650"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d4fe730"/>
        <function-ref name="cancel" scoped="" ref="0x7d4fe810"/>
        <function-ref name="sendDone" scoped="" ref="0x7d4fe8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngineClient" ref="0x7d4f9a10" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <component-ref qname="TestDsrAppC.SendBC.PacketSenderC.PacketEngineClientP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngineClient" scoped="" ref="0x7d4f9a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngineClient"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7d4f9be8"/>
        <function-ref name="defaultLowerType" scoped="" ref="0x7d4f9cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7da503c0" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="TestDsrAppC.ReceiveAC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7da503c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7da50598"/>
        <function-ref name="destination" scoped="" ref="0x7da50678"/>
        <function-ref name="setSource" scoped="" ref="0x7da50758"/>
        <function-ref name="setDestination" scoped="" ref="0x7da50838"/>
        <function-ref name="isForMe" scoped="" ref="0x7da50918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7da44690" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="TestDsrAppC.ReceiveAC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7da44690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7da44868"/>
        <function-ref name="payloadLength" scoped="" ref="0x7da44948"/>
        <function-ref name="getPayload" scoped="" ref="0x7da44a28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da44b08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7da44be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7da51ec0" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="TestDsrAppC.ReceiveAC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7da51ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7da500c0"/>
        <function-ref name="receive" scoped="" ref="0x7da501a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7da50280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7da50a58" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="TestDsrAppC.ReceiveAC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7da50a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7da50c30"/>
        <function-ref name="source" scoped="" ref="0x7da50d10"/>
        <function-ref name="address" scoped="" ref="0x7da50df0"/>
        <function-ref name="destination" scoped="" ref="0x7da50ed0"/>
        <function-ref name="setSource" scoped="" ref="0x7da44010"/>
        <function-ref name="setDestination" scoped="" ref="0x7da440f0"/>
        <function-ref name="type" scoped="" ref="0x7da441d0"/>
        <function-ref name="setType" scoped="" ref="0x7da442b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7da44390"/>
        <function-ref name="setGroup" scoped="" ref="0x7da44470"/>
        <function-ref name="localGroup" scoped="" ref="0x7da44550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d4f3898" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
      <component-ref qname="TestDsrAppC.ReceiveAC.PacketReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d4f3898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d4f3a70"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d4f3b50"/>
        <function-ref name="getPayload" scoped="" ref="0x7d4f3c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d4f3d10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d4f3df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d4f33c0" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
      <component-ref qname="TestDsrAppC.ReceiveAC.PacketReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d4f33c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d4f3598"/>
        <function-ref name="receive" scoped="" ref="0x7d4f3678"/>
        <function-ref name="getPayload" scoped="" ref="0x7d4f3758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7da42230" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="TestDsrAppC.ReceiveBC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7da42230"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7da42408"/>
        <function-ref name="destination" scoped="" ref="0x7da424e8"/>
        <function-ref name="setSource" scoped="" ref="0x7da425c8"/>
        <function-ref name="setDestination" scoped="" ref="0x7da426a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7da42788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7da414d0" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="TestDsrAppC.ReceiveBC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7da414d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7da416a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7da41788"/>
        <function-ref name="getPayload" scoped="" ref="0x7da41868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da41948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7da41a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7da43d30" loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="TestDsrAppC.ReceiveBC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7da43d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7da43f08"/>
        <function-ref name="receive" scoped="" ref="0x7da42010"/>
        <function-ref name="getPayload" scoped="" ref="0x7da420f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7da428c8" loc="45:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="TestDsrAppC.ReceiveBC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7da428c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7da42aa0"/>
        <function-ref name="source" scoped="" ref="0x7da42b80"/>
        <function-ref name="address" scoped="" ref="0x7da42c60"/>
        <function-ref name="destination" scoped="" ref="0x7da42d40"/>
        <function-ref name="setSource" scoped="" ref="0x7da42e20"/>
        <function-ref name="setDestination" scoped="" ref="0x7da42f00"/>
        <function-ref name="type" scoped="" ref="0x7da41010"/>
        <function-ref name="setType" scoped="" ref="0x7da410f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7da411d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7da412b0"/>
        <function-ref name="localGroup" scoped="" ref="0x7da41390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d4df150" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
      <component-ref qname="TestDsrAppC.ReceiveBC.PacketReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d4df150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d4df328"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d4df408"/>
        <function-ref name="getPayload" scoped="" ref="0x7d4df4e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d4df5c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d4df6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d4e2bd0" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketReceiverC.nc">
      <component-ref qname="TestDsrAppC.ReceiveBC.PacketReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d4e2bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7d4e2da8"/>
        <function-ref name="receive" scoped="" ref="0x7d4e2e88"/>
        <function-ref name="getPayload" scoped="" ref="0x7d4df010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7da409e0" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="TestDsrAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7da409e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7da39330"/>
        <function-ref name="fired" scoped="" ref="0x7da3b728"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7da3bcc8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7da3bae8"/>
        <function-ref name="getdt" scoped="" ref="0x7da396f0"/>
        <function-ref name="gett0" scoped="" ref="0x7da39510"/>
        <function-ref name="isRunning" scoped="" ref="0x7da3b908"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7da3b048"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7da39010"/>
        <function-ref name="startOneShot" scoped="" ref="0x7da3b2c8"/>
        <function-ref name="stop" scoped="" ref="0x7da3b548"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7ef90ed8" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10;</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7ef927b8" loc="49:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7ef637c8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7ef63570" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7ef70238" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.&#10;</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7ef70808" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10;</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7ef70590" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7ef70de0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10;</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7ef70b60" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7ef63208" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10;</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10;</short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7ef21ce0" loc="33:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7ef13010" loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7ef216b0" loc="31:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7ef13648" loc="36:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7ef219c8" loc="32:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7ef13328" loc="35:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7ef21090" loc="29:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clr" ref="0x7ef213a0" loc="30:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.&#10;&#10;</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f2322f0" loc="46:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f232ad8" loc="61:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f232708" loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10;</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f212638" loc="56:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f212a40" loc="64:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f052010" loc="59:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep. </short>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7efe3cc0" loc="54:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f160920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7eff2bc0" loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7eb55ef0" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7eb55ef0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7eb42e70" loc="125:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7eb431f0" loc="72:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7eb422c8" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7eb43c78" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7eb43e08" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7eb43950" loc="87:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.&#10;</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7eb406a0" loc="140:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7eb402c8" loc="133:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7eb435c0" loc="81:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7eb445c0" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7eb44318" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7eb42b18" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7eb425f0" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7eb42780" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7eb44b90" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7eb448e8" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7eb44e98" loc="67:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7ebf41d0" loc="92:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10;</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7ec00f08" loc="92:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7ebf4d30" loc="117:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.&#10;&#10;</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7ebf4ae0" loc="117:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7ec00be8" loc="83:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents. </short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ebf47c0" loc="109:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents. </short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7eb54880" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet. </short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  msg    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb54630" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7eb54ef0" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  msg    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb54bd0" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7eb51568" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet. </short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.  If&#10; len is not NULL, getPayload will return the length of the payload&#10; in it, which is the same as the return value from&#10; payloadLength(). If a protocol does not support variable length&#10; packets, then *len is equal to maxPayloadLength().&#10;&#10; @param msg   the packet&#10; @param len   pointer to where the current payload length should be stored.&#10; @return      a pointer to the packet's data payload for this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb51010" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eb511b8" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7eb53c68" loc="95:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7eb53790" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param msg   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb53260" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eb533e8" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7ebf15a8" loc="74:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ebf1a20" loc="84:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7eb90ab8" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7eb90208" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7eb903b8" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eb90540" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7eb83560" loc="125:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; The length of this region is maxPayloadLength(). This command&#10; behaves similarly to &#60;tt>Packet.getPayload&#60;/tt> (minus the&#10; length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb83248" loc="125:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7eb85ee8" loc="112:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7eb852b0" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb90e00" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7eb85a98" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb855f8" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7eb85780" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="payloadLength" ref="0x7eb74290" loc="89:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This call is identical&#10; to &#60;TT>Packet.payloadLength&#60;/TT>, and is included in Receive as a&#10; convenience.&#10;&#10; @param  msg      the packet&#10; @return          the length of the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb74010" loc="89:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x7eb75410" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  msg      the receied packet&#10; @param  payload  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return          a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
              <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb80ad8" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7eb80c78" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eb80e00" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7eb75c58" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Return point to a protocol's payload region in a packet. </short>
          <long>&#10; Return point to a protocol's payload region in a packet.  If len&#10; is not NULL, getPayload will return the length of the payload in&#10; it. This call is identical to &#60;TT>Packet.getPayload&#60;/TT>, and is&#10; included in Receive as a convenience.&#10;&#10; @param  msg      the packet&#10; @param  len      a pointer to where to store the payload length&#10; @return          a pointer to the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb75758" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eb75900" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7eb63ac0" loc="166:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param amsg the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7eba3580"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb63778" loc="166:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7eb71cf8" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb71a78" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7eb71140" loc="57:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.&#10;</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="destination" ref="0x7eb71728" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb71498" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7eb65ee8" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet. </short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb658f8" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7eb65a88" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7eb655b0" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet. </short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb65068" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7eb651f8" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7eb64bc0" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.&#10;</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb64978" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7eb63428" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet. </short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  amsg    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb64f00" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7eb630b0" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7eb64630" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb64248" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7eb612a8" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param amsg the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7eba3580"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb63e08" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7eb61010" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7eba3580"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7eb61658" loc="184:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.&#10;&#10;</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7eba3580"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="PacketEngineClient" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClient.nc">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClient.nc">
        <short>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperType" ref="0x7eac1788" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClient.nc">
        <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClient.nc">
          <short>&#10;&#10; Returns the upper AM type used by this client above the the packet&#10;&#10; engine layer.&#10;&#10;</short>
          <long>&#10;&#10; Returns the upper AM type used by this client above the the packet&#10;&#10; engine layer.&#10;&#10; @return The upper AM type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngineClient"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="defaultLowerType" ref="0x7eac1dc0" loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClient.nc">
        <documentation loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngineClient.nc">
          <short>&#10;&#10; Returns the default lower AM type packets sent by this client should&#10;&#10; initially be set to.&#10;&#10;</short>
          <long>&#10;&#10; Returns the default lower AM type packets sent by this client should&#10;&#10; initially be set to.&#10;&#10; @return The default lower AM type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngineClient"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba33b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
      <documentation loc="15:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x7eaf43f0" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10;</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param msg The complete message received.&#10;&#10; @param payload The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eaf5d30" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7eaf5ed0" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eaf4088" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketEngine" loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
      <documentation loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <short>&#10;&#10; Allow a data control component to manage its packets in the data&#10;&#10; engine. </short>
        <long>&#10;&#10; Allow a data control component to manage its packets in the data&#10;&#10; engine.  Packet IDs are passed to the control component to simplify&#10;&#10; management of any additional data structures for each packet in the&#10;&#10; buffer.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7eae4c78" loc="96:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="87:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Marks this packet as next in line to be sent. </short>
          <long>&#10;&#10; Marks this packet as next in line to be sent.  The packet must be one&#10;&#10; that was signaled via the added event and cannot be the ID of any&#10;&#10; arbitrary packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @return SUCCESS if the action takes place, FAIL if not, EINVAL if the&#10;&#10;         packet is not found in the buffer or is not a waiting packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7eae4980" loc="96:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7eae2a78" loc="133:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="124:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Marks this packet as next in line to be received. </short>
          <long>&#10;&#10; Marks this packet as next in line to be received.  The packet must be&#10;&#10; one that was signaled via the added event and cannot be the ID of any&#10;&#10; arbitrary packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @return SUCCESS if the action takes place, FAIL if not, EINVAL if the&#10;&#10;         packet is not found in the buffer or is not a waiting packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7eae2780" loc="133:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendIntercept" ref="0x7eae2230" loc="122:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="113:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Marks this packet as next in line to be sent, but allows the upper layer&#10;&#10; to intercept the packet first. </short>
          <long>&#10;&#10; Marks this packet as next in line to be sent, but allows the upper layer&#10;&#10; to intercept the packet first.  The packet must be one that was signaled&#10;&#10; via the added event and cannot be the ID of any arbitrary packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @return SUCCESS if the action takes place, FAIL if not, EINVAL if the&#10;&#10;         packet is not found in the buffer or is not a waiting packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7eae3e70" loc="122:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendAdded" ref="0x7eaf0748" loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; A packet to be sent was added to the packet engine by an upper layer.&#10;&#10;</short>
          <long>&#10;&#10; A packet to be sent was added to the packet engine by an upper layer.&#10;&#10; Unlike the Receive interface, this event does not allow swapping packet&#10;&#10; buffers because ownership of the packet does not leave the packet&#10;&#10; engine.&#10;&#10;&#10;&#10; @param pid Packet ID within the packet engine.&#10;&#10; @param msg Pointer to the packet that was added.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7eaf0288" loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7eaf0438" loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveAdded" ref="0x7eae51d0" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; A received packet was added to the packet engine from a lower layer.&#10;&#10;</short>
          <long>&#10;&#10; A received packet was added to the packet engine from a lower layer.&#10;&#10; Unlike the Receive interface, this event does not allow swapping packet&#10;&#10; buffers because ownership of the packet does not leave the packet&#10;&#10; engine.&#10;&#10;&#10;&#10; @param pid Packet ID within the packet engine.&#10;&#10; @param msg Pointer to the packet that was added.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7eaf0c98" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7eaf0e48" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="snoopAdded" ref="0x7eae5c38" loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="68:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; An overheard packet (this node is not the intended destination) was&#10;&#10; added to the packet engine from a lower layer. </short>
          <long>&#10;&#10; An overheard packet (this node is not the intended destination) was&#10;&#10; added to the packet engine from a lower layer.  Unlike the Receive&#10;&#10; interface, this event does not allow swapping packet buffers because&#10;&#10; ownership of the packet does not leave the packet engine.&#10;&#10;&#10;&#10; @param pid Packet ID within the packet engine.&#10;&#10; @param msg Pointer to the packet that was added.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7eae5720" loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7eae58d0" loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="packet" ref="0x7eae4430" loc="85:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Gets the packet associated with a given ID in the packet engine.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Gets the packet associated with a given ID in the packet engine.&#10;&#10;&#10;&#10; @param pid ID of packet to access.&#10;&#10; @return Pointer to the packet, NULL if the ID is not in use or too large.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
              <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7eae41a0" loc="85:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7eae3918" loc="111:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="98:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Signals the completion of a send event to the lower layer. </short>
          <long>&#10;&#10; Signals the completion of a send event to the lower layer.  If control&#10;&#10; would like to resend the packet for any reason, it should return FAIL&#10;&#10; from this event and SUCCESS otherwise.&#10;&#10;&#10;&#10; @param pid Packet ID within the packet engine.&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @param result SUCCESS if it was transmitted successfully, FAIL if&#10;&#10;               it was not, ECANCEL if it was cancelled by the upper&#10;&#10;               layer.&#10;&#10; @return If control would like to resend the packet for any reason, it&#10;&#10;         should return FAIL from this event and SUCCESS otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7eae31e8" loc="111:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7eae3398" loc="111:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="result" ref="0x7eae3520" loc="111:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drop" ref="0x7eae0308" loc="144:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="135:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Drops the packet from the buffer immediately. </short>
          <long>&#10;&#10; Drops the packet from the buffer immediately.  The packet must be one&#10;&#10; that was signaled via the added event and cannot be the ID of any&#10;&#10; arbitrary packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @return SUCCESS if the action takes place, FAIL if not, EINVAL if the&#10;&#10;         packet is not found in the buffer or is not a waiting packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7eae0010" loc="144:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="waitList" ref="0x7eae0a98" loc="157:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="146:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Access a list of all packets still waiting for a control descision. </short>
          <long>&#10;&#10; Access a list of all packets still waiting for a control descision.  For&#10;&#10; example, if a routing path is found to destination B, this could be used&#10;&#10; to check if any other packets were also waiting for that same path since&#10;&#10; they can now be sent.  This command gives the index of the first packet&#10;&#10; in a list of waiting packets.  Traverse the rest of the list with the&#10;&#10; PacketWaitList interface provided by the engine.&#10;&#10;&#10;&#10; @return The ID for the first waiting packet, bufferSize if there aren't&#10;&#10;         any waiting packets.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eb11120"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="IndexedIterator" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/IndexedIterator.nc">
      <parameters>
        <typedef name="iterator_item_t" ref="0x7ead1600" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/IndexedIterator.nc">
          <interfacedef-ref qname="IndexedIterator"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7ead1600"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="end" ref="0x7ead05b0" loc="56:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/IndexedIterator.nc">
        <documentation loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/IndexedIterator.nc">
          <short>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10; @param m Current item's index.&#10;&#10; @return TRUE if the current item is the end, FALSE otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="iterator_end_t" ref="0x7ead3470"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7ead1600"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7ead0370" loc="56:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/IndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7ead1600"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="next" ref="0x7ead1e18" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/IndexedIterator.nc">
        <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/IndexedIterator.nc">
          <short>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10; @param m Current item's index.&#10;&#10; @return The next item's index.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7ead1600"/></type-var>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7ead1600"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7ead1c18" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/IndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7ead1600"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
      <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.&#10; </short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7ea955a0" loc="50:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7ea955a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7ea94be8" loc="96:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.&#10;&#10;</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7ea955a0"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7ea942c0" loc="80:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10;</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="empty" ref="0x7ea95aa8" loc="61:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.&#10;</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="put" ref="0x7ea94838" loc="88:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.&#10;&#10;</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7ea955a0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7ea94600" loc="88:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7ea955a0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7ea95ee8" loc="72:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.x/tos/interfaces/State.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10;</short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7ea84278" loc="71:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7ea866e0" loc="56:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isState" ref="0x7ea86f28" loc="66:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7ea86d78" loc="66:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7ea86a38" loc="61:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7ea96e60" loc="45:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10;</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7ea96c20" loc="45:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7ea863a8" loc="51:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7ea861d8" loc="51:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10;</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7ea82da0" loc="41:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7ea829e8" loc="35:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7e8f1f00" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7e8f1f00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7e8e5618" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7e8f1f00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7e8e5318" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7e8f1f00"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e8a3a70" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e8a3a70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7e8a2010" loc="50:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10;</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e883010" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e883010"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7e883128" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e883128"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7e8835f8" loc="53:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e883128"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7e883d58" loc="65:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7e883a18" loc="60:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits. </short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7e882148" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed. </short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10;</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e892e90" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e892e90"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7e891010" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e891010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7e890de8" loc="98:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e891010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7e891dc0" loc="67:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7e890a70" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e891010"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e891010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7e890548" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e891010"/></type-var>
          </variable>
          <variable name="dt" ref="0x7e8906d8" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e891010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7e890208" loc="77:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7e888250" loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10;</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e891010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="start" ref="0x7e8916d0" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e891010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7e891438" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e891010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e891a88" loc="62:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x7e8503e0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f100140"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f100390"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7e8484d0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0e1208"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0e1458"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7e850bf0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f1e38"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0e20e0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7e848178" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f1e38"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0e20e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7e848010" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f1e38"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0e20e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7e848988" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0e1208"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0e1458"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7e848820" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0e1208"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0e1458"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7e850898" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f100140"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f100390"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e850730" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f100140"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f100390"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="15:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x7e8361d0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x7e8365c8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x7e837dc0" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7e8369c8" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7e837548" loc="21:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10;</short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f2ad0"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x7f0f2d20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7e837a78" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10;</short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f2ad0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f0f2d20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7e837888" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f2ad0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f0f2d20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7e844010" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e844010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7e843a20" loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10;</short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7e844cd8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e844488" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.&#10;</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e844010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x7e843028" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7e843da8" loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10;</short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e8449a8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.&#10;</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e844010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e8447c8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e844010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e843358" loc="56:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e843688" loc="59:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.  &#10;</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7e860738" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e860738"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7e856810" loc="89:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="test" ref="0x7e856158" loc="78:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10;</short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e860b98" loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.&#10;</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e860738"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7e856d28" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.&#10;</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7e856b50" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7e8550d8" loc="101:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.&#10;</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x7e858740" loc="66:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7e858408" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7e8564e8" loc="84:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10;</short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e8580c0" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.&#10;</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e860738"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e860ed8" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e860738"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e858a78" loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e858da8" loc="72:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10;</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7e6f9f28" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param msg - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6f9b80" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7e6f85d0" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param msg - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6f82a0" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7e6f8c60" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10;</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param msg - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6f8940" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10;</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10;&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7e6e04d8" loc="95:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10;</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6e0278" loc="95:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7e6e1938" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10;</short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6e16f8" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7e6e3e10" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10;</short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7e6e3be0" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7e6e3888" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10;</short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7e6e3660" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7e6e1388" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet. </short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7e6e1168" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7e6e1ef8" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10;</short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6e1cb0" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7e6e7a30" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e6e7678" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7e6e7800" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7e6e6018" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7feb0a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e6e7d98" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7e6e7310" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.&#10;&#10;</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e6e7120" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7e6e65f0" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e6e6380" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10;</short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getLocalSleepInterval" ref="0x7e6d8918" loc="58:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return the local node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getRxDutyCycle" ref="0x7e6d5de0" loc="112:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="108:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return the destination node's duty cycle configured in this message&#10;     in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6d5c00" loc="112:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleepIntervalToDutyCycle" ref="0x7e6d4a20" loc="128:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10;</short>
          <long>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; @param sleepInterval The sleep interval in units of [ms]&#10; @return The duty cycle in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepInterval" ref="0x7e6d4788" loc="128:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalDutyCycle" ref="0x7e6d6378" loc="81:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return this node's radio duty cycle rate, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setRxSleepInterval" ref="0x7e6d6b38" loc="90:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10;</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10; @param msg Pointer to the message that will be sent&#10; @param sleepInterval The receiving node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6d66c8" loc="90:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="sleepIntervalMs" ref="0x7e6d6860" loc="90:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalDutyCycle" ref="0x7e6d6010" loc="76:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10;</short>
          <long>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10; For example, to get a 0.05% duty cycle,&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(5);&#10; &#60;/code>&#10;&#10; For a 100% duty cycle (always on),&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(10000);&#10; &#60;/code>&#10;&#10; This is the equivalent of setting the local sleep interval explicitly.&#10; &#10; @param dutyCycle The duty cycle percentage, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x7e6d8c50" loc="76:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxDutyCycle" ref="0x7e6d58a8" loc="106:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10;</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10; Duty cycle is in units of [percentage*100], i.e. 0.25% duty cycle = 25.&#10; &#10; @param msg Pointer to the message that will be sent&#10; @param dutyCycle The duty cycle of the receiving mote, in units of &#10;     [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6d53d0" loc="106:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dutyCycle" ref="0x7e6d5568" loc="106:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dutyCycleToSleepInterval" ref="0x7e6d4438" loc="120:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="114:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10;</short>
          <long>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; @param dutyCycle The duty cycle in units of [percentage*100]&#10; @return The equivalent sleep interval, in units of [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x7e6d4178" loc="120:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxSleepInterval" ref="0x7e6d5088" loc="95:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return the destination node's sleep interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6d6e98" loc="95:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalSleepInterval" ref="0x7e6d85c8" loc="53:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio sleep interval, in milliseconds.&#10;</short>
          <long>&#10; Set this this node's radio sleep interval, in milliseconds.&#10; Once every interval, the node will sleep and perform an Rx check &#10; on the radio.  Setting the sleep interval to 0 will keep the radio&#10; always on.&#10;&#10; This is the equivalent of setting the local duty cycle rate.&#10;&#10; @param sleepIntervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x7e6d82c0" loc="53:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <short>&#10;</short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7e6caa30" loc="63:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10;</short>
          <long>&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6ca878" loc="63:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7e6d08f0" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10;</short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param msg&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6d04f0" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7e6d0688" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7e6ca520" loc="58:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short> &#10;</short>
          <long> &#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6ca368" loc="58:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7e6ca010" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10;</short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6d0c38" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7e6d0dd0" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7e6caf20" loc="68:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6cad80" loc="68:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7e6b93d8" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   msg     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6bacb8" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e6bae40" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7e6b8df0" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; The length of this region is maxPayloadLength(). This command&#10; behaves similarly to &#60;tt>Packet.getPayload&#60;/tt> (minus the&#10; length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param   msg    the packet&#10; @return         a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6b8ad0" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7e6b8788" loc="101:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e6b9aa8" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   msg    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6b9720" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e6b8338" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param msg   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6b9df0" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7e6b8010" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7e6a8ae0" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10;</short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7e6a86a8" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7e6a8838" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7e6a8380" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7e6a8010" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @param on TRUE to turn address recognition on, FALSE to turn it off&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7e6a9d90" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7e6b02d0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7e6b0168" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7e6a9288" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7e6a9120" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7e6b0a90" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7e6b0928" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7e6a71f8" loc="101:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7e6a9a68" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7e6a9900" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7e6a8e78" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7e6b0de8" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sync" ref="0x7e6b4e18" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7e6b0608" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7e6a95d8" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.&#10;</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeader" ref="0x7e6b32f0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10;</short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:11" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7ebe48c0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7ebe32a8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6b3120" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7e6b3848" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10;</short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:9" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7ebe3788"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7ebe1160"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e6b3670" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="36:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7e6a47a0" loc="48:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10;</short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="changed" ref="0x7e6a4e48" loc="58:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.&#10;</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7e6a4af8" loc="53:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10;</short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7eba3580"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7e6a4438" loc="43:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10;</short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7eba3580"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7e6a4088" loc="43:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7eba3580"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7e6a4218" loc="43:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7e642010" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10;</short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e643bd8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7e643d60" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e642930" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.&#10;&#10;</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="modify" ref="0x7e6419a0" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e6413a0" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7e641548" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e6416d0" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e641060" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10;</short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e642c98" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7e642e20" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7e642588" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10;</short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7e642350" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7e648af0" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7e646908" loc="97:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.&#10;&#10;</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7e646588" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.&#10;&#10;</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7e648010" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7e6486f8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.&#10;&#10;</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7e648e48" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7e646208" loc="83:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.&#10;&#10;</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7e648360" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <short>&#10; Constants for manipulating LEDs.&#10;&#10;</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7e6365f0" loc="50:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7e6369c8" loc="56:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7e636d38" loc="61:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7e635498" loc="72:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7e633010" loc="89:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e633558" loc="106:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7e6350c0" loc="66:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e633c30" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask. </short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7e633890" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7e636280" loc="45:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7e635808" loc="78:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7e635b78" loc="83:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7e64b330" loc="110:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.  &#10;&#10;</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request 	  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7e650898" loc="87:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="request" ref="0x7e650468" loc="78:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0x7e650bb8" loc="92:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7e64b738" loc="118:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7e5f08b0" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e5f08b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7e5f0d10" loc="55:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.&#10; &#10;</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7e5eb418" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().&#10;&#10;</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e5f08b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e5eb068" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7e5eb1f0" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e5f08b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7e5d00e8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.&#10;&#10;</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe4730"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e5d1eb0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e5d0650" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.&#10; &#10;</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe4730"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e5d0438" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.&#10;</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7e5c8bc8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe4730"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7e5d4a68" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe4730"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e5d44a0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7e5d4648" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e5d47d0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e5d3430" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe4730"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e5d4db0" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7e5d3010" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e5d3198" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7e5d83b8" loc="57:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7e5d8010" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10;</short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7e5d9b88" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7e5d9860" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7e551ee0" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0823a8"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f0825f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x7e552ea8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b1640"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1890"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e552d40" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b1640"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1890"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7e5516d0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0901a8"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0903f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x7e553ea8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c2708"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c2958"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7e551b88" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0901a8"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0903f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7e551a20" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0901a8"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0903f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7e54c3b8" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0823a8"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f0825f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7e54c250" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0823a8"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f0825f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x7e552528" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0700"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0950"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x7e5521f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b1640"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1890"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x7e5529e8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c2708"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c2958"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e552880" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c2708"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c2958"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x7e551378" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0700"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0950"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e551210" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0700"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0950"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7e555ce0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e555ce0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7e5471f8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.&#10;</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7e547010" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7e548908" loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10;</short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e549168" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.&#10;</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e555ce0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x7e549bb8" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.&#10;</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e555ce0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e5499d8" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e555ce0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7e549ef0" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7e548c90" loc="73:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10;</short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e549690" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.&#10;</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e555ce0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e5494a8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e555ce0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e548240" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e548570" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7e3aea38" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7e3ad340" loc="55:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.&#10;</short>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x7e3ad010" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7e3aed80" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7e3ae710" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.&#10;&#10;</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7e396010" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7e396ce0" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7e397c88" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="edge" ref="0x7e3969a0" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.&#10;</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7e396728" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7e397938" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7e3963e8" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10;</short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7e381a98" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="17:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip. </short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7e342ef0" loc="24:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released. </short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7e33f2b0" loc="31:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus. </short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7e33f6d8" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10;</short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7e335198" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e336d30" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e336eb8" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7e333b90" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e333610" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e333798" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7e333920" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e3332b0" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe4730"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e335dd0" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e333010" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7e3369c8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe4730"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e336598" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e336720" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7e335a68" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e3354f8" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e335680" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7e335808" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus. </short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7e31dcb8" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.&#10;&#10;</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param txBuf A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param rxBuf A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7e31d598" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7e31d740" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e31d8d0" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e31c830" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.&#10;&#10;</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param txBuf The buffer used for transmission&#10; @param rxBuf The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7e31c030" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7e31c1d8" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e31c368" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7e31c500" loc="72:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7e324ec0" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10;</short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7e324c88" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7e2c5360" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7e2c1cf8" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7e2c3498" loc="100:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7e2c01d0" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7e2c0068" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7e2c5010" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7e2c1178" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7e2c1010" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7e2c4920" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7e2c47b8" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7e2c5a10" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10;</short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7e2afb10" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7e2af9a8" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7e2c4c48" loc="97:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7e2c0998" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7e2c0830" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7e2af010" loc="120:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7e2c19d0" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7e2c1868" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7e2af660" loc="124:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7e2c3948" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7e2c37e0" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e2c5f18" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10;</short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e2c5d48" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7e2c3178" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7e2c3010" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7e2c1518" loc="106:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7e2c04f0" loc="112:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7e2c0cb8" loc="115:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7e2af338" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7e2c3c68" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7e2c56a0" loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7e2c4478" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete. &#10;</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e2c4270" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7e2aa010" loc="80:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.&#10;&#10;</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="userId" ref="0x7e2aa410" loc="88:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.&#10; &#10;</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7e250898" loc="74:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e250d30" loc="84:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10;</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7e204d98" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7e203288" loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7e1f13f0" loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.&#10;</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="configure" ref="0x7e1f1018" loc="49:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.&#10;</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7e1e9c30" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10;</short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7e201ed8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7e1e99f8" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7e201ed8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7e1eac40" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.&#10;&#10;</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7e1e9298" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10;</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7e201ed8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7e1e9010" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7e201ed8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7e1e96a8" loc="60:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue. &#10;</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7e201ed8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10;</short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7e103bb0" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="RadioTimeStamping" loc="33:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <short>&#10; Interface for receiving time stamp information from the radio.&#10;</short>
        <long>&#10; Interface for receiving time stamp information from the radio.&#10; This information is also embedded in packet metadata.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   October 10 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="transmittedSFD" ref="0x7e1020b0" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter has been&#10; transmitted: units are in terms of a 32kHz clock.&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7e105d00" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
          <variable name="p_msg" ref="0x7e105eb0" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedSFD" ref="0x7e102768" loc="50:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock. </short>
          <long> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock.  &#60;b>NOTE&#60;/b> that receiving&#10; a receivedSFD() event does NOT mean that a packet will be&#10; received; the transmission may stop, become corrupted, or be&#10; filtered by the physical or link layers.  The number of rxSFD&#10; events will always be great than or equal to the number of&#10; Receive message events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7e1023f8" loc="50:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7e0c2ae0" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.&#10;&#10;</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7e0c2708" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7e0c28b8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7e0c23d0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7e0c2010" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.&#10;&#10;</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7e0c6de8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SinglePacket" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
        <short>&#10;&#10; Access and set the properties of a multihop packet with a single&#10;&#10; node address based destination.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access and set the properties of a multihop packet with a single&#10;&#10; node address based destination.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="source" ref="0x7deee850" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; Returns the address of the source of the multihop packet.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns the address of the source of the multihop packet.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @return The source node of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7deee608" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7deedb10" loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="61:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; Returns the address of the destination of the multihop packet.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns the address of the destination of the multihop packet.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @return The destination node of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7deed8b8" loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7deed340" loc="59:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; Sets the address of the source of the multihop packet. </short>
          <long>&#10;&#10; Sets the address of the source of the multihop packet.  As with&#10;&#10; the AM layer, this is set by the multihop layer, and should not&#10;&#10; need to be used when sending a packet.  However, buffers or other&#10;&#10; storage components may wish to use it to store the address for&#10;&#10; later retrieval.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @param src The source node of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7deeedb8" loc="59:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="src" ref="0x7deed010" loc="59:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7deeb570" loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="69:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; Sets the address of the destination of the multihop packet. </short>
          <long>&#10;&#10; Sets the address of the destination of the multihop packet.  As&#10;&#10; with the AM layer, this is set by the multihop layer, and should not&#10;&#10; need to be used when sending a packet.  However, buffers or other&#10;&#10; storage components may wish to use it to store the address for&#10;&#10; later retrieval.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @param dest The destination node of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7deeb0a8" loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dest" ref="0x7deeb238" loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba3758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7deebe18" loc="89:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="81:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; As with the AM layer, returns whether this node is the destination&#10;&#10; for the packet, but can also include special processing for broadcast&#10;&#10; addresses or similar values.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; As with the AM layer, returns whether this node is the destination&#10;&#10; for the packet, but can also include special processing for broadcast&#10;&#10; addresses or similar values.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @return Whether this node is the destination of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7deebad8" loc="89:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb93ea0"/>
                <typename><typedef-ref name="message_t" ref="0x7eb91860"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DataCache" loc="31:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
      <documentation loc="31:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
        <short>&#10; A data cache. </short>
        <long>&#10; A data cache.  While this is quite similar to the Cache interface, here a&#10; pointer to the element in the cache matching the given input item is&#10; returned.&#10;&#10; @author Ryan Stinnett&#10;</long>
      </documentation>
      <parameters>
        <typedef name="item_t" ref="0x7de72ef8" loc="31:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
          <interfacedef-ref qname="DataCache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7de72ef8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="remove" ref="0x7de68160" loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
        <documentation loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
          <short>&#10; Removes an item from the cache.&#10;&#10;</short>
          <long>&#10; Removes an item from the cache.&#10;&#10; @param item Pointer to the data item to remove from the cache.&#10; @return SUCCESS if found and removed, EINVAL if not found.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7de72ef8"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7de6af18" loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7de72ef8"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insert" ref="0x7de6a5c0" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
        <documentation loc="33:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary. </short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.  An atomic lookup&#10; after insert should return true.&#10;&#10; @param item Pointer to the data item to insert into the cache.&#10; @return A pointer to the item in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7de72ef8"/></type-var>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7de72ef8"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7de6a320" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7de72ef8"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7de68478" loc="62:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
        <documentation loc="59:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
          <short>&#10; Flush the cache of all entries.&#10;</short>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="lookup" ref="0x7de6abd8" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
        <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
          <short>&#10; Returns a pointer to the item in the cache by matching various keys or&#10; NULL if it was not found.&#10;&#10;</short>
          <long>&#10; Returns a pointer to the item in the cache by matching various keys or&#10; NULL if it was not found.&#10;&#10; @param item Pointer to the data item to find in the cache.&#10; @return A pointer to the item in the cache, or NULL if not found.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7de72ef8"/></type-var>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7de72ef8"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7de6a900" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/cache/DataCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7de72ef8"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DataTimer" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
      <parameters>
        <typedef name="data_t" ref="0x7de62230" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
          <interfacedef-ref qname="DataTimer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7de62230"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="expired" ref="0x7de61b80" loc="68:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
        <documentation loc="63:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
          <short>&#10;&#10; The timer for a given data item has expired.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The timer for a given data item has expired.&#10;&#10;&#10;&#10; @param data The data item which expired.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7de62230"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7de61980" loc="68:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7de62230"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7de62c98" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
        <documentation loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
          <short>&#10;&#10; Starts the non-periodic timer for a given data item. </short>
          <long>&#10;&#10; Starts the non-periodic timer for a given data item.  If the same&#10;&#10; item is started multiple times, it will be tracked multiple times.&#10;&#10;&#10;&#10; @param data The data item to start timing.&#10;&#10; @param delay Time units before the data expires.&#10;&#10; @return SUCCESS, or FAIL if already full.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7de62230"/></type-var>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="data_timer_time_t" ref="0x7de63dc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7de62830" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7de62230"/></type-var>
          </variable>
          <variable name="delay" ref="0x7de629c8" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="data_timer_time_t" ref="0x7de63dc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7de61460" loc="61:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
        <documentation loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
          <short>&#10;&#10; Stops the timer for a given data item. </short>
          <long>&#10;&#10; Stops the timer for a given data item.  If the item was started&#10;&#10; multiple times, this removes the instance that was closest to&#10;&#10; expiring.&#10;&#10;&#10;&#10; @param data The data item to stop timing.&#10;&#10; @return SUCCESS, or EINVAL if the item was not found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7de62230"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7de611d0" loc="61:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/timer/DataTimer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7de62230"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Equal" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Equal.nc">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Equal.nc">
        <short>&#10;&#10; Generalized equality interface between two items. </short>
        <long>&#10;&#10; Generalized equality interface between two items.  Many uses are possible&#10;&#10; here, since the inputs could be array indices, as just one example.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="equal_t" ref="0x7deaa9e8" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Equal.nc">
          <interfacedef-ref qname="Equal"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7deaa9e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7dea93e0" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Equal.nc">
        <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Equal.nc">
          <short>&#10;&#10; Checks whether two items are equal.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks whether two items are equal.&#10;&#10;&#10;&#10; @param a First item to test.&#10;&#10; @param b Second item to test.&#10;&#10; @return TRUE if they are equal, FALSE if they are not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Equal"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7deaa9e8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7deaa9e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x7dea9010" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Equal.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7deaa9e8"/></type-var>
          </variable>
          <variable name="b" ref="0x7dea9198" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Equal.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7deaa9e8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StaticIndexedIterator" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
      <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
        <short>&#10;&#10; Iteration operations using indices. </short>
        <long>&#10;&#10; Iteration operations using indices.  This interface is the static or&#10;&#10; stateless version which requires a pointer to the structure containing&#10;&#10; the data to be passed in along with the index.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="iterator_item_t" ref="0x7de86010" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
          <interfacedef-ref qname="StaticIndexedIterator"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7de86010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="end" ref="0x7de84408" loc="60:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
        <documentation loc="53:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
          <short>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10; @param d Pointer to the data source.&#10;&#10; @param m Current item's index.&#10;&#10; @return TRUE if the current item is the end, FALSE otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="iterator_end_t" ref="0x7ead3470"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7de86010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="d" ref="0x7de84010" loc="60:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="m" ref="0x7de841a0" loc="60:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7de86010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="next" ref="0x7de86a10" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
        <documentation loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
          <short>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10; @param d Pointer to the data source.&#10;&#10; @param m Current item's index.&#10;&#10; @return The next item's index.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7de86010"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7de86010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="d" ref="0x7de86650" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="m" ref="0x7de867e0" loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/StaticIndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7de86010"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tlv" loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
      <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
        <short>&#10;&#10; Access data stored in a generalized Type-Length-Value (TLV) block.&#10;&#10;</short>
        <long>&#10;&#10; Access data stored in a generalized Type-Length-Value (TLV) block.&#10;&#10; This interface allows at most one instance of a type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="value" ref="0x7de93618" loc="75:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
        <documentation loc="68:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
          <short>&#10;&#10; Returns the value in this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the value in this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then NULL is returned.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @return Pointer to the value in this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tlv"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7de93358" loc="75:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x7de92c90" loc="102:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
        <documentation loc="94:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
          <short>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param maxLen Maximum length that the TLV block can occupy.&#10;&#10; @return SUCCESS if the type instance was found and removed, EINVAL&#10;&#10;         otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tlv"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7de92868" loc="102:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="maxLen" ref="0x7de929f0" loc="102:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="length" ref="0x7de95158" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
        <documentation loc="43:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
          <short>&#10;&#10; Returns the length of this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the length of this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then 0 is returned.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @return Length of this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tlv"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7dea0e58" loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x7de95df0" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
        <documentation loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
          <short>&#10;&#10; Sets the length of a type instance within the TLV block. </short>
          <long>&#10;&#10; Sets the length of a type instance within the TLV block.  This&#10;&#10; operation moves data around and should always be performed before&#10;&#10; storing a value with a different length than the one currently&#10;&#10; stored.  If the type instance is not found in the block or there&#10;&#10; is not enough room for the new length, returns ESIZE.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @param maxLen Maximum length that the TLV block can occupy.&#10;&#10; @return SUCCESS if the type instance was found, enough space was&#10;&#10;         available, and the length was set, ESIZE if there wasn't&#10;&#10;         enough space, EINVAL if the instance wasn't found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tlv"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7de95688" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7de95810" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7de95998" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x7de92340" loc="92:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
        <documentation loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
          <short>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance. </short>
          <long>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance.  This operation moves data around and&#10;&#10; should always be performed before storing a value of the given&#10;&#10; type.  The type instance will be added to the block as long as&#10;&#10; there are at least len + 2 bytes available in the buffer holding&#10;&#10; the TLV block.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @param maxLen Maximum length that the TLV block can occupy.&#10;&#10; @return SUCCESS if enough space was available and the length was&#10;&#10;         set, EALREADY if an instance already exists, ESIZE if&#10;&#10;         there wasn't enough space.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tlv"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7de93b40" loc="92:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7de93cc8" loc="92:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7de93e50" loc="92:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/Tlv.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="29:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.&#10;&#10;</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x7de51890" loc="34:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.&#10;</short>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clear" ref="0x7de50b10" loc="58:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.&#10;</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7de50948" loc="58:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7de4e030" loc="64:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.&#10;</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7de50e50" loc="64:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7de50108" loc="46:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.&#10;</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7de51f08" loc="46:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x7de4e6e0" loc="71:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.&#10;</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7de4e370" loc="71:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x7de4e4f8" loc="71:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x7de51bc0" loc="39:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.&#10;</short>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7de50608" loc="52:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.&#10;</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7de50448" loc="52:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7de4ea60" loc="77:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.&#10;</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="TlvBlock" loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
      <documentation loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
        <short>&#10;&#10; Manipulate a TLV block independent of the types it contains.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Manipulate a TLV block independent of the types it contains.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="remove" ref="0x7dea36a0" loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
        <documentation loc="50:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
          <short>&#10;&#10; Removes a TLV block from the beginning of a given data buffer.  &#10;&#10;</short>
          <long>&#10;&#10; Removes a TLV block from the beginning of a given data buffer.  &#10;&#10; Other data is moved to fill the gap.&#10;&#10; &#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param maxLen Maximum length that the TLV block can occupy.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvBlock"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7dea3288" loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="maxLen" ref="0x7dea3410" loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="length" ref="0x7dea3e58" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
        <documentation loc="59:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
          <short>&#10;&#10; Returns the length of the entire TLV block, including the block &#10;&#10; length value itself.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Returns the length of the entire TLV block, including the block &#10;&#10; length value itself.&#10;&#10; &#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @return Length of the TLV block.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvBlock"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7dea3be0" loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x7dea4d10" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
        <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
          <short>&#10;&#10; Adds a TLV block at the beginning of a given data buffer. </short>
          <long>&#10;&#10; Adds a TLV block at the beginning of a given data buffer.  Other&#10;&#10; data is moved to accomidate it.  This must be called on any new TLV &#10;&#10; block before using any other TLV commands.&#10;&#10; &#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param maxLen Maximum length that the TLV block can occupy.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvBlock"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7dea48b0" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="maxLen" ref="0x7dea4a38" loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvBlock.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TlvMultiple" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
      <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
        <short>&#10;&#10; Access data stored in a generalized Type-Length-Value (TLV) block.&#10;&#10;</short>
        <long>&#10;&#10; Access data stored in a generalized Type-Length-Value (TLV) block.&#10;&#10; This interface, when used together with the TlvList interface, has&#10;&#10; no restrictions of the number of instances of a type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="value" ref="0x7de8cd78" loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="74:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Returns the value in this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the value in this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then NULL is returned.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @return Pointer to the value in this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7deb0d70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7de8c8f8" loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7de8ca88" loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7deb0d70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="list" ref="0x7de89010" loc="120:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="112:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Access a list of all instances of a type within the TLV block.&#10;&#10;</short>
          <long>&#10;&#10; Access a list of all instances of a type within the TLV block.&#10;&#10; This command gives the key for the first such instance.&#10;&#10; Traverse the rest of the list with the TlvList interface.&#10;&#10;&#10;&#10; @return The key for the first instance of a type in the TLV&#10;&#10;         block.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7deb0d70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7de8ace0" loc="120:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x7de8a790" loc="110:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="101:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @param maxLen Maximum length that the TLV block can occupy.&#10;&#10; @return SUCCESS if the type instance was found and removed, EINVAL&#10;&#10;         otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7deb0d70"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7de8a1a0" loc="110:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7de8a330" loc="110:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7deb0d70"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7de8a4b8" loc="110:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="length" ref="0x7de8e460" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Returns the length of this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the length of this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then 0 is returned.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @return Length of this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7deb0d70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7de8e010" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7de8e1a0" loc="52:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7deb0d70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x7de8c3b8" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Sets the length of a type instance within the TLV block. </short>
          <long>&#10;&#10; Sets the length of a type instance within the TLV block.  This&#10;&#10; operation moves data around and should always be performed before&#10;&#10; storing a value with a different length than the one currently&#10;&#10; stored.  If the type instance is not found in the block or there&#10;&#10; is not enough room for the new length, returns ESIZE.&#10;&#10;&#10;&#10; Setting the length of a type instance typically invalidates any&#10;&#10; keys received prior to the change.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @param maxLen Maximum length that the TLV block can occupy.&#10;&#10; @return SUCCESS if the type instance was found, enough space was&#10;&#10;         available, and the length was set, ESIZE if wasn't enough&#10;&#10;         space, EINVAL if the instance wasn't found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7deb0d70"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7de8e9b0" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7de8eb40" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7deb0d70"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x7de8ecc8" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7de8ee50" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x7de8bc38" loc="99:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="84:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance. </short>
          <long>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance.  This operation moves data around and&#10;&#10; should always be performed before storing a value of the given&#10;&#10; type.  The type instance will be added to the block as long as&#10;&#10; there are at least len + 2 bytes available in the buffer holding&#10;&#10; the TLV block.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Pointer to store the key for the TLV type instance.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @param maxLen Maximum length that the TLV block can occupy.&#10;&#10; @return SUCCESS if enough space was available and the length was&#10;&#10;         set, ESIZE if there wasn't enough space.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="tlv_key_t" ref="0x7deb0d70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7de8b2e8" loc="99:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7de8b498" loc="99:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="tlv_key_t" ref="0x7deb0d70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7de8b620" loc="99:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7de8b7a8" loc="99:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RouteCache" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
        <short>&#10;&#10; Access some kind of route cache or table that stores information about&#10;&#10; paths or links in the network and looks for routes when requested.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access some kind of route cache or table that stores information about&#10;&#10; paths or links in the network and looks for routes when requested.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="removeLink" ref="0x7de706f8" loc="60:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
        <documentation loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
          <short>&#10;&#10; Removes any information stored for a given link from the route cache.&#10;&#10;</short>
          <long>&#10;&#10; Removes any information stored for a given link from the route cache.&#10;&#10; If the cache stores entire paths, then any path containing the link&#10;&#10; must at least be shortened enough to remove the given link or else&#10;&#10; discarded entirely.&#10;&#10;&#10;&#10; @param src The source node in the link to remove.&#10;&#10; @param dest The destination node in the link to remove.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7deae540"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7deae540"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7de70240" loc="60:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7deae540"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7de703d8" loc="60:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7deae540"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="routeUpdate" ref="0x7de6ee30" loc="88:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
        <documentation loc="71:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
          <short>&#10;&#10; Provides the newest information available pertaining to a requested&#10;&#10; route. </short>
          <long>&#10;&#10; Provides the newest information available pertaining to a requested&#10;&#10; route.  Whether or not a route is available when the request is made,&#10;&#10; a routeUpdate will be signaled once the current availability is known.&#10;&#10; If the route is not initially available, a subsequent routeUpdate will&#10;&#10; be signaled if a route is later found.  If a route was found, numLinks&#10;&#10; is the number of links along the route.  If a route was not found,&#10;&#10; numLinks is 0.  The route itself is accessible via the RouteNodeList&#10;&#10; interface.  Note that RouteNodeList traverses the route &#60;b>in&#10;&#10; reverse&#60;/b>, returning the previous or source node for a given node in&#10;&#10; the route.&#10;&#10;&#10;&#10; @param src The source node of the route.&#10;&#10; @param dest The destination node of the route.&#10;&#10; @param numLinks Number of links along the route if one was found, 0&#10;&#10;                 if no route was found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7deae540"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7deae540"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7deae368"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7de6e5b8" loc="88:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7deae540"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7de6e750" loc="88:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7deae540"/></typename>
            </type-int>
          </variable>
          <variable name="numLinks" ref="0x7de6e900" loc="89:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7deae368"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addPath" ref="0x7de71cf0" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
        <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
          <short>&#10;&#10; Adds a path to the route cache with a given number of links along the&#10;&#10; path and optionally adds the reverse path as well.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Adds a path to the route cache with a given number of links along the&#10;&#10; path and optionally adds the reverse path as well.&#10;&#10;&#10;&#10; @param nodes An array of nodes that make up the path to add.&#10;&#10; @param numLinks The number of links along the path.&#10;&#10; @param reverse If TRUE, the reverse path is also added.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="route_cache_node_id_t" ref="0x7deae540"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7deae368"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="nodes" ref="0x7de71690" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="route_cache_node_id_t" ref="0x7deae540"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numLinks" ref="0x7de71830" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7deae368"/></typename>
            </type-int>
          </variable>
          <variable name="reverse" ref="0x7de719b8" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="needRoute" ref="0x7de6e078" loc="69:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
        <documentation loc="62:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
          <short>&#10;&#10; Indicates the need for a route from node src to node dest. </short>
          <long>&#10;&#10; Indicates the need for a route from node src to node dest.  This is&#10;&#10; tracked by the route cache until the need is met.&#10;&#10;&#10;&#10; @param src The source node of the route.&#10;&#10; @param dest The destination node of the route.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7deae540"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7deae540"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7de70c38" loc="69:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7deae540"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7de70dd0" loc="69:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7deae540"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Graph" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <short>&#10;&#10; Basic operations for processsing and modifying a graph. &#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Basic operations for processsing and modifying a graph. &#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="maxEdges" ref="0x7dd0ed90" loc="77:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="69:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Gets the maximum number of edges that the graph can hold. </short>
          <long>&#10;&#10; Gets the maximum number of edges that the graph can hold.  This should &#10;&#10; return the number of &#34;conceptual&#34; edges.  For example, an undirected graph &#10;&#10; might use two directed edges for each undirected edge in its &#10;&#10; implementation, but this only counts as one edge here.&#10;&#10; &#10;&#10; @return The maximum number of edges that the graph can hold.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="removed" ref="0x7dd09ec0" loc="150:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="145:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; The structure of the graph changed because an edge was removed.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; The structure of the graph changed because an edge was removed.&#10;&#10; &#10;&#10; @param m The key for the edge that was removed.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dd09c90" loc="150:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x7dd0cd98" loc="115:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="107:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Remove an edge from the graph between vertices s and d.  &#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Remove an edge from the graph between vertices s and d.  &#10;&#10; &#10;&#10; @param s The first vertex or source of the edge.&#10;&#10; @param d The second vertex or destination of the edge.&#10;&#10; @return SUCCESS if the edge was found and removed, EINVAL if it was not.&#10;&#10;         ESIZE returned if either vertex is too large.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7dd0c910" loc="115:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </variable>
          <variable name="d" ref="0x7dd0caa8" loc="115:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7dd0a7a0" loc="126:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="117:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Retrieves an edge between vertices s and d, if it exists. </short>
          <long>&#10;&#10; Retrieves an edge between vertices s and d, if it exists.  If the graph is&#10;&#10; directed, s is taken to be the source and d is taken to be the destination&#10;&#10; of the directed edge.&#10;&#10; &#10;&#10; @param s The first vertex or source of the edge.&#10;&#10; @param d The second vertex or destination of the edge.&#10;&#10; @return The edge key if the edge was found, maxEdges() if it was not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7dd0a2e8" loc="126:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </variable>
          <variable name="d" ref="0x7dd0a480" loc="126:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="directed" ref="0x7dd0d388" loc="85:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Checks if the graph is directed or not. </short>
          <long>&#10;&#10; Checks if the graph is directed or not.  This value should not change at &#10;&#10; run-time.&#10;&#10; &#10;&#10; @return TRUE if the graph is directed, FALSE if it is undirected.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="vertices" ref="0x7dd0f9a0" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Gets the number of vertices currently in the graph. </short>
          <long>&#10;&#10; Gets the number of vertices currently in the graph.  For some&#10;&#10; implementations, this will always equal maxVertices() if all vertices&#10;&#10; are preallocated.&#10;&#10; &#10;&#10; @return The number of vertices currently in the graph.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="parallelEdges" ref="0x7dd0d968" loc="93:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="87:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Checks if parallel edges are allowed or not. </short>
          <long>&#10;&#10; Checks if parallel edges are allowed or not.  This value should not change&#10;&#10; at run-time.&#10;&#10; &#10;&#10; @return TRUE if parallel edges are allowed, FALSE if they are not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="maxVertices" ref="0x7dd0e010" loc="56:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Gets the maximum number of vertices that the graph can hold.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Gets the maximum number of vertices that the graph can hold.&#10;&#10; &#10;&#10; @return The maximum number of vertices that the graph can hold.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="insert" ref="0x7dd0c3e0" loc="105:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="95:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Add a new edge to the graph between vertices s and d.  &#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Add a new edge to the graph between vertices s and d.  &#10;&#10; &#10;&#10; @param s The first vertex or source of the edge.&#10;&#10; @param d The second vertex or destination of the edge.&#10;&#10; @return If all of the edges have already been allocated or if parallel &#10;&#10;         edges are not supported and this edge has already been added or if either&#10;&#10;         vertex is too large, then maxEdges() is returned.  Otherwise, the key for &#10;&#10;         the new edge is returned.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7dd0dea0" loc="105:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </variable>
          <variable name="d" ref="0x7dd0c068" loc="105:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="inserted" ref="0x7dd09770" loc="143:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="138:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; The structure of the graph changed because an edge was inserted.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; The structure of the graph changed because an edge was inserted.&#10;&#10; &#10;&#10; @param m The key for the edge that was inserted.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dd09538" loc="143:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeList" ref="0x7dd09010" loc="136:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="128:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Retrieves a list of edges adjacent to vertex s. </short>
          <long>&#10;&#10; Retrieves a list of edges adjacent to vertex s.  If the graph is directed, &#10;&#10; s is taken to be the source of the directed edge.&#10;&#10; &#10;&#10; @param s The first vertex or source of the edge.&#10;&#10; @return The key to the first node of the list if the vertex was valid,&#10;&#10;         maxEdges() if it was not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7dd0ace0" loc="136:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edges" ref="0x7dd0e6f0" loc="67:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
        <documentation loc="58:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Gets the number of edges currently in the graph. </short>
          <long>&#10;&#10; Gets the number of edges currently in the graph.  This should return the &#10;&#10; number of &#34;conceptual&#34; edges.  For example, an undirected graph might use &#10;&#10; two directed edges for each undirected edge in its implementation, but this&#10;&#10; only counts as one edge here.  For some implementations, this will always &#10;&#10; equal maxEdges() if all edges are preallocated.&#10;&#10; &#10;&#10; @return The number of edges currently in the graph.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SourceShortestPath" loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
      <documentation loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
        <short>&#10;&#10; Access details on the shortest path between vertices of a graph.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access details on the shortest path between vertices of a graph.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="rebuildNeeded" ref="0x7dd02a90" loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="75:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; Checks if the tree should be rebuilt either because the source has changed&#10;&#10; or because the underlying graph structure has changed.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Checks if the tree should be rebuilt either because the source has changed&#10;&#10; or because the underlying graph structure has changed.&#10;&#10; &#10;&#10; @param src The source vertex.&#10;&#10; @return Whether a rebuild is needed.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7dd027c0" loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="buildTree" ref="0x7dd05600" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; Build a shortest path tree from vertex src.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Build a shortest path tree from vertex src.&#10;&#10; &#10;&#10; @param src The source vertex.&#10;&#10; @return If the vertex is too large then ESIZE or if a tree is currently&#10;&#10;         being built then EBUSY, else SUCCESS. &#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7dd05390" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="builtTree" ref="0x7dd05d60" loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; The shortest path tree from vertex src is complete.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; The shortest path tree from vertex src is complete.&#10;&#10; &#10;&#10; @param src The source vertex.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7dd05b58" loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeCount" ref="0x7dd01310" loc="93:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="84:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; Get the number of edges to the destination vertex.  &#10;&#10;</short>
          <long>&#10;&#10; Get the number of edges to the destination vertex.  &#10;&#10; For example, if the shortest path from A to C was A -> D -> C, edgeCount() &#10;&#10; would return 2.&#10;&#10; &#10;&#10; @param dest The destination vertex.&#10;&#10; @return The number of edges.  If there is no path to the given destination, &#10;&#10;         or if an input vertex is too large, then the count is 0.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7dd01010" loc="93:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="buildTreeTo" ref="0x7dd04740" loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="56:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; Build the shortest path from vertex src to vertex dest.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Build the shortest path from vertex src to vertex dest.&#10;&#10; &#10;&#10; @param src The source vertex.&#10;&#10; @param dest The destination vertex.&#10;&#10; @return If the vertex is too large then ESIZE or if a tree is currently&#10;&#10;         being built then EBUSY, else SUCCESS. &#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7dd042f0" loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7dd04488" loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="builtTreeTo" ref="0x7dd02260" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; The shortest path from vertex src to vertex dest is complete.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; The shortest path from vertex src to vertex dest is complete.&#10;&#10; &#10;&#10; @param src The source vertex.&#10;&#10; @param dest The destination vertex.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7dd04c98" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7dd04e30" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
            </type-int>
          </variable>
          <variable name="pathResult" ref="0x7dd02010" loc="73:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GraphEdge" loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdge.nc">
      <documentation loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdge.nc">
        <short>&#10;&#10; Access information about an edge of the graph.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access information about an edge of the graph.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="src" ref="0x7dce5e38" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdge.nc">
        <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdge.nc">
          <short>&#10;&#10; Get the first or source vertex of the edge.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Get the first or source vertex of the edge.&#10;&#10; &#10;&#10; @param m The key for the edge.&#10;&#10; @return The first or source vertex.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdge"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dce5c18" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdge.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dest" ref="0x7dce45f0" loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdge.nc">
        <documentation loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdge.nc">
          <short>&#10;&#10; Get the second or destination vertex of the edge.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Get the second or destination vertex of the edge.&#10;&#10; &#10;&#10; @param m The key for the edge.&#10;&#10; @return The second or destination vertex.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdge"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7dd26960"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dce43c0" loc="54:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdge.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GraphEdgeWeight" loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
      <documentation loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
        <short>&#10;&#10; Access information about the weight of an edge of the graph.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access information about the weight of an edge of the graph.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="weight_t" ref="0x7dcd7c38" loc="38:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
          <interfacedef-ref qname="GraphEdgeWeight"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="weight_t" scoped="" ref="0x7dcd7c38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="canChangeWeights" ref="0x7dcd6340" loc="46:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
        <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
          <short>&#10;&#10; Checks if the graph weights can be changed. </short>
          <long>&#10;&#10; Checks if the graph weights can be changed.  This value should not change &#10;&#10; at run-time.&#10;&#10; &#10;&#10; @return TRUE if the graph weights can change, FALSE if they cannot.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="weightChanged" ref="0x7dcd5b50" loc="71:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
        <documentation loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
          <short>&#10;&#10; The weight of an edge in the graph changed.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; The weight of an edge in the graph changed.&#10;&#10; &#10;&#10; @param m The key for the edge that had its weight changed.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dcd5938" loc="71:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setWeight" ref="0x7dcd53f0" loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
        <documentation loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
          <short>&#10;&#10; Set the weight of the edge. </short>
          <long>&#10;&#10; Set the weight of the edge.  If the graph is actually unweighted, no&#10;&#10; action is taken.&#10;&#10; &#10;&#10; @param m The key for the edge.&#10;&#10; @param w The updated weight.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="weight_t" scoped="" ref="0x7dcd7c38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dcd5030" loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
            </type-int>
          </variable>
          <variable name="w" ref="0x7dcd51c0" loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="weight_t" scoped="" ref="0x7dcd7c38"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="weight" ref="0x7dcd6ad0" loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
        <documentation loc="48:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
          <short>&#10;&#10; Get the weight of the edge. </short>
          <long>&#10;&#10; Get the weight of the edge.  If the graph is actually unweighted, a unit&#10;&#10; weight is always returned.&#10;&#10; &#10;&#10; @param m The key for the edge.&#10;&#10; @return The weight of the edge.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="weight_t" scoped="" ref="0x7dcd7c38"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dcd6890" loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/graph/GraphEdgeWeight.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7dd26b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IndexedAlloc" loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
      <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
        <short>&#10;&#10; Interface to a component that implements a run-time allocation policy on top&#10;&#10; of a static size array via indices. </short>
        <long>&#10;&#10; Interface to a component that implements a run-time allocation policy on top&#10;&#10; of a static size array via indices.  This simplifies component design by&#10;&#10; moving the policy out of each component, leading to cleaner code.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="size" ref="0x7dcc3e08" loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="58:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; The number of elements currently allocated.&#10;&#10;</short>
          <long>&#10;&#10; The number of elements currently allocated.&#10;&#10; Always less than or equal to maxSize().&#10;&#10;&#10;&#10; @return The number of elements currently allocated.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dcc9408"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="allocated" ref="0x7dcc09f8" loc="95:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="90:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Checks if an index is currently allocated.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Checks if an index is currently allocated.&#10;&#10; &#10;&#10; @return TRUE if the index is allocated, FALSE if it is not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dcc9408"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dcc07e0" loc="95:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dcc9408"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7dcc13f8" loc="71:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="66:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; The maximum number of elements that can be allocated.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The maximum number of elements that can be allocated.&#10;&#10;&#10;&#10; @return The maximum size that can be allocated.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dcc9408"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="alloc" ref="0x7dcc1a00" loc="79:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="73:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Allocate an index in the set.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Allocate an index in the set.&#10;&#10; &#10;&#10; @return If an index is free, it will be allocated and returned.  Otherwise,&#10;&#10;         maxSize() is returned to indicate that all elements are allocated.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dcc9408"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="none" ref="0x7dcc3260" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="44:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Checks if none of the elements are allocated.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if none of the elements are allocated.&#10;&#10;&#10;&#10; @return TRUE if none of the elements are allocated, FALSE otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="free" ref="0x7dcc0298" loc="88:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="81:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Frees an index in the set.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Frees an index in the set.&#10;&#10; &#10;&#10; @return If an index is allocated, it will be freed and SUCCESS is returned.&#10;&#10;         If it was already free, no change is made and EALREADY is returned.&#10;&#10;         If the index is too large, ESIZE is returned.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dcc9408"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dcc0010" loc="88:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7dcc9408"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="all" ref="0x7dcc3820" loc="56:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="51:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Checks if all of the elements are allocated.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if all of the elements are allocated.&#10;&#10;&#10;&#10; @return TRUE if all of the elements are allocated, FALSE otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="PriorityQueue" loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
      <documentation loc="40:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <short>&#10;&#10; Interface to a priority queue sitting on top of an index heap. </short>
        <long>&#10;&#10; Interface to a priority queue sitting on top of an index heap.  The meaning&#10;&#10; of some terms defined here is implementation dependent since either a min or&#10;&#10; max heap could be used.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7dc32378" loc="122:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="119:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Removes all elements from the priority queue.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="findBest" ref="0x7dc34790" loc="109:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="103:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Finds the index of the element with the best priority (at the root of the&#10;&#10; heap), but does not remove it.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Finds the index of the element with the best priority (at the root of the&#10;&#10; heap), but does not remove it.&#10;&#10; &#10;&#10; @return Index of the element with the best priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7dc43050"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7dc37988" loc="62:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="57:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; The maximum number of elements the priority queue can hold.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The maximum number of elements the priority queue can hold.&#10;&#10;&#10;&#10; @return The maximum priority queue size.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7dc43050"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="insert" ref="0x7dc361c8" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="64:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Insert the element at index m into the priority queue.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Insert the element at index m into the priority queue.&#10;&#10;&#10;&#10; @param m Index of the element to insert.&#10;&#10; @return If the priority queue is full then FAIL, if m is too large for the&#10;&#10;         queue then ESIZE, if m has already been inserted then EALREADY,&#10;&#10;         otherwise SUCCESS.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2202e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7dc43050"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dc37ed8" loc="72:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7dc43050"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="moveUp" ref="0x7dc35160" loc="87:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="82:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; If the priority of element m has improved, move that element up the heap&#10;&#10; if needed.&#10;&#10;</short>
          <long>&#10;&#10; If the priority of element m has improved, move that element up the heap&#10;&#10; if needed.&#10;&#10; @param m Index of the element with altered priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7dc43050"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dc36ec8" loc="87:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7dc43050"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="move" ref="0x7dc34138" loc="101:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="96:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; If the priority of element m has changed, move that element up or down the &#10;&#10; heap if needed.&#10;&#10;</short>
          <long>&#10;&#10; If the priority of element m has changed, move that element up or down the &#10;&#10; heap if needed.&#10;&#10; @param m Index of the element with altered priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7dc43050"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dc35e58" loc="101:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7dc43050"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inserted" ref="0x7dc36980" loc="80:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="74:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Checks whether element m has already been inserted.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Checks whether element m has already been inserted.&#10;&#10; &#10;&#10; @param m Index of the element to check on.&#10;&#10; @return TRUE if element m has already been inserted, otherwise FALSE.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7dc43050"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dc36720" loc="80:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7dc43050"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="moveDown" ref="0x7dc35910" loc="94:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="89:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; If the priority of element m has worsened, move that element down the heap&#10;&#10; if needed.&#10;&#10;</short>
          <long>&#10;&#10; If the priority of element m has worsened, move that element down the heap&#10;&#10; if needed.&#10;&#10; @param m Index of the element with altered priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7dc43050"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7dc356b0" loc="94:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7dc43050"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7dc38d60" loc="47:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="42:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Checks if the priority queue is empty.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if the priority queue is empty.&#10;&#10;&#10;&#10; @return Whether the priority queue is empty.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="removeBest" ref="0x7dc34e08" loc="117:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="111:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Finds the index of the element with the best priority (at the root of the&#10;&#10; heap) and removes it from the priority queue.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Finds the index of the element with the best priority (at the root of the&#10;&#10; heap) and removes it from the priority queue.&#10;&#10; &#10;&#10; @return Index of the element with the best priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7dc43050"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="size" ref="0x7dc373a8" loc="55:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; The number of elements currently in the priority queue.&#10;&#10;</short>
          <long>&#10;&#10; The number of elements currently in the priority queue.&#10;&#10; Always less than or equal to maxSize().&#10;&#10;&#10;&#10; @return The number of elements in the priority queue.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7dc43050"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Compare" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Compare.nc">
      <documentation loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Compare.nc">
        <short>&#10;&#10; Generalized comparison interface between two items. </short>
        <long>&#10;&#10; Generalized comparison interface between two items.  Many uses are possible&#10;&#10; here, since the inputs could be array indices, as just one example.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="compare_t" ref="0x7dc2f208" loc="39:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Compare.nc">
          <interfacedef-ref qname="Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7dc2f208"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7dc2fc90" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Compare.nc">
        <documentation loc="41:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Compare.nc">
          <short>&#10;&#10; Returns a negative integer, zero, or a positive integer if the first&#10;&#10; argument is less than, equal to, or greater than the second.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns a negative integer, zero, or a positive integer if the first&#10;&#10; argument is less than, equal to, or greater than the second.&#10;&#10;&#10;&#10; @param a First item to test.&#10;&#10; @param b Second item to test.&#10;&#10; @return A negative integer, zero, or a positive integer.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1">
            <typename><typedef-ref name="int16_t" ref="0x7fea00f0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7dc2f208"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7dc2f208"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x7dc2f7f8" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7dc2f208"/></type-var>
          </variable>
          <variable name="b" ref="0x7dc2f988" loc="49:/home/jryans/tinyos-2.x-contrib-rice/tos/interfaces/Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7dc2f208"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>

<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="93:MultihopLightAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ebe5d78"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ef92bd8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ef92bd8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ec14300"/></to>
    </wire>
    <wire loc="96:MultihopLightAppC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7eb829e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7eaa3900"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7eaa3900"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d9f9330"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:MultihopLightAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7eb73188"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d991be0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d991be0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d9f9c60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:MultihopLightAppC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x7eb703a8"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7d980c30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Intercept" scoped="" ref="0x7d980c30"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7d9f8810"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="99:MultihopLightAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7eb45750"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e3ea808"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e3ea808"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e3e14c8"/></to>
    </wire>
    <wire loc="100:MultihopLightAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7eb23b98"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3de010"/></to>
    </wire>
    <wire loc="101:MultihopLightAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7eb354e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d995310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d995310"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d9f8b30"/></to>
    </wire>
    <wire loc="103:MultihopLightAppC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7eb13188"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7e3dd320"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7e3dd320"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7dc92120"/></to>
    </wire>
    <wire loc="107:MultihopLightAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ebe5198"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ec15d00"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ec15d00"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7eae09b0"/></to>
    </wire>
    <wire loc="108:MultihopLightAppC.nc">
      <from><interface-ref name="PhotoTimer" scoped="" ref="0x7eb55260"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d9737b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d9737b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dba2370"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:MultihopLightAppC.nc">
      <from><interface-ref name="Photo" scoped="" ref="0x7eb10260"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d96b1f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7d96b1f8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d964100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7c58a520"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d216410"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x7d3bb030"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x7d3ba7c8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d40a518"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d5115f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7c701930"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d68d800"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7c786128"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7c7dfd60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7c9c52d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7c9e5438"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ca82530"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ca8c628"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ca9f238"/></to>
    </wire>
    <wire loc="79:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e870f00"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7db9b498"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7cb1a388"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7cb307f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7cb4e4c8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dc3eeb0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dc58c00"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dcd6110"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dd5cca8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e2c3cc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7cbbf430"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7df03910"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e32d9d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ccb82c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ccc48e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7cd04990"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7cd0c7f0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e724960"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7ec14648"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f232c50"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f232c50"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f071598"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7ec14b78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ef80118"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ef80118"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ef52088"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ec14ee8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ef72378"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d2fbb18"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ef72378"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d5ca600"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ef72378"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d874060"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ef72378"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e129410"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ef63c68"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ec43160"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7ef52768"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ec44d58"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7ef523f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7eaa66b8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7ef523f8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7ef61df8"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7ef61df8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7ef30310"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ef401a0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7ef72378"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7ef13b18"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7ef00428"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7ef00428"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ede0ac8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ef22520"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7ef401a0"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7ee91e78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ece02d8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7eec2010"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ed92330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ed92330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cf33c78"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7eeb0188"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ed73d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ed73d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cef96c0"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7eea0e78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ed54410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ed54410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cec5ac8"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7eef37a8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7edd4e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7edd4e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cfea010"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7eea1b00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ed61090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ed61090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cec8718"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7eef2af8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7edd0bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7edd0bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cf9f7f8"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7eed3b00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7edb05d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7edb05d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cf650f8"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7eec1cb8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ed90030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ed90030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cf2cac8"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7eea3e78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ed71ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ed71ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cef4538"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7ef026c8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ede3e70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ede3e70"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cff49e8"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7eef0808"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7edc3890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7edc3890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cf9a6c0"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7eed1808"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7eda3250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7eda3250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cf60010"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7eeb39d8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ed84c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ed84c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cf279e8"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7ee92b00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ed52170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ed52170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cec09e8"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7ee83d98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ecc3bc0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7eeb2d98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ed74a18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ed74a18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cefc228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ede0ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cfee9e8"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7eee2508"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7edc05d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7edc05d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cf95538"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7ee90aa0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ecd3590"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7eee0808"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7edb12a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7edb12a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cf6bd08"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7eec2980"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ed92c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ed92c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cf31718"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7eeb0af8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ed72790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ed72790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cef70b0"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7ee93808"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ed54d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ed54d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cec3570"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7eef2188"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7edd37d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7edd37d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cfe99e8"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7eef1508"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7edc45d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7edc45d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cf9d228"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7eed2508"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7edb0f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7edb0f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cf64ac8"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7eec06c8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ed90988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ed90988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cf2a570"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7eea2808"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ed704f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ed704f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cef2010"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7ef01068"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ede27f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ede27f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cff2538"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7eee3190"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7edc2250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7edc2250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cf980b0"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7eed0190"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7eda3ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7eda3ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cf5e9e8"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7ee91508"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ed52ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ed52ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cebe538"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7eec3508"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ed939c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ed939c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cf342b0"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7eeb17a8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ed73410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ed73410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cefbc08"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7eea0508"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ed619e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ed619e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cec60f8"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7ee817a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ecc0f20"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7ef00d98"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7edd44f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7edd44f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cfec538"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7eee2e78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7edc0f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7edc0f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cf93010"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7eea1190"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ed626f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ed626f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ceccd08"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7eed3190"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7edb1bf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7edb1bf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cf67718"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7eec1348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ed916b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ed916b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cf2e0f8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7eea3508"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ed71170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ed71170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cef6a88"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7ee92190"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ed53790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ed53790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cec1010"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7ef03ce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ede3518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ede3518"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cff5010"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7eef1e78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7edc4f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7edc4f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cf9cc08"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7eed2e78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7eda4890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7eda4890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cf62570"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7eeb3068"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ed84330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ed84330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cf28010"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7ee83428"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ecd0880"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7eeb2428"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ed740c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ed740c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cefe7f8"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7eed0b00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7eda25d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7eda25d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cf5c538"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7ef019d8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ede0170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ede0170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cff0010"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7eee3b80"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7edc2ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7edc2ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7cf97a88"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f071d30"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f052188"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f0108c0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7efe3e38"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7e225268"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7eaa66b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7eae0690"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7ead6628"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7eab2900"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7eab2900"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7ef01068"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7ead5010"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7eab1368"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7eab1368"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7ef026c8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7ead5980"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7eab1cf8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7eab1cf8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7ef03ce8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7d996010"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7d9fa990"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7d9fa990"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7d9f02d8"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7d9f8b30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d9eb478"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d9966a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x7d9f7548"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Send" scoped="" ref="0x7ce609f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7ce609f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7daa1100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7eaa0290"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/lib/netarch/single/SingleProtocolC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7d99a3b0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7d99aa88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x7d99aa88"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3e7340"/></to>
    </wire>
    <wire loc="50:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7daa9bb0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ea54e58"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ea54e58"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e9b5d60"/></to>
    </wire>
    <wire loc="51:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7ea15070"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7daa8350"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x7daa8350"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3e7340"/></to>
    </wire>
    <wire loc="53:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7ea34500"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7da07b20"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7ea34500"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7da00338"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketEngine" scoped="" ref="0x7da00338"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7daa0c68"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PacketEngine" scoped="" ref="0x7da07b20"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7daa0c68"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SinglePacketEngine" scoped="" ref="0x7ea513d8"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7da07b20"/></to>
    </wire>
    <wire loc="56:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="DsrPacketEngine" scoped="" ref="0x7ea502f0"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7da00338"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7ea23ba0"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7da06a60"/></to>
    </wire>
    <wire loc="58:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7ea23ba0"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7d9ff280"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketWaitList" scoped="" ref="0x7d9ff280"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7da9fe08"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PacketWaitList" scoped="" ref="0x7da06a60"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7da9fe08"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7ea30780"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7da06a60"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7ea22368"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7d9ff280"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7ea121c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e3e66a8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e3e66a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e3dd8f0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7ea126a8"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7d9fa990"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ea12d50"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="ComposePacket" scoped="" ref="0x7ea16970"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d99fbe8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d99fbe8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d9f8b30"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ea15738"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d9a0228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d9a0228"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d9f9330"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7e9b5d60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e878370"/></to>
    </wire>
    <wire loc="76:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7e9b4538"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7ea15070"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7e6169e0"/></from>
      <to><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7ea34500"/></to>
    </wire>
    <wire loc="79:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SinglePacketEngine" scoped="" ref="0x7e6158f0"/></from>
      <to><interface-ref name="SinglePacketEngine" scoped="" ref="0x7ea513d8"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="DsrPacketEngine" scoped="" ref="0x7e614738"/></from>
      <to><interface-ref name="DsrPacketEngine" scoped="" ref="0x7ea502f0"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7e6136e0"/></from>
      <to><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7ea23ba0"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7e6122f8"/></from>
      <to><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7ea30780"/></to>
    </wire>
    <wire loc="83:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7e612f08"/></from>
      <to><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7ea22368"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7e605d50"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7ea121c0"/></to>
    </wire>
    <wire loc="86:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7e604238"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7ea126a8"/></to>
    </wire>
    <wire loc="87:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e6048d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ea12d50"/></to>
    </wire>
    <wire loc="88:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="ComposePacket" scoped="" ref="0x7e6034f0"/></from>
      <to><interface-ref name="ComposePacket" scoped="" ref="0x7ea16970"/></to>
    </wire>
    <wire loc="90:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7e601030"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ea15738"/></to>
    </wire>
    <wire loc="92:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="DsrHeader" scoped="" ref="0x7e618090"/></from>
      <to><interface-ref name="DsrHeader" scoped="" ref="0x7e9f0dd8"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="DsrHeader" scoped="" ref="0x7e9f0dd8"/></from>
      <to><interface-ref name="TlvBlockPacket" scoped="" ref="0x7e8e2eb8"/></to>
    </wire>
    <wire loc="93:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteRequest" scoped="" ref="0x7e618588"/></from>
      <to><interface-ref name="RouteRequest" scoped="" ref="0x7e9d5698"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteRequest" scoped="" ref="0x7e9d5698"/></from>
      <to><interface-ref name="TlvSinglePacket" scoped="" ref="0x7e882458"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteError" scoped="" ref="0x7e618c40"/></from>
      <to><interface-ref name="RouteError" scoped="" ref="0x7e9c4110"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteError" scoped="" ref="0x7e9c4110"/></from>
      <to><interface-ref name="TlvMultiplePacket" scoped="" ref="0x7e882b98"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteErrorList" scoped="" ref="0x7e617530"/></from>
      <to><interface-ref name="RouteErrorList" scoped="" ref="0x7e9c4a10"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteErrorList" scoped="" ref="0x7e9c4a10"/></from>
      <to><interface-ref name="TlvListPacket" scoped="" ref="0x7e8815c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="96:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SourceRoute" scoped="" ref="0x7e616328"/></from>
      <to><interface-ref name="SourceRoute" scoped="" ref="0x7e9b56c0"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="SourceRoute" scoped="" ref="0x7e9b56c0"/></from>
      <to><interface-ref name="TlvSinglePacket" scoped="" ref="0x7e882458"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteCache" scoped="" ref="0x7e610a10"/></from>
      <to><interface-ref name="RouteCache" scoped="" ref="0x7e5f6010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RouteCache" scoped="" ref="0x7e5f6010"/></from>
      <to><interface-ref name="RouteCache" scoped="" ref="0x7cd3dab0"/></to>
    </wire>
    <wire loc="99:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SalvageRouteCache" scoped="" ref="0x7e60b170"/></from>
      <to><interface-ref name="RouteCache" scoped="" ref="0x7e5f6010"/></to>
    </wire>
    <wire loc="100:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteNodeList" scoped="" ref="0x7e60b8b8"/></from>
      <to><interface-ref name="RouteNodeList" scoped="" ref="0x7e5f6758"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RouteNodeList" scoped="" ref="0x7e5f6758"/></from>
      <to><interface-ref name="RouteNodeList" scoped="" ref="0x7cd3b208"/></to>
    </wire>
    <wire loc="101:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteRequestInCache" scoped="" ref="0x7e60a458"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7dbe83d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DataCache" scoped="" ref="0x7dbe83d8"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7cb4e870"/></to>
    </wire>
    <wire loc="102:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteRequestOutCache" scoped="" ref="0x7e609980"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7dbbd120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DataCache" scoped="" ref="0x7dbbd120"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7cb30ba0"/></to>
    </wire>
    <wire loc="103:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteRequestOutTimer" scoped="" ref="0x7e607ef8"/></from>
      <to><interface-ref name="DataTimer" scoped="" ref="0x7dbb7d78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DataTimer" scoped="" ref="0x7dbb7d78"/></from>
      <to><interface-ref name="DataTimer" scoped="" ref="0x7cb1a730"/></to>
    </wire>
    <wire loc="105:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Equal" scoped="" ref="0x7dbe7938"/></from>
      <to><interface-ref name="RouteRequestInEqual" scoped="" ref="0x7e61ba20"/></to>
    </wire>
    <wire loc="106:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Equal" scoped="" ref="0x7dbbb678"/></from>
      <to><interface-ref name="RouteRequestOutEqual" scoped="" ref="0x7e61a410"/></to>
    </wire>
    <wire loc="108:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Compose" scoped="" ref="0x7e603ba8"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7dabba68"/></to>
    </wire>
    <wire loc="109:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Salvage" scoped="" ref="0x7e6026b0"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7dab83c8"/></to>
    </wire>
    <wire loc="111:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e6016c8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e728760"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e728760"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e721648"/></to>
    </wire>
    <wire loc="113:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7e61ad40"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ef92bd8"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="AckList" scoped="" ref="0x7e9b7908"/></from>
      <to><interface-ref name="TlvListPacket" scoped="" ref="0x7e8815c8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteReplyList" scoped="" ref="0x7e9c1330"/></from>
      <to><interface-ref name="TlvListPacket" scoped="" ref="0x7e8815c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7e878370"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ce4a0e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvBlockPacket" scoped="" ref="0x7e8e2eb8"/></from>
      <to><interface-ref name="TlvBlockPacket" scoped="" ref="0x7ce52be8"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="AckRequest" scoped="" ref="0x7e9c0858"/></from>
      <to><interface-ref name="TlvSinglePacket" scoped="" ref="0x7e882458"/>
      <arguments>
        <value cst="I:160">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteReply" scoped="" ref="0x7e9d4010"/></from>
      <to><interface-ref name="TlvMultiplePacket" scoped="" ref="0x7e882b98"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="Ack" scoped="" ref="0x7e9b7010"/></from>
      <to><interface-ref name="TlvMultiplePacket" scoped="" ref="0x7e882b98"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7e878a58"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7e9b4538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvListPacket" scoped="" ref="0x7e8815c8"/></from>
      <to><interface-ref name="TlvListPacket" scoped="" ref="0x7ce4c328"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvMultiplePacket" scoped="" ref="0x7e882b98"/></from>
      <to><interface-ref name="TlvMultiplePacket" scoped="" ref="0x7ce4d928"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvSinglePacket" scoped="" ref="0x7e882458"/></from>
      <to><interface-ref name="TlvSinglePacket" scoped="" ref="0x7ce4d1e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x7ce48a38"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7e878a58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvBlock" scoped="" ref="0x7ce4a7b0"/></from>
      <to><interface-ref name="TlvBlock" scoped="" ref="0x7e8e1380"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvSingle" scoped="" ref="0x7ce4ad20"/></from>
      <to><interface-ref name="TlvSingle" scoped="" ref="0x7e8e1af8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvMultiple" scoped="" ref="0x7ce49488"/></from>
      <to><interface-ref name="TlvMultiple" scoped="" ref="0x7e8d74d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvList" scoped="" ref="0x7ce49d58"/></from>
      <to><interface-ref name="TlvList" scoped="" ref="0x7e8d6010"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7e857e50"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7da9c5d8"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7e8574f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7da9dc00"/></to>
    </wire>
    <wire loc="86:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SendPool" scoped="" ref="0x7e834b90"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7da79408"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="PacketEngineClient" scoped="" ref="0x7e8501d0"/></from>
      <to><interface-ref name="PacketEngineClient" scoped="" ref="0x7da9b5d0"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="ReceivePool" scoped="" ref="0x7e837cb0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7da945e0"/></to>
    </wire>
    <wire loc="88:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e823d98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e728760"/></to>
    </wire>
    <wire loc="83:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7e854c28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e3ea808"/></to>
    </wire>
    <wire loc="87:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7e8252a8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7da78da8"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7e845128"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7da99830"/></to>
    </wire>
    <wire loc="76:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7e856458"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7da9cbb8"/></to>
    </wire>
    <wire loc="195:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <from><interface-ref name="msgAction" scoped="" ref="0x7e810ea8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="194:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <from><interface-ref name="msgAdded" scoped="" ref="0x7e810778"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SendBackoff" scoped="" ref="0x7e830300"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7da75100"/></to>
    </wire>
    <wire loc="90:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SubSendPacket" scoped="" ref="0x7e856ba8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3e7340"/></to>
    </wire>
    <wire loc="91:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e8505d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e721648"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e7165d8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7e726e88"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7e724d78"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7e724d78"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7e717d18"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e7301f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e724960"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e724960"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e717900"/></to>
    </wire>
    <wire>
      <from><interface-ref name="composePkt" scoped="" ref="0x7e601b00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RouteCache" scoped="" ref="0x7cd3dab0"/></from>
      <to><interface-ref name="RouteCache" scoped="" ref="0x7e5e3cd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RouteNodeList" scoped="" ref="0x7cd3b208"/></from>
      <to><interface-ref name="PathEdgeList" scoped="" ref="0x7cd37bc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PathEdgeList" scoped="" ref="0x7cd37bc8"/></from>
      <to><interface-ref name="PathEdgeList" scoped="" ref="0x7cd17580"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7cd35780"/></from>
      <to><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7e3f2b58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7e5d0188"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7cd39638"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7cd39638"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7cd1a010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SourceShortestPath" scoped="" ref="0x7e5c55e0"/></from>
      <to><interface-ref name="SourceShortestPath" scoped="" ref="0x7cd372c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SourceShortestPath" scoped="" ref="0x7cd372c0"/></from>
      <to><interface-ref name="SourceShortestPath" scoped="" ref="0x7cd18b98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Track" scoped="" ref="0x7e5e2778"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7cd33ca8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Initial" scoped="" ref="0x7e5e0188"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7cd31520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e5e0ad0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7cd1a010"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7cd0cb08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PathEdgeList" scoped="" ref="0x7cd17580"/></from>
      <to><interface-ref name="PathEdgeList" scoped="" ref="0x7ccc3580"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SourceShortestPath" scoped="" ref="0x7cd18b98"/></from>
      <to><interface-ref name="SourceShortestPath" scoped="" ref="0x7ccc4c00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdge" scoped="" ref="0x7cd38310"/></from>
      <to><interface-ref name="GraphEdge" scoped="" ref="0x7cd1acc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdge" scoped="" ref="0x7cd1acc8"/></from>
      <to><interface-ref name="GraphEdge" scoped="" ref="0x7cd0b850"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeList" scoped="" ref="0x7cd387b8"/></from>
      <to><interface-ref name="GraphEdgeList" scoped="" ref="0x7cd19200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeList" scoped="" ref="0x7cd19200"/></from>
      <to><interface-ref name="GraphEdgeList" scoped="" ref="0x7cd0bcf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7cd160c0"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7cd1a010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdge" scoped="" ref="0x7cd16d78"/></from>
      <to><interface-ref name="GraphEdge" scoped="" ref="0x7cd1acc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeList" scoped="" ref="0x7cd13370"/></from>
      <to><interface-ref name="GraphEdgeList" scoped="" ref="0x7cd19200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7cd152c0"/></from>
      <to><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7cd35780"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IndexedAlloc" scoped="" ref="0x7cd0a828"/></from>
      <to><interface-ref name="IndexedAlloc" scoped="" ref="0x7cd0d1f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IndexedAlloc" scoped="" ref="0x7cd0d1f0"/></from>
      <to><interface-ref name="IndexedAlloc" scoped="" ref="0x7cd07e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IndexedAlloc" scoped="" ref="0x7cd07e48"/></from>
      <to><interface-ref name="IndexedAlloc" scoped="" ref="0x7cd021f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Boot" scoped="" ref="0x7cd02a78"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ef92bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BitVector" scoped="" ref="0x7cd02d90"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7cd04cc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7ccc1690"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7cd160c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdge" scoped="" ref="0x7ccc03f0"/></from>
      <to><interface-ref name="GraphEdge" scoped="" ref="0x7cd16d78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7ccc0878"/></from>
      <to><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7cd152c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeList" scoped="" ref="0x7ccbf920"/></from>
      <to><interface-ref name="GraphEdgeList" scoped="" ref="0x7cd13370"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x7ccc62e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ccc2120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PriorityQueue" scoped="" ref="0x7ccc2a50"/></from>
      <to><interface-ref name="PriorityQueue" scoped="" ref="0x7ccc75b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PriorityQueue" scoped="" ref="0x7ccc75b8"/></from>
      <to><interface-ref name="PriorityQueue" scoped="" ref="0x7ccb85e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x7ccb62e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ccc62e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="buildTreeTask" scoped="" ref="0x7ccbd508"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e3e14c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7dc20e48"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7e3e9100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e3e1d18"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7e3e1d18"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e3c3dd0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7e3e7020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e3e0c60"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7e3e0c60"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e3c2d40"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7e3e7340"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3debf0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7e3debf0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3c0c60"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e3e9a30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e3e0688"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e3e0688"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e3c2768"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e3dd8f0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7dc92718"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e3de010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3c0080"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7dc20e48"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7dc1e6a0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7e3d38f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7e37a4c0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7e37a4c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7e375998"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7e3cbb98"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7dc20340"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7dc20340"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7dc1cae8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7e3c50b0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7dc05f08"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7dc05f08"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7dc02ad8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7e3d8188"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7dc91040"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7dc1e6a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e37c228"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e37c228"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e378a20"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7e3b8d48"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dc5d920"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7dc5d920"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dc58560"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7dc5c068"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dc05860"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7dc05860"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7dc04620"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7dc04620"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dc21918"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7dc21918"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7dc1fc50"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7dc1fc50"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dc26db8"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7dc26db8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7dc25bb0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7dc25bb0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e37c808"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7e37c808"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e375040"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7e3bc430"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7dc20010"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7dc20010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7dc1e348"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7dc1e348"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7dc449c8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7dc449c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7dc3e838"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7dc430d8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7dc254d8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7dc254d8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7dc25868"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7dc25868"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e37cec8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e37cec8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7dcdbab8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e3a8e10"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7dd9ca88"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7e3bc758"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7dc92120"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e3b3500"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dc92c08"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7e3ace48"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7e333340"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7e333340"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7e32c420"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7dcdbab8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7dcd6d80"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e368ab0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3de010"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e36e590"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e334bb8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e334bb8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e32dd20"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7e369730"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7e332200"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7e332200"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7e32b2e0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7e36d0d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7dd81180"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7e36d0d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7dcdb190"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7dcdb190"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7dcd6458"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7dd81180"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7dd5b010"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7e3637e0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7dd81588"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7dd81588"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dd5b460"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7e363ed8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7dd81c30"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7dd81c30"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7dd5bb28"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7e362340"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7dc92120"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e362930"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dc92c08"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e368688"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e728760"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7e362e08"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7dc65d18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7dc65d18"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7df08c88"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e3676c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ec15d00"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7e35e980"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7e35e250"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7e3608d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7e332c30"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7e32bd10"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e3106c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3de010"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7e327100"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7e2c2180"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7e2c2180"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7e2af358"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7e322858"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7e050808"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7e050808"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7eef2af8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7e321288"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7e04e508"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7e04e508"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7eef37a8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7e321c18"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7e04d808"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7e04d808"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x7ef00d98"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7e31b0f0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7e045370"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7e045370"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7dfac948"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7e30e370"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ddc6518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7ddc6518"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7df81be8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7e30f880"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7ddc5b98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7ddc5b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7e30fbf0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7ddc5ef0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ddc5ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7e310380"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7ddc4910"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ddc4910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7e310010"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7ddc4c68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ddc4c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7e3132c8"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7ddc2368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ddc2368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7e313798"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7ddc2820"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ddc2820"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7e313be8"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7ddc2c58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ddc2c58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7e318070"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7ddc10b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ddc10b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e3184c8"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7ddc14e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ddc14e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7e3160b0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7ddc0ae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7ddc0ae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df71520"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7e318918"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7ddc1d58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ddc1d58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7e318d68"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7ddc0270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7ddc0270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7e30d290"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ddba6c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7ddba6c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7df81be8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7e30eb68"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ddb0598"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7ddb0598"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7df81be8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e31b6e0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7dd9ca88"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7e309488"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7e30acc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e2c3cc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e062b08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7e062b08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e061280"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7e2af358"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7cc6a058"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7cc6a058"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7cc64320"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7cc61c00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7cc67b28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7cc67b28"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7cc4f0b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x7cc62b40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e0e3010"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7e0e3010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e0af5c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7cc4e840"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e288010"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e288010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e1c9b38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7cc4b6f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7e2631a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7e26c820"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7e1c6938"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7e266870"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7e1c55b0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e2631a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7e1c20b8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e2631a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7e1c1890"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e2631a8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7e1b0030"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x7e1af740"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7e2424d8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7e2424d8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7e2272d8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7e22d890"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7e2255c8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e242d28"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7e227b28"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e24bce8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e22a520"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e1297f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e288010"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7e0ae620"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e0ce3e8"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7e0ce3e8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e0cae90"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e0c9e68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e288010"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7e04f190"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7eee2e78"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7e04fb00"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7eea3e78"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7e2c5e88"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7eeb3068"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7e04ee78"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7eec1cb8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7e042c80"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7e033460"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7e045988"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7e026030"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x7e033ae8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7e266870"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7e026628"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7e008510"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7e008510"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7dfc1228"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x7dfaa010"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7e2c5e88"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7e00bd10"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7dfcc010"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7e009510"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7dfc50b0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7e008cc8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7dfb32d0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7e00a510"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7dfca010"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7e009cc8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7dfc3150"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7e00b558"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7dfe4010"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7e00acc8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7dfc8010"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7dfe47c8"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7dff35d0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7dfcc7c8"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7dff3948"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7dfca7c8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7dff3cc0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7dfc87c8"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7e001068"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7dfc5868"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7e0013e0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7dfc3908"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7e001758"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7dfc19e0"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7e001ad0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7dfb3a88"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7e001e48"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x7dfa9528"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ddc45b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ddbf368"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df71520"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ddc1920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ddc6bd0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7df72340"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7df72340"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7df6c440"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ddc54e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7ddc2010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ddc0f18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df71520"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ddbf7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7df72b00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7ddc5840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ddc06a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df71520"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ddc5190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7ddc4260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ddbe010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7df72b00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7df72b00"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7df6b5d8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7df71520"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df69010"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7df71c00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df696d0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7df81be8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7df6cbb8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df69d90"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7df545b8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7df10148"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7df10148"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7df08c88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7df681d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7df04a00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7df04a00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dee5a10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7df64968"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7deeb170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x7deeb170"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7dee5010"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7df54188"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7deeb4a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7deeb4a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7dee5358"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7df54d38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ec15d00"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7df53568"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7df08c88"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7df03ec0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7dee5358"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7dee09d0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7dee5010"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7dee06a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7df046c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dee9c40"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7dee9c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dee0388"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7dee5a10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ded3100"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7ded0500"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7de30888"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7de30888"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7cbbe760"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7dea31e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7de25418"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7de25418"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7cbbd2e0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7dec3998"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7de771c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7de771c0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7de74ed0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7dea35e8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff2d38"/></to>
    </wire>
    <wire loc="207:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7de98010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7de619d8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff2d38"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7de64348"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7eef2af8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7de64cb8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7eef1508"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7de636c8"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7eef1e78"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7de61068"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7eef0808"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7de25010"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7cbbeea0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7cbbd7a0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7de258c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x7cbbdbc8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7cbbf768"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x7cbbb270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ddb4010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ddb6320"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ddb8840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ddb35c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df71520"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ddb6b90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7ddb4448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ddb7a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ddbad80"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7df72340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ddb96a8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7ddb7260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ddb8ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ddb6758"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ddb8b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ddb3190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df71520"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ddb3a00"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7df72b00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7ddb9a00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ddb7ea8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ddb75b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7ddb9d58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7ddb4cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df71520"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ddb4880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df71520"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ddb9350"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7ddb84e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ddb8190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ddb2270"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7df72b00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7dda2d58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7dda20b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7dda55b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dda0368"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df71520"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7dda2920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7dda1270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7dda3820"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ddb0c50"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7df72340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7dda64e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7dda3010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7dda5c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7dda24e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7dda5910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7dda1f18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df71520"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7dda07a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7df72b00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7dda6840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7dda3c58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7dda3368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7dda6b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7dda1ae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df71520"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7dda16a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df71520"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7dda6190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7dda5260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7dda6ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dd9f010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7df72b00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7dd79648"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7dd5ab58"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7dd792e8"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7dd5a7d8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioTimeStamping" scoped="" ref="0x7dd7ce78"/></from>
      <to><interface-ref name="TimeStamp" scoped="" ref="0x7dd5a378"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7dd59030"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7e2c2180"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7dd567c0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7e2c5e88"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7dd551a8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7e050808"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7dd55bb8"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7e04ee78"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7dd561b0"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7e042c80"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7dd54610"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dcf3ce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7dcf3ce0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7df81be8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7dd54cd8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7dcf2410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7dcf2410"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7df72340"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7dd52288"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7dcf1010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7dcf1010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7dd525f8"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7dcf1a18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7dcf1a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7dd52970"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7dcf1d70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7dcf1d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7dd52ce8"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7dcf2c80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7dcf2c80"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7dd53dd0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7dce5190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7dce5190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dd53288"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7dce37e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dce37e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7df72b00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dd53980"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dce4b20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dce4b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df71520"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7dd51090"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7dce6d28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7dce6d28"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7dd43268"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7dcdb5b8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7dcdb5b8"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7dcd6880"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7dd58750"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7dc92120"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dd58d40"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dc92c08"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7dd43868"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ec15d00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7dce55c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7dce68f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7dce5a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7dce6080"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7dce7840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7dce74e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7dce7190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7dce46e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df71520"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7dce3010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7df72b00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7dce64b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7dce7b98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7dcf1368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7dce42b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df71520"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7dce5e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df71520"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7dcf2928"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7dcf16c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7dcdbe38"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7dcd51b8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7dcd0738"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ec15d00"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7dcd5528"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7e050808"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7dcd5eb8"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7e04f190"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7dcd4878"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7e04fb00"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7dcd3290"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7e045988"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7dcd38a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dc95158"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7dc95158"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7df81be8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7dcd2010"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7dc77368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7dc77368"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7df72b00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7dcd2a78"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7dc95d28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7dc95d28"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7dcd2700"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7dc7cb98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7dc7cb98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7dcd2e40"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7dc92120"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dcd1468"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dc92c08"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7dcd1890"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7e333340"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7dcc3b28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7dc7a920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7dc7bc58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7dc7c190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dc79f18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df71520"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7dc7a4e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7dc7ad58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7dc7b3e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7dc95810"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7df72340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7dc940b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7dc7c840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7dc7a0b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7dc7c4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7dc79ae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df71520"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7dc94408"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7dc7b820"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7dc7cef0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df71c00"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7dc94760"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7dc796a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df71520"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7dc79270"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df71520"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7dc94e10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7dc94ab8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dc77b40"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7df72b00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7dc57010"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7dc5c068"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7dc576b0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7dc5a148"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7dc5a148"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7df08c88"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7dc57e30"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e728760"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dc56288"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dc92c08"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7dc44d20"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7dc3eb90"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7dc3d278"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7dc430d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dc3d5a8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dc92c08"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7dc1f468"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7dc1b450"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7dc1b450"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7df08c88"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7dbff288"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e3e66a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Equal" scoped="" ref="0x7cb4ddc0"/></from>
      <to><interface-ref name="Equal" scoped="" ref="0x7dbe7938"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Equal" scoped="" ref="0x7cb2d110"/></from>
      <to><interface-ref name="Equal" scoped="" ref="0x7dbbb678"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7cb19610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7cb1e8f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7cb1e8f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dba2370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7dba2370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7db9bb30"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7db9bb30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7db1b810"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7db9b498"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7db89ac8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7db93338"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7dae1e90"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7db89ac8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7db82cf0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7daf2840"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7db3b7c0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7db21770"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7db88010"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7db88010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7db41150"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7dae77d0"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7db87878"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7db87878"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7db40a08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x7db40a08"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7cb0d520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7db82cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7cb108b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7db41150"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7cb10cf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7cb0c500"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e24bce8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7cb09290"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7e2424d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x7cb09ab8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7e242d28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7cb071c8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7e22d890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x7db20ea8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7daea708"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x7da9dc00"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7caa9520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x7caa9520"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ca6a0c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x7da9c5d8"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Receive" scoped="" ref="0x7caa62c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7caa62c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e3e9a30"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7caa62c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e3e7020"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x7da9cbb8"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Packet" scoped="" ref="0x7daa9bb0"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x7daa0010"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7e866ef8"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7daa1100"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e866010"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7daa0330"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e863228"/></to>
    </wire>
    <wire loc="73:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="PacketWaitList" scoped="" ref="0x7da9fe08"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7e862d20"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="PacketEngine" scoped="" ref="0x7daa0c68"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7e863b60"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7daa1a30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e866940"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7daa29f8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7e8648b0"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Equal" scoped="" ref="0x7da98d70"/></from>
      <to><interface-ref name="SendQueueEqual" scoped="" ref="0x7e8542a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DataCache" scoped="" ref="0x7da99830"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7ca9f5e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x7da945e0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7ca8c9d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x7da79408"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7ca828d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7da78da8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7df08c88"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7da75100"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dba2370"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Equal" scoped="" ref="0x7ca9db40"/></from>
      <to><interface-ref name="Equal" scoped="" ref="0x7da98d70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7caa9bb8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3e7340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7caa8310"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x7caa8f08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e3e66a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7ca6a790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da482f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ca6ae28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7da482f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da1d0f8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7da1d868"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e3e9100"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7da1df10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7da1cb08"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3e7340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x7da1b270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x7da1b6a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7caa65e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3e7340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7caa6c78"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x7d9f8810"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7d9eb158"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7d9f9330"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d9f0c48"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7d9f8258"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7d9ecb80"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7d9f9c60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d9ec5a8"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7d9ebe28"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7d9f7548"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7d9ea7d8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7d9f7ea8"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="SubIntercept" scoped="" ref="0x7d9eadc0"/></from>
      <to><interface-ref name="SubIntercept" scoped="" ref="0x7d9f54d0"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7d9e8188"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7daa0330"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d9e8830"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7d9a08c0"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7d9fa990"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d99f010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x7d9f7548"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Send" scoped="" ref="0x7ca2c568"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7ca2c568"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7daa1100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7eaa0290"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7ca2cc00"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7daa0330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketEngineClient" scoped="" ref="0x7da9b5d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7eaa0290"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PacketEngineClient" scoped="" ref="0x7ca276d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x7da9dc00"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ca25e38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x7ca25e38"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ca1cb10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x7da9c5d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ca20c10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7ca20c10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e3e9a30"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7ca20c10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e3e7020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x7da9cbb8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d99a3b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7ca22510"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3e7340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ca22ba8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x7ca21870"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e3e66a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7ca18260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da482f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ca188f8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7ca20f28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3e7340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ca1f5d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7ce5f150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7daa0330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketEngineClient" scoped="" ref="0x7da9b5d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7eaa0290"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PacketEngineClient" scoped="" ref="0x7ca09730"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7d991ef8"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7d9fa990"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d983230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d9f8b30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d9905a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x7d9f7ea8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ca04030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7ca04030"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7daa1a30"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7ca04348"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7daa0330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7d97f010"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7d9fa990"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d974310"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d9f8b30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d97f6a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubIntercept" scoped="" ref="0x7d9f54d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7ca00bd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Intercept" scoped="" ref="0x7ca00bd0"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7daa0010"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7ca00ee8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7daa0330"/></to>
    </wire>
    <wire loc="10:/opt/tinyos-2.x/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7d964100"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d7dae30"/></to>
    </wire>
    <wire loc="11:/opt/tinyos-2.x/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7d7d9b08"/></from>
      <to><interface-ref name="ReadPhoto" scoped="" ref="0x7d95d5b8"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadPhoto" scoped="" ref="0x7d95d5b8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d8bea20"/></to>
    </wire>
    <wire loc="12:/opt/tinyos-2.x/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7d7d7750"/></from>
      <to><interface-ref name="PhotoResource" scoped="" ref="0x7d95e158"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoResource" scoped="" ref="0x7d95e158"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d8e88c8"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadTemp" scoped="" ref="0x7d95c450"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d8a6e10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7d8e88c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7c9c47a0"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x7d95eae0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d8e5590"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7d8e5590"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7c7db2e8"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d8e0548"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d8e7438"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d8e7438"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7c9c2300"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7d8e0be0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7d8e7ad0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7d8e7ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7c9c2998"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7d8e1be0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7d8be340"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x7d8ac590"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d930b60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7d8accb8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d89eab8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d89eab8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dba2370"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x7d8a9bc8"/></from>
      <to><interface-ref name="Int1" scoped="" ref="0x7d951508"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7d951508"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x7eea3508"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x7d8a8660"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d8985e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7d8985e8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d893d70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d8c2548"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d8e4150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d8e4150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7c7dbe30"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7d8c2be0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7d8e47e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7d8e47e8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7c7da510"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7d8c3bc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7d8a6730"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x7d8a5990"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d930b60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7d8a30d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d89eab8"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x7d8a1010"/></from>
      <to><interface-ref name="Int2" scoped="" ref="0x7d951e78"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7d951e78"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7eea3e78"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x7d8a19f8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d8985e8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d7e0118"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d932c68"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempAdc" scoped="" ref="0x7d9341b8"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7d949590"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x7d949590"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7d945010"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x7d95adc0"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x7eee0808"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x7d9491c0"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x7d94ac80"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x7d955af8"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x7eed2508"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x7d953808"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x7eed0190"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x7d949c30"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x7d9456b0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x7d94b360"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x7d945d50"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x7d9567a8"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x7eed3190"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x7d954508"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x7eed2e78"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x7d952190"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x7eed0b00"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x7d94b6b0"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x7d9430b0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x7d955188"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x7eed3b00"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x7d954e78"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x7eed1808"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x7d9498e0"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x7d945360"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7d952b00"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7eeb0af8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x7d94b010"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x7d945a00"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x7d94ba00"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x7d943400"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7d950808"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x7eea2808"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7d92d2c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7c9e2030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d92d6d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7c9e2438"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7d930b60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7c9e48d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7d92dd68"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7c9e2ad0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7c9e1010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7d8ea2e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x7c9e1438"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7c9e5770"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x7c9e06d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7d8e7030"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7c9c4ee0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7c9c2e58"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7d8e6010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x7c9c1290"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7c9c5608"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x7c9c0510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7d8e5cd0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7c7dba28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7c7da9d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7d8e4c98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x7c7dadf8"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7c7dd170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x7c7d8030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x7c7b7ac8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7d8e1be0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7c7b5150"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7d8e0230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7c7b5468"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d8e0548"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7c7b5b00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7d8e0be0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="stopTask" scoped="" ref="0x7c7b4010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="startTask" scoped="" ref="0x7c7b4448"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x7c7a9270"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7d8c3bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7c7a9828"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7d8c2230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7c7a9b40"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d8c2548"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7c7a8230"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7d8c2be0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="stopTask" scoped="" ref="0x7c7a8668"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="startTask" scoped="" ref="0x7c7a8aa0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="stopDone" scoped="" ref="0x7d8a71a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="stopDone" scoped="" ref="0x7d8a0540"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d88d5c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d7e0118"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7d88dd40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d885ae8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7d87d428"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7d7e05f0"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7d893d70"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d7ff010"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7d88a710"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7d815e28"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7d7f2858"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d88dd40"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d813158"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d88d5c8"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7d7ffc98"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7d815010"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7d8149b0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7d87e898"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7d87e898"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7d874790"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7d878d08"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7d874c80"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7d885ae8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d84e8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7d84e8c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7c7855d8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7d82b010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7d87d428"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7d868188"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7d84d248"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7d84d248"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7d848a88"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7d8715c0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ef63c68"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7d8296e0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7d874388"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d829df0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d849438"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d849438"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7c784150"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7d847e40"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff2d38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7d849030"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7c785d18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7d849ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7c7847e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7c784ca8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7d82b010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x7c782170"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7c786460"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x7c781358"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7c761968"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7d8296e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7c761d60"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7d829ad8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7c760150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d829df0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7c7607e8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7d8284d0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7d80a5d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="DissNotify" scoped="" ref="0x7d02e720"/></from>
      <to><interface-ref name="DissNotify" scoped="" ref="0x7d1ff010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DissNotify" scoped="" ref="0x7d1ff010"/></from>
      <to><interface-ref name="DissNotify" scoped="" ref="0x7c671130"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="ReprogNotify" scoped="" ref="0x7d02d420"/></from>
      <to><interface-ref name="ReprogNotify" scoped="" ref="0x7d1ffd00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ReprogNotify" scoped="" ref="0x7d1ffd00"/></from>
      <to><interface-ref name="ReprogNotify" scoped="" ref="0x7c671e00"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x7d1fda10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x7d7ad4c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x7d1fc1e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x7d7a7828"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="DelugeStorage" scoped="" ref="0x7d1fca08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DelugeStorage" scoped="" ref="0x7d7a4b38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x7d1fda10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x7d7ad4c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x7d1fc1e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x7d7a7828"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="DelugeStorage" scoped="" ref="0x7d1fca08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DelugeStorage" scoped="" ref="0x7d7a4b38"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x7d1f0e70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x7d7ad4c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x7d1f37d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x7d7a7828"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x7d1f0e70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x7d7ad4c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x7d1f37d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x7d7a7828"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7d1f2010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7d7ce668"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7d038a40"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7d7ce668"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x7d032e28"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x7d083280"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x7d083280"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x7c5c2c70"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x7d0324e8"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x7d03b010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x7d03b010"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x7c5c19d0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="StdControlDissemination" scoped="" ref="0x7d030b08"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7d037e38"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7d037e38"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7d0ca040"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="ObjectTransfer" scoped="" ref="0x7d02f258"/></from>
      <to><interface-ref name="ObjectTransfer" scoped="" ref="0x7d1f05e8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ObjectTransfer" scoped="" ref="0x7d1f05e8"/></from>
      <to><interface-ref name="ObjectTransfer" scoped="" ref="0x7d1e2c58"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="NetProg" scoped="" ref="0x7d02f818"/></from>
      <to><interface-ref name="NetProg" scoped="" ref="0x7d238b20"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="NetProg" scoped="" ref="0x7d238b20"/></from>
      <to><interface-ref name="NetProg" scoped="" ref="0x7d216010"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="StorageReadyNotify" scoped="" ref="0x7d033768"/></from>
      <to><interface-ref name="ReadyNotify" scoped="" ref="0x7d79d468"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageC.nc">
      <from><interface-ref name="ReadyNotify" scoped="" ref="0x7d79d468"/></from>
      <to><interface-ref name="ReadyNotify" scoped="" ref="0x7d77a260"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x7d030f10"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x7d7a3010"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageC.nc">
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x7d7a3010"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x7d77ce40"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="RadioSplitControl" scoped="" ref="0x7d02e098"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e3ea808"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="IFlash" scoped="" ref="0x7d02fc48"/></from>
      <to><interface-ref name="InternalFlash" scoped="" ref="0x7d22a3b8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x7d7ad4c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x7d77d6e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x7d7a7828"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x7d77c100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x7d7ad4c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x7d77d6e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x7d7a7828"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x7d77c100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x7d791300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x7d5735b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x7d5735b0"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x7d719010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x7d791c68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x7d730d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x7d730d60"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x7d71b5d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x7d791300"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x7d56b4d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x7d56b4d0"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x7d719010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x7d791c68"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x7d572ca8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x7d572ca8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x7d71b5d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageC.nc">
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x7d77d010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x7d6a8ec0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageC.nc">
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x7d77d010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x7d6a8ec0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageC.nc">
      <from><interface-ref name="DelugeStorage" scoped="" ref="0x7d7a4b38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DelugeStorage" scoped="" ref="0x7d77cb18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageC.nc">
      <from><interface-ref name="DelugeStorage" scoped="" ref="0x7d7a4b38"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DelugeStorage" scoped="" ref="0x7d77cb18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7d790720"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ec15d00"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7d790400"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ef92bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x7d717ef0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x7d6a8ec0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x7d7c53c8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7d7165a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d6a1c50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:/opt/tinyos-2.x/tos/chips/at45db/WireBlockStorageP.nc">
      <from><interface-ref name="At45db" scoped="" ref="0x7d70cb40"/></from>
      <to><interface-ref name="At45db" scoped="" ref="0x7d6a28e0"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="At45db" scoped="" ref="0x7d6a28e0"/></from>
      <to><interface-ref name="At45db" scoped="" ref="0x7d68db20"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d6a0328"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d583a20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d583a20"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7c6fd970"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7d6a1c50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d590ec8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7d590ec8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7c6ffdd0"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7d6a09d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7d582150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7d582150"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7c6fc030"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="HplAt45db" scoped="" ref="0x7d67ec88"/></from>
      <to><interface-ref name="HplAt45db" scoped="" ref="0x7d61a960"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="HplAt45db" scoped="" ref="0x7d61a960"/></from>
      <to><interface-ref name="HplAt45db" scoped="" ref="0x7d616518"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7d67ae70"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7d5a05a8"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/at45db/At45dbP.nc">
      <from><interface-ref name="taskSuccess" scoped="" ref="0x7d6622e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/at45db/At45dbP.nc">
      <from><interface-ref name="taskFail" scoped="" ref="0x7d6611e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:/opt/tinyos-2.x/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7d615900"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d5cf140"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7d5cf140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d5a17c8"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.x/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="FlashSpi" scoped="" ref="0x7d5e0010"/></from>
      <to><interface-ref name="FlashSpi" scoped="" ref="0x7d5cf810"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="FlashSpi" scoped="" ref="0x7d5cf810"/></from>
      <to><interface-ref name="FlashSpi" scoped="" ref="0x7d5ca950"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.x/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="HplAt45dbByte" scoped="" ref="0x7d5e0328"/></from>
      <to><interface-ref name="HplAt45dbByte" scoped="" ref="0x7d5cfb38"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="HplAt45dbByte" scoped="" ref="0x7d5cfb38"/></from>
      <to><interface-ref name="HplAt45dbByte" scoped="" ref="0x7d5cac78"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Select" scoped="" ref="0x7d5c9468"/></from>
      <to><interface-ref name="PortA3" scoped="" ref="0x7ef019d8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Clk" scoped="" ref="0x7d5c9dd8"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x7eec06c8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="In" scoped="" ref="0x7d5c7188"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7eec2980"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Out" scoped="" ref="0x7d5c87a8"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x7eec1348"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="InInterrupt" scoped="" ref="0x7d5c7b08"/></from>
      <to><interface-ref name="Int2" scoped="" ref="0x7e00a510"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7d5c6458"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7d5a05a8"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOP.nc">
      <from><interface-ref name="avail" scoped="" ref="0x7d5b4010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="granted" scoped="" ref="0x7d59c2d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7d583618"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7c6fd568"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7c6fc4f0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7d582600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x7c6fc918"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7c701c68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x7c6fbb00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x7d717ef0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x7d6a8ec0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x7d7c53c8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7d7165a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d6a1c50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/lib/net/Deluge/SerialStarterC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7d2e5b20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7d55fa28"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7d55fa28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7d511920"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7d511920"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7d506b70"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7d55e288"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d558088"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7d55eed8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d522770"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7d55ebb8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d5587c8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7d55c248"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7d522e08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d55d590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7d558af0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7d5115f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d506848"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7d50d658"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7d55c758"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7d521360"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d510708"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7d521a18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d510178"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7d50d178"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7d2ea328"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7d510708"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d47a7b8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7d510178"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d47a3f8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7d43e010"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7d50d178"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7d4f7908"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7d50d658"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7d43d010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7d50d658"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7d425b48"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7d50d658"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7d43e4f8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7d4fdcf0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7d43e9d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7d5006b0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7d4f70a8"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7d436040"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7d4fb5f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7d4174f8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7d4174f8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7d414d20"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7d4252e8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7d417920"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7d417920"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7d40e5a8"/></to>
    </wire>
    <wire loc="326:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7d4c1a98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7d4dd588"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="320:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7d4c2af0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="335:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7d4b3350"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="receiveTask" scoped="" ref="0x7d43dc28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7d43c080"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7d412b28"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7d40e180"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7d40e180"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7d40ac68"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7d40e5a8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7d409098"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7d414d20"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7d40a850"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7d40d010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7d37dab0"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7d37dab0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7d379010"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7d3dcea8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7d40d010"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7d409930"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7d3c34f8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x7d3c34f8"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7d3bb3a8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7d409d68"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7d3c3930"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x7d3c3930"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7d3bb800"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x7d3dc270"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7d3c3d68"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x7d3c3d68"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7d3bbc58"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x7d3c0270"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7d3b9468"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x7d3c1970"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7d3bab40"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x7d3c1da8"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7d3b9010"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7d3b8010"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ef63c68"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7d3b86d8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff2d38"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7d2f0078"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7d378e80"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7d378e80"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7d2fda20"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7d2f6a68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d376cf0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7d376cf0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d35c0b0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7d370ac8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7d35be90"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7d366770"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7d35aa80"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7d3635b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7d357568"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7d3635b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7d356ce8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7d3635b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7d3534c8"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7d2fbf00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d376cf0"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/lib/net/Deluge/AutoStarterC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7d2d5388"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7d2e5b20"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/lib/net/Deluge/AutoStarterC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7d2d5060"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ef92bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x7c670b08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x7d1fda10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x7c66f2c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x7d1fc1e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x7c670b08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x7d1fda10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x7c66f2c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x7d1fc1e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SerialAMSender" scoped="" ref="0x7c66b1c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7c677128"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x7c677128"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7c659d48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SerialAMReceiver" scoped="" ref="0x7c66b880"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7c674ef0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7c674ef0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d55ebb8"/>
      <arguments>
        <value cst="I:171">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x7c66bb98"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7d25a178"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/NoLedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7d25a178"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7d259e30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NetProg" scoped="" ref="0x7c66fe10"/></from>
      <to><interface-ref name="NetProg" scoped="" ref="0x7d238b20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7c66e2e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7c668858"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7c668858"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dba2370"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeStorage" scoped="" ref="0x7c66fae8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DelugeStorage" scoped="" ref="0x7d1fca08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeStorage" scoped="" ref="0x7c66fae8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DelugeStorage" scoped="" ref="0x7d1fca08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7c6777c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d55eed8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7c677e58"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7d55d590"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x7c675a70"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7d55c248"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7c655428"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d2c01a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7c655ac0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7d55d590"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7d2c01a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d2be758"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7d2beec8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d55e288"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d2bd580"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7d55d590"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7d2bc230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d55eed8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x7d2bc908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x7d2bcd40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7c673220"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d55eed8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7c6738b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7d55d590"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/NoLedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7d25ee18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d259af0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="DelugeStorage" scoped="" ref="0x7d216a08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DelugeStorage" scoped="" ref="0x7d7a4b38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="DelugeStorage" scoped="" ref="0x7d216a08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DelugeStorage" scoped="" ref="0x7d7a4b38"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x7d215560"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x7d7a3010"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="IFlash" scoped="" ref="0x7d216d58"/></from>
      <to><interface-ref name="InternalFlash" scoped="" ref="0x7d22a3b8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="Crc" scoped="" ref="0x7d215238"/></from>
      <to><interface-ref name="Crc" scoped="" ref="0x7d220cb8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7d215880"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ec15d00"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7d2144e0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7e32c420"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><function-ref name="setAmAddress" scoped="" ref="0x7d2136e0"/></from>
      <to><function-ref name="setAmAddress" scoped="" ref="0x7dd996d8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x7d19cb38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x7d1f0e70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x7d19b4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x7d1f37d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x7d19cb38"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x7d1f0e70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x7d19b4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x7d1f37d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="DelugePageTransfer" scoped="" ref="0x7d1d7910"/></from>
      <to><interface-ref name="DelugePageTransfer" scoped="" ref="0x7d19c010"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="DelugePageTransfer" scoped="" ref="0x7d19c010"/></from>
      <to><interface-ref name="DelugePageTransfer" scoped="" ref="0x7d193618"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Crc" scoped="" ref="0x7d1dc238"/></from>
      <to><interface-ref name="Crc" scoped="" ref="0x7d220cb8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="SendAdvMsg" scoped="" ref="0x7d1dc588"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d120080"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x7d120080"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7c5f91f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ReceiveAdvMsg" scoped="" ref="0x7d1dcc58"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d11bc28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d11bc28"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e3e9a30"/>
      <arguments>
        <value cst="I:161">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="SendReqMsg" scoped="" ref="0x7d19aa30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d1151f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x7d1151f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7c5eb8f8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ReceiveReqMsg" scoped="" ref="0x7d19a010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d112070"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d112070"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e3e9a30"/>
      <arguments>
        <value cst="I:162">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="SendDataMsg" scoped="" ref="0x7d19a360"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d10f520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x7d10f520"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7c5d3030"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ReceiveDataMsg" scoped="" ref="0x7d19bc80"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d10c428"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d10c428"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e3e9a30"/>
      <arguments>
        <value cst="I:163">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d199160"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7d10e310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d10e310"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7d198240"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7d1f2010"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x7d1db258"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x7d1f37d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x7d1db258"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x7d1f37d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7d1e0268"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e728760"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7d1e0728"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d1097b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d1097b8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dba2370"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferP.nc">
      <from><interface-ref name="signalObjRecvDone" scoped="" ref="0x7d1cf238"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x7d190100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x7d19cb38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x7d190a38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x7d19b4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x7d190100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x7d19cb38"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x7d190a38"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x7d19b4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="ReceiveDataMsg" scoped="" ref="0x7d18a268"/></from>
      <to><interface-ref name="ReceiveDataMsg" scoped="" ref="0x7d19bc80"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="ReceiveReqMsg" scoped="" ref="0x7d18a5b8"/></from>
      <to><interface-ref name="ReceiveReqMsg" scoped="" ref="0x7d19a010"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="SendDataMsg" scoped="" ref="0x7d18a908"/></from>
      <to><interface-ref name="SendDataMsg" scoped="" ref="0x7d19a360"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="SendReqMsg" scoped="" ref="0x7d185010"/></from>
      <to><interface-ref name="SendReqMsg" scoped="" ref="0x7d19aa30"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d1856b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7d199160"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7d184328"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7d199d50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7d182768"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e728760"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7d1848c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d135920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d135920"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dba2370"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BitVecUtils" scoped="" ref="0x7d187920"/></from>
      <to><interface-ref name="BitVecUtils" scoped="" ref="0x7d133d60"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7d182b68"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7d198240"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d120718"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3e7340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d120db0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x7d11ea30"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e3e66a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7c5f98b8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da482f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7c5f8010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d11a010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3e7340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d11a6a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d115890"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3e7340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d115f28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x7d114b30"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e3e66a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7c5e7010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da482f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7c5e76a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d112388"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3e7340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d112a20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d10fbb8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3e7340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x7d10ef08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e3e66a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7c5d36f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da482f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7c5d3d90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d10c740"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3e7340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d10cdd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x7d0ca718"/>
      <arguments>
        <value cst="I:56832">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x7c5bf288"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x7d0c7860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7c5c27c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7d0c4ea8"/>
      <arguments>
        <value cst="I:56832">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7d082908"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x7c5bfa20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ec15d00"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7d0ca040"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7d0c0060"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x7d0c0738"/></from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x7d0ca718"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7d0bf178"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7d0c4ea8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x7d0bfaf0"/></from>
      <to><interface-ref name="DisseminatorControl" scoped="" ref="0x7d0c7860"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7d0bfef0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d0c2e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x7d0c2e40"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7c5b1e68"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7d0bd5a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d090f18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d090f18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e3e9a30"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeAMSend" scoped="" ref="0x7d0bd8f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d08d520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x7d08d520"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7c5995f8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeReceive" scoped="" ref="0x7d0bc010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d0896a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d0896a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e3e9a30"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7d0bc330"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7d25a178"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d0c1510"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3e7340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d0c1ba8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x7d091870"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e3e66a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7c5ae540"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da482f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7c5aebd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d08f248"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3e7340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d08f8e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d08dbb8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3e7340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d08b310"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x7d08bf08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e3e66a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7c599cc0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da482f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7c5983f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d0899b8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3e7340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d088070"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationTimerP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7d082908"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7d040438"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7d040438"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7c58a8d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7c588058"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7c582d38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7c582d38"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dba2370"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Random" scoped="" ref="0x7c585310"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e728760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Changed" scoped="" ref="0x7c586968"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7c57d250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pending" scoped="" ref="0x7c586010"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7c57f9e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x7c585708"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ec15d00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="timerTask" scoped="" ref="0x7c584350"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d035620"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dba2370"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="15:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10;</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <documentation loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10;</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10;</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10;</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.8 2007/04/08 01:17:12 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MultihopLightC" loc="76:MultihopLightC.nc">
      <documentation loc="76:MultihopLightC.nc">
        <short>&#10; Implementation of the MultihopLight demo application.</short>
        <long>&#10; Implementation of the MultihopLight demo application. The intensity of light&#10; at a source mote is used to control an LED at a destination mote. The COMPASS&#10; multihop framework is used to allow the source and destination to be an&#10; arbitrary number of hops away from each other. By reducing radio power to a&#10; low level, this application acts as simple visual demo of the utility of&#10; multihop communication.&#10;&#10; @author Ryan Stinnett&#10; @author Philip Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10;</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10;</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MultihopLightAppC.SenderC" loc="42(MultihopLightAppC.SenderC):../../../tos/lib/netarch/single/SingleSenderC.nc">
      <instance number="0">
        <component-ref qname="SingleSenderC"/>
        <arguments>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP" loc="40:../../../tos/lib/netarch/dsr/DsrP.nc">
      <documentation loc="40:../../../tos/lib/netarch/dsr/DsrP.nc">
        <short>&#10;&#10; Bundles the components which route and process DSR.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Bundles the components which route and process DSR.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DsrOptionsC" loc="40:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <configuration/>
    </component>
    <component qname="DsrOptionsC.TlvC" loc="45(DsrOptionsC.TlvC):../../../tos/lib/netarch/tlv/TlvPacketC.nc">
      <documentation loc="45(DsrOptionsC.TlvC):../../../tos/lib/netarch/tlv/TlvPacketC.nc">
        <short>&#10;&#10; A general Type-Length-Value (TLV) data processor within a packet.&#10;&#10;</short>
        <long>&#10;&#10; A general Type-Length-Value (TLV) data processor within a packet.&#10;&#10; This component does not assume any ordering by type among the TLV&#10;&#10; types in a block of types.  If at most one instance of a type is&#10;&#10; allowed, access the type via the TlvSingle interface.  If any number&#10;&#10; of instances are allowed, access the type via the TlvMultiple and&#10;&#10; TlvList interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TlvPacketC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrOptionsC.TlvC.TlvPacketP" loc="45(DsrOptionsC.TlvC.TlvPacketP):../../../tos/lib/netarch/tlv/TlvPacketP.nc">
      <documentation loc="45(DsrOptionsC.TlvC.TlvPacketP):../../../tos/lib/netarch/tlv/TlvPacketP.nc">
        <short>&#10;&#10; A general Type-Length-Value (TLV) data processor within a packet.&#10;&#10;</short>
        <long>&#10;&#10; A general Type-Length-Value (TLV) data processor within a packet.&#10;&#10; This component does not assume any ordering by type among the TLV&#10;&#10; types in a block of types.  If at most one instance of a type is&#10;&#10; allowed, access the type via the TlvSingle interface.  If any number&#10;&#10; of instances are allowed, access the type via the TlvMultiple and&#10;&#10; TlvList interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TlvPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="TlvP" loc="45:../../../tos/lib/netarch/tlv/TlvP.nc">
      <documentation loc="45:../../../tos/lib/netarch/tlv/TlvP.nc">
        <short>&#10;&#10; A general Type-Length-Value (TLV) data processor. </short>
        <long>&#10;&#10; A general Type-Length-Value (TLV) data processor.  This component&#10;&#10; does not assume any ordering by type among the TLV types in a&#10;&#10; block of types.  If at most one instance of a type is allowed,&#10;&#10; access the type via the TlvSingle interface.  If any number of&#10;&#10; instances are allowed, access the type via the TlvMultiple and&#10;&#10; TlvList interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketEngineP" loc="80:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <documentation loc="80:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
        <short>&#10;&#10; Queues packets sent, received, and overheard for a multihop routing&#10;&#10; protocol. </short>
        <long>&#10;&#10; Queues packets sent, received, and overheard for a multihop routing&#10;&#10; protocol.  This &#34;packet engine&#34; is intended to be flexible enough to&#10;&#10; support a wide array of possible protocols.&#10;&#10;&#10;&#10; A control component using the PacketEngine interfaces provided here&#10;&#10; is notified of and can control all of the above packets, while not&#10;&#10; having to deal with packet management issues itself.&#10;&#10;&#10;&#10; At any time after being notified of a packet's reception, the control&#10;&#10; component can modify the packet (if needed) and then instruct this engine&#10;&#10; to take one of the following actions:&#10;&#10;   - Send (pass to lower layer)&#10;&#10;   - Send with Intercept (pass to lower layer if upper layer approves)&#10;&#10;   - Receive (pass to upper layer)&#10;&#10;   - Drop (silently remove)&#10;&#10;&#10;&#10; Note that this allows for some unusual actions to take place, such as&#10;&#10; forcing a receive on a packet the upper layer has sent (which also&#10;&#10; means it won't go on the radio anymore).&#10;&#10;&#10;&#10; The control component is responsible for ensuring the packet is valid&#10;&#10; if it makes any modifications.  For example, it must update the payload&#10;&#10; length if the size of the payload changes.&#10;&#10;&#10;&#10; This component does not request acknowledgements or use any kind of&#10;&#10; automatic retry scheme.  However, the return value of the&#10;&#10; PacketEngine.sendDone event allows the control component to request&#10;&#10; a retry for any packet that failed to send.  The control component or&#10;&#10; the upper layer is certainly free to request acknowledgments on its own.&#10;&#10;&#10;&#10; When disabled, no new packets are accepted into the buffer and the&#10;&#10; packets already in the buffer are not processed but do remain in&#10;&#10; the buffer.  Processing resumes when enabled again.&#10;&#10;&#10;&#10; The AM type of packets sent from the upper layer is copied into the&#10;&#10; packet payload for storage so that multihop protocols can use AM types&#10;&#10; of their own without collisions.&#10;&#10;&#10;&#10; Based on TransceiverM by David Moss, CtpForwardingEngineP by Phil Levis,&#10;&#10; Kyle Jamieson, Omprakash Gnawali, and Rodrigo Fonseca, and&#10;&#10; ForwardingEngineM by Roamin Thouvenin.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="31:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10;</short>
        <long>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10; @author  Barbara Hohlt&#10; @author  Philip Levis&#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgP" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers. </short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;		S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DsrP.DsrControlP" loc="89(DsrP.DsrControlP):../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <instance number="0">
        <component-ref qname="DsrControlP"/>
        <arguments>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC" loc="40(DsrP.DsrRouteCacheC):../../../tos/lib/netarch/dsr/DsrRouteCacheC.nc">
      <documentation loc="40(DsrP.DsrRouteCacheC):../../../tos/lib/netarch/dsr/DsrRouteCacheC.nc">
        <short>&#10;&#10; Defines the default route cache to use with DSR.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Defines the default route cache to use with DSR.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DsrRouteCacheC"/>
        <arguments>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC" loc="42(DsrP.DsrRouteCacheC.SimpleLinkCacheC):../../../tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
      <instance number="0">
        <component-ref qname="SimpleLinkCacheC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7e7097c8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleLinkCacheP" loc="41:../../../tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <documentation loc="41:../../../tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
        <short>&#10;&#10; A simple link cache that does not automatically remove links and&#10;&#10; assigns a weight of 1 to all links.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; A simple link cache that does not automatically remove links and&#10;&#10; assigns a weight of 1 to all links.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC" loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC):../../../tos/lib/data/graph/GraphWeightedC.nc">
      <documentation loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC):../../../tos/lib/data/graph/GraphWeightedC.nc">
        <short>&#10;&#10; Builds a weighted graph as edges are added and supports finding the single&#10;&#10; source shortest path.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Builds a weighted graph as edges are added and supports finding the single&#10;&#10; source shortest path.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GraphWeightedC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7e7097c8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7e5eac00"/></typename>
          </type-int>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC" loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC):../../../tos/lib/data/graph/GraphSparseC.nc">
      <documentation loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC):../../../tos/lib/data/graph/GraphSparseC.nc">
        <short>&#10;&#10; Wires supporting modules needed by any GraphSparseP. </short>
        <long>&#10;&#10; Wires supporting modules needed by any GraphSparseP.  This should be&#10;&#10; combined with a weight module and any processing modules.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GraphSparseC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC" loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC):../../../tos/lib/data/alloc/IndexedAllocC.nc">
      <instance number="0">
        <component-ref qname="IndexedAllocC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits" loc="39(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits):../../../tos/lib/data/alloc/IndexedAllocBitsC.nc">
      <documentation loc="39(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits):../../../tos/lib/data/alloc/IndexedAllocBitsC.nc">
        <short>&#10;&#10; Packages IndexedAllocBitsP together with its dependencies to create an&#10;&#10; easily usable component.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Packages IndexedAllocBitsP together with its dependencies to create an&#10;&#10; easily usable component.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IndexedAllocBitsC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5919f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits" loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5919f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits" loc="42(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits):../../../tos/lib/data/alloc/IndexedAllocBitsP.nc">
      <documentation loc="42(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits):../../../tos/lib/data/alloc/IndexedAllocBitsP.nc">
        <short>&#10;&#10; A compact indexed allocation scheme using only a bit vector to track the&#10;&#10; elements. </short>
        <long>&#10;&#10; A compact indexed allocation scheme using only a bit vector to track the&#10;&#10; elements.  While this is surely slower than a pointer-based system, it uses&#10;&#10; much less memory.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IndexedAllocBitsP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5919f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP" loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP):../../../tos/lib/data/graph/GraphSparseP.nc">
      <documentation loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP):../../../tos/lib/data/graph/GraphSparseP.nc">
        <short>&#10;&#10; A sparse graph using adjacency lists.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; A sparse graph using adjacency lists.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GraphSparseP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC" loc="38(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC):../../../tos/lib/data/graph/SourceShortestPathC.nc">
      <documentation loc="38(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC):../../../tos/lib/data/graph/SourceShortestPathC.nc">
        <short>&#10;&#10; Wires supporting modules needed by any SourceShortestPathP.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Wires supporting modules needed by any SourceShortestPathP.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SourceShortestPathC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </value>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7e5ac7f8"/></type-var>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC" loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC):../../../tos/lib/data/queue/PriorityQueueC.nc">
      <instance number="0">
        <component-ref qname="PriorityQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP" loc="44(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP):../../../tos/lib/data/queue/PriorityQueueP.nc">
      <documentation loc="44(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP):../../../tos/lib/data/queue/PriorityQueueP.nc">
        <short>&#10;&#10; Implements a priority queue sitting on top of an index heap. </short>
        <long>&#10;&#10; Implements a priority queue sitting on top of an index heap.  It be either a&#10;&#10; min or max heap depending on the implementation of the Compare.test command.&#10;&#10; Since this is an index heap, none of the priorities are actually stored here.&#10;&#10; Instead, a component needs only to answer calls of Compare.test (which would&#10;&#10; typically be based on the priorities in some array owned by that component).&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PriorityQueueP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e512270"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP" loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP):../../../tos/lib/data/graph/SourceShortestPathP.nc">
      <documentation loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP):../../../tos/lib/data/graph/SourceShortestPathP.nc">
        <short>&#10;&#10; Uses Djikstra's algorithm with a priority queue holding fringe vertices to&#10;&#10; find the single source shortest path. </short>
        <long>&#10;&#10; Uses Djikstra's algorithm with a priority queue holding fringe vertices to&#10;&#10; find the single source shortest path.  All weights are assumed to be&#10;&#10; non-negative.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SourceShortestPathP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </value>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7e51c630"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.TrackC" loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.TrackC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.TrackC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.InitialC" loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.InitialC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.InitialC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="GraphEdgeUnitWeightC" loc="40:../../../tos/lib/data/graph/GraphEdgeUnitWeightC.nc">
      <documentation loc="40:../../../tos/lib/data/graph/GraphEdgeUnitWeightC.nc">
        <short>&#10;&#10; All edges are fixed at unit weight.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; All edges are fixed at unit weight.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="47:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaZ platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaZ platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio.</short>
        <long>&#10; The Active Message layer for the CC2420 radio. This configuration&#10; just layers the AM dispatch (CC2420ActiveMessageM) on top of the&#10; underlying CC2420 radio packet (CC2420CsmaCsmaCC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group). Note that snooping may not work, due to CC2420&#10; early packet rejection if acknowledgements are enabled.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @version $Revision: 1.9 $ $Date: 2007/09/14 00:15:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2007/09/13 23:10:16 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2007/09/13 23:10:16 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.3 $ $Date: 2007/11/19 15:48:54 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10;</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x7f080b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <documentation loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10;</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.4 2006/12/12 18:23:44 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.&#10;</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.5 2007/04/30 17:31:08 rincon Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.2 $ $Date: 2007/11/07 22:22:01 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/system/StateImplC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.x/tos/system/StateImplP.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/system/StateImplP.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.&#10;&#10;</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller. </short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.6 2007/02/28 17:33:59 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10;</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <documentation loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10;</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.&#10;&#10;</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @version $Revision: 1.4 $ $Date: 2007/09/13 23:10:16 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10;</short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10;</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(UniqueSendC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10;</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10;</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="61:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks. </short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10;</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10;</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(DummyLplC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10;</short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10;</short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DsrP.RouteRequestInCacheC" loc="30(DsrP.RouteRequestInCacheC):../../../tos/lib/data/cache/LruDataCacheC.nc">
      <documentation loc="30(DsrP.RouteRequestInCacheC):../../../tos/lib/data/cache/LruDataCacheC.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10;</short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10; @author Ryan Stinnett&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruDataCacheC"/>
        <arguments>
          <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7ea61350"/>
            <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7ea61670"/></typename>
          </type-tag>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.RouteRequestInCacheC.CacheP" loc="67(DsrP.RouteRequestInCacheC.CacheP):../../../tos/lib/data/cache/LruDataCacheP.nc">
      <documentation loc="67(DsrP.RouteRequestInCacheC.CacheP):../../../tos/lib/data/cache/LruDataCacheP.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;. </short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.  Inserting a data item not in the cache will replace&#10; the oldest, and inserting an element already in the cache will refresh&#10; its age.  Insert and lookup return a pointer to the cached data.  This&#10; component should be wired to an Equal interface to check for equality&#10; on the data type used.&#10;&#10; @author Ryan Stinnett&#10; @author Rodrigo Fonseca&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruDataCacheP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_cache_item_t" scoped="" ref="0x7dbe6538"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.RouteRequestOutCacheC" loc="30(DsrP.RouteRequestOutCacheC):../../../tos/lib/data/cache/LruDataCacheC.nc">
      <documentation loc="30(DsrP.RouteRequestOutCacheC):../../../tos/lib/data/cache/LruDataCacheC.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10;</short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10; @author Ryan Stinnett&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="LruDataCacheC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7ea63a78"/>
            <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7ea63db8"/></typename>
          </type-tag>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.RouteRequestOutCacheC.CacheP" loc="67(DsrP.RouteRequestOutCacheC.CacheP):../../../tos/lib/data/cache/LruDataCacheP.nc">
      <documentation loc="67(DsrP.RouteRequestOutCacheC.CacheP):../../../tos/lib/data/cache/LruDataCacheP.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;. </short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.  Inserting a data item not in the cache will replace&#10; the oldest, and inserting an element already in the cache will refresh&#10; its age.  Insert and lookup return a pointer to the cached data.  This&#10; component should be wired to an Equal interface to check for equality&#10; on the data type used.&#10;&#10; @author Ryan Stinnett&#10; @author Rodrigo Fonseca&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="LruDataCacheP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_cache_item_t" scoped="" ref="0x7dbe6538"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.RouteRequestOutTimerC" loc="39(DsrP.RouteRequestOutTimerC):../../../tos/lib/data/timer/DataTimerC.nc">
      <documentation loc="39(DsrP.RouteRequestOutTimerC):../../../tos/lib/data/timer/DataTimerC.nc">
        <short>&#10;&#10; A timed series of data items. </short>
        <long>&#10;&#10; A timed series of data items.  The client is notified as each item&#10;&#10; expires.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DataTimerC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba1930"/></typename>
          </type-int>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.RouteRequestOutTimerC.TimerMilliC" loc="36(DsrP.RouteRequestOutTimerC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(DsrP.RouteRequestOutTimerC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer. </short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7db81910"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <value cst="I:9">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.RouteRequestOutTimerC.DataTimerP" loc="44(DsrP.RouteRequestOutTimerC.DataTimerP):../../../tos/lib/data/timer/DataTimerP.nc">
      <documentation loc="44(DsrP.RouteRequestOutTimerC.DataTimerP):../../../tos/lib/data/timer/DataTimerP.nc">
        <short>&#10;&#10; A timed series of data items. </short>
        <long>&#10;&#10; A timed series of data items.  The client is notified as each item&#10;&#10; expires.  Uses the Equal interface to allow complex data types, but&#10;&#10; the default supplied works for primitive types.&#10;&#10;&#10;&#10; TODO: Change to use a &#34;first&#34;.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DataTimerP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_timer_data_t" scoped="" ref="0x7dbb56e0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.ComposeC" loc="33(DsrP.ComposeC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="33(DsrP.ComposeC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.SalvageC" loc="33(DsrP.SalvageC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="33(DsrP.SalvageC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrC.DsrTransceiverC" loc="42(DsrC.DsrTransceiverC):../../../tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <documentation loc="42(DsrC.DsrTransceiverC):../../../tos/lib/netarch/multihop/PacketTransceiverC.nc">
        <short>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type. </short>
        <long>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type.  The Packet&#10;&#10; interface used by this component should be provided by the protocol.&#10;&#10; Similarly, the SubPacket interface provided by this component should&#10;&#10; be used by the protocol to complete the chain of Packet interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketTransceiverC"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketEngineC" loc="40:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <documentation loc="40:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
        <short>&#10;&#10; Wires supporting modules needed by any PacketEngineP.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Wires supporting modules needed by any PacketEngineP.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketEngineC.SendQueueC" loc="30(PacketEngineC.SendQueueC):../../../tos/lib/data/cache/LruDataCacheC.nc">
      <documentation loc="30(PacketEngineC.SendQueueC):../../../tos/lib/data/cache/LruDataCacheC.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10;</short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10; @author Ryan Stinnett&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="LruDataCacheC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ea92af8"/>
            <typename><typedef-ref name="packet_send_entry_t" ref="0x7ea92d48"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketEngineC.SendQueueC.CacheP" loc="67(PacketEngineC.SendQueueC.CacheP):../../../tos/lib/data/cache/LruDataCacheP.nc">
      <documentation loc="67(PacketEngineC.SendQueueC.CacheP):../../../tos/lib/data/cache/LruDataCacheP.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;. </short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.  Inserting a data item not in the cache will replace&#10; the oldest, and inserting an element already in the cache will refresh&#10; its age.  Insert and lookup return a pointer to the cached data.  This&#10; component should be wired to an Equal interface to check for equality&#10; on the data type used.&#10;&#10; @author Ryan Stinnett&#10; @author Rodrigo Fonseca&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="LruDataCacheP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_cache_item_t" scoped="" ref="0x7dbe6538"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PacketEngineC.ReceivePoolC" loc="41(PacketEngineC.ReceivePoolC):/opt/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="41(PacketEngineC.ReceivePoolC):/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.&#10;&#10; </short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
            <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketEngineC.ReceivePoolC.PoolP" loc="53(PacketEngineC.ReceivePoolC.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="53(PacketEngineC.ReceivePoolC.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.&#10; </short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7da928f8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PacketEngineC.SendPoolC" loc="41(PacketEngineC.SendPoolC):/opt/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="41(PacketEngineC.SendPoolC):/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.&#10;&#10; </short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
            <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketEngineC.SendPoolC.PoolP" loc="53(PacketEngineC.SendPoolC.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="53(PacketEngineC.SendPoolC.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.&#10; </short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7da928f8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PacketEngineC.SendStateC" loc="65(PacketEngineC.SendStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(PacketEngineC.SendStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketEngineC.SendBackoffC" loc="36(PacketEngineC.SendBackoffC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(PacketEngineC.SendBackoffC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrTransceiverC.AMSenderC" loc="39(DsrC.DsrTransceiverC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="39(DsrC.DsrTransceiverC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP" loc="35(DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="35(DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.&#10;&#10;</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrC.DsrTransceiverC.AMSnoopingReceiverC" loc="36(DsrC.DsrTransceiverC.AMSnoopingReceiverC):/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <documentation loc="36(DsrC.DsrTransceiverC.AMSnoopingReceiverC):/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
        <short>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10;</short>
        <long>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnoopingReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.SinglePacketProcessorC" loc="39(DsrC.SinglePacketProcessorC):../../../tos/lib/netarch/multihop/PacketProcessorC.nc">
      <documentation loc="39(DsrC.SinglePacketProcessorC):../../../tos/lib/netarch/multihop/PacketProcessorC.nc">
        <short>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketProcessorC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrPacketProcessorC" loc="39(DsrC.DsrPacketProcessorC):../../../tos/lib/netarch/multihop/PacketProcessorC.nc">
      <documentation loc="39(DsrC.DsrPacketProcessorC):../../../tos/lib/netarch/multihop/PacketProcessorC.nc">
        <short>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketProcessorC"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SinglePacketC" loc="40:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <documentation loc="40:../../../tos/lib/netarch/single/SinglePacketC.nc">
        <short>&#10;&#10; Connects to SinglePacketP to supporting modules.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Connects to SinglePacketP to supporting modules.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SinglePacketP" loc="42:../../../tos/lib/netarch/single/SinglePacketP.nc">
      <documentation loc="42:../../../tos/lib/netarch/single/SinglePacketP.nc">
        <short>&#10;&#10; Access and set the properties of a multihop packet with a single&#10;&#10; node address based destination.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access and set the properties of a multihop packet with a single&#10;&#10; node address based destination.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DsrC.DsrSendC" loc="41(DsrC.DsrSendC):../../../tos/lib/netarch/single/SingleProcessorSenderC.nc">
      <documentation loc="41(DsrC.DsrSendC):../../../tos/lib/netarch/single/SingleProcessorSenderC.nc">
        <short>&#10;&#10; Modified sender for single destination multihop packets of created&#10;&#10; by a PacketEngine processor for a given link layer AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Modified sender for single destination multihop packets of created&#10;&#10; by a PacketEngine processor for a given link layer AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SingleProcessorSenderC"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrSendC.PacketSenderC" loc="39(DsrC.DsrSendC.PacketSenderC):../../../tos/lib/netarch/multihop/PacketSenderC.nc">
      <documentation loc="39(DsrC.DsrSendC.PacketSenderC):../../../tos/lib/netarch/multihop/PacketSenderC.nc">
        <short>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketSenderC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrSendC.PacketSenderC.PacketEngineClientP" loc="40(DsrC.DsrSendC.PacketSenderC.PacketEngineClientP):../../../tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <documentation loc="40(DsrC.DsrSendC.PacketSenderC.PacketEngineClientP):../../../tos/lib/netarch/multihop/PacketEngineClientP.nc">
        <short>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client. </short>
        <long>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.  These values are stored statically so that no&#10;&#10; RAM is used up to hold them.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketEngineClientP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SingleProtocolC.TransceiverC" loc="42(SingleProtocolC.TransceiverC):../../../tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <documentation loc="42(SingleProtocolC.TransceiverC):../../../tos/lib/netarch/multihop/PacketTransceiverC.nc">
        <short>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type. </short>
        <long>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type.  The Packet&#10;&#10; interface used by this component should be provided by the protocol.&#10;&#10; Similarly, the SubPacket interface provided by this component should&#10;&#10; be used by the protocol to complete the chain of Packet interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketTransceiverC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SingleProtocolC.TransceiverC.AMSenderC" loc="39(SingleProtocolC.TransceiverC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="39(SingleProtocolC.TransceiverC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP" loc="35(SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="35(SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SingleProtocolC.TransceiverC.AMSnoopingReceiverC" loc="36(SingleProtocolC.TransceiverC.AMSnoopingReceiverC):/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <documentation loc="36(SingleProtocolC.TransceiverC.AMSnoopingReceiverC):/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
        <short>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10;</short>
        <long>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSnoopingReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopLightAppC.SenderC.PacketSenderC" loc="39(MultihopLightAppC.SenderC.PacketSenderC):../../../tos/lib/netarch/multihop/PacketSenderC.nc">
      <documentation loc="39(MultihopLightAppC.SenderC.PacketSenderC):../../../tos/lib/netarch/multihop/PacketSenderC.nc">
        <short>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopLightAppC.SenderC.PacketSenderC.PacketEngineClientP" loc="40(MultihopLightAppC.SenderC.PacketSenderC.PacketEngineClientP):../../../tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <documentation loc="40(MultihopLightAppC.SenderC.PacketSenderC.PacketEngineClientP):../../../tos/lib/netarch/multihop/PacketEngineClientP.nc">
        <short>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client. </short>
        <long>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.  These values are stored statically so that no&#10;&#10; RAM is used up to hold them.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketEngineClientP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopLightAppC.ReceiverC" loc="41(MultihopLightAppC.ReceiverC):../../../tos/lib/netarch/single/SingleReceiverC.nc">
      <documentation loc="41(MultihopLightAppC.ReceiverC):../../../tos/lib/netarch/single/SingleReceiverC.nc">
        <short>&#10;&#10; Receiver for single destination multihop packets of a given&#10;&#10; application layer AM type that are destined for this node.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Receiver for single destination multihop packets of a given&#10;&#10; application layer AM type that are destined for this node.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SingleReceiverC"/>
        <arguments>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopLightAppC.ReceiverC.PacketReceiverC" loc="39(MultihopLightAppC.ReceiverC.PacketReceiverC):../../../tos/lib/netarch/multihop/PacketReceiverC.nc">
      <documentation loc="39(MultihopLightAppC.ReceiverC.PacketReceiverC):../../../tos/lib/netarch/multihop/PacketReceiverC.nc">
        <short>&#10;&#10; Receiver for generic multihop packets of a given application layer&#10;&#10; AM type that are destined for this node.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Receiver for generic multihop packets of a given application layer&#10;&#10; AM type that are destined for this node.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopLightAppC.InterceptorC" loc="42(MultihopLightAppC.InterceptorC):../../../tos/lib/netarch/single/SingleInterceptorC.nc">
      <documentation loc="42(MultihopLightAppC.InterceptorC):../../../tos/lib/netarch/single/SingleInterceptorC.nc">
        <short>&#10;&#10; Interceptor for single destination multihop packets of a given&#10;&#10; application layer AM type  This allows an application to modify or&#10;&#10; drop any packets just before they would normally be sent.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Interceptor for single destination multihop packets of a given&#10;&#10; application layer AM type  This allows an application to modify or&#10;&#10; drop any packets just before they would normally be sent.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SingleInterceptorC"/>
        <arguments>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopLightAppC.InterceptorC.PacketInterceptorC" loc="40(MultihopLightAppC.InterceptorC.PacketInterceptorC):../../../tos/lib/netarch/multihop/PacketInterceptorC.nc">
      <documentation loc="40(MultihopLightAppC.InterceptorC.PacketInterceptorC):../../../tos/lib/netarch/multihop/PacketInterceptorC.nc">
        <short>&#10;&#10; Interceptor for generic multihop packets of a given application layer&#10;&#10; AM type. </short>
        <long>&#10;&#10; Interceptor for generic multihop packets of a given application layer&#10;&#10; AM type.  This allows an application to modify or drop any packets&#10;&#10; just before they would normally be sent.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketInterceptorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopLightAppC.TimerMilliC" loc="36(MultihopLightAppC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(MultihopLightAppC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopLightAppC.PhotoC" loc="18(MultihopLightAppC.PhotoC):/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoC.nc">
      <documentation loc="18(MultihopLightAppC.PhotoC):/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoC.nc">
        <short>&#10; &#10;</short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.4 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedPhotoDeviceP" loc="1:/opt/tinyos-2.x/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC" loc="3:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <documentation loc="3:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
        <short>&#10; &#10;</short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.4 $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusC" loc="18:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="18:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="16:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.&#10;</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PhotoTempP" loc="14:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempP.nc">
      <documentation loc="14:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempP.nc">
        <short>&#10; MTS300 photo and temp sensor ADC configuration.&#10;</short>
        <long>&#10; MTS300 photo and temp sensor ADC configuration.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter" loc="79(PhotoTempDeviceC.SharingArbiter):/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="79(PhotoTempDeviceC.SharingArbiter):/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.phototemp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Queue" loc="32(PhotoTempDeviceC.SharingArbiter.Queue):/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="32(PhotoTempDeviceC.SharingArbiter.Queue):/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/02/08 17:49:22 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Arbiter" loc="52(PhotoTempDeviceC.SharingArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="52(PhotoTempDeviceC.SharingArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter" loc="79(PhotoTempDeviceC.PhotoArbiter):/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="79(PhotoTempDeviceC.PhotoArbiter):/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.photo">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Queue" loc="32(PhotoTempDeviceC.PhotoArbiter.Queue):/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="32(PhotoTempDeviceC.PhotoArbiter.Queue):/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/02/08 17:49:22 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Arbiter" loc="52(PhotoTempDeviceC.PhotoArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="52(PhotoTempDeviceC.PhotoArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter" loc="79(PhotoTempDeviceC.TempArbiter):/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="79(PhotoTempDeviceC.TempArbiter):/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.temp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Queue" loc="32(PhotoTempDeviceC.TempArbiter.Queue):/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="32(PhotoTempDeviceC.TempArbiter.Queue):/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/02/08 17:49:22 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Arbiter" loc="52(PhotoTempDeviceC.TempArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="52(PhotoTempDeviceC.TempArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower" loc="57(PhotoTempDeviceC.PhotoPower):/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="57(PhotoTempDeviceC.PhotoPower):/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices. </short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower.PowerManager" loc="48(PhotoTempDeviceC.PhotoPower.PowerManager):/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <documentation loc="48(PhotoTempDeviceC.PhotoPower.PowerManager):/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower" loc="57(PhotoTempDeviceC.TempPower):/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="57(PhotoTempDeviceC.TempPower):/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices. </short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower.PowerManager" loc="48(PhotoTempDeviceC.TempPower.PowerManager):/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <documentation loc="48(PhotoTempDeviceC.TempPower.PowerManager):/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoControl" loc="1(PhotoTempDeviceC.PhotoControl):/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="0">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempControl" loc="1(PhotoTempDeviceC.TempControl):/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="1">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.WarmupTimer" loc="36(PhotoTempDeviceC.WarmupTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(PhotoTempDeviceC.WarmupTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.Adc" loc="21(PhotoTempDeviceC.Adc):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="21(PhotoTempDeviceC.Adc):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC. </short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="16:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10;</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10;</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <documentation loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10;&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10;&#10;&#10; @author Jason Hill&#10;&#10; @author David Gay&#10;&#10; @author Philip Levis&#10;&#10; @author Phil Buonadonna&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10;</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="34:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10;</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="79(Atm128AdcC.AdcArbiter):/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="79(Atm128AdcC.AdcArbiter):/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="32(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="32(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/02/08 17:49:22 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="57(Atm128AdcC.PM):/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="57(Atm128AdcC.PM):/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="48(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="48(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10;</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <documentation loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10;</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ArbitratedPhotoDeviceP.ArbitrateRead" loc="23(ArbitratedPhotoDeviceP.ArbitrateRead):/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <documentation loc="23(ArbitratedPhotoDeviceP.ArbitrateRead):/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10;</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC" loc="30:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <configuration/>
    </component>
    <component qname="DelugeStorageC" loc="29:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageC.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageC.nc">
        <short>&#10;</short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DelugeStorageP" loc="30:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageP.nc">
      <module/>
    </component>
    <component qname="DelugeStorageC.BlockStorageC_Golden" loc="23(DelugeStorageC.BlockStorageC_Golden):/opt/tinyos-2.x/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="23(DelugeStorageC.BlockStorageC_Golden):/opt/tinyos-2.x/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10;</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageP" loc="42:/opt/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
        <short>&#10; Private component of the AT45DB implementation of the block storage&#10; abstraction.&#10;&#10;</short>
        <long>&#10; Private component of the AT45DB implementation of the block storage&#10; abstraction.&#10;&#10; @author: Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="At45dbC" loc="22:/opt/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
        <short>&#10; HAL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HAL for Atmel's AT45DB family of serial dataflash chips. Access to the HAL&#10; is controlled by a parameterised Resource interface - client ids are &#10; obtained with unique(UQ_AT45DB).&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="At45dbP" loc="42:/opt/tinyos-2.x/tos/chips/at45db/At45dbP.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/at45db/At45dbP.nc">
        <short>&#10; Private componenent for the Atmel's AT45DB HAL.&#10;&#10;</short>
        <long>&#10; Private componenent for the Atmel's AT45DB HAL.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAt45dbC" loc="19:/opt/tinyos-2.x/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <documentation loc="19:/opt/tinyos-2.x/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
        <short>&#10; AT45DB flash chip HPL for mica family.</short>
        <long>&#10; AT45DB flash chip HPL for mica family. Each family member must provide&#10; and HplAt45dbIOC component implementing the SPIByte and HplAt45dbByte&#10; interfaces required by HplAt45dbByteC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAt45dbC.HplAt45dbByteC" loc="25(HplAt45dbC.HplAt45dbByteC):/opt/tinyos-2.x/tos/chips/at45db/HplAt45dbByteC.nc">
      <documentation loc="25(HplAt45dbC.HplAt45dbByteC):/opt/tinyos-2.x/tos/chips/at45db/HplAt45dbByteC.nc">
        <short>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.&#10; &#10;</short>
        <long>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.&#10; &#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this component can easily be used to&#10; build an AT45DB HPL by connecting it to a byte-at-a-time SPI interface,&#10; and an HplAt45dbByte interface.&#10;&#10; @param The number of bits needed to represent a sector size, e.g., 9&#10;   for the AT45DB041B.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAt45dbByteC"/>
        <arguments>
          <value cst="I:9">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAt45dbIOC" loc="17:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOC.nc">
      <documentation loc="17:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOC.nc">
        <short>&#10; Low-level access functions for the AT45DB flash on the mica2 and micaz.&#10;&#10;</short>
        <long>&#10; Low-level access functions for the AT45DB flash on the mica2 and micaz.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAt45dbIOP" loc="45:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOP.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOP.nc">
        <short>&#10; Low level hardware access to the onboard AT45DB flash chip.&#10;</short>
        <long>&#10; Low level hardware access to the onboard AT45DB flash chip.&#10; &#60;p>&#10; Note: This component includes optimised bit-banging SPI code with the&#10; pins hardwired.  Don't copy it to some other platform without&#10; understanding it (see txByte).&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/opt/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="HplAt45dbIOC.NoArbiterC" loc="20(HplAt45dbIOC.NoArbiterC):/opt/tinyos-2.x/tos/system/NoArbiterC.nc">
      <documentation loc="20(HplAt45dbIOC.NoArbiterC):/opt/tinyos-2.x/tos/system/NoArbiterC.nc">
        <short>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration.</short>
        <long>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration. Just grants all requests, without any error&#10; checking. Does still call ResourceConfigure at the right time.&#10;&#10; @author David Gay&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoArbiterC"/>
      </instance>
      <module/>
    </component>
    <component qname="At45dbC.Arbiter" loc="79(At45dbC.Arbiter):/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <documentation loc="79(At45dbC.Arbiter):/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:at45db.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="At45dbC.Arbiter.Queue" loc="32(At45dbC.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="At45dbC.Arbiter.Arbiter" loc="52(At45dbC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="52(At45dbC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="At45dbStorageManagerC" loc="17:/opt/tinyos-2.x/tos/chips/at45db/At45dbStorageManagerC.nc">
      <documentation loc="17:/opt/tinyos-2.x/tos/chips/at45db/At45dbStorageManagerC.nc">
        <short>&#10; HAL component providing information on the flash volumes.&#10;&#10;</short>
        <long>&#10; HAL component providing information on the flash volumes.&#10;&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeStorageC.BlockStorageC_1" loc="23(DelugeStorageC.BlockStorageC_1):/opt/tinyos-2.x/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="23(DelugeStorageC.BlockStorageC_1):/opt/tinyos-2.x/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10;</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC" loc="33:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="34(SerialActiveMessageC.AM):/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="34(SerialActiveMessageC.AM):/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="36:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="60:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="37(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="37(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="35:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10;</short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10;</short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10;</short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.5 $ $Date: 2007/11/27 19:26:45 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.&#10;&#10;</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="69:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10;</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega128 timer 2.&#10;&#10;</short>
        <long>&#10; HPL interface to Atmega128 timer 2.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3P" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
        <short>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10;</short>
        <long>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="35(InitThreeP.InitThree):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(InitThreeP.InitThree):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="33(CounterThree16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(CounterThree16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120958"/>
            <typename><typedef-ref name="TThree" ref="0x7f0809b8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="43(CounterMicro32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="43(CounterMicro32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120958"/>
            <typename><typedef-ref name="TMicro" ref="0x7f120b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120958"/>
            <typename><typedef-ref name="TThree" ref="0x7f0809b8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x7f080d80"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="35:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AutoStarterC" loc="27:/opt/tinyos-2.x/tos/lib/net/Deluge/AutoStarterC.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/lib/net/Deluge/AutoStarterC.nc">
        <short>&#10;</short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AutoStarterP" loc="27:/opt/tinyos-2.x/tos/lib/net/Deluge/AutoStarterP.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/lib/net/Deluge/AutoStarterP.nc">
        <short>&#10;</short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC" loc="30(DelugeC.FlashVolumeManagerC):/opt/tinyos-2.x/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerC.nc">
      <documentation loc="30(DelugeC.FlashVolumeManagerC):/opt/tinyos-2.x/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerC.nc">
        <short>&#10;</short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FlashVolumeManagerC"/>
        <arguments>
          <value cst="I:171">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC" loc="39(DelugeC.FlashVolumeManagerC.SerialAMSenderC):/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="39(DelugeC.FlashVolumeManagerC.SerialAMSenderC):/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP" loc="35(DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="35(DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="35:/opt/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="37(SerialAMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="37(SerialAMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.SerialAMReceiverC" loc="35(DelugeC.FlashVolumeManagerC.SerialAMReceiverC):/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
      <documentation loc="35(DelugeC.FlashVolumeManagerC.SerialAMReceiverC):/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.&#10;&#10;</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP" loc="29(DelugeC.FlashVolumeManagerC.FlashVolumeManagerP):/opt/tinyos-2.x/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <instance number="0">
        <component-ref qname="FlashVolumeManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NoLedsC" loc="35:/opt/tinyos-2.x/tos/system/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="NoLedsP" loc="32:/opt/tinyos-2.x/tos/system/NoLedsP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/system/NoLedsP.nc">
        <short>&#10; The implementation of the NoLedsC component: every call is a null&#10; operation.</short>
        <long>&#10; The implementation of the NoLedsC component: every call is a null&#10; operation. See NoLedsC.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NetProgC" loc="35:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProgC.nc">
      <configuration/>
    </component>
    <component qname="InternalFlashC" loc="33:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/avr/InternalFlashC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/avr/InternalFlashC.nc">
        <short> \def _EEGET&#10;\ingroup avr_eeprom&#10;Read a byte from EEPROM. </short>
      </documentation>
      <module/>
    </component>
    <component qname="CrcP" loc="28:/opt/tinyos-2.x/tos/lib/net/Deluge/CrcP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/lib/net/Deluge/CrcP.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NetProgM" loc="34:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProgM.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProgM.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.TimerMilliC" loc="36(DelugeC.FlashVolumeManagerC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(DelugeC.FlashVolumeManagerC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC" loc="30:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ObjectTransferP" loc="34:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferP.nc">
      <module/>
    </component>
    <component qname="DelugePageTransferC" loc="27:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
        <short>&#10;</short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DelugePageTransferP" loc="34:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferP.nc">
        <short>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10;</short>
        <long>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BitVecUtilsC" loc="30:/opt/tinyos-2.x/tos/lib/net/Deluge/BitVecUtilsC.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/lib/net/Deluge/BitVecUtilsC.nc">
        <short>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10;</short>
        <long>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugePageTransferC.Timer" loc="36(DelugePageTransferC.Timer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(DelugePageTransferC.Timer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg" loc="39(ObjectTransferC.SendAdvMsg):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="39(ObjectTransferC.SendAdvMsg):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:161">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg.AMQueueEntryP" loc="35(ObjectTransferC.SendAdvMsg.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="35(ObjectTransferC.SendAdvMsg.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.ReceiveAdvMsg" loc="35(ObjectTransferC.ReceiveAdvMsg):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="35(ObjectTransferC.ReceiveAdvMsg):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.&#10;&#10;</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:161">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg" loc="39(ObjectTransferC.SendReqMsg):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="39(ObjectTransferC.SendReqMsg):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:162">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg.AMQueueEntryP" loc="35(ObjectTransferC.SendReqMsg.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="35(ObjectTransferC.SendReqMsg.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.ReceiveReqMsg" loc="35(ObjectTransferC.ReceiveReqMsg):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="35(ObjectTransferC.ReceiveReqMsg):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.&#10;&#10;</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:162">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg" loc="39(ObjectTransferC.SendDataMsg):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="39(ObjectTransferC.SendDataMsg):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:163">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg.AMQueueEntryP" loc="35(ObjectTransferC.SendDataMsg.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="35(ObjectTransferC.SendDataMsg.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.ReceiveDataMsg" loc="35(ObjectTransferC.ReceiveDataMsg):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="35(ObjectTransferC.ReceiveDataMsg):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.&#10;&#10;</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:163">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.Timer" loc="36(ObjectTransferC.Timer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(ObjectTransferC.Timer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DisseminatorC" loc="49(DelugeC.DisseminatorC):/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorC.nc">
      <documentation loc="49(DelugeC.DisseminatorC):/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10;</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorC"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeDissemination" ref="0x7d7d1a10"/>
            <typename><typedef-ref name="DelugeDissemination" ref="0x7d7d01b0"/></typename>
          </type-tag>
          <value cst="I:56832">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DisseminatorC.DisseminatorP" loc="45(DelugeC.DisseminatorC.DisseminatorP):/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
      <documentation loc="45(DelugeC.DisseminatorC.DisseminatorP):/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10;</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7d0f76b8"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP" loc="47:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
        <short>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.&#10;&#10;</short>
        <long>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.&#10;&#10; TODO: Hook DisseminationProbe up to the serial instead of the radio.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineImplP" loc="45:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineImplP.nc">
        <short>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.&#10;&#10;</short>
        <long>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC" loc="39(DisseminationEngineP.DisseminationSendC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="39(DisseminationEngineP.DisseminationSendC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:13">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.AMQueueEntryP" loc="35(DisseminationEngineP.DisseminationSendC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="35(DisseminationEngineP.DisseminationSendC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationReceiveC" loc="35(DisseminationEngineP.DisseminationReceiveC):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="35(DisseminationEngineP.DisseminationReceiveC):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.&#10;&#10;</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:13">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC" loc="39(DisseminationEngineP.DisseminationProbeSendC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="39(DisseminationEngineP.DisseminationProbeSendC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:14">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.AMQueueEntryP" loc="35(DisseminationEngineP.DisseminationProbeSendC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="35(DisseminationEngineP.DisseminationProbeSendC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeReceiveC" loc="35(DisseminationEngineP.DisseminationProbeReceiveC):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="35(DisseminationEngineP.DisseminationProbeReceiveC):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.&#10;&#10;</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:14">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP" loc="44:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationTimerP.nc">
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC" loc="43(DisseminationTimerP.TrickleTimerMilliC):/opt/tinyos-2.x/tos/lib/net/TrickleTimerMilliC.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerMilliC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP" loc="43(DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP):/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerImplP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC" loc="36(DisseminationTimerP.TrickleTimerMilliC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(DisseminationTimerP.TrickleTimerMilliC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector" loc="33(DisseminationTimerP.TrickleTimerMilliC.PendingVector):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="33(DisseminationTimerP.TrickleTimerMilliC.PendingVector):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector" loc="33(DisseminationTimerP.TrickleTimerMilliC.ChangeVector):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="33(DisseminationTimerP.TrickleTimerMilliC.ChangeVector):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationC" loc="46:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationC.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationC.nc">
        <short>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol.</short>
        <long>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol. StdControl controls all of the trickle&#10; timers used for all of the keys. &#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DelugeP" loc="27:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeP.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeP.nc">
        <short>&#10;</short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeC.Timer" loc="36(DelugeC.Timer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(DelugeC.Timer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ee73c20" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ee73db0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ee63010" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ee42218" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ee423b8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ee42558" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7ee426f0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ed40218" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ed403b8" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ed40558" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7ed406f0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SingleSenderC" loc="42:../../../tos/lib/netarch/single/SingleSenderC.nc" abstract="">
      <parameters>
        <constant name="upperId" ref="0x7ea901b0" loc="42:../../../tos/lib/netarch/single/SingleSenderC.nc">
          <component-ref qname="SingleSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TlvPacketC" loc="45:../../../tos/lib/netarch/tlv/TlvPacketC.nc" abstract="">
      <documentation loc="45:../../../tos/lib/netarch/tlv/TlvPacketC.nc">
        <short>&#10;&#10; A general Type-Length-Value (TLV) data processor within a packet.&#10;&#10;</short>
        <long>&#10;&#10; A general Type-Length-Value (TLV) data processor within a packet.&#10;&#10; This component does not assume any ordering by type among the TLV&#10;&#10; types in a block of types.  If at most one instance of a type is&#10;&#10; allowed, access the type via the TlvSingle interface.  If any number&#10;&#10; of instances are allowed, access the type via the TlvMultiple and&#10;&#10; TlvList interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TlvPacketP" loc="45:../../../tos/lib/netarch/tlv/TlvPacketP.nc" abstract="">
      <documentation loc="45:../../../tos/lib/netarch/tlv/TlvPacketP.nc">
        <short>&#10;&#10; A general Type-Length-Value (TLV) data processor within a packet.&#10;&#10;</short>
        <long>&#10;&#10; A general Type-Length-Value (TLV) data processor within a packet.&#10;&#10; This component does not assume any ordering by type among the TLV&#10;&#10; types in a block of types.  If at most one instance of a type is&#10;&#10; allowed, access the type via the TlvSingle interface.  If any number&#10;&#10; of instances are allowed, access the type via the TlvMultiple and&#10;&#10; TlvList interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DsrControlP" loc="89:../../../tos/lib/netarch/dsr/DsrControlP.nc" abstract="">
      <parameters>
        <constant name="BUFFER_SIZE" ref="0x7e708a98" loc="89:../../../tos/lib/netarch/dsr/DsrControlP.nc">
          <component-ref qname="DsrControlP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DsrRouteCacheC" loc="40:../../../tos/lib/netarch/dsr/DsrRouteCacheC.nc" abstract="">
      <documentation loc="40:../../../tos/lib/netarch/dsr/DsrRouteCacheC.nc">
        <short>&#10;&#10; Defines the default route cache to use with DSR.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Defines the default route cache to use with DSR.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxNodes" ref="0x7e5f5670" loc="40:../../../tos/lib/netarch/dsr/DsrRouteCacheC.nc">
          <component-ref qname="DsrRouteCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
          </type-int>
        </constant>
        <constant name="maxLinks" ref="0x7e5f5820" loc="41:../../../tos/lib/netarch/dsr/DsrRouteCacheC.nc">
          <component-ref qname="DsrRouteCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_link_id_t" ref="0x7e7097c8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleLinkCacheC" loc="42:../../../tos/lib/netarch/dsr/SimpleLinkCacheC.nc" abstract="">
      <parameters>
        <constant name="maxNodes" ref="0x7e5e8010" loc="42:../../../tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
          <component-ref qname="SimpleLinkCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
          </type-int>
        </constant>
        <constant name="maxLinks" ref="0x7e5e81c0" loc="43:../../../tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
          <component-ref qname="SimpleLinkCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_link_id_t" ref="0x7e7097c8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="GraphWeightedC" loc="41:../../../tos/lib/data/graph/GraphWeightedC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/data/graph/GraphWeightedC.nc">
        <short>&#10;&#10; Builds a weighted graph as edges are added and supports finding the single&#10;&#10; source shortest path.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Builds a weighted graph as edges are added and supports finding the single&#10;&#10; source shortest path.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7e5ac1e8" loc="41:../../../tos/lib/data/graph/GraphWeightedC.nc">
          <component-ref qname="GraphWeightedC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
          </type-int>
        </constant>
        <constant name="maxEdges" ref="0x7e5ac390" loc="42:../../../tos/lib/data/graph/GraphWeightedC.nc">
          <component-ref qname="GraphWeightedC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
          </type-int>
        </constant>
        <constant name="parallelEdges" ref="0x7e5ac530" loc="43:../../../tos/lib/data/graph/GraphWeightedC.nc">
          <component-ref qname="GraphWeightedC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
        </constant>
        <typedef name="graph_edge_weight_t" ref="0x7e5ac7f8" loc="44:../../../tos/lib/data/graph/GraphWeightedC.nc">
          <component-ref qname="GraphWeightedC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7e5ac7f8"/></type-var>
        </typedef>
      </parameters>
      <configuration/>
    </component>
    <component qname="GraphSparseC" loc="41:../../../tos/lib/data/graph/GraphSparseC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/data/graph/GraphSparseC.nc">
        <short>&#10;&#10; Wires supporting modules needed by any GraphSparseP. </short>
        <long>&#10;&#10; Wires supporting modules needed by any GraphSparseP.  This should be&#10;&#10; combined with a weight module and any processing modules.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7e597010" loc="41:../../../tos/lib/data/graph/GraphSparseC.nc">
          <component-ref qname="GraphSparseC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
          </type-int>
        </constant>
        <constant name="maxEdges" ref="0x7e5971b8" loc="42:../../../tos/lib/data/graph/GraphSparseC.nc">
          <component-ref qname="GraphSparseC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
          </type-int>
        </constant>
        <constant name="parallelEdges" ref="0x7e597358" loc="43:../../../tos/lib/data/graph/GraphSparseC.nc">
          <component-ref qname="GraphSparseC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="IndexedAllocC" loc="41:../../../tos/lib/data/alloc/IndexedAllocC.nc" abstract="">
      <parameters>
        <constant name="MAX_SIZE" ref="0x7e591e20" loc="41:../../../tos/lib/data/alloc/IndexedAllocC.nc">
          <component-ref qname="IndexedAllocC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5919f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="IndexedAllocBitsC" loc="39:../../../tos/lib/data/alloc/IndexedAllocBitsC.nc" abstract="">
      <documentation loc="39:../../../tos/lib/data/alloc/IndexedAllocBitsC.nc">
        <short>&#10;&#10; Packages IndexedAllocBitsP together with its dependencies to create an&#10;&#10; easily usable component.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Packages IndexedAllocBitsP together with its dependencies to create an&#10;&#10; easily usable component.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxSize" ref="0x7e583a18" loc="39:../../../tos/lib/data/alloc/IndexedAllocBitsC.nc">
          <component-ref qname="IndexedAllocBitsC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5919f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="BitVectorC" loc="33:/opt/tinyos-2.x/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x7e57b520" loc="33:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="IndexedAllocBitsP" loc="42:../../../tos/lib/data/alloc/IndexedAllocBitsP.nc" abstract="">
      <documentation loc="42:../../../tos/lib/data/alloc/IndexedAllocBitsP.nc">
        <short>&#10;&#10; A compact indexed allocation scheme using only a bit vector to track the&#10;&#10; elements. </short>
        <long>&#10;&#10; A compact indexed allocation scheme using only a bit vector to track the&#10;&#10; elements.  While this is surely slower than a pointer-based system, it uses&#10;&#10; much less memory.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxSize" ref="0x7e565688" loc="42:../../../tos/lib/data/alloc/IndexedAllocBitsP.nc">
          <component-ref qname="IndexedAllocBitsP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5919f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GraphSparseP" loc="40:../../../tos/lib/data/graph/GraphSparseP.nc" abstract="">
      <documentation loc="40:../../../tos/lib/data/graph/GraphSparseP.nc">
        <short>&#10;&#10; A sparse graph using adjacency lists.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; A sparse graph using adjacency lists.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7e550420" loc="40:../../../tos/lib/data/graph/GraphSparseP.nc">
          <component-ref qname="GraphSparseP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
          </type-int>
        </constant>
        <constant name="maxEdges" ref="0x7e5505c8" loc="41:../../../tos/lib/data/graph/GraphSparseP.nc">
          <component-ref qname="GraphSparseP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
          </type-int>
        </constant>
        <constant name="parallelEdges" ref="0x7e550768" loc="42:../../../tos/lib/data/graph/GraphSparseP.nc">
          <component-ref qname="GraphSparseP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SourceShortestPathC" loc="38:../../../tos/lib/data/graph/SourceShortestPathC.nc" abstract="">
      <documentation loc="38:../../../tos/lib/data/graph/SourceShortestPathC.nc">
        <short>&#10;&#10; Wires supporting modules needed by any SourceShortestPathP.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Wires supporting modules needed by any SourceShortestPathP.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7e51c368" loc="38:../../../tos/lib/data/graph/SourceShortestPathC.nc">
          <component-ref qname="SourceShortestPathC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
          </type-int>
        </constant>
        <typedef name="graph_edge_weight_t" ref="0x7e51c630" loc="39:../../../tos/lib/data/graph/SourceShortestPathC.nc">
          <component-ref qname="SourceShortestPathC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7e51c630"/></type-var>
        </typedef>
      </parameters>
      <configuration/>
    </component>
    <component qname="PriorityQueueC" loc="40:../../../tos/lib/data/queue/PriorityQueueC.nc" abstract="">
      <parameters>
        <constant name="maxSize" ref="0x7e512690" loc="40:../../../tos/lib/data/queue/PriorityQueueC.nc">
          <component-ref qname="PriorityQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7e512270"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PriorityQueueP" loc="44:../../../tos/lib/data/queue/PriorityQueueP.nc" abstract="">
      <documentation loc="44:../../../tos/lib/data/queue/PriorityQueueP.nc">
        <short>&#10;&#10; Implements a priority queue sitting on top of an index heap. </short>
        <long>&#10;&#10; Implements a priority queue sitting on top of an index heap.  It be either a&#10;&#10; min or max heap depending on the implementation of the Compare.test command.&#10;&#10; Since this is an index heap, none of the priorities are actually stored here.&#10;&#10; Instead, a component needs only to answer calls of Compare.test (which would&#10;&#10; typically be based on the priorities in some array owned by that component).&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxSize" ref="0x7e4fd920" loc="44:../../../tos/lib/data/queue/PriorityQueueP.nc">
          <component-ref qname="PriorityQueueP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7e512270"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SourceShortestPathP" loc="40:../../../tos/lib/data/graph/SourceShortestPathP.nc" abstract="">
      <documentation loc="40:../../../tos/lib/data/graph/SourceShortestPathP.nc">
        <short>&#10;&#10; Uses Djikstra's algorithm with a priority queue holding fringe vertices to&#10;&#10; find the single source shortest path. </short>
        <long>&#10;&#10; Uses Djikstra's algorithm with a priority queue holding fringe vertices to&#10;&#10; find the single source shortest path.  All weights are assumed to be&#10;&#10; non-negative.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7e4d2ca8" loc="40:../../../tos/lib/data/graph/SourceShortestPathP.nc">
          <component-ref qname="SourceShortestPathP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
          </type-int>
        </constant>
        <typedef name="graph_edge_weight_t" ref="0x7e4d1010" loc="41:../../../tos/lib/data/graph/SourceShortestPathP.nc">
          <component-ref qname="SourceShortestPathP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7e4d1010"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="66:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7e1277f8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e1277f8"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7e127988" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7e110b30" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7e110b30"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7e110df0" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e110df0"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7e10f010" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7e0c86e0" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7e0c86e0"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7e0c89a0" loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e0c89a0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="">
      <documentation loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7e0ad580" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7e0ad580"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7e0ad840" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7e0ad840"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7e0ada08" loc="46:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7e0ada08"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7e0adcc8" loc="47:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7e0adcc8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7e0ade68" loc="48:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7e0ab168" loc="49:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7e0ab168"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="">
      <documentation loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7e08e860" loc="41:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7e08e860"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7e08eb20" loc="42:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7e08eb20"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7e08ece8" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7e08ece8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7e08d010" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7e08d010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7e08d1b0" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="">
      <documentation loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="">
      <documentation loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7dfe3310" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7dfe34b0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7dfe3650" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7dfe37e8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.x/tos/system/StateC.nc" abstract="">
      <documentation loc="65:/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7de240a8" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="">
      <parameters>
        <constant name="size" ref="0x7de18328" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="">
      <documentation loc="49:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="LruDataCacheC" loc="30:../../../tos/lib/data/cache/LruDataCacheC.nc" abstract="">
      <documentation loc="30:../../../tos/lib/data/cache/LruDataCacheC.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10;</short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10; @author Ryan Stinnett&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_cache_item_t" ref="0x7dbe6538" loc="30:../../../tos/lib/data/cache/LruDataCacheC.nc">
          <component-ref qname="LruDataCacheC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_cache_item_t" scoped="" ref="0x7dbe6538"/></type-var>
        </typedef>
        <constant name="size" ref="0x7dbe66c0" loc="30:../../../tos/lib/data/cache/LruDataCacheC.nc">
          <component-ref qname="LruDataCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruDataCacheP" loc="67:../../../tos/lib/data/cache/LruDataCacheP.nc" abstract="">
      <documentation loc="67:../../../tos/lib/data/cache/LruDataCacheP.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;. </short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.  Inserting a data item not in the cache will replace&#10; the oldest, and inserting an element already in the cache will refresh&#10; its age.  Insert and lookup return a pointer to the cached data.  This&#10; component should be wired to an Equal interface to check for equality&#10; on the data type used.&#10;&#10; @author Ryan Stinnett&#10; @author Rodrigo Fonseca&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_cache_item_t" ref="0x7dbe0b40" loc="67:../../../tos/lib/data/cache/LruDataCacheP.nc">
          <component-ref qname="LruDataCacheP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_cache_item_t" scoped="" ref="0x7dbe0b40"/></type-var>
        </typedef>
        <constant name="size" ref="0x7dbe0cc8" loc="67:../../../tos/lib/data/cache/LruDataCacheP.nc">
          <component-ref qname="LruDataCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DataTimerC" loc="39:../../../tos/lib/data/timer/DataTimerC.nc" abstract="">
      <documentation loc="39:../../../tos/lib/data/timer/DataTimerC.nc">
        <short>&#10;&#10; A timed series of data items. </short>
        <long>&#10;&#10; A timed series of data items.  The client is notified as each item&#10;&#10; expires.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_timer_data_t" ref="0x7dbb56e0" loc="39:../../../tos/lib/data/timer/DataTimerC.nc">
          <component-ref qname="DataTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_timer_data_t" scoped="" ref="0x7dbb56e0"/></type-var>
        </typedef>
        <constant name="maxSize" ref="0x7dbb5868" loc="39:../../../tos/lib/data/timer/DataTimerC.nc">
          <component-ref qname="DataTimerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7db81910" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7db81910"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7db81a90" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7db7bb38" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7db7bb38"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7db7bcb8" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7db3a090" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7db3a090"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7db1a928" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7db1a928"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7db1aab0" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7dae5630" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7dae5630"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="DataTimerP" loc="44:../../../tos/lib/data/timer/DataTimerP.nc" abstract="">
      <documentation loc="44:../../../tos/lib/data/timer/DataTimerP.nc">
        <short>&#10;&#10; A timed series of data items. </short>
        <long>&#10;&#10; A timed series of data items.  The client is notified as each item&#10;&#10; expires.  Uses the Equal interface to allow complex data types, but&#10;&#10; the default supplied works for primitive types.&#10;&#10;&#10;&#10; TODO: Change to use a &#34;first&#34;.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_timer_data_t" ref="0x7dad9010" loc="44:../../../tos/lib/data/timer/DataTimerP.nc">
          <component-ref qname="DataTimerP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_timer_data_t" scoped="" ref="0x7dad9010"/></type-var>
        </typedef>
        <constant name="maxSize" ref="0x7dad9198" loc="44:../../../tos/lib/data/timer/DataTimerP.nc">
          <component-ref qname="DataTimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PacketTransceiverC" loc="42:../../../tos/lib/netarch/multihop/PacketTransceiverC.nc" abstract="">
      <documentation loc="42:../../../tos/lib/netarch/multihop/PacketTransceiverC.nc">
        <short>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type. </short>
        <long>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type.  The Packet&#10;&#10; interface used by this component should be provided by the protocol.&#10;&#10; Similarly, the SubPacket interface provided by this component should&#10;&#10; be used by the protocol to complete the chain of Packet interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="lowerId" ref="0x7daa7408" loc="42:../../../tos/lib/netarch/multihop/PacketTransceiverC.nc">
          <component-ref qname="PacketTransceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.&#10;&#10; </short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7da928f8" loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7da928f8"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x7da92a88" loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc" abstract="">
      <documentation loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.&#10; </short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7da87118" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7da87118"/></type-var>
        </typedef>
        <constant name="size" ref="0x7da872a0" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7da61e00" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7da59270" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="">
      <documentation loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7da43390" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSnoopingReceiverC" loc="36:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc" abstract="">
      <documentation loc="36:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
        <short>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10;</short>
        <long>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7da129c8" loc="36:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
          <component-ref qname="AMSnoopingReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketProcessorC" loc="39:../../../tos/lib/netarch/multihop/PacketProcessorC.nc" abstract="">
      <documentation loc="39:../../../tos/lib/netarch/multihop/PacketProcessorC.nc">
        <short>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="lowerId" ref="0x7da05088" loc="39:../../../tos/lib/netarch/multihop/PacketProcessorC.nc">
          <component-ref qname="PacketProcessorC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SingleProcessorSenderC" loc="41:../../../tos/lib/netarch/single/SingleProcessorSenderC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/netarch/single/SingleProcessorSenderC.nc">
        <short>&#10;&#10; Modified sender for single destination multihop packets of created&#10;&#10; by a PacketEngine processor for a given link layer AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Modified sender for single destination multihop packets of created&#10;&#10; by a PacketEngine processor for a given link layer AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="lowerId" ref="0x7d9b4068" loc="41:../../../tos/lib/netarch/single/SingleProcessorSenderC.nc">
          <component-ref qname="SingleProcessorSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketSenderC" loc="39:../../../tos/lib/netarch/multihop/PacketSenderC.nc" abstract="">
      <documentation loc="39:../../../tos/lib/netarch/multihop/PacketSenderC.nc">
        <short>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="upperId" ref="0x7d9aa088" loc="39:../../../tos/lib/netarch/multihop/PacketSenderC.nc">
          <component-ref qname="PacketSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </constant>
        <constant name="defLowerId" ref="0x7d9aa218" loc="39:../../../tos/lib/netarch/multihop/PacketSenderC.nc">
          <component-ref qname="PacketSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </constant>
        <constant name="clientId" ref="0x7d9aa3c8" loc="40:../../../tos/lib/netarch/multihop/PacketSenderC.nc">
          <component-ref qname="PacketSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7eaa0290"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketEngineClientP" loc="40:../../../tos/lib/netarch/multihop/PacketEngineClientP.nc" abstract="">
      <documentation loc="40:../../../tos/lib/netarch/multihop/PacketEngineClientP.nc">
        <short>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client. </short>
        <long>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.  These values are stored statically so that no&#10;&#10; RAM is used up to hold them.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="upper" ref="0x7d9a5900" loc="40:../../../tos/lib/netarch/multihop/PacketEngineClientP.nc">
          <component-ref qname="PacketEngineClientP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </constant>
        <constant name="defLower" ref="0x7d9a5a90" loc="40:../../../tos/lib/netarch/multihop/PacketEngineClientP.nc">
          <component-ref qname="PacketEngineClientP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SingleReceiverC" loc="41:../../../tos/lib/netarch/single/SingleReceiverC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/netarch/single/SingleReceiverC.nc">
        <short>&#10;&#10; Receiver for single destination multihop packets of a given&#10;&#10; application layer AM type that are destined for this node.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Receiver for single destination multihop packets of a given&#10;&#10; application layer AM type that are destined for this node.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="upperId" ref="0x7d98d8d0" loc="41:../../../tos/lib/netarch/single/SingleReceiverC.nc">
          <component-ref qname="SingleReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketReceiverC" loc="39:../../../tos/lib/netarch/multihop/PacketReceiverC.nc" abstract="">
      <documentation loc="39:../../../tos/lib/netarch/multihop/PacketReceiverC.nc">
        <short>&#10;&#10; Receiver for generic multihop packets of a given application layer&#10;&#10; AM type that are destined for this node.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Receiver for generic multihop packets of a given application layer&#10;&#10; AM type that are destined for this node.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="upperId" ref="0x7d989e80" loc="39:../../../tos/lib/netarch/multihop/PacketReceiverC.nc">
          <component-ref qname="PacketReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SingleInterceptorC" loc="42:../../../tos/lib/netarch/single/SingleInterceptorC.nc" abstract="">
      <documentation loc="42:../../../tos/lib/netarch/single/SingleInterceptorC.nc">
        <short>&#10;&#10; Interceptor for single destination multihop packets of a given&#10;&#10; application layer AM type  This allows an application to modify or&#10;&#10; drop any packets just before they would normally be sent.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Interceptor for single destination multihop packets of a given&#10;&#10; application layer AM type  This allows an application to modify or&#10;&#10; drop any packets just before they would normally be sent.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="upperId" ref="0x7d97e7b0" loc="42:../../../tos/lib/netarch/single/SingleInterceptorC.nc">
          <component-ref qname="SingleInterceptorC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketInterceptorC" loc="40:../../../tos/lib/netarch/multihop/PacketInterceptorC.nc" abstract="">
      <documentation loc="40:../../../tos/lib/netarch/multihop/PacketInterceptorC.nc">
        <short>&#10;&#10; Interceptor for generic multihop packets of a given application layer&#10;&#10; AM type. </short>
        <long>&#10;&#10; Interceptor for generic multihop packets of a given application layer&#10;&#10; AM type.  This allows an application to modify or drop any packets&#10;&#10; just before they would normally be sent.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="upperId" ref="0x7d979da0" loc="40:../../../tos/lib/netarch/multihop/PacketInterceptorC.nc">
          <component-ref qname="PacketInterceptorC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PhotoC" loc="18:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoC.nc" abstract="">
      <documentation loc="18:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoC.nc">
        <short>&#10; &#10;</short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.4 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="79:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="79:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7d92c8b0" loc="79:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="32:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/02/08 17:49:22 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7d9206d8" loc="32:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.x/tos/system/ArbiterP.nc" abstract="">
      <documentation loc="52:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7d911680" loc="52:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="57:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="57:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices. </short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="48:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="48:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PhotoTempControlP" loc="1:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempControlP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="21:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC. </short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="57:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="57:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="48:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc" abstract="">
      <documentation loc="48:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10;</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7d7fe830" loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7d7fe830"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="BlockStorageC" loc="23:/opt/tinyos-2.x/tos/chips/at45db/BlockStorageC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.x/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10;</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="volid" ref="0x7d721010" loc="23:/opt/tinyos-2.x/tos/chips/at45db/BlockStorageC.nc">
          <component-ref qname="BlockStorageC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x7d7c53c8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAt45dbByteC" loc="25:/opt/tinyos-2.x/tos/chips/at45db/HplAt45dbByteC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/at45db/HplAt45dbByteC.nc">
        <short>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.&#10; &#10;</short>
        <long>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.&#10; &#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this component can easily be used to&#10; build an AT45DB HPL by connecting it to a byte-at-a-time SPI interface,&#10; and an HplAt45dbByte interface.&#10;&#10; @param The number of bits needed to represent a sector size, e.g., 9&#10;   for the AT45DB041B.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="sectorSizeLog2" ref="0x7d618d38" loc="25:/opt/tinyos-2.x/tos/chips/at45db/HplAt45dbByteC.nc">
          <component-ref qname="HplAt45dbByteC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="NoArbiterC" loc="20:/opt/tinyos-2.x/tos/system/NoArbiterC.nc" abstract="">
      <documentation loc="20:/opt/tinyos-2.x/tos/system/NoArbiterC.nc">
        <short>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration.</short>
        <long>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration. Just grants all requests, without any error&#10; checking. Does still call ResourceConfigure at the right time.&#10;&#10; @author David Gay&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="79:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="79:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7d58ea70" loc="79:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="34:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="37:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="37:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc" abstract="">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10;</short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.5 $ $Date: 2007/11/27 19:26:45 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FlashVolumeManagerC" loc="30:/opt/tinyos-2.x/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerC.nc" abstract="">
      <documentation loc="30:/opt/tinyos-2.x/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerC.nc">
        <short>&#10;</short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7d2d6400" loc="30:/opt/tinyos-2.x/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerC.nc">
          <component-ref qname="FlashVolumeManagerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialAMSenderC" loc="39:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="39:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7d2ccd88" loc="39:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialAMReceiverC" loc="35:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.&#10;&#10;</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7d2b20e8" loc="35:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
          <component-ref qname="SerialAMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FlashVolumeManagerP" loc="29:/opt/tinyos-2.x/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.&#10;&#10;</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7d119908" loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorC" loc="49:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorC.nc" abstract="">
      <documentation loc="49:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10;</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7d0f76b8" loc="49:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7d0f76b8"/></type-var>
        </typedef>
        <constant name="key" ref="0x7d0f7848" loc="49:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorP" loc="45:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc" abstract="">
      <documentation loc="45:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10;</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7d0eda58" loc="45:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
          <component-ref qname="DisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7d0eda58"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TrickleTimerMilliC" loc="43:/opt/tinyos-2.x/tos/lib/net/TrickleTimerMilliC.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x7d07d2b0" loc="43:/opt/tinyos-2.x/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x7d07d450" loc="44:/opt/tinyos-2.x/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x7d07d5e8" loc="45:/opt/tinyos-2.x/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x7d07d780" loc="46:/opt/tinyos-2.x/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TrickleTimerImplP" loc="43:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x7d078788" loc="43:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x7d078928" loc="44:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x7d078ac0" loc="45:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x7d078c58" loc="46:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="scale" ref="0x7d078df0" loc="47:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7ef83348" loc="47:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef83520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7ef92bd8" loc="46:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7ef92bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ef92db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7ef72378" loc="43:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7ef72378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef72550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ef80118" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ef80118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef802f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7ef63c68" loc="41:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ef63c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7ef63e40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7ef63f20"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7ef72018"/>
        <function-ref name="actualMicro" scoped="" ref="0x7ef720f8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7ef721d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7ef523f8" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7ef523f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef525d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ef52088" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ef52088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef52260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7ef52768" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7ef52768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef52940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7ef401a0" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7ef401a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef40378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7ef61df8" loc="17:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7ef61df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef40010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7ef22520" loc="22:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7ef22520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef226f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7ef13b18" loc="21:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7ef13b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef13cf0"/>
        <function-ref name="isInput" scoped="" ref="0x7ef13dd0"/>
        <function-ref name="toggle" scoped="" ref="0x7ef13eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef22010"/>
        <function-ref name="get" scoped="" ref="0x7ef220f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ef221d0"/>
        <function-ref name="set" scoped="" ref="0x7ef222b0"/>
        <function-ref name="clr" scoped="" ref="0x7ef22390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7ef30310" loc="20:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7ef30310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef304e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7ee91e78" loc="91:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7ee91e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee90308"/>
        <function-ref name="isInput" scoped="" ref="0x7ee903e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ee904c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee905a8"/>
        <function-ref name="get" scoped="" ref="0x7ee90688"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee90768"/>
        <function-ref name="set" scoped="" ref="0x7ee90848"/>
        <function-ref name="clr" scoped="" ref="0x7ee90928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7eec2010" loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7eec2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eec21e8"/>
        <function-ref name="isInput" scoped="" ref="0x7eec22c8"/>
        <function-ref name="toggle" scoped="" ref="0x7eec23a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec2488"/>
        <function-ref name="get" scoped="" ref="0x7eec2568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec2648"/>
        <function-ref name="set" scoped="" ref="0x7eec2728"/>
        <function-ref name="clr" scoped="" ref="0x7eec2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7eeb0188" loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7eeb0188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb0360"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb0440"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb0520"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb0600"/>
        <function-ref name="get" scoped="" ref="0x7eeb06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eeb07c0"/>
        <function-ref name="set" scoped="" ref="0x7eeb08a0"/>
        <function-ref name="clr" scoped="" ref="0x7eeb0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7eea0e78" loc="85:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7eea0e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee93070"/>
        <function-ref name="isInput" scoped="" ref="0x7ee93150"/>
        <function-ref name="toggle" scoped="" ref="0x7ee93230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee93310"/>
        <function-ref name="get" scoped="" ref="0x7ee933f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee934d0"/>
        <function-ref name="set" scoped="" ref="0x7ee935b0"/>
        <function-ref name="clr" scoped="" ref="0x7ee93690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7eef37a8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7eef37a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef3980"/>
        <function-ref name="isInput" scoped="" ref="0x7eef3a60"/>
        <function-ref name="toggle" scoped="" ref="0x7eef3b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef3c20"/>
        <function-ref name="get" scoped="" ref="0x7eef3d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef3de0"/>
        <function-ref name="set" scoped="" ref="0x7eef3ec0"/>
        <function-ref name="clr" scoped="" ref="0x7eef2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7eea1b00" loc="83:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7eea1b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eea1cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7eea1db8"/>
        <function-ref name="toggle" scoped="" ref="0x7eea1e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea0010"/>
        <function-ref name="get" scoped="" ref="0x7eea00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea01d0"/>
        <function-ref name="set" scoped="" ref="0x7eea02b0"/>
        <function-ref name="clr" scoped="" ref="0x7eea0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7eef2af8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7eef2af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef2cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7eef2db0"/>
        <function-ref name="toggle" scoped="" ref="0x7eef2e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef1010"/>
        <function-ref name="get" scoped="" ref="0x7eef10f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef11d0"/>
        <function-ref name="set" scoped="" ref="0x7eef12b0"/>
        <function-ref name="clr" scoped="" ref="0x7eef1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7eed3b00" loc="57:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7eed3b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eed3cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7eed3db8"/>
        <function-ref name="toggle" scoped="" ref="0x7eed3e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7eed2010"/>
        <function-ref name="get" scoped="" ref="0x7eed20f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eed21d0"/>
        <function-ref name="set" scoped="" ref="0x7eed22b0"/>
        <function-ref name="clr" scoped="" ref="0x7eed2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7eec1cb8" loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7eec1cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eec1e90"/>
        <function-ref name="isInput" scoped="" ref="0x7eec0010"/>
        <function-ref name="toggle" scoped="" ref="0x7eec00f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec01d0"/>
        <function-ref name="get" scoped="" ref="0x7eec02b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec0390"/>
        <function-ref name="set" scoped="" ref="0x7eec0470"/>
        <function-ref name="clr" scoped="" ref="0x7eec0550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7eea3e78" loc="79:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7eea3e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eea2070"/>
        <function-ref name="isInput" scoped="" ref="0x7eea2150"/>
        <function-ref name="toggle" scoped="" ref="0x7eea2230"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea2310"/>
        <function-ref name="get" scoped="" ref="0x7eea23f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea24d0"/>
        <function-ref name="set" scoped="" ref="0x7eea25b0"/>
        <function-ref name="clr" scoped="" ref="0x7eea2690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7ef026c8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7ef026c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef028a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ef02980"/>
        <function-ref name="toggle" scoped="" ref="0x7ef02a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef02b40"/>
        <function-ref name="get" scoped="" ref="0x7ef02c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ef02d00"/>
        <function-ref name="set" scoped="" ref="0x7ef02de0"/>
        <function-ref name="clr" scoped="" ref="0x7ef02ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7eef0808" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7eef0808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef09e0"/>
        <function-ref name="isInput" scoped="" ref="0x7eef0ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7eef0ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef0c80"/>
        <function-ref name="get" scoped="" ref="0x7eef0d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef0e40"/>
        <function-ref name="set" scoped="" ref="0x7eef0f20"/>
        <function-ref name="clr" scoped="" ref="0x7eee3018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7eed1808" loc="60:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7eed1808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eed19e0"/>
        <function-ref name="isInput" scoped="" ref="0x7eed1ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7eed1ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eed1c80"/>
        <function-ref name="get" scoped="" ref="0x7eed1d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eed1e40"/>
        <function-ref name="set" scoped="" ref="0x7eed1f20"/>
        <function-ref name="clr" scoped="" ref="0x7eed0018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7eeb39d8" loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7eeb39d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb3bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb3c90"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb3e50"/>
        <function-ref name="get" scoped="" ref="0x7eeb2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eeb20f0"/>
        <function-ref name="set" scoped="" ref="0x7eeb21d0"/>
        <function-ref name="clr" scoped="" ref="0x7eeb22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7ee92b00" loc="88:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7ee92b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee92cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7ee92db8"/>
        <function-ref name="toggle" scoped="" ref="0x7ee92e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee91010"/>
        <function-ref name="get" scoped="" ref="0x7ee910f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee911d0"/>
        <function-ref name="set" scoped="" ref="0x7ee912b0"/>
        <function-ref name="clr" scoped="" ref="0x7ee91390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7ee83d98" loc="94:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7ee83d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee81010"/>
        <function-ref name="isInput" scoped="" ref="0x7ee810f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ee811d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee812b0"/>
        <function-ref name="get" scoped="" ref="0x7ee81390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee81470"/>
        <function-ref name="set" scoped="" ref="0x7ee81550"/>
        <function-ref name="clr" scoped="" ref="0x7ee81630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7eeb2d98" loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7eeb2d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb1010"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb10f0"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb11d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb12b0"/>
        <function-ref name="get" scoped="" ref="0x7eeb1390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eeb1470"/>
        <function-ref name="set" scoped="" ref="0x7eeb1550"/>
        <function-ref name="clr" scoped="" ref="0x7eeb1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7ef00428" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7ef00428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef00600"/>
        <function-ref name="isInput" scoped="" ref="0x7ef006e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ef007c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef008a0"/>
        <function-ref name="get" scoped="" ref="0x7ef00980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ef00a60"/>
        <function-ref name="set" scoped="" ref="0x7ef00b40"/>
        <function-ref name="clr" scoped="" ref="0x7ef00c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7eee2508" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7eee2508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eee26e0"/>
        <function-ref name="isInput" scoped="" ref="0x7eee27c0"/>
        <function-ref name="toggle" scoped="" ref="0x7eee28a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eee2980"/>
        <function-ref name="get" scoped="" ref="0x7eee2a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eee2b40"/>
        <function-ref name="set" scoped="" ref="0x7eee2c20"/>
        <function-ref name="clr" scoped="" ref="0x7eee2d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7ee90aa0" loc="92:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7ee90aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee90c78"/>
        <function-ref name="isInput" scoped="" ref="0x7ee90d58"/>
        <function-ref name="toggle" scoped="" ref="0x7ee90e38"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee90f18"/>
        <function-ref name="get" scoped="" ref="0x7ee83010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee830f0"/>
        <function-ref name="set" scoped="" ref="0x7ee831d0"/>
        <function-ref name="clr" scoped="" ref="0x7ee832b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7eee0808" loc="55:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7eee0808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eee09e0"/>
        <function-ref name="isInput" scoped="" ref="0x7eee0ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7eee0ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eee0c80"/>
        <function-ref name="get" scoped="" ref="0x7eee0d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eee0e40"/>
        <function-ref name="set" scoped="" ref="0x7eee0f20"/>
        <function-ref name="clr" scoped="" ref="0x7eed3018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7eec2980" loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7eec2980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eec2b58"/>
        <function-ref name="isInput" scoped="" ref="0x7eec2c38"/>
        <function-ref name="toggle" scoped="" ref="0x7eec2d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec2df8"/>
        <function-ref name="get" scoped="" ref="0x7eec2ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec1010"/>
        <function-ref name="set" scoped="" ref="0x7eec10f0"/>
        <function-ref name="clr" scoped="" ref="0x7eec11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7eeb0af8" loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7eeb0af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb0cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb0db0"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb0e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea3010"/>
        <function-ref name="get" scoped="" ref="0x7eea30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea31d0"/>
        <function-ref name="set" scoped="" ref="0x7eea32b0"/>
        <function-ref name="clr" scoped="" ref="0x7eea3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7ee93808" loc="86:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7ee93808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee939e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ee93ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7ee93ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee93c80"/>
        <function-ref name="get" scoped="" ref="0x7ee93d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee93e40"/>
        <function-ref name="set" scoped="" ref="0x7ee93f20"/>
        <function-ref name="clr" scoped="" ref="0x7ee92018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7eef2188" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7eef2188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef2360"/>
        <function-ref name="isInput" scoped="" ref="0x7eef2440"/>
        <function-ref name="toggle" scoped="" ref="0x7eef2520"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef2600"/>
        <function-ref name="get" scoped="" ref="0x7eef26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef27c0"/>
        <function-ref name="set" scoped="" ref="0x7eef28a0"/>
        <function-ref name="clr" scoped="" ref="0x7eef2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7eef1508" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7eef1508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef16e0"/>
        <function-ref name="isInput" scoped="" ref="0x7eef17c0"/>
        <function-ref name="toggle" scoped="" ref="0x7eef18a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef1980"/>
        <function-ref name="get" scoped="" ref="0x7eef1a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef1b40"/>
        <function-ref name="set" scoped="" ref="0x7eef1c20"/>
        <function-ref name="clr" scoped="" ref="0x7eef1d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7eed2508" loc="58:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7eed2508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eed26e0"/>
        <function-ref name="isInput" scoped="" ref="0x7eed27c0"/>
        <function-ref name="toggle" scoped="" ref="0x7eed28a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eed2980"/>
        <function-ref name="get" scoped="" ref="0x7eed2a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eed2b40"/>
        <function-ref name="set" scoped="" ref="0x7eed2c20"/>
        <function-ref name="clr" scoped="" ref="0x7eed2d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7eec06c8" loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7eec06c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eec08a0"/>
        <function-ref name="isInput" scoped="" ref="0x7eec0980"/>
        <function-ref name="toggle" scoped="" ref="0x7eec0a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec0b40"/>
        <function-ref name="get" scoped="" ref="0x7eec0c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec0d00"/>
        <function-ref name="set" scoped="" ref="0x7eec0de0"/>
        <function-ref name="clr" scoped="" ref="0x7eec0ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7eea2808" loc="80:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7eea2808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eea29e0"/>
        <function-ref name="isInput" scoped="" ref="0x7eea2ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7eea2ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea2c80"/>
        <function-ref name="get" scoped="" ref="0x7eea2d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea2e40"/>
        <function-ref name="set" scoped="" ref="0x7eea2f20"/>
        <function-ref name="clr" scoped="" ref="0x7eea1018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7ef01068" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7ef01068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef01240"/>
        <function-ref name="isInput" scoped="" ref="0x7ef01320"/>
        <function-ref name="toggle" scoped="" ref="0x7ef01400"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef014e0"/>
        <function-ref name="get" scoped="" ref="0x7ef015c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ef016a0"/>
        <function-ref name="set" scoped="" ref="0x7ef01780"/>
        <function-ref name="clr" scoped="" ref="0x7ef01860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7eee3190" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7eee3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eee33e8"/>
        <function-ref name="isInput" scoped="" ref="0x7eee34c8"/>
        <function-ref name="toggle" scoped="" ref="0x7eee35a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eee3688"/>
        <function-ref name="get" scoped="" ref="0x7eee3768"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eee3848"/>
        <function-ref name="set" scoped="" ref="0x7eee3928"/>
        <function-ref name="clr" scoped="" ref="0x7eee3a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7eed0190" loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7eed0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eed0368"/>
        <function-ref name="isInput" scoped="" ref="0x7eed0448"/>
        <function-ref name="toggle" scoped="" ref="0x7eed0528"/>
        <function-ref name="isOutput" scoped="" ref="0x7eed0608"/>
        <function-ref name="get" scoped="" ref="0x7eed06e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eed07c8"/>
        <function-ref name="set" scoped="" ref="0x7eed08a8"/>
        <function-ref name="clr" scoped="" ref="0x7eed0988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7ee91508" loc="89:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7ee91508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee916e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ee917c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ee918a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee91980"/>
        <function-ref name="get" scoped="" ref="0x7ee91a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee91b40"/>
        <function-ref name="set" scoped="" ref="0x7ee91c20"/>
        <function-ref name="clr" scoped="" ref="0x7ee91d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7eec3508" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7eec3508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eec37e0"/>
        <function-ref name="isInput" scoped="" ref="0x7eec38c0"/>
        <function-ref name="toggle" scoped="" ref="0x7eec39a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec3a80"/>
        <function-ref name="get" scoped="" ref="0x7eec3b60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec3c40"/>
        <function-ref name="set" scoped="" ref="0x7eec3d20"/>
        <function-ref name="clr" scoped="" ref="0x7eec3e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7eeb17a8" loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7eeb17a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb1980"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb1a60"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb1b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb1c20"/>
        <function-ref name="get" scoped="" ref="0x7eeb1d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eeb1de0"/>
        <function-ref name="set" scoped="" ref="0x7eeb1ec0"/>
        <function-ref name="clr" scoped="" ref="0x7eeb0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7eea0508" loc="84:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7eea0508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eea06e0"/>
        <function-ref name="isInput" scoped="" ref="0x7eea07c0"/>
        <function-ref name="toggle" scoped="" ref="0x7eea08a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea0980"/>
        <function-ref name="get" scoped="" ref="0x7eea0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea0b40"/>
        <function-ref name="set" scoped="" ref="0x7eea0c20"/>
        <function-ref name="clr" scoped="" ref="0x7eea0d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7ee817a8" loc="95:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7ee817a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee81980"/>
        <function-ref name="isInput" scoped="" ref="0x7ee81a60"/>
        <function-ref name="toggle" scoped="" ref="0x7ee81b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee81c20"/>
        <function-ref name="get" scoped="" ref="0x7ee81d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee81de0"/>
        <function-ref name="set" scoped="" ref="0x7ee81ec0"/>
        <function-ref name="clr" scoped="" ref="0x7ee80010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7ef00d98" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7ef00d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef3010"/>
        <function-ref name="isInput" scoped="" ref="0x7eef30f0"/>
        <function-ref name="toggle" scoped="" ref="0x7eef31d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef32b0"/>
        <function-ref name="get" scoped="" ref="0x7eef3390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef3470"/>
        <function-ref name="set" scoped="" ref="0x7eef3550"/>
        <function-ref name="clr" scoped="" ref="0x7eef3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7eee2e78" loc="53:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7eee2e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eee0070"/>
        <function-ref name="isInput" scoped="" ref="0x7eee0150"/>
        <function-ref name="toggle" scoped="" ref="0x7eee0230"/>
        <function-ref name="isOutput" scoped="" ref="0x7eee0310"/>
        <function-ref name="get" scoped="" ref="0x7eee03f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eee04d0"/>
        <function-ref name="set" scoped="" ref="0x7eee05b0"/>
        <function-ref name="clr" scoped="" ref="0x7eee0690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7eea1190" loc="82:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7eea1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eea1368"/>
        <function-ref name="isInput" scoped="" ref="0x7eea1448"/>
        <function-ref name="toggle" scoped="" ref="0x7eea1528"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea1608"/>
        <function-ref name="get" scoped="" ref="0x7eea16e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea17c8"/>
        <function-ref name="set" scoped="" ref="0x7eea18a8"/>
        <function-ref name="clr" scoped="" ref="0x7eea1988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7eed3190" loc="56:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7eed3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eed3368"/>
        <function-ref name="isInput" scoped="" ref="0x7eed3448"/>
        <function-ref name="toggle" scoped="" ref="0x7eed3528"/>
        <function-ref name="isOutput" scoped="" ref="0x7eed3608"/>
        <function-ref name="get" scoped="" ref="0x7eed36e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eed37c8"/>
        <function-ref name="set" scoped="" ref="0x7eed38a8"/>
        <function-ref name="clr" scoped="" ref="0x7eed3988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7eec1348" loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7eec1348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eec1520"/>
        <function-ref name="isInput" scoped="" ref="0x7eec1600"/>
        <function-ref name="toggle" scoped="" ref="0x7eec16e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec17c0"/>
        <function-ref name="get" scoped="" ref="0x7eec18a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec1980"/>
        <function-ref name="set" scoped="" ref="0x7eec1a60"/>
        <function-ref name="clr" scoped="" ref="0x7eec1b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7eea3508" loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7eea3508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eea36e0"/>
        <function-ref name="isInput" scoped="" ref="0x7eea37c0"/>
        <function-ref name="toggle" scoped="" ref="0x7eea38a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea3980"/>
        <function-ref name="get" scoped="" ref="0x7eea3a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea3b40"/>
        <function-ref name="set" scoped="" ref="0x7eea3c20"/>
        <function-ref name="clr" scoped="" ref="0x7eea3d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7ee92190" loc="87:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7ee92190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee92368"/>
        <function-ref name="isInput" scoped="" ref="0x7ee92448"/>
        <function-ref name="toggle" scoped="" ref="0x7ee92528"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee92608"/>
        <function-ref name="get" scoped="" ref="0x7ee926e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee927c8"/>
        <function-ref name="set" scoped="" ref="0x7ee928a8"/>
        <function-ref name="clr" scoped="" ref="0x7ee92988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7ef03ce8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7ef03ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef03ec0"/>
        <function-ref name="isInput" scoped="" ref="0x7ef02010"/>
        <function-ref name="toggle" scoped="" ref="0x7ef020f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef021d0"/>
        <function-ref name="get" scoped="" ref="0x7ef022b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ef02390"/>
        <function-ref name="set" scoped="" ref="0x7ef02470"/>
        <function-ref name="clr" scoped="" ref="0x7ef02550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7eef1e78" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7eef1e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef0070"/>
        <function-ref name="isInput" scoped="" ref="0x7eef0150"/>
        <function-ref name="toggle" scoped="" ref="0x7eef0230"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef0310"/>
        <function-ref name="get" scoped="" ref="0x7eef03f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef04d0"/>
        <function-ref name="set" scoped="" ref="0x7eef05b0"/>
        <function-ref name="clr" scoped="" ref="0x7eef0690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7eed2e78" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7eed2e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eed1070"/>
        <function-ref name="isInput" scoped="" ref="0x7eed1150"/>
        <function-ref name="toggle" scoped="" ref="0x7eed1230"/>
        <function-ref name="isOutput" scoped="" ref="0x7eed1310"/>
        <function-ref name="get" scoped="" ref="0x7eed13f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eed14d0"/>
        <function-ref name="set" scoped="" ref="0x7eed15b0"/>
        <function-ref name="clr" scoped="" ref="0x7eed1690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7eeb3068" loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7eeb3068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb3240"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb3320"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb3400"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb34e0"/>
        <function-ref name="get" scoped="" ref="0x7eeb35c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eeb36a0"/>
        <function-ref name="set" scoped="" ref="0x7eeb3780"/>
        <function-ref name="clr" scoped="" ref="0x7eeb3860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7ee83428" loc="93:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7ee83428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee83600"/>
        <function-ref name="isInput" scoped="" ref="0x7ee836e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ee837c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee838a0"/>
        <function-ref name="get" scoped="" ref="0x7ee83980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee83a60"/>
        <function-ref name="set" scoped="" ref="0x7ee83b40"/>
        <function-ref name="clr" scoped="" ref="0x7ee83c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7eeb2428" loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7eeb2428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb2600"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb26e0"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb27c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb28a0"/>
        <function-ref name="get" scoped="" ref="0x7eeb2980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eeb2a60"/>
        <function-ref name="set" scoped="" ref="0x7eeb2b40"/>
        <function-ref name="clr" scoped="" ref="0x7eeb2c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7eed0b00" loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7eed0b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eed0cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7eed0db8"/>
        <function-ref name="toggle" scoped="" ref="0x7eed0e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec3010"/>
        <function-ref name="get" scoped="" ref="0x7eec30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec31d0"/>
        <function-ref name="set" scoped="" ref="0x7eec32b0"/>
        <function-ref name="clr" scoped="" ref="0x7eec3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7ef019d8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7ef019d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef01bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7ef01c90"/>
        <function-ref name="toggle" scoped="" ref="0x7ef01d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef01e50"/>
        <function-ref name="get" scoped="" ref="0x7ef00010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ef000f0"/>
        <function-ref name="set" scoped="" ref="0x7ef001d0"/>
        <function-ref name="clr" scoped="" ref="0x7ef002b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7eee3b80" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7eee3b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eee3d58"/>
        <function-ref name="isInput" scoped="" ref="0x7eee3e38"/>
        <function-ref name="toggle" scoped="" ref="0x7eee3f18"/>
        <function-ref name="isOutput" scoped="" ref="0x7eee2010"/>
        <function-ref name="get" scoped="" ref="0x7eee20f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eee21d0"/>
        <function-ref name="set" scoped="" ref="0x7eee22b0"/>
        <function-ref name="clr" scoped="" ref="0x7eee2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ede27f0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ede27f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede29c8"/>
        <function-ref name="isInput" scoped="" ref="0x7ede2aa8"/>
        <function-ref name="toggle" scoped="" ref="0x7ede2b88"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede2c68"/>
        <function-ref name="get" scoped="" ref="0x7ede2d48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede2e28"/>
        <function-ref name="set" scoped="" ref="0x7ede2f08"/>
        <function-ref name="clr" scoped="" ref="0x7ede0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7edd44f0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7edd44f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd46c8"/>
        <function-ref name="isInput" scoped="" ref="0x7edd47a8"/>
        <function-ref name="toggle" scoped="" ref="0x7edd4888"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd4968"/>
        <function-ref name="get" scoped="" ref="0x7edd4a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd4b28"/>
        <function-ref name="set" scoped="" ref="0x7edd4c08"/>
        <function-ref name="clr" scoped="" ref="0x7edd4ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ede3518" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ede3518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede36f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ede37d0"/>
        <function-ref name="toggle" scoped="" ref="0x7ede38b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede3990"/>
        <function-ref name="get" scoped="" ref="0x7ede3a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede3b50"/>
        <function-ref name="set" scoped="" ref="0x7ede3c30"/>
        <function-ref name="clr" scoped="" ref="0x7ede3d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ede0170" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ede0170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede0348"/>
        <function-ref name="isInput" scoped="" ref="0x7ede0428"/>
        <function-ref name="toggle" scoped="" ref="0x7ede0508"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede05e8"/>
        <function-ref name="get" scoped="" ref="0x7ede06c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede07a8"/>
        <function-ref name="set" scoped="" ref="0x7ede0888"/>
        <function-ref name="clr" scoped="" ref="0x7ede0968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7edd4e48" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7edd4e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd3050"/>
        <function-ref name="isInput" scoped="" ref="0x7edd3130"/>
        <function-ref name="toggle" scoped="" ref="0x7edd3210"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd32f0"/>
        <function-ref name="get" scoped="" ref="0x7edd33d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd34b0"/>
        <function-ref name="set" scoped="" ref="0x7edd3590"/>
        <function-ref name="clr" scoped="" ref="0x7edd3670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ede3e70" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ede3e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede2070"/>
        <function-ref name="isInput" scoped="" ref="0x7ede2150"/>
        <function-ref name="toggle" scoped="" ref="0x7ede2230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede2310"/>
        <function-ref name="get" scoped="" ref="0x7ede23f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede24d0"/>
        <function-ref name="set" scoped="" ref="0x7ede25b0"/>
        <function-ref name="clr" scoped="" ref="0x7ede2690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ede0ac8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ede0ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede0ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7ede0d80"/>
        <function-ref name="toggle" scoped="" ref="0x7ede0e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd4010"/>
        <function-ref name="get" scoped="" ref="0x7edd40f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd41d0"/>
        <function-ref name="set" scoped="" ref="0x7edd42b0"/>
        <function-ref name="clr" scoped="" ref="0x7edd4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7edd37d0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7edd37d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd39a8"/>
        <function-ref name="isInput" scoped="" ref="0x7edd3a88"/>
        <function-ref name="toggle" scoped="" ref="0x7edd3b68"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd3c48"/>
        <function-ref name="get" scoped="" ref="0x7edd3d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd3e08"/>
        <function-ref name="set" scoped="" ref="0x7edd3ee8"/>
        <function-ref name="clr" scoped="" ref="0x7edd2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cff5010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cff5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cff51e8"/>
        <function-ref name="isInput" scoped="" ref="0x7cff52c8"/>
        <function-ref name="toggle" scoped="" ref="0x7cff53a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7cff5488"/>
        <function-ref name="get" scoped="" ref="0x7cff5568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cff5648"/>
        <function-ref name="set" scoped="" ref="0x7cff5728"/>
        <function-ref name="clr" scoped="" ref="0x7cff5808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cff49e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cff49e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cff4bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7cff4ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7cff4d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7cff4e60"/>
        <function-ref name="get" scoped="" ref="0x7cff3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cff30f0"/>
        <function-ref name="set" scoped="" ref="0x7cff31d0"/>
        <function-ref name="clr" scoped="" ref="0x7cff32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cff2538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cff2538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cff2710"/>
        <function-ref name="isInput" scoped="" ref="0x7cff27f0"/>
        <function-ref name="toggle" scoped="" ref="0x7cff28d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cff29b0"/>
        <function-ref name="get" scoped="" ref="0x7cff2a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cff2b70"/>
        <function-ref name="set" scoped="" ref="0x7cff2c50"/>
        <function-ref name="clr" scoped="" ref="0x7cff2d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cff0010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cff0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cff01e8"/>
        <function-ref name="isInput" scoped="" ref="0x7cff02c8"/>
        <function-ref name="toggle" scoped="" ref="0x7cff03a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7cff0488"/>
        <function-ref name="get" scoped="" ref="0x7cff0568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cff0648"/>
        <function-ref name="set" scoped="" ref="0x7cff0728"/>
        <function-ref name="clr" scoped="" ref="0x7cff0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cfee9e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cfee9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cfeebc0"/>
        <function-ref name="isInput" scoped="" ref="0x7cfeeca0"/>
        <function-ref name="toggle" scoped="" ref="0x7cfeed80"/>
        <function-ref name="isOutput" scoped="" ref="0x7cfeee60"/>
        <function-ref name="get" scoped="" ref="0x7cfed010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cfed0f0"/>
        <function-ref name="set" scoped="" ref="0x7cfed1d0"/>
        <function-ref name="clr" scoped="" ref="0x7cfed2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cfec538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cfec538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cfec710"/>
        <function-ref name="isInput" scoped="" ref="0x7cfec7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7cfec8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cfec9b0"/>
        <function-ref name="get" scoped="" ref="0x7cfeca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cfecb70"/>
        <function-ref name="set" scoped="" ref="0x7cfecc50"/>
        <function-ref name="clr" scoped="" ref="0x7cfecd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cfea010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cfea010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cfea1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7cfea2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7cfea3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7cfea488"/>
        <function-ref name="get" scoped="" ref="0x7cfea568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cfea648"/>
        <function-ref name="set" scoped="" ref="0x7cfea728"/>
        <function-ref name="clr" scoped="" ref="0x7cfea808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cfe99e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cfe99e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cfe9bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7cfe9ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7cfe9d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7cfe9e60"/>
        <function-ref name="get" scoped="" ref="0x7cfe8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cfe80f0"/>
        <function-ref name="set" scoped="" ref="0x7cfe81d0"/>
        <function-ref name="clr" scoped="" ref="0x7cfe82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7edc4f28" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7edc4f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc3110"/>
        <function-ref name="isInput" scoped="" ref="0x7edc31f0"/>
        <function-ref name="toggle" scoped="" ref="0x7edc32d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc33b0"/>
        <function-ref name="get" scoped="" ref="0x7edc3490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc3570"/>
        <function-ref name="set" scoped="" ref="0x7edc3650"/>
        <function-ref name="clr" scoped="" ref="0x7edc3730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7edc2ba8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7edc2ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc2d80"/>
        <function-ref name="isInput" scoped="" ref="0x7edc2e60"/>
        <function-ref name="toggle" scoped="" ref="0x7edc0010"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc00f0"/>
        <function-ref name="get" scoped="" ref="0x7edc01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc02b0"/>
        <function-ref name="set" scoped="" ref="0x7edc0390"/>
        <function-ref name="clr" scoped="" ref="0x7edc0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7edd0bc0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7edd0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd0d98"/>
        <function-ref name="isInput" scoped="" ref="0x7edd0e78"/>
        <function-ref name="toggle" scoped="" ref="0x7edc4010"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc40f0"/>
        <function-ref name="get" scoped="" ref="0x7edc41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc42b0"/>
        <function-ref name="set" scoped="" ref="0x7edc4390"/>
        <function-ref name="clr" scoped="" ref="0x7edc4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7edc3890" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7edc3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc3a68"/>
        <function-ref name="isInput" scoped="" ref="0x7edc3b48"/>
        <function-ref name="toggle" scoped="" ref="0x7edc3c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc3d08"/>
        <function-ref name="get" scoped="" ref="0x7edc3de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc3ec8"/>
        <function-ref name="set" scoped="" ref="0x7edc2010"/>
        <function-ref name="clr" scoped="" ref="0x7edc20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7edc05d0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7edc05d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc07a8"/>
        <function-ref name="isInput" scoped="" ref="0x7edc0888"/>
        <function-ref name="toggle" scoped="" ref="0x7edc0968"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc0a48"/>
        <function-ref name="get" scoped="" ref="0x7edc0b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc0c08"/>
        <function-ref name="set" scoped="" ref="0x7edc0ce8"/>
        <function-ref name="clr" scoped="" ref="0x7edc0dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7edc45d0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7edc45d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc47a8"/>
        <function-ref name="isInput" scoped="" ref="0x7edc4888"/>
        <function-ref name="toggle" scoped="" ref="0x7edc4968"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc4a48"/>
        <function-ref name="get" scoped="" ref="0x7edc4b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc4c08"/>
        <function-ref name="set" scoped="" ref="0x7edc4ce8"/>
        <function-ref name="clr" scoped="" ref="0x7edc4dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7edc2250" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7edc2250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc2428"/>
        <function-ref name="isInput" scoped="" ref="0x7edc2508"/>
        <function-ref name="toggle" scoped="" ref="0x7edc25e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc26c8"/>
        <function-ref name="get" scoped="" ref="0x7edc27a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc2888"/>
        <function-ref name="set" scoped="" ref="0x7edc2968"/>
        <function-ref name="clr" scoped="" ref="0x7edc2a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7edc0f28" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7edc0f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb4110"/>
        <function-ref name="isInput" scoped="" ref="0x7edb41f0"/>
        <function-ref name="toggle" scoped="" ref="0x7edb42d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb43b0"/>
        <function-ref name="get" scoped="" ref="0x7edb4490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb4570"/>
        <function-ref name="set" scoped="" ref="0x7edb4650"/>
        <function-ref name="clr" scoped="" ref="0x7edb4730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cf9f7f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cf9f7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cf9f9d0"/>
        <function-ref name="isInput" scoped="" ref="0x7cf9fab0"/>
        <function-ref name="toggle" scoped="" ref="0x7cf9fb90"/>
        <function-ref name="isOutput" scoped="" ref="0x7cf9fc70"/>
        <function-ref name="get" scoped="" ref="0x7cf9fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cf9fe30"/>
        <function-ref name="set" scoped="" ref="0x7cf9ff10"/>
        <function-ref name="clr" scoped="" ref="0x7cf9e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cf9d228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cf9d228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cf9d400"/>
        <function-ref name="isInput" scoped="" ref="0x7cf9d4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7cf9d5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cf9d6a0"/>
        <function-ref name="get" scoped="" ref="0x7cf9d780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cf9d860"/>
        <function-ref name="set" scoped="" ref="0x7cf9d940"/>
        <function-ref name="clr" scoped="" ref="0x7cf9da20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cf9cc08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cf9cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cf9cde0"/>
        <function-ref name="isInput" scoped="" ref="0x7cf9cec0"/>
        <function-ref name="toggle" scoped="" ref="0x7cf9b010"/>
        <function-ref name="isOutput" scoped="" ref="0x7cf9b0f0"/>
        <function-ref name="get" scoped="" ref="0x7cf9b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cf9b2b0"/>
        <function-ref name="set" scoped="" ref="0x7cf9b390"/>
        <function-ref name="clr" scoped="" ref="0x7cf9b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cf9a6c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cf9a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cf9a898"/>
        <function-ref name="isInput" scoped="" ref="0x7cf9a978"/>
        <function-ref name="toggle" scoped="" ref="0x7cf9aa58"/>
        <function-ref name="isOutput" scoped="" ref="0x7cf9ab38"/>
        <function-ref name="get" scoped="" ref="0x7cf9ac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cf9acf8"/>
        <function-ref name="set" scoped="" ref="0x7cf9add8"/>
        <function-ref name="clr" scoped="" ref="0x7cf9aeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cf980b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cf980b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cf98288"/>
        <function-ref name="isInput" scoped="" ref="0x7cf98368"/>
        <function-ref name="toggle" scoped="" ref="0x7cf98448"/>
        <function-ref name="isOutput" scoped="" ref="0x7cf98528"/>
        <function-ref name="get" scoped="" ref="0x7cf98608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cf986e8"/>
        <function-ref name="set" scoped="" ref="0x7cf987c8"/>
        <function-ref name="clr" scoped="" ref="0x7cf988a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cf97a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cf97a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cf97c60"/>
        <function-ref name="isInput" scoped="" ref="0x7cf97d40"/>
        <function-ref name="toggle" scoped="" ref="0x7cf97e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7cf97f00"/>
        <function-ref name="get" scoped="" ref="0x7cf96010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cf960f0"/>
        <function-ref name="set" scoped="" ref="0x7cf961d0"/>
        <function-ref name="clr" scoped="" ref="0x7cf962b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cf95538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cf95538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cf95710"/>
        <function-ref name="isInput" scoped="" ref="0x7cf957f0"/>
        <function-ref name="toggle" scoped="" ref="0x7cf958d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cf959b0"/>
        <function-ref name="get" scoped="" ref="0x7cf95a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cf95b70"/>
        <function-ref name="set" scoped="" ref="0x7cf95c50"/>
        <function-ref name="clr" scoped="" ref="0x7cf95d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cf93010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cf93010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cf931e8"/>
        <function-ref name="isInput" scoped="" ref="0x7cf932c8"/>
        <function-ref name="toggle" scoped="" ref="0x7cf933a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7cf93488"/>
        <function-ref name="get" scoped="" ref="0x7cf93568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cf93648"/>
        <function-ref name="set" scoped="" ref="0x7cf93728"/>
        <function-ref name="clr" scoped="" ref="0x7cf93808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7edb05d0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7edb05d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb07a8"/>
        <function-ref name="isInput" scoped="" ref="0x7edb0888"/>
        <function-ref name="toggle" scoped="" ref="0x7edb0968"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb0a48"/>
        <function-ref name="get" scoped="" ref="0x7edb0b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb0c08"/>
        <function-ref name="set" scoped="" ref="0x7edb0ce8"/>
        <function-ref name="clr" scoped="" ref="0x7edb0dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7eda3250" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7eda3250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda3428"/>
        <function-ref name="isInput" scoped="" ref="0x7eda3508"/>
        <function-ref name="toggle" scoped="" ref="0x7eda35e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda36c8"/>
        <function-ref name="get" scoped="" ref="0x7eda37a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda3888"/>
        <function-ref name="set" scoped="" ref="0x7eda3968"/>
        <function-ref name="clr" scoped="" ref="0x7eda3a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7edb12a0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7edb12a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb1478"/>
        <function-ref name="isInput" scoped="" ref="0x7edb1558"/>
        <function-ref name="toggle" scoped="" ref="0x7edb1638"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb1718"/>
        <function-ref name="get" scoped="" ref="0x7edb17f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb18d8"/>
        <function-ref name="set" scoped="" ref="0x7edb19b8"/>
        <function-ref name="clr" scoped="" ref="0x7edb1a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7edb0f28" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7edb0f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda4110"/>
        <function-ref name="isInput" scoped="" ref="0x7eda41f0"/>
        <function-ref name="toggle" scoped="" ref="0x7eda42d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda43b0"/>
        <function-ref name="get" scoped="" ref="0x7eda4490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda4570"/>
        <function-ref name="set" scoped="" ref="0x7eda4650"/>
        <function-ref name="clr" scoped="" ref="0x7eda4730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7eda3ba8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7eda3ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda3d80"/>
        <function-ref name="isInput" scoped="" ref="0x7eda3e60"/>
        <function-ref name="toggle" scoped="" ref="0x7eda2010"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda20f0"/>
        <function-ref name="get" scoped="" ref="0x7eda21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda22b0"/>
        <function-ref name="set" scoped="" ref="0x7eda2390"/>
        <function-ref name="clr" scoped="" ref="0x7eda2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7edb1bf8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7edb1bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb1dd0"/>
        <function-ref name="isInput" scoped="" ref="0x7edb1eb0"/>
        <function-ref name="toggle" scoped="" ref="0x7edb0010"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb00f0"/>
        <function-ref name="get" scoped="" ref="0x7edb01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb02b0"/>
        <function-ref name="set" scoped="" ref="0x7edb0390"/>
        <function-ref name="clr" scoped="" ref="0x7edb0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7eda4890" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7eda4890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda4a68"/>
        <function-ref name="isInput" scoped="" ref="0x7eda4b48"/>
        <function-ref name="toggle" scoped="" ref="0x7eda4c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda4d08"/>
        <function-ref name="get" scoped="" ref="0x7eda4de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda4ec8"/>
        <function-ref name="set" scoped="" ref="0x7eda3010"/>
        <function-ref name="clr" scoped="" ref="0x7eda30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7eda25d0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7eda25d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda27a8"/>
        <function-ref name="isInput" scoped="" ref="0x7eda2888"/>
        <function-ref name="toggle" scoped="" ref="0x7eda2968"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda2a48"/>
        <function-ref name="get" scoped="" ref="0x7eda2b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda2c08"/>
        <function-ref name="set" scoped="" ref="0x7eda2ce8"/>
        <function-ref name="clr" scoped="" ref="0x7eda2dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cf6bd08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cf6bd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cf6bee0"/>
        <function-ref name="isInput" scoped="" ref="0x7cf68010"/>
        <function-ref name="toggle" scoped="" ref="0x7cf680f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cf681d0"/>
        <function-ref name="get" scoped="" ref="0x7cf682b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cf68390"/>
        <function-ref name="set" scoped="" ref="0x7cf68470"/>
        <function-ref name="clr" scoped="" ref="0x7cf68550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cf67718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cf67718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cf678f0"/>
        <function-ref name="isInput" scoped="" ref="0x7cf679d0"/>
        <function-ref name="toggle" scoped="" ref="0x7cf67ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cf67b90"/>
        <function-ref name="get" scoped="" ref="0x7cf67c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cf67d50"/>
        <function-ref name="set" scoped="" ref="0x7cf67e30"/>
        <function-ref name="clr" scoped="" ref="0x7cf67f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cf650f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cf650f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cf652d0"/>
        <function-ref name="isInput" scoped="" ref="0x7cf653b0"/>
        <function-ref name="toggle" scoped="" ref="0x7cf65490"/>
        <function-ref name="isOutput" scoped="" ref="0x7cf65570"/>
        <function-ref name="get" scoped="" ref="0x7cf65650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cf65730"/>
        <function-ref name="set" scoped="" ref="0x7cf65810"/>
        <function-ref name="clr" scoped="" ref="0x7cf658f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cf64ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cf64ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cf64ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7cf64d80"/>
        <function-ref name="toggle" scoped="" ref="0x7cf64e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7cf63010"/>
        <function-ref name="get" scoped="" ref="0x7cf630f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cf631d0"/>
        <function-ref name="set" scoped="" ref="0x7cf632b0"/>
        <function-ref name="clr" scoped="" ref="0x7cf63390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cf62570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cf62570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cf62748"/>
        <function-ref name="isInput" scoped="" ref="0x7cf62828"/>
        <function-ref name="toggle" scoped="" ref="0x7cf62908"/>
        <function-ref name="isOutput" scoped="" ref="0x7cf629e8"/>
        <function-ref name="get" scoped="" ref="0x7cf62ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cf62ba8"/>
        <function-ref name="set" scoped="" ref="0x7cf62c88"/>
        <function-ref name="clr" scoped="" ref="0x7cf62d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cf60010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cf60010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cf601e8"/>
        <function-ref name="isInput" scoped="" ref="0x7cf602c8"/>
        <function-ref name="toggle" scoped="" ref="0x7cf603a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7cf60488"/>
        <function-ref name="get" scoped="" ref="0x7cf60568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cf60648"/>
        <function-ref name="set" scoped="" ref="0x7cf60728"/>
        <function-ref name="clr" scoped="" ref="0x7cf60808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cf5e9e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cf5e9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cf5ebc0"/>
        <function-ref name="isInput" scoped="" ref="0x7cf5eca0"/>
        <function-ref name="toggle" scoped="" ref="0x7cf5ed80"/>
        <function-ref name="isOutput" scoped="" ref="0x7cf5ee60"/>
        <function-ref name="get" scoped="" ref="0x7cf5d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cf5d0f0"/>
        <function-ref name="set" scoped="" ref="0x7cf5d1d0"/>
        <function-ref name="clr" scoped="" ref="0x7cf5d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cf5c538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cf5c538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cf5c710"/>
        <function-ref name="isInput" scoped="" ref="0x7cf5c7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7cf5c8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cf5c9b0"/>
        <function-ref name="get" scoped="" ref="0x7cf5ca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cf5cb70"/>
        <function-ref name="set" scoped="" ref="0x7cf5cc50"/>
        <function-ref name="clr" scoped="" ref="0x7cf5cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ed92c88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ed92c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed92e60"/>
        <function-ref name="isInput" scoped="" ref="0x7ed91010"/>
        <function-ref name="toggle" scoped="" ref="0x7ed910f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed911d0"/>
        <function-ref name="get" scoped="" ref="0x7ed912b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed91390"/>
        <function-ref name="set" scoped="" ref="0x7ed91470"/>
        <function-ref name="clr" scoped="" ref="0x7ed91550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ed90988" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ed90988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed90b60"/>
        <function-ref name="isInput" scoped="" ref="0x7ed90c40"/>
        <function-ref name="toggle" scoped="" ref="0x7ed90d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed90e00"/>
        <function-ref name="get" scoped="" ref="0x7ed90ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed84010"/>
        <function-ref name="set" scoped="" ref="0x7ed840f0"/>
        <function-ref name="clr" scoped="" ref="0x7ed841d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ed939c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ed939c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed93b98"/>
        <function-ref name="isInput" scoped="" ref="0x7ed93c78"/>
        <function-ref name="toggle" scoped="" ref="0x7ed93d58"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed93e38"/>
        <function-ref name="get" scoped="" ref="0x7ed93f18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed92010"/>
        <function-ref name="set" scoped="" ref="0x7ed920f0"/>
        <function-ref name="clr" scoped="" ref="0x7ed921d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ed916b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ed916b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed91888"/>
        <function-ref name="isInput" scoped="" ref="0x7ed91968"/>
        <function-ref name="toggle" scoped="" ref="0x7ed91a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed91b28"/>
        <function-ref name="get" scoped="" ref="0x7ed91c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed91ce8"/>
        <function-ref name="set" scoped="" ref="0x7ed91dc8"/>
        <function-ref name="clr" scoped="" ref="0x7ed91ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ed84330" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ed84330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed84508"/>
        <function-ref name="isInput" scoped="" ref="0x7ed845e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed846c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed847a8"/>
        <function-ref name="get" scoped="" ref="0x7ed84888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed84968"/>
        <function-ref name="set" scoped="" ref="0x7ed84a48"/>
        <function-ref name="clr" scoped="" ref="0x7ed84b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ed92330" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ed92330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed92508"/>
        <function-ref name="isInput" scoped="" ref="0x7ed925e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed926c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed927a8"/>
        <function-ref name="get" scoped="" ref="0x7ed92888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed92968"/>
        <function-ref name="set" scoped="" ref="0x7ed92a48"/>
        <function-ref name="clr" scoped="" ref="0x7ed92b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ed90030" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ed90030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed90208"/>
        <function-ref name="isInput" scoped="" ref="0x7ed902e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed903c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed904a8"/>
        <function-ref name="get" scoped="" ref="0x7ed90588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed90668"/>
        <function-ref name="set" scoped="" ref="0x7ed90748"/>
        <function-ref name="clr" scoped="" ref="0x7ed90828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ed84c88" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ed84c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed84e60"/>
        <function-ref name="isInput" scoped="" ref="0x7ed83010"/>
        <function-ref name="toggle" scoped="" ref="0x7ed830f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed831d0"/>
        <function-ref name="get" scoped="" ref="0x7ed832b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed83390"/>
        <function-ref name="set" scoped="" ref="0x7ed83470"/>
        <function-ref name="clr" scoped="" ref="0x7ed83550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cf342b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cf342b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cf34488"/>
        <function-ref name="isInput" scoped="" ref="0x7cf34568"/>
        <function-ref name="toggle" scoped="" ref="0x7cf34648"/>
        <function-ref name="isOutput" scoped="" ref="0x7cf34728"/>
        <function-ref name="get" scoped="" ref="0x7cf34808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cf348e8"/>
        <function-ref name="set" scoped="" ref="0x7cf349c8"/>
        <function-ref name="clr" scoped="" ref="0x7cf34aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cf33c78" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cf33c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cf33e50"/>
        <function-ref name="isInput" scoped="" ref="0x7cf32010"/>
        <function-ref name="toggle" scoped="" ref="0x7cf320f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cf321d0"/>
        <function-ref name="get" scoped="" ref="0x7cf322b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cf32390"/>
        <function-ref name="set" scoped="" ref="0x7cf32470"/>
        <function-ref name="clr" scoped="" ref="0x7cf32550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cf31718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cf31718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cf318f0"/>
        <function-ref name="isInput" scoped="" ref="0x7cf319d0"/>
        <function-ref name="toggle" scoped="" ref="0x7cf31ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cf31b90"/>
        <function-ref name="get" scoped="" ref="0x7cf31c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cf31d50"/>
        <function-ref name="set" scoped="" ref="0x7cf31e30"/>
        <function-ref name="clr" scoped="" ref="0x7cf31f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cf2e0f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cf2e0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cf2e2d0"/>
        <function-ref name="isInput" scoped="" ref="0x7cf2e3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7cf2e490"/>
        <function-ref name="isOutput" scoped="" ref="0x7cf2e570"/>
        <function-ref name="get" scoped="" ref="0x7cf2e650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cf2e730"/>
        <function-ref name="set" scoped="" ref="0x7cf2e810"/>
        <function-ref name="clr" scoped="" ref="0x7cf2e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cf2cac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cf2cac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cf2cca0"/>
        <function-ref name="isInput" scoped="" ref="0x7cf2cd80"/>
        <function-ref name="toggle" scoped="" ref="0x7cf2ce60"/>
        <function-ref name="isOutput" scoped="" ref="0x7cf2b010"/>
        <function-ref name="get" scoped="" ref="0x7cf2b0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cf2b1d0"/>
        <function-ref name="set" scoped="" ref="0x7cf2b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7cf2b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cf2a570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cf2a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cf2a748"/>
        <function-ref name="isInput" scoped="" ref="0x7cf2a828"/>
        <function-ref name="toggle" scoped="" ref="0x7cf2a908"/>
        <function-ref name="isOutput" scoped="" ref="0x7cf2a9e8"/>
        <function-ref name="get" scoped="" ref="0x7cf2aac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cf2aba8"/>
        <function-ref name="set" scoped="" ref="0x7cf2ac88"/>
        <function-ref name="clr" scoped="" ref="0x7cf2ad68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cf28010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cf28010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cf281e8"/>
        <function-ref name="isInput" scoped="" ref="0x7cf282c8"/>
        <function-ref name="toggle" scoped="" ref="0x7cf283a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7cf28488"/>
        <function-ref name="get" scoped="" ref="0x7cf28568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cf28648"/>
        <function-ref name="set" scoped="" ref="0x7cf28728"/>
        <function-ref name="clr" scoped="" ref="0x7cf28808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cf279e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cf279e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cf27bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7cf27ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7cf27d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7cf27e60"/>
        <function-ref name="get" scoped="" ref="0x7cf26010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cf260f0"/>
        <function-ref name="set" scoped="" ref="0x7cf261d0"/>
        <function-ref name="clr" scoped="" ref="0x7cf262b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ed73410" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ed73410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed735e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ed736c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed737a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed73888"/>
        <function-ref name="get" scoped="" ref="0x7ed73968"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed73a48"/>
        <function-ref name="set" scoped="" ref="0x7ed73b28"/>
        <function-ref name="clr" scoped="" ref="0x7ed73c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ed71170" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ed71170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed71348"/>
        <function-ref name="isInput" scoped="" ref="0x7ed71428"/>
        <function-ref name="toggle" scoped="" ref="0x7ed71508"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed715e8"/>
        <function-ref name="get" scoped="" ref="0x7ed716c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed717a8"/>
        <function-ref name="set" scoped="" ref="0x7ed71888"/>
        <function-ref name="clr" scoped="" ref="0x7ed71968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ed740c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ed740c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed74298"/>
        <function-ref name="isInput" scoped="" ref="0x7ed74378"/>
        <function-ref name="toggle" scoped="" ref="0x7ed74458"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed74538"/>
        <function-ref name="get" scoped="" ref="0x7ed74618"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed746f8"/>
        <function-ref name="set" scoped="" ref="0x7ed747d8"/>
        <function-ref name="clr" scoped="" ref="0x7ed748b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ed73d68" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ed73d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed72010"/>
        <function-ref name="isInput" scoped="" ref="0x7ed720f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed721d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed722b0"/>
        <function-ref name="get" scoped="" ref="0x7ed72390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed72470"/>
        <function-ref name="set" scoped="" ref="0x7ed72550"/>
        <function-ref name="clr" scoped="" ref="0x7ed72630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ed71ac8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ed71ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed71ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed71d80"/>
        <function-ref name="toggle" scoped="" ref="0x7ed71e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed70010"/>
        <function-ref name="get" scoped="" ref="0x7ed700f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed701d0"/>
        <function-ref name="set" scoped="" ref="0x7ed702b0"/>
        <function-ref name="clr" scoped="" ref="0x7ed70390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ed74a18" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ed74a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed74bf0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed74cd0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed74db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed74e90"/>
        <function-ref name="get" scoped="" ref="0x7ed73010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed730f0"/>
        <function-ref name="set" scoped="" ref="0x7ed731d0"/>
        <function-ref name="clr" scoped="" ref="0x7ed732b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ed72790" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ed72790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed72968"/>
        <function-ref name="isInput" scoped="" ref="0x7ed72a48"/>
        <function-ref name="toggle" scoped="" ref="0x7ed72b28"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed72c08"/>
        <function-ref name="get" scoped="" ref="0x7ed72ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed72dc8"/>
        <function-ref name="set" scoped="" ref="0x7ed72ea8"/>
        <function-ref name="clr" scoped="" ref="0x7ed71010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ed704f0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ed704f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed706c8"/>
        <function-ref name="isInput" scoped="" ref="0x7ed707a8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed70888"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed70968"/>
        <function-ref name="get" scoped="" ref="0x7ed70a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed70b28"/>
        <function-ref name="set" scoped="" ref="0x7ed70c08"/>
        <function-ref name="clr" scoped="" ref="0x7ed70ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cefe7f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cefe7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cefe9d0"/>
        <function-ref name="isInput" scoped="" ref="0x7cefeab0"/>
        <function-ref name="toggle" scoped="" ref="0x7cefeb90"/>
        <function-ref name="isOutput" scoped="" ref="0x7cefec70"/>
        <function-ref name="get" scoped="" ref="0x7cefed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cefee30"/>
        <function-ref name="set" scoped="" ref="0x7cefef10"/>
        <function-ref name="clr" scoped="" ref="0x7cefd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cefc228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cefc228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cefc400"/>
        <function-ref name="isInput" scoped="" ref="0x7cefc4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7cefc5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cefc6a0"/>
        <function-ref name="get" scoped="" ref="0x7cefc780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cefc860"/>
        <function-ref name="set" scoped="" ref="0x7cefc940"/>
        <function-ref name="clr" scoped="" ref="0x7cefca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cefbc08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cefbc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cefbde0"/>
        <function-ref name="isInput" scoped="" ref="0x7cefbec0"/>
        <function-ref name="toggle" scoped="" ref="0x7cefa010"/>
        <function-ref name="isOutput" scoped="" ref="0x7cefa0f0"/>
        <function-ref name="get" scoped="" ref="0x7cefa1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cefa2b0"/>
        <function-ref name="set" scoped="" ref="0x7cefa390"/>
        <function-ref name="clr" scoped="" ref="0x7cefa470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cef96c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cef96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cef9898"/>
        <function-ref name="isInput" scoped="" ref="0x7cef9978"/>
        <function-ref name="toggle" scoped="" ref="0x7cef9a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7cef9b38"/>
        <function-ref name="get" scoped="" ref="0x7cef9c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cef9cf8"/>
        <function-ref name="set" scoped="" ref="0x7cef9dd8"/>
        <function-ref name="clr" scoped="" ref="0x7cef9eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cef70b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cef70b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cef7288"/>
        <function-ref name="isInput" scoped="" ref="0x7cef7368"/>
        <function-ref name="toggle" scoped="" ref="0x7cef7448"/>
        <function-ref name="isOutput" scoped="" ref="0x7cef7528"/>
        <function-ref name="get" scoped="" ref="0x7cef7608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cef76e8"/>
        <function-ref name="set" scoped="" ref="0x7cef77c8"/>
        <function-ref name="clr" scoped="" ref="0x7cef78a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cef6a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cef6a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cef6c60"/>
        <function-ref name="isInput" scoped="" ref="0x7cef6d40"/>
        <function-ref name="toggle" scoped="" ref="0x7cef6e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7cef6f00"/>
        <function-ref name="get" scoped="" ref="0x7cef5010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cef50f0"/>
        <function-ref name="set" scoped="" ref="0x7cef51d0"/>
        <function-ref name="clr" scoped="" ref="0x7cef52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cef4538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cef4538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cef4710"/>
        <function-ref name="isInput" scoped="" ref="0x7cef47f0"/>
        <function-ref name="toggle" scoped="" ref="0x7cef48d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cef49b0"/>
        <function-ref name="get" scoped="" ref="0x7cef4a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cef4b70"/>
        <function-ref name="set" scoped="" ref="0x7cef4c50"/>
        <function-ref name="clr" scoped="" ref="0x7cef4d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cef2010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cef2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cef21e8"/>
        <function-ref name="isInput" scoped="" ref="0x7cef22c8"/>
        <function-ref name="toggle" scoped="" ref="0x7cef23a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7cef2488"/>
        <function-ref name="get" scoped="" ref="0x7cef2568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cef2648"/>
        <function-ref name="set" scoped="" ref="0x7cef2728"/>
        <function-ref name="clr" scoped="" ref="0x7cef2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ed619e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ed619e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed61bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed61ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed61d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed61e60"/>
        <function-ref name="get" scoped="" ref="0x7ed54010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed540f0"/>
        <function-ref name="set" scoped="" ref="0x7ed541d0"/>
        <function-ref name="clr" scoped="" ref="0x7ed542b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ed53790" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ed53790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed53968"/>
        <function-ref name="isInput" scoped="" ref="0x7ed53a48"/>
        <function-ref name="toggle" scoped="" ref="0x7ed53b28"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed53c08"/>
        <function-ref name="get" scoped="" ref="0x7ed53ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed53dc8"/>
        <function-ref name="set" scoped="" ref="0x7ed53ea8"/>
        <function-ref name="clr" scoped="" ref="0x7ed52010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ed626f8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ed626f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed628d0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed629b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed62a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed62b70"/>
        <function-ref name="get" scoped="" ref="0x7ed62c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed62d30"/>
        <function-ref name="set" scoped="" ref="0x7ed62e10"/>
        <function-ref name="clr" scoped="" ref="0x7ed62ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ed54410" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ed54410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed545e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ed546c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed547a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed54888"/>
        <function-ref name="get" scoped="" ref="0x7ed54968"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed54a48"/>
        <function-ref name="set" scoped="" ref="0x7ed54b28"/>
        <function-ref name="clr" scoped="" ref="0x7ed54c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ed52170" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ed52170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed52348"/>
        <function-ref name="isInput" scoped="" ref="0x7ed52428"/>
        <function-ref name="toggle" scoped="" ref="0x7ed52508"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed525e8"/>
        <function-ref name="get" scoped="" ref="0x7ed526c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed527a8"/>
        <function-ref name="set" scoped="" ref="0x7ed52888"/>
        <function-ref name="clr" scoped="" ref="0x7ed52968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ed61090" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ed61090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed61268"/>
        <function-ref name="isInput" scoped="" ref="0x7ed61348"/>
        <function-ref name="toggle" scoped="" ref="0x7ed61428"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed61508"/>
        <function-ref name="get" scoped="" ref="0x7ed615e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed616c8"/>
        <function-ref name="set" scoped="" ref="0x7ed617a8"/>
        <function-ref name="clr" scoped="" ref="0x7ed61888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ed54d68" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ed54d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed53010"/>
        <function-ref name="isInput" scoped="" ref="0x7ed530f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed531d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed532b0"/>
        <function-ref name="get" scoped="" ref="0x7ed53390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed53470"/>
        <function-ref name="set" scoped="" ref="0x7ed53550"/>
        <function-ref name="clr" scoped="" ref="0x7ed53630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ed52ac8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ed52ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed52ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed52d80"/>
        <function-ref name="toggle" scoped="" ref="0x7ed52e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed51010"/>
        <function-ref name="get" scoped="" ref="0x7ed510f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed511d0"/>
        <function-ref name="set" scoped="" ref="0x7ed512b0"/>
        <function-ref name="clr" scoped="" ref="0x7ed51390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ceccd08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ceccd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ceccee0"/>
        <function-ref name="isInput" scoped="" ref="0x7cec9010"/>
        <function-ref name="toggle" scoped="" ref="0x7cec90f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cec91d0"/>
        <function-ref name="get" scoped="" ref="0x7cec92b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cec9390"/>
        <function-ref name="set" scoped="" ref="0x7cec9470"/>
        <function-ref name="clr" scoped="" ref="0x7cec9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cec8718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cec8718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cec88f0"/>
        <function-ref name="isInput" scoped="" ref="0x7cec89d0"/>
        <function-ref name="toggle" scoped="" ref="0x7cec8ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cec8b90"/>
        <function-ref name="get" scoped="" ref="0x7cec8c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cec8d50"/>
        <function-ref name="set" scoped="" ref="0x7cec8e30"/>
        <function-ref name="clr" scoped="" ref="0x7cec8f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cec60f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cec60f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cec62d0"/>
        <function-ref name="isInput" scoped="" ref="0x7cec63b0"/>
        <function-ref name="toggle" scoped="" ref="0x7cec6490"/>
        <function-ref name="isOutput" scoped="" ref="0x7cec6570"/>
        <function-ref name="get" scoped="" ref="0x7cec6650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cec6730"/>
        <function-ref name="set" scoped="" ref="0x7cec6810"/>
        <function-ref name="clr" scoped="" ref="0x7cec68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cec5ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cec5ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cec5ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7cec5d80"/>
        <function-ref name="toggle" scoped="" ref="0x7cec5e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7cec4010"/>
        <function-ref name="get" scoped="" ref="0x7cec40f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cec41d0"/>
        <function-ref name="set" scoped="" ref="0x7cec42b0"/>
        <function-ref name="clr" scoped="" ref="0x7cec4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cec3570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cec3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cec3748"/>
        <function-ref name="isInput" scoped="" ref="0x7cec3828"/>
        <function-ref name="toggle" scoped="" ref="0x7cec3908"/>
        <function-ref name="isOutput" scoped="" ref="0x7cec39e8"/>
        <function-ref name="get" scoped="" ref="0x7cec3ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cec3ba8"/>
        <function-ref name="set" scoped="" ref="0x7cec3c88"/>
        <function-ref name="clr" scoped="" ref="0x7cec3d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cec1010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cec1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cec11e8"/>
        <function-ref name="isInput" scoped="" ref="0x7cec12c8"/>
        <function-ref name="toggle" scoped="" ref="0x7cec13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7cec1488"/>
        <function-ref name="get" scoped="" ref="0x7cec1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cec1648"/>
        <function-ref name="set" scoped="" ref="0x7cec1728"/>
        <function-ref name="clr" scoped="" ref="0x7cec1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cec09e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cec09e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cec0bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7cec0ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7cec0d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7cec0e60"/>
        <function-ref name="get" scoped="" ref="0x7cebf010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cebf0f0"/>
        <function-ref name="set" scoped="" ref="0x7cebf1d0"/>
        <function-ref name="clr" scoped="" ref="0x7cebf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7cebe538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7cebe538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7cebe710"/>
        <function-ref name="isInput" scoped="" ref="0x7cebe7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7cebe8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7cebe9b0"/>
        <function-ref name="get" scoped="" ref="0x7cebea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7cebeb70"/>
        <function-ref name="set" scoped="" ref="0x7cebec50"/>
        <function-ref name="clr" scoped="" ref="0x7cebed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ed42228" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ed42228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed42400"/>
        <function-ref name="isInput" scoped="" ref="0x7ed424e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed425c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed426a0"/>
        <function-ref name="get" scoped="" ref="0x7ed42780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed42860"/>
        <function-ref name="set" scoped="" ref="0x7ed42940"/>
        <function-ref name="clr" scoped="" ref="0x7ed42a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ed145e8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ed145e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed147c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed148a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed14980"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed14a60"/>
        <function-ref name="get" scoped="" ref="0x7ed14b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed14c20"/>
        <function-ref name="set" scoped="" ref="0x7ed14d00"/>
        <function-ref name="clr" scoped="" ref="0x7ed14de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ed11a90" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ed11a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed11c68"/>
        <function-ref name="isInput" scoped="" ref="0x7ed11d48"/>
        <function-ref name="toggle" scoped="" ref="0x7ed11e28"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed11f08"/>
        <function-ref name="get" scoped="" ref="0x7ed10010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed100f0"/>
        <function-ref name="set" scoped="" ref="0x7ed101d0"/>
        <function-ref name="clr" scoped="" ref="0x7ed102b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ed04e60" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ed04e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed03050"/>
        <function-ref name="isInput" scoped="" ref="0x7ed03130"/>
        <function-ref name="toggle" scoped="" ref="0x7ed03210"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed032f0"/>
        <function-ref name="get" scoped="" ref="0x7ed033d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed034b0"/>
        <function-ref name="set" scoped="" ref="0x7ed03590"/>
        <function-ref name="clr" scoped="" ref="0x7ed03670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ed01228" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ed01228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed01400"/>
        <function-ref name="isInput" scoped="" ref="0x7ed014e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed015c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed016a0"/>
        <function-ref name="get" scoped="" ref="0x7ed01780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed01860"/>
        <function-ref name="set" scoped="" ref="0x7ed01940"/>
        <function-ref name="clr" scoped="" ref="0x7ed01a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ecf35e8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ecf35e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecf37c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ecf38a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ecf3980"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecf3a60"/>
        <function-ref name="get" scoped="" ref="0x7ecf3b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecf3c20"/>
        <function-ref name="set" scoped="" ref="0x7ecf3d00"/>
        <function-ref name="clr" scoped="" ref="0x7ecf3de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ecf1b10" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ecf1b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecf1ce8"/>
        <function-ref name="isInput" scoped="" ref="0x7ecf1dc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ecf1ea8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecf0010"/>
        <function-ref name="get" scoped="" ref="0x7ecf00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecf01d0"/>
        <function-ref name="set" scoped="" ref="0x7ecf02b0"/>
        <function-ref name="clr" scoped="" ref="0x7ecf0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ece2010" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ece2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ece21e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ece22c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ece23a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ece2488"/>
        <function-ref name="get" scoped="" ref="0x7ece2568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ece2648"/>
        <function-ref name="set" scoped="" ref="0x7ece2728"/>
        <function-ref name="clr" scoped="" ref="0x7ece2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ece02d8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ece02d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ece04b0"/>
        <function-ref name="isInput" scoped="" ref="0x7ece0590"/>
        <function-ref name="toggle" scoped="" ref="0x7ece0670"/>
        <function-ref name="isOutput" scoped="" ref="0x7ece0750"/>
        <function-ref name="get" scoped="" ref="0x7ece0830"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ece0910"/>
        <function-ref name="set" scoped="" ref="0x7ece09f0"/>
        <function-ref name="clr" scoped="" ref="0x7ece0ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ecd3590" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ecd3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecd3768"/>
        <function-ref name="isInput" scoped="" ref="0x7ecd3848"/>
        <function-ref name="toggle" scoped="" ref="0x7ecd3928"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecd3a08"/>
        <function-ref name="get" scoped="" ref="0x7ecd3ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecd3bc8"/>
        <function-ref name="set" scoped="" ref="0x7ecd3ca8"/>
        <function-ref name="clr" scoped="" ref="0x7ecd3d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ecd0880" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ecd0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecd0a58"/>
        <function-ref name="isInput" scoped="" ref="0x7ecd0b38"/>
        <function-ref name="toggle" scoped="" ref="0x7ecd0c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecd0cf8"/>
        <function-ref name="get" scoped="" ref="0x7ecd0dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecd0eb8"/>
        <function-ref name="set" scoped="" ref="0x7ecc4010"/>
        <function-ref name="clr" scoped="" ref="0x7ecc40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ecc3bc0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ecc3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecc3d98"/>
        <function-ref name="isInput" scoped="" ref="0x7ecc3e78"/>
        <function-ref name="toggle" scoped="" ref="0x7ecc2010"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecc20f0"/>
        <function-ref name="get" scoped="" ref="0x7ecc21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecc22b0"/>
        <function-ref name="set" scoped="" ref="0x7ecc2390"/>
        <function-ref name="clr" scoped="" ref="0x7ecc2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ecc0f20" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ecc0f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecb4110"/>
        <function-ref name="isInput" scoped="" ref="0x7ecb41f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ecb42d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecb43b0"/>
        <function-ref name="get" scoped="" ref="0x7ecb4490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecb4570"/>
        <function-ref name="set" scoped="" ref="0x7ecb4650"/>
        <function-ref name="clr" scoped="" ref="0x7ecb4730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ec44d58" loc="27:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ec44d58"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f252238"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f252238"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ec43010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7ec43160" loc="28:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ec43160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7ec43338"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7ec43418"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7ec434f8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7ec435d8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7ec436b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7ec14ee8" loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7ec14ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ec120e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7ec14300" loc="46:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7ec14300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ec144d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7ec14b78" loc="48:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7ec14b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ec14d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7ec14648" loc="47:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7ec14648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ec14820"/>
        <function-ref name="taskLoop" scoped="" ref="0x7ec14900"/>
        <function-ref name="runNextTask" scoped="" ref="0x7ec149e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f230218" loc="37:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2303f0"/>
        <function-ref name="runTask" scoped="" ref="0x7f2304d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f232c50" loc="36:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f232c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f232e28"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f232f08"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f241010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f071d30" loc="45:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f071d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f071f08"/>
        <function-ref name="runTask" scoped="" ref="0x7f070010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f052188" loc="46:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f052188"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f052360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f071598" loc="44:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f071598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f071770"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f071850"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f071930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7efe3e38" loc="46:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7efe3e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7eff1050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f0108c0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f0108c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f010a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7eff2d38" loc="43:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7eff2d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7eff2f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7eb45750" loc="84:MultihopLightC.nc">
      <component-ref qname="MultihopLightC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x7eb45750"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7eb45928"/>
        <function-ref name="stopDone" scoped="" ref="0x7eb45a08"/>
        <function-ref name="start" scoped="" ref="0x7eb45ae8"/>
        <function-ref name="stop" scoped="" ref="0x7eb45bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7ebe5d78" loc="79:MultihopLightC.nc">
      <component-ref qname="MultihopLightC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7ebe5d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ec00010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Intercept" ref="0x7eb703a8" loc="82:MultihopLightC.nc">
      <component-ref qname="MultihopLightC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7eb703a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7eb70580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7eb829e8" loc="80:MultihopLightC.nc">
      <component-ref qname="MultihopLightC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7eb829e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7eb82bc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7eb82ca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7eb82d80"/>
        <function-ref name="cancel" scoped="" ref="0x7eb82e60"/>
        <function-ref name="sendDone" scoped="" ref="0x7ebe4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7eb354e0" loc="85:MultihopLightC.nc">
      <component-ref qname="MultihopLightC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7eb354e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7eb356b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7eb35798"/>
        <function-ref name="getPayload" scoped="" ref="0x7eb35878"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7eb35958"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7eb35a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7eb13188" loc="88:MultihopLightC.nc">
      <component-ref qname="MultihopLightC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7eb13188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7eb13360"/>
        <function-ref name="getRssi" scoped="" ref="0x7eb13440"/>
        <function-ref name="getPower" scoped="" ref="0x7eb13520"/>
        <function-ref name="getLqi" scoped="" ref="0x7eb13600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Photo" ref="0x7eb10260" loc="90:MultihopLightC.nc">
      <component-ref qname="MultihopLightC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Photo" scoped="" ref="0x7eb10260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7eb10888"/>
        <function-ref name="readDone" scoped="" ref="0x7eb10a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7eb73188" loc="81:MultihopLightC.nc">
      <component-ref qname="MultihopLightC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7eb73188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7eb73360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ebe5198" loc="78:MultihopLightC.nc">
      <component-ref qname="MultihopLightC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7ebe5198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ebe5370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ebe5450"/>
        <function-ref name="led1On" scoped="" ref="0x7ebe5530"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ebe5610"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ebe56f0"/>
        <function-ref name="get" scoped="" ref="0x7ebe57d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ebe58b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7ebe5c30"/>
        <function-ref name="set" scoped="" ref="0x7ebe5990"/>
        <function-ref name="led0On" scoped="" ref="0x7ebe5a70"/>
        <function-ref name="led2On" scoped="" ref="0x7ebe5b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTimer" ref="0x7eb55260" loc="83:MultihopLightC.nc">
      <component-ref qname="MultihopLightC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTimer" scoped="" ref="0x7eb55260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7eb72bf0"/>
        <function-ref name="fired" scoped="" ref="0x7eb72010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7eb725b0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7eb723d0"/>
        <function-ref name="getdt" scoped="" ref="0x7eb54010"/>
        <function-ref name="gett0" scoped="" ref="0x7eb72dd0"/>
        <function-ref name="isRunning" scoped="" ref="0x7eb721f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7eb55888"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7eb728d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7eb55b08"/>
        <function-ref name="stop" scoped="" ref="0x7eb55d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7eb23b98" loc="86:MultihopLightC.nc">
      <component-ref qname="MultihopLightC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7eb23b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7eb23d70"/>
        <function-ref name="source" scoped="" ref="0x7eb23e50"/>
        <function-ref name="address" scoped="" ref="0x7eb43010"/>
        <function-ref name="destination" scoped="" ref="0x7eb430f0"/>
        <function-ref name="setSource" scoped="" ref="0x7eb431d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7eb432b0"/>
        <function-ref name="type" scoped="" ref="0x7eb43390"/>
        <function-ref name="setType" scoped="" ref="0x7eb43470"/>
        <function-ref name="isForMe" scoped="" ref="0x7eb43550"/>
        <function-ref name="setGroup" scoped="" ref="0x7eb43630"/>
        <function-ref name="localGroup" scoped="" ref="0x7eb43710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7ec15d00" loc="35:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7ec15d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ec15ed8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7eae4010"/>
        <function-ref name="led1On" scoped="" ref="0x7eae40f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7eae41d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7eae42b0"/>
        <function-ref name="get" scoped="" ref="0x7eae4390"/>
        <function-ref name="led1Off" scoped="" ref="0x7eae4470"/>
        <function-ref name="led2Off" scoped="" ref="0x7eae47f0"/>
        <function-ref name="set" scoped="" ref="0x7eae4550"/>
        <function-ref name="led0On" scoped="" ref="0x7eae4630"/>
        <function-ref name="led2On" scoped="" ref="0x7eae4710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7ead6628" loc="39:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7ead6628"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ead6800"/>
        <function-ref name="isInput" scoped="" ref="0x7ead68e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ead69c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ead6aa0"/>
        <function-ref name="get" scoped="" ref="0x7ead6b80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ead6c60"/>
        <function-ref name="set" scoped="" ref="0x7ead6d40"/>
        <function-ref name="clr" scoped="" ref="0x7ead6e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7eae0690" loc="35:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7eae0690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eae0868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7ead5010" loc="40:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7ead5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ead51e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ead52c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ead53a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ead5488"/>
        <function-ref name="get" scoped="" ref="0x7ead5568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ead5648"/>
        <function-ref name="set" scoped="" ref="0x7ead5728"/>
        <function-ref name="clr" scoped="" ref="0x7ead5808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7eae09b0" loc="36:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7eae09b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7eae0b88"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7eae0c68"/>
        <function-ref name="led1On" scoped="" ref="0x7eae0d48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7eae0e28"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7eae0f08"/>
        <function-ref name="get" scoped="" ref="0x7ead6010"/>
        <function-ref name="led1Off" scoped="" ref="0x7ead60f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7ead6470"/>
        <function-ref name="set" scoped="" ref="0x7ead61d0"/>
        <function-ref name="led0On" scoped="" ref="0x7ead62b0"/>
        <function-ref name="led2On" scoped="" ref="0x7ead6390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7ead5980" loc="41:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7ead5980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ead5b58"/>
        <function-ref name="isInput" scoped="" ref="0x7ead5c38"/>
        <function-ref name="toggle" scoped="" ref="0x7ead5d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7ead5df8"/>
        <function-ref name="get" scoped="" ref="0x7ead5ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ead3010"/>
        <function-ref name="set" scoped="" ref="0x7ead30f0"/>
        <function-ref name="clr" scoped="" ref="0x7ead31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7eab2900" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7eab2900"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eab2ad8"/>
        <function-ref name="isInput" scoped="" ref="0x7eab2bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7eab2c98"/>
        <function-ref name="isOutput" scoped="" ref="0x7eab2d78"/>
        <function-ref name="get" scoped="" ref="0x7eab2e58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eab1010"/>
        <function-ref name="set" scoped="" ref="0x7eab10f0"/>
        <function-ref name="clr" scoped="" ref="0x7eab11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7eab1368" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7eab1368"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eab1540"/>
        <function-ref name="isInput" scoped="" ref="0x7eab1620"/>
        <function-ref name="toggle" scoped="" ref="0x7eab1700"/>
        <function-ref name="isOutput" scoped="" ref="0x7eab17e0"/>
        <function-ref name="get" scoped="" ref="0x7eab18c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eab19a0"/>
        <function-ref name="set" scoped="" ref="0x7eab1a80"/>
        <function-ref name="clr" scoped="" ref="0x7eab1b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7eaa66b8" loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7eaa66b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eaa6890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7eab1cf8" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7eab1cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eab1ed0"/>
        <function-ref name="isInput" scoped="" ref="0x7eaa6010"/>
        <function-ref name="toggle" scoped="" ref="0x7eaa60f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eaa61d0"/>
        <function-ref name="get" scoped="" ref="0x7eaa62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eaa6390"/>
        <function-ref name="set" scoped="" ref="0x7eaa6470"/>
        <function-ref name="clr" scoped="" ref="0x7eaa6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7d996010" loc="45:../../../tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="MultihopLightAppC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7d996010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d9961e8"/>
        <function-ref name="destination" scoped="" ref="0x7d9962c8"/>
        <function-ref name="setSource" scoped="" ref="0x7d9963a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7d996488"/>
        <function-ref name="isForMe" scoped="" ref="0x7d996568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d995310" loc="47:../../../tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="MultihopLightAppC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d995310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d9954e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d9955c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9956a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d995788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d995868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7eaa3900" loc="44:../../../tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="MultihopLightAppC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7eaa3900"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7eaa3ad8"/>
        <function-ref name="getPayload" scoped="" ref="0x7eaa3bb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7eaa3c98"/>
        <function-ref name="cancel" scoped="" ref="0x7eaa3d78"/>
        <function-ref name="sendDone" scoped="" ref="0x7eaa3e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d9966a8" loc="46:../../../tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="MultihopLightAppC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d9966a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d996880"/>
        <function-ref name="source" scoped="" ref="0x7d996960"/>
        <function-ref name="address" scoped="" ref="0x7d996a40"/>
        <function-ref name="destination" scoped="" ref="0x7d996b20"/>
        <function-ref name="setSource" scoped="" ref="0x7d996c00"/>
        <function-ref name="setDestination" scoped="" ref="0x7d996ce0"/>
        <function-ref name="type" scoped="" ref="0x7d996dc0"/>
        <function-ref name="setType" scoped="" ref="0x7d996ea0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d995010"/>
        <function-ref name="setGroup" scoped="" ref="0x7d9950f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7d9951d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleDsrPacketWaitList" ref="0x7ea23ba0" loc="48:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7ea23ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7ea30460"/>
        <function-ref name="next" scoped="" ref="0x7ea301e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacket" ref="0x7ea126a8" loc="53:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7ea126a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7ea12880"/>
        <function-ref name="destination" scoped="" ref="0x7ea12960"/>
        <function-ref name="setSource" scoped="" ref="0x7ea12a40"/>
        <function-ref name="setDestination" scoped="" ref="0x7ea12b20"/>
        <function-ref name="isForMe" scoped="" ref="0x7ea12c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ea54e58" loc="42:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7ea54e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ea53050"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ea53130"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea53210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ea532f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ea533d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleDsrPacketEngine" ref="0x7ea34500" loc="45:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7ea34500"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7ea346d8"/>
        <function-ref name="send" scoped="" ref="0x7ea347b8"/>
        <function-ref name="receive" scoped="" ref="0x7ea34898"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7ea34978"/>
        <function-ref name="sendAdded" scoped="" ref="0x7ea34a58"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7ea34b38"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7ea34c18"/>
        <function-ref name="packet" scoped="" ref="0x7ea34cf8"/>
        <function-ref name="sendDone" scoped="" ref="0x7ea34dd8"/>
        <function-ref name="drop" scoped="" ref="0x7ea34eb8"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7ea51010"/>
        <function-ref name="waitList" scoped="" ref="0x7ea510f0"/>
        <function-ref name="setUpperType" scoped="" ref="0x7ea511d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacketEngine" ref="0x7ea513d8" loc="46:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacketEngine" scoped="" ref="0x7ea513d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7ea515b0"/>
        <function-ref name="send" scoped="" ref="0x7ea51690"/>
        <function-ref name="receive" scoped="" ref="0x7ea51770"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7ea51850"/>
        <function-ref name="sendAdded" scoped="" ref="0x7ea51930"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7ea51a10"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7ea51af0"/>
        <function-ref name="packet" scoped="" ref="0x7ea51bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ea51cb0"/>
        <function-ref name="drop" scoped="" ref="0x7ea51d90"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7ea51e70"/>
        <function-ref name="waitList" scoped="" ref="0x7ea50010"/>
        <function-ref name="setUpperType" scoped="" ref="0x7ea500f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7ea15738" loc="58:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7ea15738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ea15990"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea15a70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ea15b50"/>
        <function-ref name="cancel" scoped="" ref="0x7ea15c30"/>
        <function-ref name="sendDone" scoped="" ref="0x7ea15d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ComposePacket" ref="0x7ea16970" loc="55:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ComposePacket" scoped="" ref="0x7ea16970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ea16b48"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ea16c28"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea16d08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ea16de8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ea16ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7ea15070" loc="56:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7ea15070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ea15248"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ea15328"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea15408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ea154e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ea155c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DsrPacketEngine" ref="0x7ea502f0" loc="47:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrPacketEngine" scoped="" ref="0x7ea502f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7ea504c8"/>
        <function-ref name="send" scoped="" ref="0x7ea505a8"/>
        <function-ref name="receive" scoped="" ref="0x7ea50688"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7ea50768"/>
        <function-ref name="sendAdded" scoped="" ref="0x7ea50848"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7ea50928"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7ea50a08"/>
        <function-ref name="packet" scoped="" ref="0x7ea50ae8"/>
        <function-ref name="sendDone" scoped="" ref="0x7ea50bc8"/>
        <function-ref name="drop" scoped="" ref="0x7ea50ca8"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7ea50d88"/>
        <function-ref name="waitList" scoped="" ref="0x7ea50e68"/>
        <function-ref name="setUpperType" scoped="" ref="0x7ea32010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacketWaitList" ref="0x7ea30780" loc="49:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7ea30780"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7ea22048"/>
        <function-ref name="next" scoped="" ref="0x7ea30da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DsrPacketWaitList" ref="0x7ea22368" loc="50:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7ea22368"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7ea22c10"/>
        <function-ref name="next" scoped="" ref="0x7ea22990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7ea12d50" loc="54:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7ea12d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ea12f28"/>
        <function-ref name="source" scoped="" ref="0x7ea16018"/>
        <function-ref name="address" scoped="" ref="0x7ea160f8"/>
        <function-ref name="destination" scoped="" ref="0x7ea161d8"/>
        <function-ref name="setSource" scoped="" ref="0x7ea162b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7ea16398"/>
        <function-ref name="type" scoped="" ref="0x7ea16478"/>
        <function-ref name="setType" scoped="" ref="0x7ea16558"/>
        <function-ref name="isForMe" scoped="" ref="0x7ea16638"/>
        <function-ref name="setGroup" scoped="" ref="0x7ea16718"/>
        <function-ref name="localGroup" scoped="" ref="0x7ea167f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Acks" ref="0x7ea121c0" loc="52:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7ea121c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ea12398"/>
        <function-ref name="noAck" scoped="" ref="0x7ea12478"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ea12558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteErrorList" ref="0x7e9c4a10" loc="47:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteErrorList" scoped="" ref="0x7e9c4a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
            <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e9c0520"/>
        <function-ref name="next" scoped="" ref="0x7e9c01e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AckList" ref="0x7e9b7908" loc="50:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckList" scoped="" ref="0x7e9b7908"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
            <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e9b5388"/>
        <function-ref name="next" scoped="" ref="0x7e9b5048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteRequest" ref="0x7e9d5698" loc="43:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequest" scoped="" ref="0x7e9d5698"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e9d5870"/>
        <function-ref name="remove" scoped="" ref="0x7e9d5950"/>
        <function-ref name="length" scoped="" ref="0x7e9d5a30"/>
        <function-ref name="setLength" scoped="" ref="0x7e9d5b10"/>
        <function-ref name="add" scoped="" ref="0x7e9d5bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteReplyList" ref="0x7e9c1330" loc="45:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteReplyList" scoped="" ref="0x7e9c1330"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
            <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e9c1da0"/>
        <function-ref name="next" scoped="" ref="0x7e9c1a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e9b5d60" loc="53:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e9b5d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e9b4010"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e9b40f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e9b41d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e9b42b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e9b4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DsrHeader" ref="0x7e9f0dd8" loc="42:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrHeader" scoped="" ref="0x7e9f0dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlockPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7e9f3010"/>
        <function-ref name="length" scoped="" ref="0x7e9f30f0"/>
        <function-ref name="add" scoped="" ref="0x7e9f31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SourceRoute" ref="0x7e9b56c0" loc="51:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceRoute" scoped="" ref="0x7e9b56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e9b5898"/>
        <function-ref name="remove" scoped="" ref="0x7e9b5978"/>
        <function-ref name="length" scoped="" ref="0x7e9b5a58"/>
        <function-ref name="setLength" scoped="" ref="0x7e9b5b38"/>
        <function-ref name="add" scoped="" ref="0x7e9b5c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteError" ref="0x7e9c4110" loc="46:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteError" scoped="" ref="0x7e9c4110"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiplePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e9c42e8"/>
        <function-ref name="list" scoped="" ref="0x7e9c43c8"/>
        <function-ref name="remove" scoped="" ref="0x7e9c44a8"/>
        <function-ref name="length" scoped="" ref="0x7e9c4588"/>
        <function-ref name="setLength" scoped="" ref="0x7e9c4668"/>
        <function-ref name="add" scoped="" ref="0x7e9c4748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AckRequest" ref="0x7e9c0858" loc="48:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckRequest" scoped="" ref="0x7e9c0858"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e9c0a30"/>
        <function-ref name="remove" scoped="" ref="0x7e9c0b10"/>
        <function-ref name="length" scoped="" ref="0x7e9c0bf0"/>
        <function-ref name="setLength" scoped="" ref="0x7e9c0cd0"/>
        <function-ref name="add" scoped="" ref="0x7e9c0db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteReply" ref="0x7e9d4010" loc="44:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteReply" scoped="" ref="0x7e9d4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiplePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e9d41e8"/>
        <function-ref name="list" scoped="" ref="0x7e9d42c8"/>
        <function-ref name="remove" scoped="" ref="0x7e9d43a8"/>
        <function-ref name="length" scoped="" ref="0x7e9d4488"/>
        <function-ref name="setLength" scoped="" ref="0x7e9d4568"/>
        <function-ref name="add" scoped="" ref="0x7e9d4648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ack" ref="0x7e9b7010" loc="49:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ack" scoped="" ref="0x7e9b7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiplePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e9b71e8"/>
        <function-ref name="list" scoped="" ref="0x7e9b72c8"/>
        <function-ref name="remove" scoped="" ref="0x7e9b73a8"/>
        <function-ref name="length" scoped="" ref="0x7e9b7488"/>
        <function-ref name="setLength" scoped="" ref="0x7e9b7568"/>
        <function-ref name="add" scoped="" ref="0x7e9b7648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7e9b4538" loc="55:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7e9b4538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e9b4710"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e9b47f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e9b48d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e9b49b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e9b4a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvListPacket" ref="0x7e8815c8" loc="50:../../../tos/lib/netarch/tlv/TlvPacketC.nc">
      <component-ref qname="DsrOptionsC.TlvC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvListPacket" scoped="" ref="0x7e8815c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
            <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e878068"/>
        <function-ref name="next" scoped="" ref="0x7e881d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e878370" loc="51:../../../tos/lib/netarch/tlv/TlvPacketC.nc">
      <component-ref qname="DsrOptionsC.TlvC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e878370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e878548"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e878628"/>
        <function-ref name="getPayload" scoped="" ref="0x7e878708"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e8787e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e8788c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvMultiplePacket" ref="0x7e882b98" loc="49:../../../tos/lib/netarch/tlv/TlvPacketC.nc">
      <component-ref qname="DsrOptionsC.TlvC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvMultiplePacket" scoped="" ref="0x7e882b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiplePacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e882d80"/>
        <function-ref name="list" scoped="" ref="0x7e882e60"/>
        <function-ref name="remove" scoped="" ref="0x7e881010"/>
        <function-ref name="length" scoped="" ref="0x7e8810f0"/>
        <function-ref name="setLength" scoped="" ref="0x7e8811d0"/>
        <function-ref name="add" scoped="" ref="0x7e8812b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7e878a58" loc="54:../../../tos/lib/netarch/tlv/TlvPacketC.nc">
      <component-ref qname="DsrOptionsC.TlvC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7e878a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e878c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e878d10"/>
        <function-ref name="getPayload" scoped="" ref="0x7e878df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e878ed0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e877010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvBlockPacket" ref="0x7e8e2eb8" loc="47:../../../tos/lib/netarch/tlv/TlvPacketC.nc">
      <component-ref qname="DsrOptionsC.TlvC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlockPacket" scoped="" ref="0x7e8e2eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlockPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7e8820c0"/>
        <function-ref name="length" scoped="" ref="0x7e8821a0"/>
        <function-ref name="add" scoped="" ref="0x7e882280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvSinglePacket" ref="0x7e882458" loc="48:../../../tos/lib/netarch/tlv/TlvPacketC.nc">
      <component-ref qname="DsrOptionsC.TlvC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvSinglePacket" scoped="" ref="0x7e882458"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSinglePacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e882640"/>
        <function-ref name="remove" scoped="" ref="0x7e882720"/>
        <function-ref name="length" scoped="" ref="0x7e882800"/>
        <function-ref name="setLength" scoped="" ref="0x7e8828e0"/>
        <function-ref name="add" scoped="" ref="0x7e8829c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvListPacket" ref="0x7ce4c328" loc="50:../../../tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvListPacket" scoped="" ref="0x7ce4c328"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
            <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7ce4cdb8"/>
        <function-ref name="next" scoped="" ref="0x7ce4ca68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ce4a0e8" loc="51:../../../tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7ce4a0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ce4a2c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ce4a3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ce4a480"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ce4a560"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ce4a640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TlvMultiple" ref="0x7ce49488" loc="56:../../../tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvMultiple" scoped="" ref="0x7ce49488"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiple"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7ce49670"/>
        <function-ref name="list" scoped="" ref="0x7ce49750"/>
        <function-ref name="remove" scoped="" ref="0x7ce49830"/>
        <function-ref name="length" scoped="" ref="0x7ce49910"/>
        <function-ref name="setLength" scoped="" ref="0x7ce499f0"/>
        <function-ref name="add" scoped="" ref="0x7ce49ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TlvList" ref="0x7ce49d58" loc="57:../../../tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvList" scoped="" ref="0x7ce49d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticVoidIndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7ce48710"/>
        <function-ref name="next" scoped="" ref="0x7ce483c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvMultiplePacket" ref="0x7ce4d928" loc="49:../../../tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvMultiplePacket" scoped="" ref="0x7ce4d928"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiplePacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7ce4db10"/>
        <function-ref name="list" scoped="" ref="0x7ce4dbf0"/>
        <function-ref name="remove" scoped="" ref="0x7ce4dcd0"/>
        <function-ref name="length" scoped="" ref="0x7ce4ddb0"/>
        <function-ref name="setLength" scoped="" ref="0x7ce4de90"/>
        <function-ref name="add" scoped="" ref="0x7ce4c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7ce48a38" loc="58:../../../tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7ce48a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ce48c10"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ce48cf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ce48dd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ce48eb0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ce47010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvBlockPacket" ref="0x7ce52be8" loc="47:../../../tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlockPacket" scoped="" ref="0x7ce52be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlockPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7ce52dc0"/>
        <function-ref name="length" scoped="" ref="0x7ce52ea0"/>
        <function-ref name="add" scoped="" ref="0x7ce4d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvSinglePacket" ref="0x7ce4d1e8" loc="48:../../../tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvSinglePacket" scoped="" ref="0x7ce4d1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSinglePacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7ce4d3d0"/>
        <function-ref name="remove" scoped="" ref="0x7ce4d4b0"/>
        <function-ref name="length" scoped="" ref="0x7ce4d590"/>
        <function-ref name="setLength" scoped="" ref="0x7ce4d670"/>
        <function-ref name="add" scoped="" ref="0x7ce4d750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TlvBlock" ref="0x7ce4a7b0" loc="54:../../../tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlock" scoped="" ref="0x7ce4a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7ce4a988"/>
        <function-ref name="length" scoped="" ref="0x7ce4aa68"/>
        <function-ref name="add" scoped="" ref="0x7ce4ab48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TlvSingle" ref="0x7ce4ad20" loc="55:../../../tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvSingle" scoped="" ref="0x7ce4ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSingle"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7ce4af08"/>
        <function-ref name="remove" scoped="" ref="0x7ce49010"/>
        <function-ref name="length" scoped="" ref="0x7ce490f0"/>
        <function-ref name="setLength" scoped="" ref="0x7ce491d0"/>
        <function-ref name="add" scoped="" ref="0x7ce492b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvMultiple" ref="0x7e8d74d0" loc="49:../../../tos/lib/netarch/tlv/TlvP.nc">
      <component-ref qname="TlvP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvMultiple" scoped="" ref="0x7e8d74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiple"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e8d76a8"/>
        <function-ref name="list" scoped="" ref="0x7e8d7788"/>
        <function-ref name="remove" scoped="" ref="0x7e8d7868"/>
        <function-ref name="length" scoped="" ref="0x7e8d7948"/>
        <function-ref name="setLength" scoped="" ref="0x7e8d7a28"/>
        <function-ref name="add" scoped="" ref="0x7e8d7b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvList" ref="0x7e8d6010" loc="50:../../../tos/lib/netarch/tlv/TlvP.nc">
      <component-ref qname="TlvP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvList" scoped="" ref="0x7e8d6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticVoidIndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e8d6978"/>
        <function-ref name="next" scoped="" ref="0x7e8d6638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvBlock" ref="0x7e8e1380" loc="47:../../../tos/lib/netarch/tlv/TlvP.nc">
      <component-ref qname="TlvP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlock" scoped="" ref="0x7e8e1380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7e8e1558"/>
        <function-ref name="length" scoped="" ref="0x7e8e1638"/>
        <function-ref name="add" scoped="" ref="0x7e8e1718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvSingle" ref="0x7e8e1af8" loc="48:../../../tos/lib/netarch/tlv/TlvP.nc">
      <component-ref qname="TlvP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvSingle" scoped="" ref="0x7e8e1af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSingle"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e8e1cd0"/>
        <function-ref name="remove" scoped="" ref="0x7e8e1db0"/>
        <function-ref name="length" scoped="" ref="0x7e8e1e90"/>
        <function-ref name="setLength" scoped="" ref="0x7e8d7010"/>
        <function-ref name="add" scoped="" ref="0x7e8d70f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7e857e50" loc="95:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7e857e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e856050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7e8574f0" loc="94:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7e8574f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e8576c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e8577a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e857888"/>
        <function-ref name="cancel" scoped="" ref="0x7e857968"/>
        <function-ref name="sendDone" scoped="" ref="0x7e857a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendPool" ref="0x7e834b90" loc="101:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendPool" scoped="" ref="0x7e834b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
            <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e837a20"/>
        <function-ref name="maxSize" scoped="" ref="0x7e8375a0"/>
        <function-ref name="empty" scoped="" ref="0x7e8371e0"/>
        <function-ref name="put" scoped="" ref="0x7e837780"/>
        <function-ref name="size" scoped="" ref="0x7e8373c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketEngineClient" ref="0x7e8501d0" loc="98:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngineClient" scoped="" ref="0x7e8501d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngineClient"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eaa0290"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7e8503a8"/>
        <function-ref name="defaultLowerType" scoped="" ref="0x7e850488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceivePool" ref="0x7e837cb0" loc="102:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceivePool" scoped="" ref="0x7e837cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
            <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e833b28"/>
        <function-ref name="maxSize" scoped="" ref="0x7e8336a8"/>
        <function-ref name="empty" scoped="" ref="0x7e8332e8"/>
        <function-ref name="put" scoped="" ref="0x7e833888"/>
        <function-ref name="size" scoped="" ref="0x7e8334c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7e866ef8" loc="86:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7e866ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7e8630e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e863228" loc="87:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e863228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e863400"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e8634e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e8635c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e8636a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e863780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7e823d98" loc="104:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e823d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e830010"/>
        <function-ref name="rand32" scoped="" ref="0x7e8300f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e866010" loc="84:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e866010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eaa0290"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e8661e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e8662c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e8663a8"/>
        <function-ref name="cancel" scoped="" ref="0x7e866488"/>
        <function-ref name="sendDone" scoped="" ref="0x7e866568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7e854c28" loc="93:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7e854c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e854e00"/>
        <function-ref name="stopDone" scoped="" ref="0x7e854ee0"/>
        <function-ref name="start" scoped="" ref="0x7e857010"/>
        <function-ref name="stop" scoped="" ref="0x7e8570f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x7e8252a8" loc="103:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x7e8252a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7e825480"/>
        <function-ref name="toIdle" scoped="" ref="0x7e825560"/>
        <function-ref name="isState" scoped="" ref="0x7e825640"/>
        <function-ref name="isIdle" scoped="" ref="0x7e825720"/>
        <function-ref name="requestState" scoped="" ref="0x7e825800"/>
        <function-ref name="forceState" scoped="" ref="0x7e8258e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketWaitList" ref="0x7e862d20" loc="89:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketWaitList" scoped="" ref="0x7e862d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e8615f0"/>
        <function-ref name="next" scoped="" ref="0x7e861370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7e845128" loc="100:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x7e845128"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ea92af8"/>
            <typename><typedef-ref name="packet_send_entry_t" ref="0x7ea92d48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7e844170"/>
        <function-ref name="evicted" scoped="" ref="0x7e845bf0"/>
        <function-ref name="insert" scoped="" ref="0x7e845930"/>
        <function-ref name="flush" scoped="" ref="0x7e844410"/>
        <function-ref name="lookup" scoped="" ref="0x7e845e90"/>
        <function-ref name="size" scoped="" ref="0x7e845750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7e856458" loc="96:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7e856458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e8566b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e856790"/>
        <function-ref name="getPayload" scoped="" ref="0x7e856870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e856950"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e856a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e870f00" loc="82:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e870f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e8680f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngine" ref="0x7e863b60" loc="88:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngine" scoped="" ref="0x7e863b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7e863d38"/>
        <function-ref name="send" scoped="" ref="0x7e863e18"/>
        <function-ref name="receive" scoped="" ref="0x7e863ef8"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7e862010"/>
        <function-ref name="sendAdded" scoped="" ref="0x7e8620f0"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7e8621d0"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7e8622b0"/>
        <function-ref name="packet" scoped="" ref="0x7e862390"/>
        <function-ref name="sendDone" scoped="" ref="0x7e862470"/>
        <function-ref name="drop" scoped="" ref="0x7e862550"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7e862630"/>
        <function-ref name="waitList" scoped="" ref="0x7e862710"/>
        <function-ref name="setUpperType" scoped="" ref="0x7e8627f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="msgAction" ref="0x7e810ea8" loc="195:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="msgAction" scoped="" ref="0x7e810ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e8080c0"/>
        <function-ref name="runTask" scoped="" ref="0x7e8081a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e866940" loc="85:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e866940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e866b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="msgAdded" ref="0x7e810778" loc="194:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="msgAdded" scoped="" ref="0x7e810778"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e810950"/>
        <function-ref name="runTask" scoped="" ref="0x7e810a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendQueueEqual" ref="0x7e8542a8" loc="90:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueueEqual" scoped="" ref="0x7e8542a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ea92af8"/>
              <typename><typedef-ref name="packet_send_entry_t" ref="0x7ea92d48"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e8548d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBackoff" ref="0x7e830300" loc="105:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBackoff" scoped="" ref="0x7e830300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e824c28"/>
        <function-ref name="fired" scoped="" ref="0x7e824048"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8245e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e824408"/>
        <function-ref name="getdt" scoped="" ref="0x7e821010"/>
        <function-ref name="gett0" scoped="" ref="0x7e824e08"/>
        <function-ref name="isRunning" scoped="" ref="0x7e824228"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e830928"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e824908"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e830ba8"/>
        <function-ref name="stop" scoped="" ref="0x7e830e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSendPacket" ref="0x7e856ba8" loc="97:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSendPacket" scoped="" ref="0x7e856ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e856d80"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e856e60"/>
        <function-ref name="getPayload" scoped="" ref="0x7e853010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e8530f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e8531d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e8505d8" loc="99:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e8505d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e8507b0"/>
        <function-ref name="source" scoped="" ref="0x7e850890"/>
        <function-ref name="address" scoped="" ref="0x7e850970"/>
        <function-ref name="destination" scoped="" ref="0x7e850a50"/>
        <function-ref name="setSource" scoped="" ref="0x7e850b30"/>
        <function-ref name="setDestination" scoped="" ref="0x7e850c10"/>
        <function-ref name="type" scoped="" ref="0x7e850cf0"/>
        <function-ref name="setType" scoped="" ref="0x7e850dd0"/>
        <function-ref name="isForMe" scoped="" ref="0x7e850eb0"/>
        <function-ref name="setGroup" scoped="" ref="0x7e848010"/>
        <function-ref name="localGroup" scoped="" ref="0x7e8480f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7e8648b0" loc="83:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7e8648b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e864a88"/>
        <function-ref name="stop" scoped="" ref="0x7e864b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7e728760" loc="35:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e728760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e728938"/>
        <function-ref name="rand32" scoped="" ref="0x7e728a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7e726e88" loc="34:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7e726e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e7284d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e7301f0" loc="33:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e7301f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e7303c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7e721648" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e721648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e721820"/>
        <function-ref name="rand32" scoped="" ref="0x7e721900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7e724d78" loc="33:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7e724d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e7213c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e724960" loc="32:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e724960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e724b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7e7165d8" loc="37:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e7165d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e7167b0"/>
        <function-ref name="rand32" scoped="" ref="0x7e716890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7e717d18" loc="36:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7e717d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e716350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e717900" loc="35:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e717900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e717ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteRequestOutCache" ref="0x7e609980" loc="114:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestOutCache" scoped="" ref="0x7e609980"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7ea63a78"/>
            <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7ea63db8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7e607a10"/>
        <function-ref name="evicted" scoped="" ref="0x7e6074b0"/>
        <function-ref name="insert" scoped="" ref="0x7e6071f0"/>
        <function-ref name="flush" scoped="" ref="0x7e607cb0"/>
        <function-ref name="lookup" scoped="" ref="0x7e607750"/>
        <function-ref name="size" scoped="" ref="0x7e607010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteRequestOutTimer" ref="0x7e607ef8" loc="115:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestOutTimer" scoped="" ref="0x7e607ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataTimer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba1930"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="expired" scoped="" ref="0x7e605af8"/>
        <function-ref name="start" scoped="" ref="0x7e605558"/>
        <function-ref name="stop" scoped="" ref="0x7e605878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteRequestInEqual" ref="0x7e61ba20" loc="91:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestInEqual" scoped="" ref="0x7e61ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7ea61350"/>
              <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7ea61670"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e61a068"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteErrorList" ref="0x7e617530" loc="100:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteErrorList" scoped="" ref="0x7e617530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
            <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e616010"/>
        <function-ref name="next" scoped="" ref="0x7e617c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleDsrPacketWaitList" ref="0x7e6136e0" loc="106:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7e6136e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e612010"/>
        <function-ref name="next" scoped="" ref="0x7e613d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacket" ref="0x7e604238" loc="118:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7e604238"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e604410"/>
        <function-ref name="destination" scoped="" ref="0x7e6044f0"/>
        <function-ref name="setSource" scoped="" ref="0x7e6045d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7e6046b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7e604790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7e61ad40" loc="95:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7e61ad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7e61af18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleDsrPacketEngine" ref="0x7e6169e0" loc="103:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7e6169e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7e616bb8"/>
        <function-ref name="send" scoped="" ref="0x7e616c98"/>
        <function-ref name="receive" scoped="" ref="0x7e616d78"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7e616e58"/>
        <function-ref name="sendAdded" scoped="" ref="0x7e615010"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7e6150f0"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7e6151d0"/>
        <function-ref name="packet" scoped="" ref="0x7e6152b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e615390"/>
        <function-ref name="drop" scoped="" ref="0x7e615470"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7e615550"/>
        <function-ref name="waitList" scoped="" ref="0x7e615630"/>
        <function-ref name="setUpperType" scoped="" ref="0x7e615710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteRequestInCache" ref="0x7e60a458" loc="113:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestInCache" scoped="" ref="0x7e60a458"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7ea61350"/>
            <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7ea61670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7e609498"/>
        <function-ref name="evicted" scoped="" ref="0x7e60af20"/>
        <function-ref name="insert" scoped="" ref="0x7e60ac60"/>
        <function-ref name="flush" scoped="" ref="0x7e609738"/>
        <function-ref name="lookup" scoped="" ref="0x7e6091d8"/>
        <function-ref name="size" scoped="" ref="0x7e60aa80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacketEngine" ref="0x7e6158f0" loc="104:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacketEngine" scoped="" ref="0x7e6158f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7e615ac8"/>
        <function-ref name="send" scoped="" ref="0x7e615ba8"/>
        <function-ref name="receive" scoped="" ref="0x7e615c88"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7e615d68"/>
        <function-ref name="sendAdded" scoped="" ref="0x7e615e48"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7e615f28"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7e614018"/>
        <function-ref name="packet" scoped="" ref="0x7e6140f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7e6141d8"/>
        <function-ref name="drop" scoped="" ref="0x7e6142b8"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7e614398"/>
        <function-ref name="waitList" scoped="" ref="0x7e614478"/>
        <function-ref name="setUpperType" scoped="" ref="0x7e614558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7e6016c8" loc="126:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e6016c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e6018a0"/>
        <function-ref name="rand32" scoped="" ref="0x7e601980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteRequest" ref="0x7e618588" loc="98:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequest" scoped="" ref="0x7e618588"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e618760"/>
        <function-ref name="remove" scoped="" ref="0x7e618840"/>
        <function-ref name="length" scoped="" ref="0x7e618920"/>
        <function-ref name="setLength" scoped="" ref="0x7e618a00"/>
        <function-ref name="add" scoped="" ref="0x7e618ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7e601030" loc="124:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e601030"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e601208"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6012e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e6013c8"/>
        <function-ref name="cancel" scoped="" ref="0x7e6014a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7e601588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="composePkt" ref="0x7e601b00" loc="151:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="composePkt" scoped="" ref="0x7e601b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e601cd8"/>
        <function-ref name="runTask" scoped="" ref="0x7e601db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ComposePacket" ref="0x7e6034f0" loc="120:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ComposePacket" scoped="" ref="0x7e6034f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e6036c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e6037a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e603888"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e603968"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e603a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DsrHeader" ref="0x7e618090" loc="97:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrHeader" scoped="" ref="0x7e618090"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlockPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7e618268"/>
        <function-ref name="length" scoped="" ref="0x7e618348"/>
        <function-ref name="add" scoped="" ref="0x7e618428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SourceRoute" ref="0x7e616328" loc="101:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceRoute" scoped="" ref="0x7e616328"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e616500"/>
        <function-ref name="remove" scoped="" ref="0x7e6165e0"/>
        <function-ref name="length" scoped="" ref="0x7e6166c0"/>
        <function-ref name="setLength" scoped="" ref="0x7e6167a0"/>
        <function-ref name="add" scoped="" ref="0x7e616880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DsrPacketEngine" ref="0x7e614738" loc="105:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrPacketEngine" scoped="" ref="0x7e614738"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7e614910"/>
        <function-ref name="send" scoped="" ref="0x7e6149f0"/>
        <function-ref name="receive" scoped="" ref="0x7e614ad0"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7e614bb0"/>
        <function-ref name="sendAdded" scoped="" ref="0x7e614c90"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7e614d70"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7e614e50"/>
        <function-ref name="packet" scoped="" ref="0x7e613010"/>
        <function-ref name="sendDone" scoped="" ref="0x7e6130f0"/>
        <function-ref name="drop" scoped="" ref="0x7e6131d0"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7e6132b0"/>
        <function-ref name="waitList" scoped="" ref="0x7e613390"/>
        <function-ref name="setUpperType" scoped="" ref="0x7e613470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacketWaitList" ref="0x7e6122f8" loc="107:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7e6122f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e612c20"/>
        <function-ref name="next" scoped="" ref="0x7e6129a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SalvageRouteCache" ref="0x7e60b170" loc="111:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SalvageRouteCache" scoped="" ref="0x7e60b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteCache"/>
      </instance>
      <interface-functions>
        <function-ref name="removeLink" scoped="" ref="0x7e60b348"/>
        <function-ref name="routeUpdate" scoped="" ref="0x7e60b428"/>
        <function-ref name="addPath" scoped="" ref="0x7e60b508"/>
        <function-ref name="trackRoute" scoped="" ref="0x7e60b5e8"/>
        <function-ref name="checkRoute" scoped="" ref="0x7e60b6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compose" ref="0x7e603ba8" loc="122:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compose" scoped="" ref="0x7e603ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7e603e80"/>
        <function-ref name="clear" scoped="" ref="0x7e602010"/>
        <function-ref name="toggle" scoped="" ref="0x7e6020f0"/>
        <function-ref name="get" scoped="" ref="0x7e6021d0"/>
        <function-ref name="assign" scoped="" ref="0x7e6022b0"/>
        <function-ref name="setAll" scoped="" ref="0x7e602390"/>
        <function-ref name="set" scoped="" ref="0x7e602470"/>
        <function-ref name="size" scoped="" ref="0x7e602550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteError" ref="0x7e618c40" loc="99:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteError" scoped="" ref="0x7e618c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiplePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e618e18"/>
        <function-ref name="list" scoped="" ref="0x7e618ef8"/>
        <function-ref name="remove" scoped="" ref="0x7e617010"/>
        <function-ref name="length" scoped="" ref="0x7e6170f0"/>
        <function-ref name="setLength" scoped="" ref="0x7e6171d0"/>
        <function-ref name="add" scoped="" ref="0x7e6172b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteNodeList" ref="0x7e60b8b8" loc="112:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteNodeList" scoped="" ref="0x7e60b8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e60a170"/>
        <function-ref name="next" scoped="" ref="0x7e60bee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteCache" ref="0x7e610a10" loc="110:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteCache" scoped="" ref="0x7e610a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteCache"/>
      </instance>
      <interface-functions>
        <function-ref name="removeLink" scoped="" ref="0x7e610be8"/>
        <function-ref name="routeUpdate" scoped="" ref="0x7e610cc8"/>
        <function-ref name="addPath" scoped="" ref="0x7e610da8"/>
        <function-ref name="trackRoute" scoped="" ref="0x7e610e88"/>
        <function-ref name="checkRoute" scoped="" ref="0x7e60b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DsrPacketWaitList" ref="0x7e612f08" loc="108:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7e612f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e6107d8"/>
        <function-ref name="next" scoped="" ref="0x7e610558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Salvage" ref="0x7e6026b0" loc="123:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Salvage" scoped="" ref="0x7e6026b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7e602888"/>
        <function-ref name="clear" scoped="" ref="0x7e602968"/>
        <function-ref name="toggle" scoped="" ref="0x7e602a48"/>
        <function-ref name="get" scoped="" ref="0x7e602b28"/>
        <function-ref name="assign" scoped="" ref="0x7e602c08"/>
        <function-ref name="setAll" scoped="" ref="0x7e602ce8"/>
        <function-ref name="set" scoped="" ref="0x7e602dc8"/>
        <function-ref name="size" scoped="" ref="0x7e602ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteRequestOutEqual" ref="0x7e61a410" loc="92:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestOutEqual" scoped="" ref="0x7e61a410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7ea63a78"/>
              <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7ea63db8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e61aa38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e6048d0" loc="119:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e6048d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e604aa8"/>
        <function-ref name="source" scoped="" ref="0x7e604b88"/>
        <function-ref name="address" scoped="" ref="0x7e604c68"/>
        <function-ref name="destination" scoped="" ref="0x7e604d48"/>
        <function-ref name="setSource" scoped="" ref="0x7e604e28"/>
        <function-ref name="setDestination" scoped="" ref="0x7e604f08"/>
        <function-ref name="type" scoped="" ref="0x7e603010"/>
        <function-ref name="setType" scoped="" ref="0x7e6030f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7e6031d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7e6032b0"/>
        <function-ref name="localGroup" scoped="" ref="0x7e603390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Acks" ref="0x7e605d50" loc="117:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7e605d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7e605f28"/>
        <function-ref name="noAck" scoped="" ref="0x7e604018"/>
        <function-ref name="wasAcked" scoped="" ref="0x7e6040f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteCache" ref="0x7e5f6010" loc="43:../../../tos/lib/netarch/dsr/DsrRouteCacheC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteCache" scoped="" ref="0x7e5f6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteCache"/>
      </instance>
      <interface-functions>
        <function-ref name="removeLink" scoped="" ref="0x7e5f61e8"/>
        <function-ref name="routeUpdate" scoped="" ref="0x7e5f62c8"/>
        <function-ref name="addPath" scoped="" ref="0x7e5f63a8"/>
        <function-ref name="trackRoute" scoped="" ref="0x7e5f6488"/>
        <function-ref name="checkRoute" scoped="" ref="0x7e5f6568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteNodeList" ref="0x7e5f6758" loc="44:../../../tos/lib/netarch/dsr/DsrRouteCacheC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteNodeList" scoped="" ref="0x7e5f6758"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7dbf0010"/>
        <function-ref name="next" scoped="" ref="0x7e5f6d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteCache" ref="0x7cd3dab0" loc="45:../../../tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteCache" scoped="" ref="0x7cd3dab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteCache"/>
      </instance>
      <interface-functions>
        <function-ref name="removeLink" scoped="" ref="0x7cd3dc88"/>
        <function-ref name="routeUpdate" scoped="" ref="0x7cd3dd68"/>
        <function-ref name="addPath" scoped="" ref="0x7cd3de48"/>
        <function-ref name="trackRoute" scoped="" ref="0x7cd3df28"/>
        <function-ref name="checkRoute" scoped="" ref="0x7cd3b018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteNodeList" ref="0x7cd3b208" loc="46:../../../tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteNodeList" scoped="" ref="0x7cd3b208"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7cd3bab0"/>
        <function-ref name="next" scoped="" ref="0x7cd3b830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Initial" ref="0x7e5e0188" loc="46:../../../tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Initial" scoped="" ref="0x7e5e0188"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7e5e0360"/>
        <function-ref name="clear" scoped="" ref="0x7e5e0440"/>
        <function-ref name="toggle" scoped="" ref="0x7e5e0520"/>
        <function-ref name="get" scoped="" ref="0x7e5e0600"/>
        <function-ref name="assign" scoped="" ref="0x7e5e06e0"/>
        <function-ref name="setAll" scoped="" ref="0x7e5e07c0"/>
        <function-ref name="set" scoped="" ref="0x7e5e08a0"/>
        <function-ref name="size" scoped="" ref="0x7e5e0980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7e5e2428" loc="44:../../../tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7e5e2428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7e5e2600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Graph" ref="0x7e5d0188" loc="48:../../../tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7e5d0188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7e5d0360"/>
        <function-ref name="removed" scoped="" ref="0x7e5d0440"/>
        <function-ref name="remove" scoped="" ref="0x7e5d0520"/>
        <function-ref name="edge" scoped="" ref="0x7e5d0600"/>
        <function-ref name="directed" scoped="" ref="0x7e5d06e0"/>
        <function-ref name="vertices" scoped="" ref="0x7e5d07c0"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7e5d08a0"/>
        <function-ref name="maxVertices" scoped="" ref="0x7e5d0980"/>
        <function-ref name="insert" scoped="" ref="0x7e5d0a60"/>
        <function-ref name="inserted" scoped="" ref="0x7e5d0b40"/>
        <function-ref name="edgeList" scoped="" ref="0x7e5d0c20"/>
        <function-ref name="edges" scoped="" ref="0x7e5d0d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SourceShortestPath" ref="0x7e5c55e0" loc="49:../../../tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceShortestPath" scoped="" ref="0x7e5c55e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SourceShortestPath"/>
      </instance>
      <interface-functions>
        <function-ref name="rebuildNeeded" scoped="" ref="0x7e5c57b8"/>
        <function-ref name="buildTree" scoped="" ref="0x7e5c5898"/>
        <function-ref name="builtTree" scoped="" ref="0x7e5c5978"/>
        <function-ref name="buildingTree" scoped="" ref="0x7e5c5a58"/>
        <function-ref name="edgeCount" scoped="" ref="0x7e5c5b38"/>
        <function-ref name="buildTreeTo" scoped="" ref="0x7e5c5c18"/>
        <function-ref name="builtTreeTo" scoped="" ref="0x7e5c5cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteCache" ref="0x7e5e3cd8" loc="42:../../../tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteCache" scoped="" ref="0x7e5e3cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteCache"/>
      </instance>
      <interface-functions>
        <function-ref name="removeLink" scoped="" ref="0x7e5e3eb0"/>
        <function-ref name="routeUpdate" scoped="" ref="0x7e5e2010"/>
        <function-ref name="addPath" scoped="" ref="0x7e5e20f0"/>
        <function-ref name="trackRoute" scoped="" ref="0x7e5e21d0"/>
        <function-ref name="checkRoute" scoped="" ref="0x7e5e22b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Track" ref="0x7e5e2778" loc="45:../../../tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Track" scoped="" ref="0x7e5e2778"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7e5e2950"/>
        <function-ref name="clear" scoped="" ref="0x7e5e2a30"/>
        <function-ref name="toggle" scoped="" ref="0x7e5e2b10"/>
        <function-ref name="get" scoped="" ref="0x7e5e2bf0"/>
        <function-ref name="assign" scoped="" ref="0x7e5e2cd0"/>
        <function-ref name="setAll" scoped="" ref="0x7e5e2db0"/>
        <function-ref name="set" scoped="" ref="0x7e5e2e90"/>
        <function-ref name="size" scoped="" ref="0x7e5e0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e5e0ad0" loc="47:../../../tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e5e0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e5e0ca8"/>
        <function-ref name="source" scoped="" ref="0x7e5e0d88"/>
        <function-ref name="address" scoped="" ref="0x7e5e0e68"/>
        <function-ref name="destination" scoped="" ref="0x7e5db010"/>
        <function-ref name="setSource" scoped="" ref="0x7e5db0f0"/>
        <function-ref name="setDestination" scoped="" ref="0x7e5db1d0"/>
        <function-ref name="type" scoped="" ref="0x7e5db2b0"/>
        <function-ref name="setType" scoped="" ref="0x7e5db390"/>
        <function-ref name="isForMe" scoped="" ref="0x7e5db470"/>
        <function-ref name="setGroup" scoped="" ref="0x7e5db550"/>
        <function-ref name="localGroup" scoped="" ref="0x7e5db630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Graph" ref="0x7cd39638" loc="46:../../../tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7cd39638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7cd39810"/>
        <function-ref name="removed" scoped="" ref="0x7cd398f0"/>
        <function-ref name="remove" scoped="" ref="0x7cd399d0"/>
        <function-ref name="edge" scoped="" ref="0x7cd39ab0"/>
        <function-ref name="directed" scoped="" ref="0x7cd39b90"/>
        <function-ref name="vertices" scoped="" ref="0x7cd39c70"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7cd39d50"/>
        <function-ref name="maxVertices" scoped="" ref="0x7cd39e30"/>
        <function-ref name="insert" scoped="" ref="0x7cd39f10"/>
        <function-ref name="inserted" scoped="" ref="0x7cd38010"/>
        <function-ref name="edgeList" scoped="" ref="0x7cd380f0"/>
        <function-ref name="edges" scoped="" ref="0x7cd381d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PathEdgeList" ref="0x7cd37bc8" loc="50:../../../tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PathEdgeList" scoped="" ref="0x7cd37bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7cd35498"/>
        <function-ref name="next" scoped="" ref="0x7cd35218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SourceShortestPath" ref="0x7cd372c0" loc="49:../../../tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceShortestPath" scoped="" ref="0x7cd372c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SourceShortestPath"/>
      </instance>
      <interface-functions>
        <function-ref name="rebuildNeeded" scoped="" ref="0x7cd37498"/>
        <function-ref name="buildTree" scoped="" ref="0x7cd37578"/>
        <function-ref name="builtTree" scoped="" ref="0x7cd37658"/>
        <function-ref name="buildingTree" scoped="" ref="0x7cd37738"/>
        <function-ref name="edgeCount" scoped="" ref="0x7cd37818"/>
        <function-ref name="buildTreeTo" scoped="" ref="0x7cd378f8"/>
        <function-ref name="builtTreeTo" scoped="" ref="0x7cd379d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdge" ref="0x7cd38310" loc="47:../../../tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7cd38310"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7cd384e8"/>
        <function-ref name="dest" scoped="" ref="0x7cd385c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdgeList" ref="0x7cd387b8" loc="48:../../../tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7cd387b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7cd37088"/>
        <function-ref name="next" scoped="" ref="0x7cd38de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeWeight" ref="0x7cd35780" loc="52:../../../tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7cd35780"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7e5eac00"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="canChangeWeights" scoped="" ref="0x7cd35da8"/>
        <function-ref name="weightChanged" scoped="" ref="0x7cd345b0"/>
        <function-ref name="setWeight" scoped="" ref="0x7cd34290"/>
        <function-ref name="weight" scoped="" ref="0x7cd34010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Graph" ref="0x7cd1a010" loc="45:../../../tos/lib/data/graph/GraphSparseC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7cd1a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7cd1a1e8"/>
        <function-ref name="removed" scoped="" ref="0x7cd1a2c8"/>
        <function-ref name="remove" scoped="" ref="0x7cd1a3a8"/>
        <function-ref name="edge" scoped="" ref="0x7cd1a488"/>
        <function-ref name="directed" scoped="" ref="0x7cd1a568"/>
        <function-ref name="vertices" scoped="" ref="0x7cd1a648"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7cd1a728"/>
        <function-ref name="maxVertices" scoped="" ref="0x7cd1a808"/>
        <function-ref name="insert" scoped="" ref="0x7cd1a8e8"/>
        <function-ref name="inserted" scoped="" ref="0x7cd1a9c8"/>
        <function-ref name="edgeList" scoped="" ref="0x7cd1aaa8"/>
        <function-ref name="edges" scoped="" ref="0x7cd1ab88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdge" ref="0x7cd1acc8" loc="46:../../../tos/lib/data/graph/GraphSparseC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7cd1acc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7cd1aea0"/>
        <function-ref name="dest" scoped="" ref="0x7cd19010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdgeList" ref="0x7cd19200" loc="47:../../../tos/lib/data/graph/GraphSparseC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7cd19200"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7cd19aa8"/>
        <function-ref name="next" scoped="" ref="0x7cd19828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IndexedAlloc" ref="0x7cd0d1f0" loc="42:../../../tos/lib/data/alloc/IndexedAllocC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IndexedAlloc" scoped="" ref="0x7cd0d1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedAlloc"/>
      </instance>
      <interface-functions>
        <function-ref name="all" scoped="" ref="0x7cd0d908"/>
        <function-ref name="allocated" scoped="" ref="0x7cd0d4a8"/>
        <function-ref name="maxSize" scoped="" ref="0x7cd0d588"/>
        <function-ref name="alloc" scoped="" ref="0x7cd0d668"/>
        <function-ref name="none" scoped="" ref="0x7cd0d748"/>
        <function-ref name="free" scoped="" ref="0x7cd0d828"/>
        <function-ref name="size" scoped="" ref="0x7cd0d3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IndexedAlloc" ref="0x7cd07e48" loc="40:../../../tos/lib/data/alloc/IndexedAllocBitsC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IndexedAlloc" scoped="" ref="0x7cd07e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedAlloc"/>
      </instance>
      <interface-functions>
        <function-ref name="all" scoped="" ref="0x7cd05590"/>
        <function-ref name="allocated" scoped="" ref="0x7cd05130"/>
        <function-ref name="maxSize" scoped="" ref="0x7cd05210"/>
        <function-ref name="alloc" scoped="" ref="0x7cd052f0"/>
        <function-ref name="none" scoped="" ref="0x7cd053d0"/>
        <function-ref name="free" scoped="" ref="0x7cd054b0"/>
        <function-ref name="size" scoped="" ref="0x7cd05050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7cd04990" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7cd04990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7cd04b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7cd04cc8" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7cd04cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7cd04ea0"/>
        <function-ref name="clear" scoped="" ref="0x7cd03010"/>
        <function-ref name="toggle" scoped="" ref="0x7cd030f0"/>
        <function-ref name="get" scoped="" ref="0x7cd031d0"/>
        <function-ref name="assign" scoped="" ref="0x7cd032b0"/>
        <function-ref name="setAll" scoped="" ref="0x7cd03390"/>
        <function-ref name="set" scoped="" ref="0x7cd03470"/>
        <function-ref name="size" scoped="" ref="0x7cd03550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7cd02a78" loc="45:../../../tos/lib/data/alloc/IndexedAllocBitsP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7cd02a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7cd02c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IndexedAlloc" ref="0x7cd021f0" loc="43:../../../tos/lib/data/alloc/IndexedAllocBitsP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IndexedAlloc" scoped="" ref="0x7cd021f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedAlloc"/>
      </instance>
      <interface-functions>
        <function-ref name="all" scoped="" ref="0x7cd02908"/>
        <function-ref name="allocated" scoped="" ref="0x7cd024a8"/>
        <function-ref name="maxSize" scoped="" ref="0x7cd02588"/>
        <function-ref name="alloc" scoped="" ref="0x7cd02668"/>
        <function-ref name="none" scoped="" ref="0x7cd02748"/>
        <function-ref name="free" scoped="" ref="0x7cd02828"/>
        <function-ref name="size" scoped="" ref="0x7cd023c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BitVector" ref="0x7cd02d90" loc="46:../../../tos/lib/data/alloc/IndexedAllocBitsP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7cd02d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7cd00010"/>
        <function-ref name="clear" scoped="" ref="0x7cd000f0"/>
        <function-ref name="toggle" scoped="" ref="0x7cd001d0"/>
        <function-ref name="get" scoped="" ref="0x7cd002b0"/>
        <function-ref name="assign" scoped="" ref="0x7cd00390"/>
        <function-ref name="setAll" scoped="" ref="0x7cd00470"/>
        <function-ref name="set" scoped="" ref="0x7cd00550"/>
        <function-ref name="size" scoped="" ref="0x7cd00630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Graph" ref="0x7cd0cb08" loc="45:../../../tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7cd0cb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7cd0cce0"/>
        <function-ref name="removed" scoped="" ref="0x7cd0cdc0"/>
        <function-ref name="remove" scoped="" ref="0x7cd0cea0"/>
        <function-ref name="edge" scoped="" ref="0x7cd0b010"/>
        <function-ref name="directed" scoped="" ref="0x7cd0b0f0"/>
        <function-ref name="vertices" scoped="" ref="0x7cd0b1d0"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7cd0b2b0"/>
        <function-ref name="maxVertices" scoped="" ref="0x7cd0b390"/>
        <function-ref name="insert" scoped="" ref="0x7cd0b470"/>
        <function-ref name="inserted" scoped="" ref="0x7cd0b550"/>
        <function-ref name="edgeList" scoped="" ref="0x7cd0b630"/>
        <function-ref name="edges" scoped="" ref="0x7cd0b710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7cd0c7f0" loc="44:../../../tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7cd0c7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7cd0c9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IndexedAlloc" ref="0x7cd0a828" loc="49:../../../tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IndexedAlloc" scoped="" ref="0x7cd0a828"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedAlloc"/>
      </instance>
      <interface-functions>
        <function-ref name="all" scoped="" ref="0x7cd09010"/>
        <function-ref name="allocated" scoped="" ref="0x7cd0aae0"/>
        <function-ref name="maxSize" scoped="" ref="0x7cd0abc0"/>
        <function-ref name="alloc" scoped="" ref="0x7cd0aca0"/>
        <function-ref name="none" scoped="" ref="0x7cd0ad80"/>
        <function-ref name="free" scoped="" ref="0x7cd0ae60"/>
        <function-ref name="size" scoped="" ref="0x7cd0aa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdge" ref="0x7cd0b850" loc="46:../../../tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7cd0b850"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7cd0ba28"/>
        <function-ref name="dest" scoped="" ref="0x7cd0bb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdgeList" ref="0x7cd0bcf8" loc="47:../../../tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7cd0bcf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7cd0a5d0"/>
        <function-ref name="next" scoped="" ref="0x7cd0a350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Graph" ref="0x7cd160c0" loc="45:../../../tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7cd160c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7cd16298"/>
        <function-ref name="removed" scoped="" ref="0x7cd16378"/>
        <function-ref name="remove" scoped="" ref="0x7cd16458"/>
        <function-ref name="edge" scoped="" ref="0x7cd16538"/>
        <function-ref name="directed" scoped="" ref="0x7cd16618"/>
        <function-ref name="vertices" scoped="" ref="0x7cd166f8"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7cd167d8"/>
        <function-ref name="maxVertices" scoped="" ref="0x7cd168b8"/>
        <function-ref name="insert" scoped="" ref="0x7cd16998"/>
        <function-ref name="inserted" scoped="" ref="0x7cd16a78"/>
        <function-ref name="edgeList" scoped="" ref="0x7cd16b58"/>
        <function-ref name="edges" scoped="" ref="0x7cd16c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PathEdgeList" ref="0x7cd17580" loc="42:../../../tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PathEdgeList" scoped="" ref="0x7cd17580"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7cd17e28"/>
        <function-ref name="next" scoped="" ref="0x7cd17ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SourceShortestPath" ref="0x7cd18b98" loc="41:../../../tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceShortestPath" scoped="" ref="0x7cd18b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="SourceShortestPath"/>
      </instance>
      <interface-functions>
        <function-ref name="rebuildNeeded" scoped="" ref="0x7cd18d70"/>
        <function-ref name="buildTree" scoped="" ref="0x7cd18e50"/>
        <function-ref name="builtTree" scoped="" ref="0x7cd17010"/>
        <function-ref name="buildingTree" scoped="" ref="0x7cd170f0"/>
        <function-ref name="edgeCount" scoped="" ref="0x7cd171d0"/>
        <function-ref name="buildTreeTo" scoped="" ref="0x7cd172b0"/>
        <function-ref name="builtTreeTo" scoped="" ref="0x7cd17390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdge" ref="0x7cd16d78" loc="46:../../../tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7cd16d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7cd15010"/>
        <function-ref name="dest" scoped="" ref="0x7cd150f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeWeight" ref="0x7cd152c0" loc="47:../../../tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7cd152c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7e5eac00"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="canChangeWeights" scoped="" ref="0x7cd158e8"/>
        <function-ref name="weightChanged" scoped="" ref="0x7cd13088"/>
        <function-ref name="setWeight" scoped="" ref="0x7cd15d48"/>
        <function-ref name="weight" scoped="" ref="0x7cd15ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeList" ref="0x7cd13370" loc="48:../../../tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7cd13370"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7cd13c18"/>
        <function-ref name="next" scoped="" ref="0x7cd13998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PriorityQueue" ref="0x7ccc75b8" loc="41:../../../tos/lib/data/queue/PriorityQueueC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PriorityQueue" scoped="" ref="0x7ccc75b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PriorityQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ccc7790"/>
        <function-ref name="findBest" scoped="" ref="0x7ccc7870"/>
        <function-ref name="maxSize" scoped="" ref="0x7ccc7950"/>
        <function-ref name="insert" scoped="" ref="0x7ccc7a30"/>
        <function-ref name="moveUp" scoped="" ref="0x7ccc7b10"/>
        <function-ref name="move" scoped="" ref="0x7ccc7bf0"/>
        <function-ref name="inserted" scoped="" ref="0x7ccc7cd0"/>
        <function-ref name="moveDown" scoped="" ref="0x7ccc7db0"/>
        <function-ref name="empty" scoped="" ref="0x7ccc7e90"/>
        <function-ref name="removeBest" scoped="" ref="0x7ccc6010"/>
        <function-ref name="size" scoped="" ref="0x7ccc60f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7ccc62e0" loc="42:../../../tos/lib/data/queue/PriorityQueueC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7ccc62e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7e512270"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7ccc6908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ccb82c8" loc="46:../../../tos/lib/data/queue/PriorityQueueP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ccb82c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ccb84a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PriorityQueue" ref="0x7ccb85e0" loc="47:../../../tos/lib/data/queue/PriorityQueueP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PriorityQueue" scoped="" ref="0x7ccb85e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PriorityQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ccb87b8"/>
        <function-ref name="findBest" scoped="" ref="0x7ccb8898"/>
        <function-ref name="maxSize" scoped="" ref="0x7ccb8978"/>
        <function-ref name="insert" scoped="" ref="0x7ccb8a58"/>
        <function-ref name="moveUp" scoped="" ref="0x7ccb8b38"/>
        <function-ref name="move" scoped="" ref="0x7ccb8c18"/>
        <function-ref name="inserted" scoped="" ref="0x7ccb8cf8"/>
        <function-ref name="moveDown" scoped="" ref="0x7ccb8dd8"/>
        <function-ref name="empty" scoped="" ref="0x7ccb8eb8"/>
        <function-ref name="removeBest" scoped="" ref="0x7ccb6010"/>
        <function-ref name="size" scoped="" ref="0x7ccb60f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7ccb62e0" loc="49:../../../tos/lib/data/queue/PriorityQueueP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7ccb62e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7e512270"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7ccb6908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeList" ref="0x7ccbf920" loc="53:../../../tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7ccbf920"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7ccbd290"/>
        <function-ref name="next" scoped="" ref="0x7ccbd010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="buildTreeTask" ref="0x7ccbd508" loc="84:../../../tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="buildTreeTask" scoped="" ref="0x7ccbd508"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ccbd6e0"/>
        <function-ref name="runTask" scoped="" ref="0x7ccbd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Graph" ref="0x7ccc1690" loc="50:../../../tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7ccc1690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7ccc1868"/>
        <function-ref name="removed" scoped="" ref="0x7ccc1948"/>
        <function-ref name="remove" scoped="" ref="0x7ccc1a28"/>
        <function-ref name="edge" scoped="" ref="0x7ccc1b08"/>
        <function-ref name="directed" scoped="" ref="0x7ccc1be8"/>
        <function-ref name="vertices" scoped="" ref="0x7ccc1cc8"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7ccc1da8"/>
        <function-ref name="maxVertices" scoped="" ref="0x7ccc1e88"/>
        <function-ref name="insert" scoped="" ref="0x7ccc0010"/>
        <function-ref name="inserted" scoped="" ref="0x7ccc00f0"/>
        <function-ref name="edgeList" scoped="" ref="0x7ccc01d0"/>
        <function-ref name="edges" scoped="" ref="0x7ccc02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PathEdgeList" ref="0x7ccc3580" loc="45:../../../tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PathEdgeList" scoped="" ref="0x7ccc3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7ccc3e28"/>
        <function-ref name="next" scoped="" ref="0x7ccc3ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ccc48e8" loc="43:../../../tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ccc48e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ccc4ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SourceShortestPath" ref="0x7ccc4c00" loc="44:../../../tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceShortestPath" scoped="" ref="0x7ccc4c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SourceShortestPath"/>
      </instance>
      <interface-functions>
        <function-ref name="rebuildNeeded" scoped="" ref="0x7ccc4dd8"/>
        <function-ref name="buildTree" scoped="" ref="0x7ccc4eb8"/>
        <function-ref name="builtTree" scoped="" ref="0x7ccc3010"/>
        <function-ref name="buildingTree" scoped="" ref="0x7ccc30f0"/>
        <function-ref name="edgeCount" scoped="" ref="0x7ccc31d0"/>
        <function-ref name="buildTreeTo" scoped="" ref="0x7ccc32b0"/>
        <function-ref name="builtTreeTo" scoped="" ref="0x7ccc3390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdge" ref="0x7ccc03f0" loc="51:../../../tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7ccc03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7ccc05c8"/>
        <function-ref name="dest" scoped="" ref="0x7ccc06a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PriorityQueue" ref="0x7ccc2a50" loc="49:../../../tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PriorityQueue" scoped="" ref="0x7ccc2a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PriorityQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ccc2c28"/>
        <function-ref name="findBest" scoped="" ref="0x7ccc2d08"/>
        <function-ref name="maxSize" scoped="" ref="0x7ccc2de8"/>
        <function-ref name="insert" scoped="" ref="0x7ccc2ec8"/>
        <function-ref name="moveUp" scoped="" ref="0x7ccc1010"/>
        <function-ref name="move" scoped="" ref="0x7ccc10f0"/>
        <function-ref name="inserted" scoped="" ref="0x7ccc11d0"/>
        <function-ref name="moveDown" scoped="" ref="0x7ccc12b0"/>
        <function-ref name="empty" scoped="" ref="0x7ccc1390"/>
        <function-ref name="removeBest" scoped="" ref="0x7ccc1470"/>
        <function-ref name="size" scoped="" ref="0x7ccc1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ccc2120" loc="46:../../../tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7ccc2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7ccc2748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeWeight" ref="0x7ccc0878" loc="52:../../../tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7ccc0878"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7e5eac00"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="canChangeWeights" scoped="" ref="0x7ccc0ea0"/>
        <function-ref name="weightChanged" scoped="" ref="0x7ccbf638"/>
        <function-ref name="setWeight" scoped="" ref="0x7ccbf318"/>
        <function-ref name="weight" scoped="" ref="0x7ccbf098"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7cd33970" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.TrackC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7cd33970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7cd33b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7cd33ca8" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.TrackC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7cd33ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7cd33e80"/>
        <function-ref name="clear" scoped="" ref="0x7cd32010"/>
        <function-ref name="toggle" scoped="" ref="0x7cd320f0"/>
        <function-ref name="get" scoped="" ref="0x7cd321d0"/>
        <function-ref name="assign" scoped="" ref="0x7cd322b0"/>
        <function-ref name="setAll" scoped="" ref="0x7cd32390"/>
        <function-ref name="set" scoped="" ref="0x7cd32470"/>
        <function-ref name="size" scoped="" ref="0x7cd32550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7cd311e8" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.InitialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7cd311e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7cd313c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7cd31520" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.InitialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7cd31520"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7cd316f8"/>
        <function-ref name="clear" scoped="" ref="0x7cd317d8"/>
        <function-ref name="toggle" scoped="" ref="0x7cd318b8"/>
        <function-ref name="get" scoped="" ref="0x7cd31998"/>
        <function-ref name="assign" scoped="" ref="0x7cd31a78"/>
        <function-ref name="setAll" scoped="" ref="0x7cd31b58"/>
        <function-ref name="set" scoped="" ref="0x7cd31c38"/>
        <function-ref name="size" scoped="" ref="0x7cd31d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdgeWeight" ref="0x7e3f2b58" loc="41:../../../tos/lib/data/graph/GraphEdgeUnitWeightC.nc">
      <component-ref qname="GraphEdgeUnitWeightC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7e3f2b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7e5eac00"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="canChangeWeights" scoped="" ref="0x7e3f11e0"/>
        <function-ref name="weightChanged" scoped="" ref="0x7e3f1960"/>
        <function-ref name="setWeight" scoped="" ref="0x7e3f1640"/>
        <function-ref name="weight" scoped="" ref="0x7e3f13c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e3ea808" loc="49:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e3ea808"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e3ea9e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7e3eaac0"/>
        <function-ref name="start" scoped="" ref="0x7e3eaba0"/>
        <function-ref name="stop" scoped="" ref="0x7e3eac80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e3e9100" loc="51:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e3e9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e3e92d8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e3e93b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e3e9498"/>
        <function-ref name="cancel" scoped="" ref="0x7e3e9578"/>
        <function-ref name="sendDone" scoped="" ref="0x7e3e9658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7e3e7020" loc="53:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7e3e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e3e71f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e3e7340" loc="55:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e3e7340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e3e7518"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e3e75f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e3e76d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e3e77b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e3e7898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e3e9a30" loc="52:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e3e9a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e3e9c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7e3e66a8" loc="57:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e3e66a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7e3e6880"/>
        <function-ref name="noAck" scoped="" ref="0x7e3e6960"/>
        <function-ref name="wasAcked" scoped="" ref="0x7e3e6a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e3e79e8" loc="56:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e3e79e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e3e7bc0"/>
        <function-ref name="source" scoped="" ref="0x7e3e7ca0"/>
        <function-ref name="address" scoped="" ref="0x7e3e7d80"/>
        <function-ref name="destination" scoped="" ref="0x7e3e7e60"/>
        <function-ref name="setSource" scoped="" ref="0x7e3e6010"/>
        <function-ref name="setDestination" scoped="" ref="0x7e3e60f0"/>
        <function-ref name="type" scoped="" ref="0x7e3e61d0"/>
        <function-ref name="setType" scoped="" ref="0x7e3e62b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7e3e6390"/>
        <function-ref name="setGroup" scoped="" ref="0x7e3e6470"/>
        <function-ref name="localGroup" scoped="" ref="0x7e3e6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e3e14c8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e3e14c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e3e16a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7e3e1780"/>
        <function-ref name="start" scoped="" ref="0x7e3e1860"/>
        <function-ref name="stop" scoped="" ref="0x7e3e1940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7e3d38f0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7e3d38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7e3d3ac8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7e3d3ba8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7e3d3c88"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7e3d3d68"/>
        <function-ref name="setCca" scoped="" ref="0x7e3d3e48"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7e3d3f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e3e1d18" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e3e1d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e3e1ef0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e3e0010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e3e00f0"/>
        <function-ref name="cancel" scoped="" ref="0x7e3e01d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e3e02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7e3e0c60" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7e3e0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e3e0e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e3debf0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e3debf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e3dedc8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e3deea8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e3dd010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e3dd0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e3dd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7e3dd320" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7e3dd320"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7e3dd4f8"/>
        <function-ref name="getRssi" scoped="" ref="0x7e3dd5d8"/>
        <function-ref name="getPower" scoped="" ref="0x7e3dd6b8"/>
        <function-ref name="getLqi" scoped="" ref="0x7e3dd798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7e3cbb98" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7e3cbb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x7e3cbd70"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x7e3cbe50"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x7e3d2010"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x7e3d20f0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x7e3d21d0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x7e3d22b0"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x7e3d2390"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x7e3d2470"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x7e3d2550"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x7e3d2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e3e0688" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e3e0688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e3e0860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7e3dd8f0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e3dd8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7e3ddac8"/>
        <function-ref name="noAck" scoped="" ref="0x7e3ddba8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7e3ddc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7e3c50b0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7e3c50b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7e3c5288"/>
        <function-ref name="setRetries" scoped="" ref="0x7e3c5368"/>
        <function-ref name="getRetries" scoped="" ref="0x7e3c5448"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7e3c5528"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7e3c5608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e3de010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e3de010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e3de1e8"/>
        <function-ref name="source" scoped="" ref="0x7e3de2c8"/>
        <function-ref name="address" scoped="" ref="0x7e3de3a8"/>
        <function-ref name="destination" scoped="" ref="0x7e3de488"/>
        <function-ref name="setSource" scoped="" ref="0x7e3de568"/>
        <function-ref name="setDestination" scoped="" ref="0x7e3de648"/>
        <function-ref name="type" scoped="" ref="0x7e3de728"/>
        <function-ref name="setType" scoped="" ref="0x7e3de808"/>
        <function-ref name="isForMe" scoped="" ref="0x7e3de8e8"/>
        <function-ref name="setGroup" scoped="" ref="0x7e3de9c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7e3deaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7e3d8188" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7e3d8188"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7e3d8360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7e3b8d48" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7e3b8d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e3b8f20"/>
        <function-ref name="getPayload" scoped="" ref="0x7e3bc018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e3bc0f8"/>
        <function-ref name="cancel" scoped="" ref="0x7e3bc1d8"/>
        <function-ref name="sendDone" scoped="" ref="0x7e3bc2b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7e3bc430" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7e3bc430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e3bc608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7e3ace48" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e3ace48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7e3b4050"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7e3b4130"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7e3b4210"/>
        <function-ref name="syncDone" scoped="" ref="0x7e3b42f0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e3b43d0"/>
        <function-ref name="setChannel" scoped="" ref="0x7e3b44b0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7e3b4590"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e3b4670"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7e3b4750"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e3b4830"/>
        <function-ref name="sync" scoped="" ref="0x7e3b4910"/>
        <function-ref name="getChannel" scoped="" ref="0x7e3b49f0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e3b4ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e3c3dd0" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e3c3dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e3c2010"/>
        <function-ref name="getPayload" scoped="" ref="0x7e3c20f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e3c21d0"/>
        <function-ref name="cancel" scoped="" ref="0x7e3c22b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e3c2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7e3c2d40" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7e3c2d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e3c2f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e3c0c60" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e3c0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e3c0e38"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e3c0f18"/>
        <function-ref name="getPayload" scoped="" ref="0x7e3be010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e3be0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e3be1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7e3bc758" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7e3bc758"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7e3bc930"/>
        <function-ref name="getRssi" scoped="" ref="0x7e3bca10"/>
        <function-ref name="getPower" scoped="" ref="0x7e3bcaf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7e3bcbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7e3b3500" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e3b3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7e3b36d8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7e3b37b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e3c2768" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e3c2768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e3c2940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7e3a8e10" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e3a8e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7e3ab010"/>
        <function-ref name="changed" scoped="" ref="0x7e3ab0f0"/>
        <function-ref name="amGroup" scoped="" ref="0x7e3ab1d0"/>
        <function-ref name="setAddress" scoped="" ref="0x7e3ab2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e3c0080" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e3c0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e3c0258"/>
        <function-ref name="source" scoped="" ref="0x7e3c0338"/>
        <function-ref name="address" scoped="" ref="0x7e3c0418"/>
        <function-ref name="destination" scoped="" ref="0x7e3c04f8"/>
        <function-ref name="setSource" scoped="" ref="0x7e3c05d8"/>
        <function-ref name="setDestination" scoped="" ref="0x7e3c06b8"/>
        <function-ref name="type" scoped="" ref="0x7e3c0798"/>
        <function-ref name="setType" scoped="" ref="0x7e3c0878"/>
        <function-ref name="isForMe" scoped="" ref="0x7e3c0958"/>
        <function-ref name="setGroup" scoped="" ref="0x7e3c0a38"/>
        <function-ref name="localGroup" scoped="" ref="0x7e3c0b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e37c228" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e37c228"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e37c400"/>
        <function-ref name="stopDone" scoped="" ref="0x7e37c4e0"/>
        <function-ref name="start" scoped="" ref="0x7e37c5c0"/>
        <function-ref name="stop" scoped="" ref="0x7e37c6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7e37a4c0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7e37a4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7e37a698"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7e37a778"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7e37a858"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7e37a938"/>
        <function-ref name="setCca" scoped="" ref="0x7e37aa18"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7e37aaf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e37c808" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e37c808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e37c9e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e37cac0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e37cba0"/>
        <function-ref name="cancel" scoped="" ref="0x7e37cc80"/>
        <function-ref name="sendDone" scoped="" ref="0x7e37cd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e37cec8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e37cec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e37a0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e378a20" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e378a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e378bf8"/>
        <function-ref name="stopDone" scoped="" ref="0x7e378cd8"/>
        <function-ref name="start" scoped="" ref="0x7e378db8"/>
        <function-ref name="stop" scoped="" ref="0x7e378e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7e375998" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7e375998"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7e375b70"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7e375c50"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7e375d30"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7e375e10"/>
        <function-ref name="setCca" scoped="" ref="0x7e375ef0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7e374010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7e363ed8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7e363ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7e3680c0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7e3681a0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7e368280"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7e368360"/>
        <function-ref name="setCca" scoped="" ref="0x7e368440"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7e368520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7e362340" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7e362340"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7e362518"/>
        <function-ref name="getRssi" scoped="" ref="0x7e3625f8"/>
        <function-ref name="getPower" scoped="" ref="0x7e3626d8"/>
        <function-ref name="getLqi" scoped="" ref="0x7e3627b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7e3637e0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7e3637e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e3639b8"/>
        <function-ref name="cancel" scoped="" ref="0x7e363a98"/>
        <function-ref name="modify" scoped="" ref="0x7e363b78"/>
        <function-ref name="sendDone" scoped="" ref="0x7e363c58"/>
        <function-ref name="resend" scoped="" ref="0x7e363d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e375040" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e375040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e375218"/>
        <function-ref name="getPayload" scoped="" ref="0x7e3752f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e3753d8"/>
        <function-ref name="cancel" scoped="" ref="0x7e3754b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7e375598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7e368688" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e368688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e368860"/>
        <function-ref name="rand32" scoped="" ref="0x7e368940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7e36d0d8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7e36d0d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e36d2b0"/>
        <function-ref name="stop" scoped="" ref="0x7e36d390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7e362930" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e362930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7e362b88"/>
        <function-ref name="getMetadata" scoped="" ref="0x7e362c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7e369730" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e369730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e369908"/>
        <function-ref name="rfOff" scoped="" ref="0x7e3699e8"/>
        <function-ref name="rxOn" scoped="" ref="0x7e369ac8"/>
        <function-ref name="startVReg" scoped="" ref="0x7e369ba8"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e369c88"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e369d68"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e369e48"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e369f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e3676c0" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e3676c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e367898"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e367978"/>
        <function-ref name="led1On" scoped="" ref="0x7e367a58"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e367b38"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e367c18"/>
        <function-ref name="get" scoped="" ref="0x7e367cf8"/>
        <function-ref name="led1Off" scoped="" ref="0x7e367dd8"/>
        <function-ref name="led2Off" scoped="" ref="0x7e3621d0"/>
        <function-ref name="set" scoped="" ref="0x7e367eb8"/>
        <function-ref name="led0On" scoped="" ref="0x7e362010"/>
        <function-ref name="led2On" scoped="" ref="0x7e3620f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7e36e590" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e36e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e36e768"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e36e848"/>
        <function-ref name="request" scoped="" ref="0x7e36e928"/>
        <function-ref name="granted" scoped="" ref="0x7e36ea08"/>
        <function-ref name="isOwner" scoped="" ref="0x7e36eae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7e362e08" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x7e362e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7e361010"/>
        <function-ref name="toIdle" scoped="" ref="0x7e3610f0"/>
        <function-ref name="isState" scoped="" ref="0x7e3611d0"/>
        <function-ref name="isIdle" scoped="" ref="0x7e3612b0"/>
        <function-ref name="requestState" scoped="" ref="0x7e361390"/>
        <function-ref name="forceState" scoped="" ref="0x7e361470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e368ab0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e368ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e368c88"/>
        <function-ref name="source" scoped="" ref="0x7e368d68"/>
        <function-ref name="address" scoped="" ref="0x7e368e48"/>
        <function-ref name="destination" scoped="" ref="0x7e368f28"/>
        <function-ref name="setSource" scoped="" ref="0x7e367018"/>
        <function-ref name="setDestination" scoped="" ref="0x7e3670f8"/>
        <function-ref name="type" scoped="" ref="0x7e3671d8"/>
        <function-ref name="setType" scoped="" ref="0x7e3672b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7e367398"/>
        <function-ref name="setGroup" scoped="" ref="0x7e367478"/>
        <function-ref name="localGroup" scoped="" ref="0x7e367558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7e35e980" loc="78:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x7e35e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e35eb58"/>
        <function-ref name="runTask" scoped="" ref="0x7e35ec38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7e35e250" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x7e35e250"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e35e428"/>
        <function-ref name="runTask" scoped="" ref="0x7e35e508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7e3608d8" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x7e3608d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e360ab0"/>
        <function-ref name="runTask" scoped="" ref="0x7e360b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7e333340" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e333340"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7e333518"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7e3335f8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7e3336d8"/>
        <function-ref name="syncDone" scoped="" ref="0x7e3337b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e333898"/>
        <function-ref name="setChannel" scoped="" ref="0x7e333978"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7e333a58"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e333b38"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7e333c18"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e333cf8"/>
        <function-ref name="sync" scoped="" ref="0x7e333dd8"/>
        <function-ref name="getChannel" scoped="" ref="0x7e333eb8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e332010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7e332c30" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7e332c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e331278"/>
        <function-ref name="readDone" scoped="" ref="0x7e331458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7e332200" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e332200"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e3323d8"/>
        <function-ref name="rfOff" scoped="" ref="0x7e3324b8"/>
        <function-ref name="rxOn" scoped="" ref="0x7e332598"/>
        <function-ref name="startVReg" scoped="" ref="0x7e332678"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e332758"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e332838"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e332918"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e3329f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e334bb8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e334bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e334d90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e334e70"/>
        <function-ref name="request" scoped="" ref="0x7e333010"/>
        <function-ref name="granted" scoped="" ref="0x7e3330f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7e3331d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7e32c420" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e32c420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7e32c5f8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7e32c6d8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7e32c7b8"/>
        <function-ref name="syncDone" scoped="" ref="0x7e32c898"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e32c978"/>
        <function-ref name="setChannel" scoped="" ref="0x7e32ca58"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7e32cb38"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e32cc18"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7e32ccf8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e32cdd8"/>
        <function-ref name="sync" scoped="" ref="0x7e32ceb8"/>
        <function-ref name="getChannel" scoped="" ref="0x7e32b010"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e32b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7e318918" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7e318918"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e318af0"/>
        <function-ref name="write" scoped="" ref="0x7e318bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7e327100" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x7e327100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e322468"/>
        <function-ref name="fired" scoped="" ref="0x7e327cf0"/>
        <function-ref name="startAt" scoped="" ref="0x7e322128"/>
        <function-ref name="isRunning" scoped="" ref="0x7e327ef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e322668"/>
        <function-ref name="start" scoped="" ref="0x7e327850"/>
        <function-ref name="stop" scoped="" ref="0x7e327af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7e318070" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7e318070"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e318248"/>
        <function-ref name="write" scoped="" ref="0x7e318328"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7e321288" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7e321288"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e321460"/>
        <function-ref name="isInput" scoped="" ref="0x7e321540"/>
        <function-ref name="toggle" scoped="" ref="0x7e321620"/>
        <function-ref name="isOutput" scoped="" ref="0x7e321700"/>
        <function-ref name="get" scoped="" ref="0x7e3217e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3218c0"/>
        <function-ref name="set" scoped="" ref="0x7e3219a0"/>
        <function-ref name="clr" scoped="" ref="0x7e321a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7e32bd10" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7e32bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e32a350"/>
        <function-ref name="readDone" scoped="" ref="0x7e32a530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7e309488" loc="113:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x7e309488"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e309660"/>
        <function-ref name="runTask" scoped="" ref="0x7e309740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7e318d68" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7e318d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e315010"/>
        <function-ref name="write" scoped="" ref="0x7e3150f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7e313798" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7e313798"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e313970"/>
        <function-ref name="write" scoped="" ref="0x7e313a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7e31b6e0" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e31b6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7e31b8b8"/>
        <function-ref name="changed" scoped="" ref="0x7e31b998"/>
        <function-ref name="amGroup" scoped="" ref="0x7e31ba78"/>
        <function-ref name="setAddress" scoped="" ref="0x7e31bb58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7e322858" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7e322858"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e322a30"/>
        <function-ref name="isInput" scoped="" ref="0x7e322b10"/>
        <function-ref name="toggle" scoped="" ref="0x7e322bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e322cd0"/>
        <function-ref name="get" scoped="" ref="0x7e322db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e322e90"/>
        <function-ref name="set" scoped="" ref="0x7e321010"/>
        <function-ref name="clr" scoped="" ref="0x7e3210f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7e310010" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7e310010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3101e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7e321c18" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7e321c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e321df0"/>
        <function-ref name="isInput" scoped="" ref="0x7e321ed0"/>
        <function-ref name="toggle" scoped="" ref="0x7e320010"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3200f0"/>
        <function-ref name="get" scoped="" ref="0x7e3201d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3202b0"/>
        <function-ref name="set" scoped="" ref="0x7e320390"/>
        <function-ref name="clr" scoped="" ref="0x7e320470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e32d9d8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e32d9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e32dbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7e3184c8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e3184c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3186a0"/>
        <function-ref name="write" scoped="" ref="0x7e318780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7e310380" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7e310380"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e310558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7e30e370" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7e30e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e30e648"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e30e728"/>
        <function-ref name="request" scoped="" ref="0x7e30e808"/>
        <function-ref name="granted" scoped="" ref="0x7e30e8e8"/>
        <function-ref name="isOwner" scoped="" ref="0x7e30e9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7e30d290" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x7e30d290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e30d468"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e30d548"/>
        <function-ref name="request" scoped="" ref="0x7e30d628"/>
        <function-ref name="granted" scoped="" ref="0x7e30d708"/>
        <function-ref name="isOwner" scoped="" ref="0x7e30d7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7e32b2e0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e32b2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e32b4b8"/>
        <function-ref name="rfOff" scoped="" ref="0x7e32b598"/>
        <function-ref name="rxOn" scoped="" ref="0x7e32b678"/>
        <function-ref name="startVReg" scoped="" ref="0x7e32b758"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e32b838"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e32b918"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e32b9f8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e32bad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7e313be8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7e313be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e313dc0"/>
        <function-ref name="write" scoped="" ref="0x7e313ea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7e3132c8" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7e3132c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e313520"/>
        <function-ref name="write" scoped="" ref="0x7e313600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7e30f880" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7e30f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e30fa58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e30d950" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e30d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e30db28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e30dc08"/>
        <function-ref name="led1On" scoped="" ref="0x7e30dce8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e30ddc8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e30dea8"/>
        <function-ref name="get" scoped="" ref="0x7e30c010"/>
        <function-ref name="led1Off" scoped="" ref="0x7e30c0f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7e30c470"/>
        <function-ref name="set" scoped="" ref="0x7e30c1d0"/>
        <function-ref name="led0On" scoped="" ref="0x7e30c2b0"/>
        <function-ref name="led2On" scoped="" ref="0x7e30c390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7e30acc8" loc="112:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x7e30acc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e30aea0"/>
        <function-ref name="runTask" scoped="" ref="0x7e309010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e32dd20" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e32dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e32def8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e32c010"/>
        <function-ref name="request" scoped="" ref="0x7e32c0f0"/>
        <function-ref name="granted" scoped="" ref="0x7e32c1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7e32c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7e3160b0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7e3160b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e316288"/>
        <function-ref name="write" scoped="" ref="0x7e316368"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7e31b0f0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7e31b0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e31b2c8"/>
        <function-ref name="disable" scoped="" ref="0x7e31b3a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e31b488"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e31b568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e3106c8" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e3106c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e3108a0"/>
        <function-ref name="source" scoped="" ref="0x7e310980"/>
        <function-ref name="address" scoped="" ref="0x7e310a60"/>
        <function-ref name="destination" scoped="" ref="0x7e310b40"/>
        <function-ref name="setSource" scoped="" ref="0x7e310c20"/>
        <function-ref name="setDestination" scoped="" ref="0x7e310d00"/>
        <function-ref name="type" scoped="" ref="0x7e310de0"/>
        <function-ref name="setType" scoped="" ref="0x7e310ec0"/>
        <function-ref name="isForMe" scoped="" ref="0x7e30e010"/>
        <function-ref name="setGroup" scoped="" ref="0x7e30e0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7e30e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7e30eb68" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x7e30eb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e30ed40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e30ee20"/>
        <function-ref name="request" scoped="" ref="0x7e30ef00"/>
        <function-ref name="granted" scoped="" ref="0x7e30d010"/>
        <function-ref name="isOwner" scoped="" ref="0x7e30d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7e30fbf0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7e30fbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e30fdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e2c3cc8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e2c3cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e2c3ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7e2c2180" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x7e2c2180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e2c1550"/>
        <function-ref name="fired" scoped="" ref="0x7e2c2d70"/>
        <function-ref name="startAt" scoped="" ref="0x7e2c1210"/>
        <function-ref name="isRunning" scoped="" ref="0x7e2c1010"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e2c1750"/>
        <function-ref name="start" scoped="" ref="0x7e2c28d0"/>
        <function-ref name="stop" scoped="" ref="0x7e2c2b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7e2af358" loc="67:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7e2af358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e062750"/>
        <function-ref name="fired" scoped="" ref="0x7e062010"/>
        <function-ref name="startAt" scoped="" ref="0x7e062410"/>
        <function-ref name="isRunning" scoped="" ref="0x7e062210"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e062950"/>
        <function-ref name="start" scoped="" ref="0x7e2afaa8"/>
        <function-ref name="stop" scoped="" ref="0x7e2afd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e062b08" loc="68:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e062b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e062ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7cc6a058" loc="28:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7cc6a058"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7cc693a8"/>
        <function-ref name="fired" scoped="" ref="0x7cc6ac48"/>
        <function-ref name="startAt" scoped="" ref="0x7cc69068"/>
        <function-ref name="isRunning" scoped="" ref="0x7cc6ae48"/>
        <function-ref name="getAlarm" scoped="" ref="0x7cc695a8"/>
        <function-ref name="start" scoped="" ref="0x7cc6a7a8"/>
        <function-ref name="stop" scoped="" ref="0x7cc6aa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7cc67b28" loc="30:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7cc67b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7cc66ee8"/>
        <function-ref name="fired" scoped="" ref="0x7cc667a8"/>
        <function-ref name="startAt" scoped="" ref="0x7cc66ba8"/>
        <function-ref name="isRunning" scoped="" ref="0x7cc669a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7cc650f8"/>
        <function-ref name="start" scoped="" ref="0x7cc66308"/>
        <function-ref name="stop" scoped="" ref="0x7cc665a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e26c820" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e26c820"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e26c9f8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7e26cad8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e26cbb8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7e26cc98"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e26cd78"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e26ce58"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7e270010"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7e2700f0"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7e2701d0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7e2702b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7e266870" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7e266870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7e265048"/>
        <function-ref name="test" scoped="" ref="0x7e269c18"/>
        <function-ref name="get" scoped="" ref="0x7e266eb8"/>
        <function-ref name="captured" scoped="" ref="0x7e269378"/>
        <function-ref name="reset" scoped="" ref="0x7e269618"/>
        <function-ref name="isOn" scoped="" ref="0x7e269e18"/>
        <function-ref name="set" scoped="" ref="0x7e2690d8"/>
        <function-ref name="start" scoped="" ref="0x7e269818"/>
        <function-ref name="stop" scoped="" ref="0x7e269a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7e2631a8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7e2631a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e2624a8"/>
        <function-ref name="fired" scoped="" ref="0x7e263c90"/>
        <function-ref name="get" scoped="" ref="0x7e2637f0"/>
        <function-ref name="reset" scoped="" ref="0x7e263e90"/>
        <function-ref name="isOn" scoped="" ref="0x7e2626a8"/>
        <function-ref name="set" scoped="" ref="0x7e2639f0"/>
        <function-ref name="start" scoped="" ref="0x7e2620a8"/>
        <function-ref name="stop" scoped="" ref="0x7e2622a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e288010" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e288010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e287728"/>
        <function-ref name="test" scoped="" ref="0x7e287328"/>
        <function-ref name="get" scoped="" ref="0x7e288658"/>
        <function-ref name="setScale" scoped="" ref="0x7e287928"/>
        <function-ref name="getScale" scoped="" ref="0x7e287bc8"/>
        <function-ref name="reset" scoped="" ref="0x7e288cf8"/>
        <function-ref name="overflow" scoped="" ref="0x7e288af8"/>
        <function-ref name="isOn" scoped="" ref="0x7e287528"/>
        <function-ref name="set" scoped="" ref="0x7e288858"/>
        <function-ref name="start" scoped="" ref="0x7e288ef8"/>
        <function-ref name="stop" scoped="" ref="0x7e287128"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e2424d8" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e2424d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7e2426b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e242790"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e242870"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e242950"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e242a30"/>
        <function-ref name="setControl" scoped="" ref="0x7e242b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7e22d890" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7e22d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7e22da68"/>
        <function-ref name="compareBusy" scoped="" ref="0x7e22db48"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7e22dc28"/>
        <function-ref name="countBusy" scoped="" ref="0x7e22dd08"/>
        <function-ref name="getAssr" scoped="" ref="0x7e22dde8"/>
        <function-ref name="setAssr" scoped="" ref="0x7e22dec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7e242d28" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7e242d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e246048"/>
        <function-ref name="fired" scoped="" ref="0x7e247830"/>
        <function-ref name="get" scoped="" ref="0x7e247390"/>
        <function-ref name="reset" scoped="" ref="0x7e247a30"/>
        <function-ref name="isOn" scoped="" ref="0x7e246248"/>
        <function-ref name="set" scoped="" ref="0x7e247590"/>
        <function-ref name="start" scoped="" ref="0x7e247c30"/>
        <function-ref name="stop" scoped="" ref="0x7e247e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e24bce8" loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e24bce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e249448"/>
        <function-ref name="test" scoped="" ref="0x7e249048"/>
        <function-ref name="get" scoped="" ref="0x7e24a370"/>
        <function-ref name="setScale" scoped="" ref="0x7e249648"/>
        <function-ref name="getScale" scoped="" ref="0x7e2498e8"/>
        <function-ref name="reset" scoped="" ref="0x7e24aa10"/>
        <function-ref name="overflow" scoped="" ref="0x7e24a810"/>
        <function-ref name="isOn" scoped="" ref="0x7e249248"/>
        <function-ref name="set" scoped="" ref="0x7e24a570"/>
        <function-ref name="start" scoped="" ref="0x7e24ac10"/>
        <function-ref name="stop" scoped="" ref="0x7e24ae10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e2272d8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e2272d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7e2274b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e227590"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e227670"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e227750"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e227830"/>
        <function-ref name="setControl" scoped="" ref="0x7e227910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7e225268" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7e225268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7e225440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7e2255c8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7e2255c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7e2257a0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7e225880"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7e225960"/>
        <function-ref name="countBusy" scoped="" ref="0x7e225a40"/>
        <function-ref name="getAssr" scoped="" ref="0x7e225b20"/>
        <function-ref name="setAssr" scoped="" ref="0x7e225c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7e227b28" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7e227b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e226ea0"/>
        <function-ref name="fired" scoped="" ref="0x7e2266a0"/>
        <function-ref name="get" scoped="" ref="0x7e226200"/>
        <function-ref name="reset" scoped="" ref="0x7e2268a0"/>
        <function-ref name="isOn" scoped="" ref="0x7e2250b8"/>
        <function-ref name="set" scoped="" ref="0x7e226400"/>
        <function-ref name="start" scoped="" ref="0x7e226aa0"/>
        <function-ref name="stop" scoped="" ref="0x7e226ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e22a520" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e22a520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e229c48"/>
        <function-ref name="test" scoped="" ref="0x7e229848"/>
        <function-ref name="get" scoped="" ref="0x7e22ab68"/>
        <function-ref name="setScale" scoped="" ref="0x7e229e48"/>
        <function-ref name="getScale" scoped="" ref="0x7e2270f8"/>
        <function-ref name="reset" scoped="" ref="0x7e229248"/>
        <function-ref name="overflow" scoped="" ref="0x7e229048"/>
        <function-ref name="isOn" scoped="" ref="0x7e229a48"/>
        <function-ref name="set" scoped="" ref="0x7e22ad68"/>
        <function-ref name="start" scoped="" ref="0x7e229448"/>
        <function-ref name="stop" scoped="" ref="0x7e229648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e1c6938" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e1c6938"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e1c6b10"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7e1c6bf0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e1c6cd0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7e1c6db0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e1c6e90"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e1c5010"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7e1c50f0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7e1c51d0"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7e1c52b0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7e1c5390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x7e1af740" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x7e1af740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7e1af918"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e1af9f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e1afad8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e1afbb8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e1afc98"/>
        <function-ref name="setControl" scoped="" ref="0x7e1afd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7e1c20b8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7e1c20b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e1c1410"/>
        <function-ref name="fired" scoped="" ref="0x7e1c2ba0"/>
        <function-ref name="get" scoped="" ref="0x7e1c2700"/>
        <function-ref name="reset" scoped="" ref="0x7e1c2da0"/>
        <function-ref name="isOn" scoped="" ref="0x7e1c1610"/>
        <function-ref name="set" scoped="" ref="0x7e1c2900"/>
        <function-ref name="start" scoped="" ref="0x7e1c1010"/>
        <function-ref name="stop" scoped="" ref="0x7e1c1210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7e1c55b0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7e1c55b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7e1c4d58"/>
        <function-ref name="test" scoped="" ref="0x7e1c4958"/>
        <function-ref name="get" scoped="" ref="0x7e1c5bf8"/>
        <function-ref name="captured" scoped="" ref="0x7e1c40b8"/>
        <function-ref name="reset" scoped="" ref="0x7e1c4358"/>
        <function-ref name="isOn" scoped="" ref="0x7e1c4b58"/>
        <function-ref name="set" scoped="" ref="0x7e1c5df8"/>
        <function-ref name="start" scoped="" ref="0x7e1c4558"/>
        <function-ref name="stop" scoped="" ref="0x7e1c4758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7e1c1890" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7e1c1890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e1c0b98"/>
        <function-ref name="fired" scoped="" ref="0x7e1c0398"/>
        <function-ref name="get" scoped="" ref="0x7e1c1ed8"/>
        <function-ref name="reset" scoped="" ref="0x7e1c0598"/>
        <function-ref name="isOn" scoped="" ref="0x7e1c0d98"/>
        <function-ref name="set" scoped="" ref="0x7e1c00f8"/>
        <function-ref name="start" scoped="" ref="0x7e1c0798"/>
        <function-ref name="stop" scoped="" ref="0x7e1c0998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7e1b0030" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7e1b0030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e1af330"/>
        <function-ref name="fired" scoped="" ref="0x7e1b0b18"/>
        <function-ref name="get" scoped="" ref="0x7e1b0678"/>
        <function-ref name="reset" scoped="" ref="0x7e1b0d18"/>
        <function-ref name="isOn" scoped="" ref="0x7e1af530"/>
        <function-ref name="set" scoped="" ref="0x7e1b0878"/>
        <function-ref name="start" scoped="" ref="0x7e1b0f18"/>
        <function-ref name="stop" scoped="" ref="0x7e1af130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e1c9b38" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e1c9b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e1c62b8"/>
        <function-ref name="test" scoped="" ref="0x7e1c8ea0"/>
        <function-ref name="get" scoped="" ref="0x7e1c8200"/>
        <function-ref name="setScale" scoped="" ref="0x7e1c64b8"/>
        <function-ref name="getScale" scoped="" ref="0x7e1c6758"/>
        <function-ref name="reset" scoped="" ref="0x7e1c88a0"/>
        <function-ref name="overflow" scoped="" ref="0x7e1c86a0"/>
        <function-ref name="isOn" scoped="" ref="0x7e1c60b8"/>
        <function-ref name="set" scoped="" ref="0x7e1c8400"/>
        <function-ref name="start" scoped="" ref="0x7e1c8aa0"/>
        <function-ref name="stop" scoped="" ref="0x7e1c8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e129410" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e129410"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f252010"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f252010"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e1295e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e1297f8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e1297f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e128f08"/>
        <function-ref name="test" scoped="" ref="0x7e128b08"/>
        <function-ref name="get" scoped="" ref="0x7e129e40"/>
        <function-ref name="setScale" scoped="" ref="0x7e120128"/>
        <function-ref name="getScale" scoped="" ref="0x7e1203c8"/>
        <function-ref name="reset" scoped="" ref="0x7e128508"/>
        <function-ref name="overflow" scoped="" ref="0x7e128308"/>
        <function-ref name="isOn" scoped="" ref="0x7e128d08"/>
        <function-ref name="set" scoped="" ref="0x7e128068"/>
        <function-ref name="start" scoped="" ref="0x7e128708"/>
        <function-ref name="stop" scoped="" ref="0x7e128908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7cc4f0b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7cc4f0b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f260dc0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f260dc0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7cc4e3f8"/>
        <function-ref name="fired" scoped="" ref="0x7cc4fca0"/>
        <function-ref name="startAt" scoped="" ref="0x7cc4e0b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7cc4fea0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7cc4e5f8"/>
        <function-ref name="start" scoped="" ref="0x7cc4f800"/>
        <function-ref name="stop" scoped="" ref="0x7cc4faa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7cc4b6f8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7cc4b6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7cc4aab0"/>
        <function-ref name="fired" scoped="" ref="0x7cc4a2b0"/>
        <function-ref name="get" scoped="" ref="0x7cc4bd40"/>
        <function-ref name="reset" scoped="" ref="0x7cc4a4b0"/>
        <function-ref name="isOn" scoped="" ref="0x7cc4acb0"/>
        <function-ref name="set" scoped="" ref="0x7cc4a010"/>
        <function-ref name="start" scoped="" ref="0x7cc4a6b0"/>
        <function-ref name="stop" scoped="" ref="0x7cc4a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7cc4e840" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7cc4e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7cc4b010"/>
        <function-ref name="test" scoped="" ref="0x7cc4db48"/>
        <function-ref name="get" scoped="" ref="0x7cc4ee88"/>
        <function-ref name="setScale" scoped="" ref="0x7cc4b210"/>
        <function-ref name="getScale" scoped="" ref="0x7cc4b4b0"/>
        <function-ref name="reset" scoped="" ref="0x7cc4d548"/>
        <function-ref name="overflow" scoped="" ref="0x7cc4d348"/>
        <function-ref name="isOn" scoped="" ref="0x7cc4dd48"/>
        <function-ref name="set" scoped="" ref="0x7cc4d0a8"/>
        <function-ref name="start" scoped="" ref="0x7cc4d748"/>
        <function-ref name="stop" scoped="" ref="0x7cc4d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e0e3010" loc="24:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e0e3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e0e3760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e0e3b60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e0e3960"/>
        <function-ref name="overflow" scoped="" ref="0x7e0e3d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e0ce3e8" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e0ce3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e0ceb38"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e0cc010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e0ced38"/>
        <function-ref name="overflow" scoped="" ref="0x7e0cc210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e0cae90" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e0cae90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e0c9600"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e0c9a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e0c9800"/>
        <function-ref name="overflow" scoped="" ref="0x7e0c9c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e0c9e68" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e0c9e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e0b1610"/>
        <function-ref name="test" scoped="" ref="0x7e0b1210"/>
        <function-ref name="get" scoped="" ref="0x7e0b24d8"/>
        <function-ref name="setScale" scoped="" ref="0x7e0b1810"/>
        <function-ref name="getScale" scoped="" ref="0x7e0b1ab0"/>
        <function-ref name="reset" scoped="" ref="0x7e0b2b78"/>
        <function-ref name="overflow" scoped="" ref="0x7e0b2978"/>
        <function-ref name="isOn" scoped="" ref="0x7e0b1410"/>
        <function-ref name="set" scoped="" ref="0x7e0b26d8"/>
        <function-ref name="start" scoped="" ref="0x7e0b2d78"/>
        <function-ref name="stop" scoped="" ref="0x7e0b1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7e0ae620" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7e0ae620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e0aed70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e092210"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e092010"/>
        <function-ref name="overflow" scoped="" ref="0x7e092410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e0af5c0" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e0af5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e0afd10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e0ae128"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e0aff10"/>
        <function-ref name="overflow" scoped="" ref="0x7e0ae328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7cc64320" loc="50:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7cc64320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7cc62668"/>
        <function-ref name="fired" scoped="" ref="0x7cc64f10"/>
        <function-ref name="startAt" scoped="" ref="0x7cc62328"/>
        <function-ref name="isRunning" scoped="" ref="0x7cc62128"/>
        <function-ref name="getAlarm" scoped="" ref="0x7cc62868"/>
        <function-ref name="start" scoped="" ref="0x7cc64a70"/>
        <function-ref name="stop" scoped="" ref="0x7cc64d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7cc61c00" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7cc61c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7cc53010"/>
        <function-ref name="fired" scoped="" ref="0x7cc60820"/>
        <function-ref name="startAt" scoped="" ref="0x7cc60c20"/>
        <function-ref name="isRunning" scoped="" ref="0x7cc60a20"/>
        <function-ref name="getAlarm" scoped="" ref="0x7cc53210"/>
        <function-ref name="start" scoped="" ref="0x7cc60380"/>
        <function-ref name="stop" scoped="" ref="0x7cc60620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7cc62b40" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7cc62b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7cc61308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7cc61708"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7cc61508"/>
        <function-ref name="overflow" scoped="" ref="0x7cc61908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e061280" loc="18:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e061280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e061458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7e04f190" loc="68:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7e04f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e04f368"/>
        <function-ref name="isInput" scoped="" ref="0x7e04f448"/>
        <function-ref name="toggle" scoped="" ref="0x7e04f528"/>
        <function-ref name="isOutput" scoped="" ref="0x7e04f608"/>
        <function-ref name="get" scoped="" ref="0x7e04f6e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e04f7c8"/>
        <function-ref name="set" scoped="" ref="0x7e04f8a8"/>
        <function-ref name="clr" scoped="" ref="0x7e04f988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7e04fb00" loc="69:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7e04fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e04fcd8"/>
        <function-ref name="isInput" scoped="" ref="0x7e04fdb8"/>
        <function-ref name="toggle" scoped="" ref="0x7e04fe98"/>
        <function-ref name="isOutput" scoped="" ref="0x7e04e010"/>
        <function-ref name="get" scoped="" ref="0x7e04e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e04e1d0"/>
        <function-ref name="set" scoped="" ref="0x7e04e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7e04e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7e04e508" loc="70:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7e04e508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e04e6e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e04e7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7e04e8a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e04e980"/>
        <function-ref name="get" scoped="" ref="0x7e04ea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e04eb40"/>
        <function-ref name="set" scoped="" ref="0x7e04ec20"/>
        <function-ref name="clr" scoped="" ref="0x7e04ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7e050808" loc="67:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7e050808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e0509e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e050ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7e050ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e050c80"/>
        <function-ref name="get" scoped="" ref="0x7e050d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e050e40"/>
        <function-ref name="set" scoped="" ref="0x7e050f20"/>
        <function-ref name="clr" scoped="" ref="0x7e04f018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7e04d808" loc="72:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7e04d808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e04d9e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e04dac0"/>
        <function-ref name="toggle" scoped="" ref="0x7e04dba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e04dc80"/>
        <function-ref name="get" scoped="" ref="0x7e04dd60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e04de40"/>
        <function-ref name="set" scoped="" ref="0x7e04df20"/>
        <function-ref name="clr" scoped="" ref="0x7e04c018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7e2c5e88" loc="66:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7e2c5e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e050070"/>
        <function-ref name="isInput" scoped="" ref="0x7e050150"/>
        <function-ref name="toggle" scoped="" ref="0x7e050230"/>
        <function-ref name="isOutput" scoped="" ref="0x7e050310"/>
        <function-ref name="get" scoped="" ref="0x7e0503f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e0504d0"/>
        <function-ref name="set" scoped="" ref="0x7e0505b0"/>
        <function-ref name="clr" scoped="" ref="0x7e050690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7e04ee78" loc="71:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7e04ee78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e04d070"/>
        <function-ref name="isInput" scoped="" ref="0x7e04d150"/>
        <function-ref name="toggle" scoped="" ref="0x7e04d230"/>
        <function-ref name="isOutput" scoped="" ref="0x7e04d310"/>
        <function-ref name="get" scoped="" ref="0x7e04d3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e04d4d0"/>
        <function-ref name="set" scoped="" ref="0x7e04d5b0"/>
        <function-ref name="clr" scoped="" ref="0x7e04d690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7e042c80" loc="39:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7e042c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7e042e58"/>
        <function-ref name="disable" scoped="" ref="0x7e045010"/>
        <function-ref name="captured" scoped="" ref="0x7e0450f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7e0451d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7e045370" loc="40:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7e045370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e045548"/>
        <function-ref name="disable" scoped="" ref="0x7e045628"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e045708"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e0457e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7e045988" loc="41:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7e045988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e045b60"/>
        <function-ref name="disable" scoped="" ref="0x7e045c40"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e045d20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e045e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7e033460" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7e033460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7e033638"/>
        <function-ref name="disable" scoped="" ref="0x7e033718"/>
        <function-ref name="captured" scoped="" ref="0x7e0337f8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7e0338d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x7e033ae8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x7e033ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7e029410"/>
        <function-ref name="test" scoped="" ref="0x7e029010"/>
        <function-ref name="get" scoped="" ref="0x7e032200"/>
        <function-ref name="captured" scoped="" ref="0x7e0326a0"/>
        <function-ref name="reset" scoped="" ref="0x7e032940"/>
        <function-ref name="isOn" scoped="" ref="0x7e029210"/>
        <function-ref name="set" scoped="" ref="0x7e032400"/>
        <function-ref name="start" scoped="" ref="0x7e032b40"/>
        <function-ref name="stop" scoped="" ref="0x7e032d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7e026628" loc="9:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7e026628"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e026800"/>
        <function-ref name="fired" scoped="" ref="0x7e0268e0"/>
        <function-ref name="disable" scoped="" ref="0x7e0269c0"/>
        <function-ref name="edge" scoped="" ref="0x7e026aa0"/>
        <function-ref name="enable" scoped="" ref="0x7e026b80"/>
        <function-ref name="getValue" scoped="" ref="0x7e026c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7e026030" loc="8:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7e026030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e026208"/>
        <function-ref name="disable" scoped="" ref="0x7e0262e8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e0263c8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e0264a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7e008510" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7e008510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e0086e8"/>
        <function-ref name="fired" scoped="" ref="0x7e0087c8"/>
        <function-ref name="disable" scoped="" ref="0x7e0088a8"/>
        <function-ref name="edge" scoped="" ref="0x7e008988"/>
        <function-ref name="enable" scoped="" ref="0x7e008a68"/>
        <function-ref name="getValue" scoped="" ref="0x7e008b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7e00bd10" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7e00bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e00bee8"/>
        <function-ref name="fired" scoped="" ref="0x7e00a010"/>
        <function-ref name="disable" scoped="" ref="0x7e00a0f0"/>
        <function-ref name="edge" scoped="" ref="0x7e00a1d0"/>
        <function-ref name="enable" scoped="" ref="0x7e00a2b0"/>
        <function-ref name="getValue" scoped="" ref="0x7e00a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7e009510" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7e009510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e0096e8"/>
        <function-ref name="fired" scoped="" ref="0x7e0097c8"/>
        <function-ref name="disable" scoped="" ref="0x7e0098a8"/>
        <function-ref name="edge" scoped="" ref="0x7e009988"/>
        <function-ref name="enable" scoped="" ref="0x7e009a68"/>
        <function-ref name="getValue" scoped="" ref="0x7e009b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7e008cc8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7e008cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e008ea0"/>
        <function-ref name="fired" scoped="" ref="0x7e007010"/>
        <function-ref name="disable" scoped="" ref="0x7e0070f0"/>
        <function-ref name="edge" scoped="" ref="0x7e0071d0"/>
        <function-ref name="enable" scoped="" ref="0x7e0072b0"/>
        <function-ref name="getValue" scoped="" ref="0x7e007390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7e00a510" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7e00a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e00a6e8"/>
        <function-ref name="fired" scoped="" ref="0x7e00a7c8"/>
        <function-ref name="disable" scoped="" ref="0x7e00a8a8"/>
        <function-ref name="edge" scoped="" ref="0x7e00a988"/>
        <function-ref name="enable" scoped="" ref="0x7e00aa68"/>
        <function-ref name="getValue" scoped="" ref="0x7e00ab48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7e009cc8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7e009cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e009ea0"/>
        <function-ref name="fired" scoped="" ref="0x7e008010"/>
        <function-ref name="disable" scoped="" ref="0x7e0080f0"/>
        <function-ref name="edge" scoped="" ref="0x7e0081d0"/>
        <function-ref name="enable" scoped="" ref="0x7e0082b0"/>
        <function-ref name="getValue" scoped="" ref="0x7e008390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7e00b558" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7e00b558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e00b730"/>
        <function-ref name="fired" scoped="" ref="0x7e00b810"/>
        <function-ref name="disable" scoped="" ref="0x7e00b8f0"/>
        <function-ref name="edge" scoped="" ref="0x7e00b9d0"/>
        <function-ref name="enable" scoped="" ref="0x7e00bab0"/>
        <function-ref name="getValue" scoped="" ref="0x7e00bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7e00acc8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7e00acc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e00aea0"/>
        <function-ref name="fired" scoped="" ref="0x7e009010"/>
        <function-ref name="disable" scoped="" ref="0x7e0090f0"/>
        <function-ref name="edge" scoped="" ref="0x7e0091d0"/>
        <function-ref name="enable" scoped="" ref="0x7e0092b0"/>
        <function-ref name="getValue" scoped="" ref="0x7e009390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7e001ad0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7e001ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e001ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7dff3948" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7dff3948"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dff3b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7e0013e0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7e0013e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e0015b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7e001e48" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7e001e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e000050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7dff3cc0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7dff3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dff3e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7e001758" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7e001758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e001930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7dff35d0" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7dff35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dff37a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7e001068" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7e001068"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e001240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7dfe4010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7dfe4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dfe41e8"/>
        <function-ref name="fired" scoped="" ref="0x7dfe42c8"/>
        <function-ref name="disable" scoped="" ref="0x7dfe43a8"/>
        <function-ref name="edge" scoped="" ref="0x7dfe4488"/>
        <function-ref name="enable" scoped="" ref="0x7dfe4568"/>
        <function-ref name="getValue" scoped="" ref="0x7dfe4648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7dfe47c8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7dfe47c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dfe49a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7dfcc010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7dfcc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dfcc1e8"/>
        <function-ref name="fired" scoped="" ref="0x7dfcc2c8"/>
        <function-ref name="disable" scoped="" ref="0x7dfcc3a8"/>
        <function-ref name="edge" scoped="" ref="0x7dfcc488"/>
        <function-ref name="enable" scoped="" ref="0x7dfcc568"/>
        <function-ref name="getValue" scoped="" ref="0x7dfcc648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7dfcc7c8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7dfcc7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dfcc9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7dfca010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7dfca010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dfca1e8"/>
        <function-ref name="fired" scoped="" ref="0x7dfca2c8"/>
        <function-ref name="disable" scoped="" ref="0x7dfca3a8"/>
        <function-ref name="edge" scoped="" ref="0x7dfca488"/>
        <function-ref name="enable" scoped="" ref="0x7dfca568"/>
        <function-ref name="getValue" scoped="" ref="0x7dfca648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7dfca7c8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7dfca7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dfca9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7dfc8010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7dfc8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dfc81e8"/>
        <function-ref name="fired" scoped="" ref="0x7dfc82c8"/>
        <function-ref name="disable" scoped="" ref="0x7dfc83a8"/>
        <function-ref name="edge" scoped="" ref="0x7dfc8488"/>
        <function-ref name="enable" scoped="" ref="0x7dfc8568"/>
        <function-ref name="getValue" scoped="" ref="0x7dfc8648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7dfc87c8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7dfc87c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dfc89a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7dfc50b0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7dfc50b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dfc5288"/>
        <function-ref name="fired" scoped="" ref="0x7dfc5368"/>
        <function-ref name="disable" scoped="" ref="0x7dfc5448"/>
        <function-ref name="edge" scoped="" ref="0x7dfc5528"/>
        <function-ref name="enable" scoped="" ref="0x7dfc5608"/>
        <function-ref name="getValue" scoped="" ref="0x7dfc56e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7dfc5868" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7dfc5868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dfc5a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7dfc3150" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7dfc3150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dfc3328"/>
        <function-ref name="fired" scoped="" ref="0x7dfc3408"/>
        <function-ref name="disable" scoped="" ref="0x7dfc34e8"/>
        <function-ref name="edge" scoped="" ref="0x7dfc35c8"/>
        <function-ref name="enable" scoped="" ref="0x7dfc36a8"/>
        <function-ref name="getValue" scoped="" ref="0x7dfc3788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7dfc3908" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7dfc3908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dfc3ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7dfc1228" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7dfc1228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dfc1400"/>
        <function-ref name="fired" scoped="" ref="0x7dfc14e0"/>
        <function-ref name="disable" scoped="" ref="0x7dfc15c0"/>
        <function-ref name="edge" scoped="" ref="0x7dfc16a0"/>
        <function-ref name="enable" scoped="" ref="0x7dfc1780"/>
        <function-ref name="getValue" scoped="" ref="0x7dfc1860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7dfc19e0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7dfc19e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dfc1bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7dfb32d0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7dfb32d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dfb34a8"/>
        <function-ref name="fired" scoped="" ref="0x7dfb3588"/>
        <function-ref name="disable" scoped="" ref="0x7dfb3668"/>
        <function-ref name="edge" scoped="" ref="0x7dfb3748"/>
        <function-ref name="enable" scoped="" ref="0x7dfb3828"/>
        <function-ref name="getValue" scoped="" ref="0x7dfb3908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7dfb3a88" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7dfb3a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dfb3c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x7dfaa010" loc="51:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x7dfaa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfaa1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7dfaa2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7dfaa3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfaa488"/>
        <function-ref name="get" scoped="" ref="0x7dfaa568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfaa648"/>
        <function-ref name="set" scoped="" ref="0x7dfaa728"/>
        <function-ref name="clr" scoped="" ref="0x7dfaa808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7dfac948" loc="47:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7dfac948"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dfacb20"/>
        <function-ref name="disable" scoped="" ref="0x7dfacc00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7dfacce0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7dfacdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x7dfa9528" loc="69:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x7dfa9528"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7dfa9700"/>
        <function-ref name="runTask" scoped="" ref="0x7dfa97e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7ddc1d58" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7ddc1d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddc0010"/>
        <function-ref name="write" scoped="" ref="0x7ddc00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ddc10b0" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ddc10b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddc1288"/>
        <function-ref name="write" scoped="" ref="0x7ddc1368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ddc45b8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7ddc45b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddc4790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ddbf368" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ddbf368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddbf540"/>
        <function-ref name="write" scoped="" ref="0x7ddbf620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ddc1920" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7ddc1920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddc1af8"/>
        <function-ref name="write" scoped="" ref="0x7ddc1bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7ddc0270" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7ddc0270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddc0448"/>
        <function-ref name="write" scoped="" ref="0x7ddc0528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ddc2820" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7ddc2820"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddc29f8"/>
        <function-ref name="write" scoped="" ref="0x7ddc2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ddc6bd0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ddc6bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ddc6da8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ddc6e88"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ddc5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ddc54e8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ddc54e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddc56c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ddc2010" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7ddc2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddc21e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ddc4c68" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ddc4c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddc4e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ddc14e8" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ddc14e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddc16c0"/>
        <function-ref name="write" scoped="" ref="0x7ddc17a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ddc4910" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7ddc4910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddc4ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ddc0f18" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7ddc0f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddbf108"/>
        <function-ref name="write" scoped="" ref="0x7ddbf1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ddbf7a0" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7ddbf7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ddbfa78"/>
        <function-ref name="writeDone" scoped="" ref="0x7ddbfb58"/>
        <function-ref name="write" scoped="" ref="0x7ddbfc38"/>
        <function-ref name="beginRead" scoped="" ref="0x7ddbfd18"/>
        <function-ref name="readDone" scoped="" ref="0x7ddbfdf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ddc5840" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7ddc5840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddc5a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ddc2c58" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7ddc2c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddc2e30"/>
        <function-ref name="write" scoped="" ref="0x7ddc2f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ddc2368" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7ddc2368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddc25c0"/>
        <function-ref name="write" scoped="" ref="0x7ddc26a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ddc5b98" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7ddc5b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddc5d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ddc6518" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7ddc6518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ddc66f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ddc67d0"/>
        <function-ref name="request" scoped="" ref="0x7ddc68b0"/>
        <function-ref name="granted" scoped="" ref="0x7ddc6990"/>
        <function-ref name="isOwner" scoped="" ref="0x7ddc6a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ddc0ae0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7ddc0ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddc0cb8"/>
        <function-ref name="write" scoped="" ref="0x7ddc0d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ddc06a8" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7ddc06a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddc0880"/>
        <function-ref name="write" scoped="" ref="0x7ddc0960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ddc5190" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ddc5190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddc5368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ddc4260" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7ddc4260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddc4438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ddc5ef0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7ddc5ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddc40e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ddbe010" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7ddbe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ddbe1e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7ddbe2c8"/>
        <function-ref name="write" scoped="" ref="0x7ddbe3a8"/>
        <function-ref name="beginRead" scoped="" ref="0x7ddbe488"/>
        <function-ref name="readDone" scoped="" ref="0x7ddbe568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7df72b00" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7df72b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7df72cd8"/>
        <function-ref name="writeDone" scoped="" ref="0x7df72db8"/>
        <function-ref name="write" scoped="" ref="0x7df72e98"/>
        <function-ref name="beginRead" scoped="" ref="0x7df71010"/>
        <function-ref name="readDone" scoped="" ref="0x7df710f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7df72340" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7df72340"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7df72518"/>
        <function-ref name="abortRelease" scoped="" ref="0x7df725f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7df726d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7df71520" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7df71520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7df716f8"/>
        <function-ref name="write" scoped="" ref="0x7df717d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7df71c00" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7df71c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7df71dd8"/>
        <function-ref name="write" scoped="" ref="0x7df71eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7df81be8" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7df81be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7df81dc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7df81ea0"/>
        <function-ref name="request" scoped="" ref="0x7df72010"/>
        <function-ref name="granted" scoped="" ref="0x7df720f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7df721d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7df702f8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7df702f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7df704d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7df54188" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7df54188"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7df54360"/>
        <function-ref name="sendDone" scoped="" ref="0x7df54440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7df6b5d8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7df6b5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7df6b7b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7df6b890"/>
        <function-ref name="write" scoped="" ref="0x7df6b970"/>
        <function-ref name="beginRead" scoped="" ref="0x7df6ba50"/>
        <function-ref name="readDone" scoped="" ref="0x7df6bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7df6c440" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7df6c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7df6c618"/>
        <function-ref name="abortRelease" scoped="" ref="0x7df6c6f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7df6c7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7df64968" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7df64968"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7df64b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7df545b8" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x7df545b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7df54790"/>
        <function-ref name="toIdle" scoped="" ref="0x7df54870"/>
        <function-ref name="isState" scoped="" ref="0x7df54950"/>
        <function-ref name="isIdle" scoped="" ref="0x7df54a30"/>
        <function-ref name="requestState" scoped="" ref="0x7df54b10"/>
        <function-ref name="forceState" scoped="" ref="0x7df54bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7df681d0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7df681d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7df683a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7df68488"/>
        <function-ref name="request" scoped="" ref="0x7df68568"/>
        <function-ref name="granted" scoped="" ref="0x7df68648"/>
        <function-ref name="isOwner" scoped="" ref="0x7df68728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7df69010" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7df69010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7df691e8"/>
        <function-ref name="write" scoped="" ref="0x7df692c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7df696d0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7df696d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7df698a8"/>
        <function-ref name="write" scoped="" ref="0x7df69988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7df54d38" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7df54d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7df54f10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7df65010"/>
        <function-ref name="led1On" scoped="" ref="0x7df650f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7df651d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7df652b0"/>
        <function-ref name="get" scoped="" ref="0x7df65390"/>
        <function-ref name="led1Off" scoped="" ref="0x7df65470"/>
        <function-ref name="led2Off" scoped="" ref="0x7df657f0"/>
        <function-ref name="set" scoped="" ref="0x7df65550"/>
        <function-ref name="led0On" scoped="" ref="0x7df65630"/>
        <function-ref name="led2On" scoped="" ref="0x7df65710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7df6cbb8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7df6cbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7df6cd90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7df6ce70"/>
        <function-ref name="request" scoped="" ref="0x7df6b010"/>
        <function-ref name="granted" scoped="" ref="0x7df6b0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7df6b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7df53568" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x7df53568"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7df53740"/>
        <function-ref name="runTask" scoped="" ref="0x7df53820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7df69d90" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7df69d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7df68010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7df10148" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7df10148"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7df10320"/>
        <function-ref name="toIdle" scoped="" ref="0x7df10400"/>
        <function-ref name="isState" scoped="" ref="0x7df104e0"/>
        <function-ref name="isIdle" scoped="" ref="0x7df105c0"/>
        <function-ref name="requestState" scoped="" ref="0x7df106a0"/>
        <function-ref name="forceState" scoped="" ref="0x7df10780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7df08c88" loc="66:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7df08c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7df08e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7df07010"/>
        <function-ref name="isState" scoped="" ref="0x7df070f0"/>
        <function-ref name="isIdle" scoped="" ref="0x7df071d0"/>
        <function-ref name="requestState" scoped="" ref="0x7df072b0"/>
        <function-ref name="forceState" scoped="" ref="0x7df07390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7df03910" loc="66:/opt/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7df03910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7df03ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7df03ec0" loc="67:/opt/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7df03ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7df020c0"/>
        <function-ref name="toIdle" scoped="" ref="0x7df021a0"/>
        <function-ref name="isState" scoped="" ref="0x7df02280"/>
        <function-ref name="isIdle" scoped="" ref="0x7df02360"/>
        <function-ref name="requestState" scoped="" ref="0x7df02440"/>
        <function-ref name="forceState" scoped="" ref="0x7df02520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7deeb4a8" loc="43:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7deeb4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7deeb680"/>
        <function-ref name="sendDone" scoped="" ref="0x7deeb760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7deeb170" loc="42:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7deeb170"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7deeb348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7df046c8" loc="39:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7df046c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7df048a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7df04a00" loc="40:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7df04a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7df04bd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7df04cb8"/>
        <function-ref name="request" scoped="" ref="0x7df04d98"/>
        <function-ref name="granted" scoped="" ref="0x7df04e78"/>
        <function-ref name="isOwner" scoped="" ref="0x7deeb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7dee5358" loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7dee5358"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dee5530"/>
        <function-ref name="sendDone" scoped="" ref="0x7dee5610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7dee5010" loc="67:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7dee5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7dee51e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dee9c40" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dee9c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dee9e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dee5a10" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dee5a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dee5be8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dee5cc8"/>
        <function-ref name="request" scoped="" ref="0x7dee5da8"/>
        <function-ref name="granted" scoped="" ref="0x7dee5e88"/>
        <function-ref name="isOwner" scoped="" ref="0x7dee4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7de98010" loc="207:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7de98010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7de981e8"/>
        <function-ref name="runTask" scoped="" ref="0x7de982c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7dee09d0" loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7dee09d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dee0ba8"/>
        <function-ref name="sendDone" scoped="" ref="0x7dee0c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7ded0500" loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7ded0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ded06d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ded07b8"/>
        <function-ref name="request" scoped="" ref="0x7ded0898"/>
        <function-ref name="granted" scoped="" ref="0x7ded0978"/>
        <function-ref name="isOwner" scoped="" ref="0x7ded0a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7dee06a8" loc="78:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7dee06a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7dee0880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dee0388" loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dee0388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dee0560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7dec3998" loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7dec3998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7dec3b70"/>
        <function-ref name="sleep" scoped="" ref="0x7ded0010"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7dec3d30"/>
        <function-ref name="dataReady" scoped="" ref="0x7ded00f0"/>
        <function-ref name="initMaster" scoped="" ref="0x7dec3ef0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7ded1010"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7ded10f0"/>
        <function-ref name="read" scoped="" ref="0x7ded11d0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7ded12b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7ded1390"/>
        <function-ref name="setClock" scoped="" ref="0x7ded1470"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ded1550"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7ded1630"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7ded1790"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7ded1870"/>
        <function-ref name="write" scoped="" ref="0x7ded1950"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ded1a30"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7ded1b10"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7ded1bf0"/>
        <function-ref name="getClock" scoped="" ref="0x7ded1cd0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7ded1db0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7dec3c50"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7dec3e10"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7ded1e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ded3100" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7ded3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ded32d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ded33b8"/>
        <function-ref name="request" scoped="" ref="0x7ded3498"/>
        <function-ref name="granted" scoped="" ref="0x7ded3578"/>
        <function-ref name="isOwner" scoped="" ref="0x7ded3658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7dea35e8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7dea35e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7dea37c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7dea31e0" loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7dea31e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7dea33b8"/>
        <function-ref name="userId" scoped="" ref="0x7dea3498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7de771c0" loc="59:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7de771c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7de77398"/>
        <function-ref name="sleep" scoped="" ref="0x7de767f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7de77558"/>
        <function-ref name="dataReady" scoped="" ref="0x7de768d0"/>
        <function-ref name="initMaster" scoped="" ref="0x7de77718"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7de777f8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7de778d8"/>
        <function-ref name="read" scoped="" ref="0x7de779b8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7de77a98"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7de77b78"/>
        <function-ref name="setClock" scoped="" ref="0x7de77c58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7de77d38"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7de77e18"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7de76010"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7de760f0"/>
        <function-ref name="write" scoped="" ref="0x7de761d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7de762b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7de76390"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7de76470"/>
        <function-ref name="getClock" scoped="" ref="0x7de76550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7de76630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7de77478"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7de77638"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7de76710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7de61068" loc="64:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7de61068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de61240"/>
        <function-ref name="isInput" scoped="" ref="0x7de61320"/>
        <function-ref name="toggle" scoped="" ref="0x7de61400"/>
        <function-ref name="isOutput" scoped="" ref="0x7de614e0"/>
        <function-ref name="get" scoped="" ref="0x7de615c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de616a0"/>
        <function-ref name="set" scoped="" ref="0x7de61780"/>
        <function-ref name="clr" scoped="" ref="0x7de61860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7de64cb8" loc="62:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7de64cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de64e90"/>
        <function-ref name="isInput" scoped="" ref="0x7de63010"/>
        <function-ref name="toggle" scoped="" ref="0x7de630f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7de631d0"/>
        <function-ref name="get" scoped="" ref="0x7de632b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de63390"/>
        <function-ref name="set" scoped="" ref="0x7de63470"/>
        <function-ref name="clr" scoped="" ref="0x7de63550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7de64348" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7de64348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de64520"/>
        <function-ref name="isInput" scoped="" ref="0x7de64600"/>
        <function-ref name="toggle" scoped="" ref="0x7de646e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7de647c0"/>
        <function-ref name="get" scoped="" ref="0x7de648a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de64980"/>
        <function-ref name="set" scoped="" ref="0x7de64a60"/>
        <function-ref name="clr" scoped="" ref="0x7de64b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7de62ea8" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7de62ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7de640c0"/>
        <function-ref name="stop" scoped="" ref="0x7de641a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7de619d8" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7de619d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7de61bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7de74ed0" loc="57:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7de74ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7de710c0"/>
        <function-ref name="sleep" scoped="" ref="0x7de70550"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7de71280"/>
        <function-ref name="dataReady" scoped="" ref="0x7de70630"/>
        <function-ref name="initMaster" scoped="" ref="0x7de71440"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7de71520"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7de71600"/>
        <function-ref name="read" scoped="" ref="0x7de716e0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7de717c0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7de718a0"/>
        <function-ref name="setClock" scoped="" ref="0x7de71980"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7de71a60"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7de71b40"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7de71ca0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7de71d80"/>
        <function-ref name="write" scoped="" ref="0x7de71e60"/>
        <function-ref name="enableSpi" scoped="" ref="0x7de70010"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7de700f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7de701d0"/>
        <function-ref name="getClock" scoped="" ref="0x7de702b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7de70390"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7de711a0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7de71360"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7de70470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7de636c8" loc="63:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7de636c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de638a0"/>
        <function-ref name="isInput" scoped="" ref="0x7de63980"/>
        <function-ref name="toggle" scoped="" ref="0x7de63a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7de63b40"/>
        <function-ref name="get" scoped="" ref="0x7de63c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de63d00"/>
        <function-ref name="set" scoped="" ref="0x7de63de0"/>
        <function-ref name="clr" scoped="" ref="0x7de63ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7de25010" loc="76:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7de25010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7de251f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7de252d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7de258c8" loc="79:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7de258c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7de25ab0"/>
        <function-ref name="configure" scoped="" ref="0x7de25b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7de30888" loc="75:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7de30888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7de30a70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7de30b50"/>
        <function-ref name="request" scoped="" ref="0x7de30c30"/>
        <function-ref name="granted" scoped="" ref="0x7de30d10"/>
        <function-ref name="isOwner" scoped="" ref="0x7de30df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7de25418" loc="77:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7de25418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7de255f0"/>
        <function-ref name="userId" scoped="" ref="0x7de256d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7cbbf430" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7cbbf430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7cbbf608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7cbbf768" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7cbbf768"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7cbbf940"/>
        <function-ref name="isEmpty" scoped="" ref="0x7cbbfa20"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7cbbfb00"/>
        <function-ref name="dequeue" scoped="" ref="0x7cbbfbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7cbbeea0" loc="52:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7cbbeea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7cbbd0c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7cbbd1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7cbbd7a0" loc="56:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7cbbd7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7cbbd988"/>
        <function-ref name="configure" scoped="" ref="0x7cbbda68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7cbbdbc8" loc="57:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7cbbdbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7cbbdda0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7cbbde80"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7cbbb010"/>
        <function-ref name="dequeue" scoped="" ref="0x7cbbb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7cbbe760" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7cbbe760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7cbbe948"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7cbbea28"/>
        <function-ref name="request" scoped="" ref="0x7cbbeb08"/>
        <function-ref name="granted" scoped="" ref="0x7cbbebe8"/>
        <function-ref name="isOwner" scoped="" ref="0x7cbbecc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7cbbd2e0" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7cbbd2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7cbbd4b8"/>
        <function-ref name="userId" scoped="" ref="0x7cbbd598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7cbbb270" loc="69:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7cbbb270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7cbbb448"/>
        <function-ref name="runTask" scoped="" ref="0x7cbbb528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7ddb4010" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7ddb4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddb41e8"/>
        <function-ref name="write" scoped="" ref="0x7ddb42c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ddb6320" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ddb6320"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddb64f8"/>
        <function-ref name="write" scoped="" ref="0x7ddb65d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ddb8840" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7ddb8840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddb8a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ddb35c8" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ddb35c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddb37a0"/>
        <function-ref name="write" scoped="" ref="0x7ddb3880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ddb6b90" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7ddb6b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddb6d68"/>
        <function-ref name="write" scoped="" ref="0x7ddb6e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7ddb4448" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7ddb4448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddb4620"/>
        <function-ref name="write" scoped="" ref="0x7ddb4700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ddb7a70" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7ddb7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddb7c48"/>
        <function-ref name="write" scoped="" ref="0x7ddb7d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ddbad80" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ddbad80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ddb9010"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ddb90f0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ddb91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ddb96a8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ddb96a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddb9880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ddb7260" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7ddb7260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddb7438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ddb8ef0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ddb8ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddb70e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ddb6758" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ddb6758"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddb6930"/>
        <function-ref name="write" scoped="" ref="0x7ddb6a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ddb8b98" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7ddb8b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddb8d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ddb3190" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7ddb3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddb3368"/>
        <function-ref name="write" scoped="" ref="0x7ddb3448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ddb3a00" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7ddb3a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ddb3cd8"/>
        <function-ref name="writeDone" scoped="" ref="0x7ddb3db8"/>
        <function-ref name="write" scoped="" ref="0x7ddb3e98"/>
        <function-ref name="beginRead" scoped="" ref="0x7ddb2010"/>
        <function-ref name="readDone" scoped="" ref="0x7ddb20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ddb9a00" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7ddb9a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddb9bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ddb7ea8" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7ddb7ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddb60c0"/>
        <function-ref name="write" scoped="" ref="0x7ddb61a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ddb75b8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7ddb75b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddb7810"/>
        <function-ref name="write" scoped="" ref="0x7ddb78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ddb9d58" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7ddb9d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddb8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ddba6c8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7ddba6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ddba8a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ddba980"/>
        <function-ref name="request" scoped="" ref="0x7ddbaa60"/>
        <function-ref name="granted" scoped="" ref="0x7ddbab40"/>
        <function-ref name="isOwner" scoped="" ref="0x7ddbac20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ddb4cb8" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7ddb4cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddb4e90"/>
        <function-ref name="write" scoped="" ref="0x7ddb3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ddb4880" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7ddb4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddb4a58"/>
        <function-ref name="write" scoped="" ref="0x7ddb4b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ddb9350" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ddb9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddb9528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ddb84e8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7ddb84e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddb86c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ddb8190" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7ddb8190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddb8368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ddb2270" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7ddb2270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ddb2448"/>
        <function-ref name="writeDone" scoped="" ref="0x7ddb2528"/>
        <function-ref name="write" scoped="" ref="0x7ddb2608"/>
        <function-ref name="beginRead" scoped="" ref="0x7ddb26e8"/>
        <function-ref name="readDone" scoped="" ref="0x7ddb27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7dda2d58" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7dda2d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dda1010"/>
        <function-ref name="write" scoped="" ref="0x7dda10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7dda20b0" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7dda20b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dda2288"/>
        <function-ref name="write" scoped="" ref="0x7dda2368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7dda55b8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7dda55b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dda5790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7dda0368" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dda0368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dda0540"/>
        <function-ref name="write" scoped="" ref="0x7dda0620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7dda2920" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7dda2920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dda2af8"/>
        <function-ref name="write" scoped="" ref="0x7dda2bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7dda1270" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7dda1270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dda1448"/>
        <function-ref name="write" scoped="" ref="0x7dda1528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7dda3820" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7dda3820"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dda39f8"/>
        <function-ref name="write" scoped="" ref="0x7dda3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ddb0c50" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ddb0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ddb0e28"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ddb0f08"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7dda6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7dda64e8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7dda64e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dda66c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7dda3010" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7dda3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dda31e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7dda5c68" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7dda5c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dda5e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7dda24e8" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7dda24e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dda26c0"/>
        <function-ref name="write" scoped="" ref="0x7dda27a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7dda5910" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7dda5910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dda5ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7dda1f18" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7dda1f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dda0108"/>
        <function-ref name="write" scoped="" ref="0x7dda01e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7dda07a0" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7dda07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dda0a78"/>
        <function-ref name="writeDone" scoped="" ref="0x7dda0b58"/>
        <function-ref name="write" scoped="" ref="0x7dda0c38"/>
        <function-ref name="beginRead" scoped="" ref="0x7dda0d18"/>
        <function-ref name="readDone" scoped="" ref="0x7dda0df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7dda6840" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7dda6840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dda6a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7dda3c58" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7dda3c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dda3e30"/>
        <function-ref name="write" scoped="" ref="0x7dda3f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7dda3368" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7dda3368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dda35c0"/>
        <function-ref name="write" scoped="" ref="0x7dda36a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7dda6b98" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7dda6b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dda6d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ddb0598" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7ddb0598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ddb0770"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ddb0850"/>
        <function-ref name="request" scoped="" ref="0x7ddb0930"/>
        <function-ref name="granted" scoped="" ref="0x7ddb0a10"/>
        <function-ref name="isOwner" scoped="" ref="0x7ddb0af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7dda1ae0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7dda1ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dda1cb8"/>
        <function-ref name="write" scoped="" ref="0x7dda1d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7dda16a8" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7dda16a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dda1880"/>
        <function-ref name="write" scoped="" ref="0x7dda1960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7dda6190" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7dda6190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dda6368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7dda5260" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7dda5260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dda5438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7dda6ef0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7dda6ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dda50e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7dd9f010" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dd9f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dd9f1e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7dd9f2c8"/>
        <function-ref name="write" scoped="" ref="0x7dd9f3a8"/>
        <function-ref name="beginRead" scoped="" ref="0x7dd9f488"/>
        <function-ref name="readDone" scoped="" ref="0x7dd9f568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7dd9ca88" loc="43:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7dd9ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7dd9cc60"/>
        <function-ref name="changed" scoped="" ref="0x7dd9cd40"/>
        <function-ref name="amGroup" scoped="" ref="0x7dd9ce20"/>
        <function-ref name="setAddress" scoped="" ref="0x7dd9cf00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7dd79648" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7dd79648"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7dd79820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7dd81c30" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7dd81c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7dd81e08"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7dd81ee8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7dd80010"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7dd800f0"/>
        <function-ref name="setCca" scoped="" ref="0x7dd801d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7dd802b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7dd792e8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7dd792e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7dd794c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7dd81588" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7dd81588"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dd81760"/>
        <function-ref name="cancel" scoped="" ref="0x7dd81840"/>
        <function-ref name="modify" scoped="" ref="0x7dd81920"/>
        <function-ref name="sendDone" scoped="" ref="0x7dd81a00"/>
        <function-ref name="resend" scoped="" ref="0x7dd81ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7dd81180" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7dd81180"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7dd81358"/>
        <function-ref name="stop" scoped="" ref="0x7dd81438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTimeStamping" ref="0x7dd7ce78" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioTimeStamping" scoped="" ref="0x7dd7ce78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x7dd7e070"/>
        <function-ref name="receivedSFD" scoped="" ref="0x7dd7e150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7dd5bb28" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7dd5bb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7dd5bd00"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7dd5bde0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7dd5bec0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7dd5a010"/>
        <function-ref name="setCca" scoped="" ref="0x7dd5a0f0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7dd5a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7dd5a7d8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7dd5a7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7dd5a9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7dd52970" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7dd52970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd52b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7dd561b0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7dd561b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7dd56388"/>
        <function-ref name="disable" scoped="" ref="0x7dd56468"/>
        <function-ref name="captured" scoped="" ref="0x7dd56548"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7dd56628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7dd59030" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x7dd59030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dd58388"/>
        <function-ref name="fired" scoped="" ref="0x7dd59c20"/>
        <function-ref name="startAt" scoped="" ref="0x7dd58048"/>
        <function-ref name="isRunning" scoped="" ref="0x7dd59e20"/>
        <function-ref name="getAlarm" scoped="" ref="0x7dd58588"/>
        <function-ref name="start" scoped="" ref="0x7dd59780"/>
        <function-ref name="stop" scoped="" ref="0x7dd59a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7dd58750" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7dd58750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7dd58928"/>
        <function-ref name="getRssi" scoped="" ref="0x7dd58a08"/>
        <function-ref name="getPower" scoped="" ref="0x7dd58ae8"/>
        <function-ref name="getLqi" scoped="" ref="0x7dd58bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7dd53980" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dd53980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd53b58"/>
        <function-ref name="write" scoped="" ref="0x7dd53c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7dd53dd0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7dd53dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd52010"/>
        <function-ref name="write" scoped="" ref="0x7dd520f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7dd43268" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7dd43268"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dd43540"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7dd43620"/>
        <function-ref name="sfd" scoped="" ref="0x7dd43700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7dd5b460" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dd5b460"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dd5b638"/>
        <function-ref name="cancel" scoped="" ref="0x7dd5b718"/>
        <function-ref name="modify" scoped="" ref="0x7dd5b7f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7dd5b8d8"/>
        <function-ref name="resend" scoped="" ref="0x7dd5b9b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7dd54cd8" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7dd54cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7dd54eb0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7dd53010"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7dd530f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7dd52ce8" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7dd52ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd52ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7dd551a8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7dd551a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd55400"/>
        <function-ref name="isInput" scoped="" ref="0x7dd554e0"/>
        <function-ref name="toggle" scoped="" ref="0x7dd555c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd556a0"/>
        <function-ref name="get" scoped="" ref="0x7dd55780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd55860"/>
        <function-ref name="set" scoped="" ref="0x7dd55940"/>
        <function-ref name="clr" scoped="" ref="0x7dd55a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dd5cca8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dd5cca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dd5ce80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7dd58d40" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dd58d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7dd58f18"/>
        <function-ref name="getMetadata" scoped="" ref="0x7dd56010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7dd51090" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7dd51090"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd51268"/>
        <function-ref name="write" scoped="" ref="0x7dd51348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7dd54610" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7dd54610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dd547e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dd548c8"/>
        <function-ref name="request" scoped="" ref="0x7dd549a8"/>
        <function-ref name="granted" scoped="" ref="0x7dd54a88"/>
        <function-ref name="isOwner" scoped="" ref="0x7dd54b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7dd567c0" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7dd567c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd56998"/>
        <function-ref name="isInput" scoped="" ref="0x7dd56a78"/>
        <function-ref name="toggle" scoped="" ref="0x7dd56b58"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd56c38"/>
        <function-ref name="get" scoped="" ref="0x7dd56d18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd56df8"/>
        <function-ref name="set" scoped="" ref="0x7dd56ed8"/>
        <function-ref name="clr" scoped="" ref="0x7dd55010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7dd52288" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7dd52288"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd52460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7dd55bb8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7dd55bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd55d90"/>
        <function-ref name="isInput" scoped="" ref="0x7dd55e70"/>
        <function-ref name="toggle" scoped="" ref="0x7dd54010"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd540f0"/>
        <function-ref name="get" scoped="" ref="0x7dd541d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd542b0"/>
        <function-ref name="set" scoped="" ref="0x7dd54390"/>
        <function-ref name="clr" scoped="" ref="0x7dd54470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7dd43868" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7dd43868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7dd43a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7dd43b20"/>
        <function-ref name="led1On" scoped="" ref="0x7dd43c00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7dd43ce0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7dd43dc0"/>
        <function-ref name="get" scoped="" ref="0x7dd43ea0"/>
        <function-ref name="led1Off" scoped="" ref="0x7dd46010"/>
        <function-ref name="led2Off" scoped="" ref="0x7dd46390"/>
        <function-ref name="set" scoped="" ref="0x7dd460f0"/>
        <function-ref name="led0On" scoped="" ref="0x7dd461d0"/>
        <function-ref name="led2On" scoped="" ref="0x7dd462b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeStamp" ref="0x7dd5a378" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStamp" scoped="" ref="0x7dd5a378"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x7dd5a550"/>
        <function-ref name="receivedSFD" scoped="" ref="0x7dd5a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7dd5b010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7dd5b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7dd5b1e8"/>
        <function-ref name="stop" scoped="" ref="0x7dd5b2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7dd53288" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dd53288"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dd53460"/>
        <function-ref name="writeDone" scoped="" ref="0x7dd53540"/>
        <function-ref name="write" scoped="" ref="0x7dd53620"/>
        <function-ref name="beginRead" scoped="" ref="0x7dd53700"/>
        <function-ref name="readDone" scoped="" ref="0x7dd537e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7dd525f8" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7dd525f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd527d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7dd5ab58" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7dd5ab58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7dd5ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7dce55c8" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7dce55c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dce57a0"/>
        <function-ref name="write" scoped="" ref="0x7dce5880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7dce68f0" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7dce68f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dce6ac8"/>
        <function-ref name="write" scoped="" ref="0x7dce6ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7dcf1d70" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7dcf1d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dce7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7dce4b20" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dce4b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dce4cf8"/>
        <function-ref name="write" scoped="" ref="0x7dce4dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7dce5190" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7dce5190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dce5368"/>
        <function-ref name="write" scoped="" ref="0x7dce5448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7dce5a00" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7dce5a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dce5bd8"/>
        <function-ref name="write" scoped="" ref="0x7dce5cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7dce6080" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7dce6080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dce6258"/>
        <function-ref name="write" scoped="" ref="0x7dce6338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7dcf2410" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7dcf2410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7dcf25e8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7dcf26c8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7dcf27a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7dcf2c80" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7dcf2c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcf2e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7dce7840" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7dce7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dce7a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7dce74e8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7dce74e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dce76c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7dce6d28" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7dce6d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dce6f00"/>
        <function-ref name="write" scoped="" ref="0x7dce5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7dce7190" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7dce7190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dce7368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7dce46e8" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7dce46e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dce48c0"/>
        <function-ref name="write" scoped="" ref="0x7dce49a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7dce3010" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7dce3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dce32e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7dce33c8"/>
        <function-ref name="write" scoped="" ref="0x7dce34a8"/>
        <function-ref name="beginRead" scoped="" ref="0x7dce3588"/>
        <function-ref name="readDone" scoped="" ref="0x7dce3668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7dcf1010" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7dcf1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcf11e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7dce64b8" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7dce64b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dce6690"/>
        <function-ref name="write" scoped="" ref="0x7dce6770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7dce7b98" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7dce7b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dce7df0"/>
        <function-ref name="write" scoped="" ref="0x7dce7ed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7dcf1368" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7dcf1368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcf1540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dcf3ce0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dcf3ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dcf3eb8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dcf2010"/>
        <function-ref name="request" scoped="" ref="0x7dcf20f0"/>
        <function-ref name="granted" scoped="" ref="0x7dcf21d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7dcf22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7dce42b0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7dce42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dce4488"/>
        <function-ref name="write" scoped="" ref="0x7dce4568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7dce5e38" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7dce5e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dce4050"/>
        <function-ref name="write" scoped="" ref="0x7dce4130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7dcf2928" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7dcf2928"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcf2b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7dcf1a18" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7dcf1a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcf1bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7dcf16c0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7dcf16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcf1898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7dce37e8" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dce37e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dce39c0"/>
        <function-ref name="writeDone" scoped="" ref="0x7dce3aa0"/>
        <function-ref name="write" scoped="" ref="0x7dce3b80"/>
        <function-ref name="beginRead" scoped="" ref="0x7dce3c60"/>
        <function-ref name="readDone" scoped="" ref="0x7dce3d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7dcdb5b8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7dcdb5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dcdb790"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7dcdb870"/>
        <function-ref name="sfd" scoped="" ref="0x7dcdb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7dcdbab8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7dcdbab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dcdbc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7dcdbe38" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7dcdbe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7dcda050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7dcdb190" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7dcdb190"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7dcdb368"/>
        <function-ref name="stop" scoped="" ref="0x7dcdb448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7dcd5eb8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7dcd5eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcd40c0"/>
        <function-ref name="isInput" scoped="" ref="0x7dcd41a0"/>
        <function-ref name="toggle" scoped="" ref="0x7dcd4280"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcd4360"/>
        <function-ref name="get" scoped="" ref="0x7dcd4440"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcd4520"/>
        <function-ref name="set" scoped="" ref="0x7dcd4600"/>
        <function-ref name="clr" scoped="" ref="0x7dcd46e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7dcd1890" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7dcd1890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7dcd1a68"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7dcd1b48"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7dcd1c28"/>
        <function-ref name="syncDone" scoped="" ref="0x7dcd1d08"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7dcd1de8"/>
        <function-ref name="setChannel" scoped="" ref="0x7dcd1ec8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7dcd0010"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7dcd00f0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7dcd01d0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7dcd02b0"/>
        <function-ref name="sync" scoped="" ref="0x7dcd0390"/>
        <function-ref name="getChannel" scoped="" ref="0x7dcd0470"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7dcd0550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7dcc3b28" loc="109:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x7dcc3b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7dcc3d00"/>
        <function-ref name="runTask" scoped="" ref="0x7dcc3de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7dcd4878" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7dcd4878"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcd4a50"/>
        <function-ref name="isInput" scoped="" ref="0x7dcd4b30"/>
        <function-ref name="toggle" scoped="" ref="0x7dcd4c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcd4cf0"/>
        <function-ref name="get" scoped="" ref="0x7dcd4dd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcd4eb0"/>
        <function-ref name="set" scoped="" ref="0x7dcd3010"/>
        <function-ref name="clr" scoped="" ref="0x7dcd30f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7dcd2e40" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7dcd2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7dcd1050"/>
        <function-ref name="getRssi" scoped="" ref="0x7dcd1130"/>
        <function-ref name="getPower" scoped="" ref="0x7dcd1210"/>
        <function-ref name="getLqi" scoped="" ref="0x7dcd12f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7dcd6880" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7dcd6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dcd6a58"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7dcd6b38"/>
        <function-ref name="sfd" scoped="" ref="0x7dcd6c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7dcd2700" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7dcd2700"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcd28d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7dcd5528" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7dcd5528"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcd5700"/>
        <function-ref name="isInput" scoped="" ref="0x7dcd57e0"/>
        <function-ref name="toggle" scoped="" ref="0x7dcd58c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcd59a0"/>
        <function-ref name="get" scoped="" ref="0x7dcd5a80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcd5b60"/>
        <function-ref name="set" scoped="" ref="0x7dcd5c40"/>
        <function-ref name="clr" scoped="" ref="0x7dcd5d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dcd6110" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dcd6110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dcd62e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7dcd1468" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dcd1468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7dcd1640"/>
        <function-ref name="getMetadata" scoped="" ref="0x7dcd1720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7dcd6d80" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7dcd6d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dcd5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7dcd38a8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7dcd38a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dcd3a80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dcd3b60"/>
        <function-ref name="request" scoped="" ref="0x7dcd3c40"/>
        <function-ref name="granted" scoped="" ref="0x7dcd3d20"/>
        <function-ref name="isOwner" scoped="" ref="0x7dcd3e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7dcd2010" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7dcd2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dcd21e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7dcd22c8"/>
        <function-ref name="write" scoped="" ref="0x7dcd23a8"/>
        <function-ref name="beginRead" scoped="" ref="0x7dcd2488"/>
        <function-ref name="readDone" scoped="" ref="0x7dcd2568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7dcd51b8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7dcd51b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7dcd5390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7dcd0738" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7dcd0738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7dcd0910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7dcd09f0"/>
        <function-ref name="led1On" scoped="" ref="0x7dcd0ad0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7dcd0bb0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7dcd0c90"/>
        <function-ref name="get" scoped="" ref="0x7dcd0d70"/>
        <function-ref name="led1Off" scoped="" ref="0x7dcd0e50"/>
        <function-ref name="led2Off" scoped="" ref="0x7dcc72b0"/>
        <function-ref name="set" scoped="" ref="0x7dcc7010"/>
        <function-ref name="led0On" scoped="" ref="0x7dcc70f0"/>
        <function-ref name="led2On" scoped="" ref="0x7dcc71d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7dcd3290" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7dcd3290"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dcd3468"/>
        <function-ref name="disable" scoped="" ref="0x7dcd3548"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7dcd3628"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7dcd3708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7dcd2a78" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7dcd2a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcd2cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7dcd6458" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7dcd6458"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7dcd6630"/>
        <function-ref name="stop" scoped="" ref="0x7dcd6710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7dc91040" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7dc91040"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7dc91218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7dc92120" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7dc92120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7dc922f8"/>
        <function-ref name="getRssi" scoped="" ref="0x7dc923d8"/>
        <function-ref name="getPower" scoped="" ref="0x7dc924b8"/>
        <function-ref name="getLqi" scoped="" ref="0x7dc92598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7dc92c08" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dc92c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7dc92de0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7dc92ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7dc92718" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7dc92718"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7dc928f0"/>
        <function-ref name="noAck" scoped="" ref="0x7dc929d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7dc92ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7dc7a920" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7dc7a920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc7aaf8"/>
        <function-ref name="write" scoped="" ref="0x7dc7abd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7dc7bc58" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7dc7bc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc7be30"/>
        <function-ref name="write" scoped="" ref="0x7dc7bf10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7dc7c190" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7dc7c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc7c368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7dc79f18" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dc79f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc77108"/>
        <function-ref name="write" scoped="" ref="0x7dc771e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7dc7a4e8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7dc7a4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc7a6c0"/>
        <function-ref name="write" scoped="" ref="0x7dc7a7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7dc7ad58" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7dc7ad58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc79010"/>
        <function-ref name="write" scoped="" ref="0x7dc790f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7dc7b3e8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7dc7b3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc7b5c0"/>
        <function-ref name="write" scoped="" ref="0x7dc7b6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7dc95810" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7dc95810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7dc959e8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7dc95ac8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7dc95ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7dc940b0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7dc940b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc94288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7dc7cb98" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7dc7cb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc7cd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7dc7c840" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7dc7c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc7ca18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7dc7a0b0" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7dc7a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc7a288"/>
        <function-ref name="write" scoped="" ref="0x7dc7a368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7dc7c4e8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7dc7c4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc7c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7dc79ae0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7dc79ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc79cb8"/>
        <function-ref name="write" scoped="" ref="0x7dc79d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7dc77368" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7dc77368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dc77640"/>
        <function-ref name="writeDone" scoped="" ref="0x7dc77720"/>
        <function-ref name="write" scoped="" ref="0x7dc77800"/>
        <function-ref name="beginRead" scoped="" ref="0x7dc778e0"/>
        <function-ref name="readDone" scoped="" ref="0x7dc779c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7dc94408" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7dc94408"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc945e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7dc7b820" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7dc7b820"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc7b9f8"/>
        <function-ref name="write" scoped="" ref="0x7dc7bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7dc7cef0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7dc7cef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc7b188"/>
        <function-ref name="write" scoped="" ref="0x7dc7b268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7dc94760" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7dc94760"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc94938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dc95158" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dc95158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dc95330"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dc95410"/>
        <function-ref name="request" scoped="" ref="0x7dc954f0"/>
        <function-ref name="granted" scoped="" ref="0x7dc955d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7dc956b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7dc796a8" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7dc796a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc79880"/>
        <function-ref name="write" scoped="" ref="0x7dc79960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7dc79270" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7dc79270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc79448"/>
        <function-ref name="write" scoped="" ref="0x7dc79528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7dc95d28" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7dc95d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc95f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7dc94e10" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7dc94e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc7c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7dc94ab8" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7dc94ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc94c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7dc77b40" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dc77b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dc77d18"/>
        <function-ref name="writeDone" scoped="" ref="0x7dc77df8"/>
        <function-ref name="write" scoped="" ref="0x7dc77ed8"/>
        <function-ref name="beginRead" scoped="" ref="0x7dc76010"/>
        <function-ref name="readDone" scoped="" ref="0x7dc760f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7dc65d18" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7dc65d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7dc65ef0"/>
        <function-ref name="toIdle" scoped="" ref="0x7dc64010"/>
        <function-ref name="isState" scoped="" ref="0x7dc640f0"/>
        <function-ref name="isIdle" scoped="" ref="0x7dc641d0"/>
        <function-ref name="requestState" scoped="" ref="0x7dc642b0"/>
        <function-ref name="forceState" scoped="" ref="0x7dc64390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7dc5c068" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7dc5c068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dc5c240"/>
        <function-ref name="getPayload" scoped="" ref="0x7dc5c320"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dc5c400"/>
        <function-ref name="cancel" scoped="" ref="0x7dc5c4e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7dc5c5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7dc5d920" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dc5d920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dc5daf8"/>
        <function-ref name="getPayload" scoped="" ref="0x7dc5dbd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dc5dcb8"/>
        <function-ref name="cancel" scoped="" ref="0x7dc5dd98"/>
        <function-ref name="sendDone" scoped="" ref="0x7dc5de78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7dc57010" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7dc57010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dc571e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7dc572c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dc573a8"/>
        <function-ref name="cancel" scoped="" ref="0x7dc57488"/>
        <function-ref name="sendDone" scoped="" ref="0x7dc57568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7dc58560" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dc58560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dc58738"/>
        <function-ref name="getPayload" scoped="" ref="0x7dc58818"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dc588f8"/>
        <function-ref name="cancel" scoped="" ref="0x7dc589d8"/>
        <function-ref name="sendDone" scoped="" ref="0x7dc58ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7dc57e30" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7dc57e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7dc56050"/>
        <function-ref name="rand32" scoped="" ref="0x7dc56130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dc58c00" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dc58c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc58dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7dc56288" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dc56288"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7dc56460"/>
        <function-ref name="getMetadata" scoped="" ref="0x7dc56540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7dc576b0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7dc576b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7dc57888"/>
        <function-ref name="toIdle" scoped="" ref="0x7dc57968"/>
        <function-ref name="isState" scoped="" ref="0x7dc57a48"/>
        <function-ref name="isIdle" scoped="" ref="0x7dc57b28"/>
        <function-ref name="requestState" scoped="" ref="0x7dc57c08"/>
        <function-ref name="forceState" scoped="" ref="0x7dc57ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7dc5a148" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7dc5a148"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7dc5a320"/>
        <function-ref name="toIdle" scoped="" ref="0x7dc5a400"/>
        <function-ref name="isState" scoped="" ref="0x7dc5a4e0"/>
        <function-ref name="isIdle" scoped="" ref="0x7dc5a5c0"/>
        <function-ref name="requestState" scoped="" ref="0x7dc5a6a0"/>
        <function-ref name="forceState" scoped="" ref="0x7dc5a780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7dc430d8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7dc430d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dc432b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7dc449c8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7dc449c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dc44ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7dc44d20" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7dc44d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dc44ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7dc3d278" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7dc3d278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dc3d450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dc3eeb0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dc3eeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc3d0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7dc3e838" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7dc3e838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dc3ea10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7dc3d5a8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dc3d5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7dc3d780"/>
        <function-ref name="getMetadata" scoped="" ref="0x7dc3d860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7dc3eb90" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7dc3eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dc3ed68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7dc25868" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7dc25868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dc25a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7dc25bb0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7dc25bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dc25d88"/>
        <function-ref name="getPayload" scoped="" ref="0x7dc25e68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dc24010"/>
        <function-ref name="cancel" scoped="" ref="0x7dc240f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7dc241d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7dc26db8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dc26db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dc25010"/>
        <function-ref name="getPayload" scoped="" ref="0x7dc250f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dc251d0"/>
        <function-ref name="cancel" scoped="" ref="0x7dc252b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7dc25390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7dc254d8" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7dc254d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dc256b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7dc20e48" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7dc20e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7dc1f050"/>
        <function-ref name="stopDone" scoped="" ref="0x7dc1f130"/>
        <function-ref name="start" scoped="" ref="0x7dc1f210"/>
        <function-ref name="stop" scoped="" ref="0x7dc1f2f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7dc1fc50" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7dc1fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dc1fe28"/>
        <function-ref name="getPayload" scoped="" ref="0x7dc1ff08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dc1e010"/>
        <function-ref name="cancel" scoped="" ref="0x7dc1e0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7dc1e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7dc1e348" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7dc1e348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dc1e520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7dc21918" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dc21918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dc21af0"/>
        <function-ref name="getPayload" scoped="" ref="0x7dc21bd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dc21cb0"/>
        <function-ref name="cancel" scoped="" ref="0x7dc21d90"/>
        <function-ref name="sendDone" scoped="" ref="0x7dc21e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7dc20340" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7dc20340"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x7dc20518"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x7dc205f8"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x7dc206d8"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x7dc207b8"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x7dc20898"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x7dc20978"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x7dc20a58"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x7dc20b38"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x7dc20c18"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x7dc20cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7dc1f468" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x7dc1f468"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7dc1f640"/>
        <function-ref name="toIdle" scoped="" ref="0x7dc1f720"/>
        <function-ref name="isState" scoped="" ref="0x7dc1f800"/>
        <function-ref name="isIdle" scoped="" ref="0x7dc1f8e0"/>
        <function-ref name="requestState" scoped="" ref="0x7dc1f9c0"/>
        <function-ref name="forceState" scoped="" ref="0x7dc1faa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7dc1e6a0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7dc1e6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7dc1e878"/>
        <function-ref name="stopDone" scoped="" ref="0x7dc1e958"/>
        <function-ref name="start" scoped="" ref="0x7dc1ea38"/>
        <function-ref name="stop" scoped="" ref="0x7dc1eb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7dc20010" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7dc20010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dc201e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7dc1cae8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7dc1cae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x7dc1ccc0"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x7dc1cda0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x7dc1ce80"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x7dc19010"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x7dc190f0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x7dc191d0"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x7dc192b0"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x7dc19390"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x7dc19470"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x7dc19550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7dc1b450" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7dc1b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7dc1b628"/>
        <function-ref name="toIdle" scoped="" ref="0x7dc1b708"/>
        <function-ref name="isState" scoped="" ref="0x7dc1b7e8"/>
        <function-ref name="isIdle" scoped="" ref="0x7dc1b8c8"/>
        <function-ref name="requestState" scoped="" ref="0x7dc1b9a8"/>
        <function-ref name="forceState" scoped="" ref="0x7dc1ba88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7dc04620" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7dc04620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dc047f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7dc048d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dc049b8"/>
        <function-ref name="cancel" scoped="" ref="0x7dc04a98"/>
        <function-ref name="sendDone" scoped="" ref="0x7dc04b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7dc05860" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dc05860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dc05a38"/>
        <function-ref name="getPayload" scoped="" ref="0x7dc05b18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dc05bf8"/>
        <function-ref name="cancel" scoped="" ref="0x7dc05cd8"/>
        <function-ref name="sendDone" scoped="" ref="0x7dc05db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7dc05f08" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7dc05f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7dc040f0"/>
        <function-ref name="setRetries" scoped="" ref="0x7dc041d0"/>
        <function-ref name="getRetries" scoped="" ref="0x7dc042b0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7dc04390"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7dc04470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7dbff288" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7dbff288"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7dbff460"/>
        <function-ref name="noAck" scoped="" ref="0x7dbff540"/>
        <function-ref name="wasAcked" scoped="" ref="0x7dbff620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7dc02ad8" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7dc02ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7dc02cb0"/>
        <function-ref name="setRetries" scoped="" ref="0x7dc02d90"/>
        <function-ref name="getRetries" scoped="" ref="0x7dc02e70"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7dbff010"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7dbff0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7dbe7938" loc="32:../../../tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7dbe7938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7ea61350"/>
              <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7ea61670"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dbbe010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7dbe83d8" loc="31:../../../tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7dbe83d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7ea61350"/>
            <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7ea61670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7dbe7430"/>
        <function-ref name="evicted" scoped="" ref="0x7dbe8ea0"/>
        <function-ref name="insert" scoped="" ref="0x7dbe8be0"/>
        <function-ref name="flush" scoped="" ref="0x7dbe76d0"/>
        <function-ref name="lookup" scoped="" ref="0x7dbe7170"/>
        <function-ref name="size" scoped="" ref="0x7dbe8a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7cb4e4c8" loc="69:../../../tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7cb4e4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7cb4e6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7cb4ddc0" loc="72:../../../tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7cb4ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7ea61350"/>
              <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7ea61670"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7cb4b408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7cb4e870" loc="70:../../../tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7cb4e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7ea61350"/>
            <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7ea61670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7cb4d8b8"/>
        <function-ref name="evicted" scoped="" ref="0x7cb4d358"/>
        <function-ref name="insert" scoped="" ref="0x7cb4d098"/>
        <function-ref name="flush" scoped="" ref="0x7cb4db58"/>
        <function-ref name="lookup" scoped="" ref="0x7cb4d5f8"/>
        <function-ref name="size" scoped="" ref="0x7cb4ee98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7dbbb678" loc="32:../../../tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7dbbb678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7ea63a78"/>
              <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7ea63db8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dbbbca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7dbbd120" loc="31:../../../tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7dbbd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7ea63a78"/>
            <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7ea63db8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7dbbb170"/>
        <function-ref name="evicted" scoped="" ref="0x7dbbdbe8"/>
        <function-ref name="insert" scoped="" ref="0x7dbbd928"/>
        <function-ref name="flush" scoped="" ref="0x7dbbb410"/>
        <function-ref name="lookup" scoped="" ref="0x7dbbde88"/>
        <function-ref name="size" scoped="" ref="0x7dbbd748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7cb307f8" loc="69:../../../tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7cb307f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7cb309d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7cb2d110" loc="72:../../../tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7cb2d110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7ea63a78"/>
              <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7ea63db8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7cb2d738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7cb30ba0" loc="70:../../../tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7cb30ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7ea63a78"/>
            <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7ea63db8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7cb2fbe0"/>
        <function-ref name="evicted" scoped="" ref="0x7cb2f680"/>
        <function-ref name="insert" scoped="" ref="0x7cb2f3c0"/>
        <function-ref name="flush" scoped="" ref="0x7cb2fe80"/>
        <function-ref name="lookup" scoped="" ref="0x7cb2f920"/>
        <function-ref name="size" scoped="" ref="0x7cb2f1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataTimer" ref="0x7dbb7d78" loc="40:../../../tos/lib/data/timer/DataTimerC.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataTimer" scoped="" ref="0x7dbb7d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataTimer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba1930"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="expired" scoped="" ref="0x7dbb6960"/>
        <function-ref name="start" scoped="" ref="0x7dbb63c0"/>
        <function-ref name="stop" scoped="" ref="0x7dbb66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7cb1e8f0" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7cb1e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7cb1c208"/>
        <function-ref name="fired" scoped="" ref="0x7cb1d610"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7cb1dbb0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7cb1d9d0"/>
        <function-ref name="getdt" scoped="" ref="0x7cb1c5c8"/>
        <function-ref name="gett0" scoped="" ref="0x7cb1c3e8"/>
        <function-ref name="isRunning" scoped="" ref="0x7cb1d7f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7cb1ef18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7cb1ded0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7cb1d1b0"/>
        <function-ref name="stop" scoped="" ref="0x7cb1d430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7dba2370" loc="38:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7dba2370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dba1c78"/>
        <function-ref name="fired" scoped="" ref="0x7dba1098"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7dba1638"/>
        <function-ref name="isOneShot" scoped="" ref="0x7dba1458"/>
        <function-ref name="getdt" scoped="" ref="0x7db9f048"/>
        <function-ref name="gett0" scoped="" ref="0x7dba1e58"/>
        <function-ref name="isRunning" scoped="" ref="0x7dba1278"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7dba2998"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7dba1958"/>
        <function-ref name="startOneShot" scoped="" ref="0x7dba2c18"/>
        <function-ref name="stop" scoped="" ref="0x7dba2e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7db9bb30" loc="35:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7db9bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7db984c8"/>
        <function-ref name="fired" scoped="" ref="0x7db9a8c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7db9ae60"/>
        <function-ref name="isOneShot" scoped="" ref="0x7db9ac80"/>
        <function-ref name="getdt" scoped="" ref="0x7db98888"/>
        <function-ref name="gett0" scoped="" ref="0x7db986a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7db9aaa0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7db9a1e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7db981a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7db9a460"/>
        <function-ref name="stop" scoped="" ref="0x7db9a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7db93338" loc="36:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7db93338"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7db93980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7db9b498" loc="34:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7db9b498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7db9b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7db87878" loc="29:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7db87878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7db86010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7db86410"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7db86210"/>
        <function-ref name="overflow" scoped="" ref="0x7db86610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7db89ac8" loc="27:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7db89ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7db89ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7db88010" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7db88010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7db87350"/>
        <function-ref name="fired" scoped="" ref="0x7db88c00"/>
        <function-ref name="startAt" scoped="" ref="0x7db87010"/>
        <function-ref name="isRunning" scoped="" ref="0x7db88e00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7db87550"/>
        <function-ref name="start" scoped="" ref="0x7db88760"/>
        <function-ref name="stop" scoped="" ref="0x7db88a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7db41150" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7db41150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7db40550"/>
        <function-ref name="fired" scoped="" ref="0x7db41d40"/>
        <function-ref name="startAt" scoped="" ref="0x7db40210"/>
        <function-ref name="isRunning" scoped="" ref="0x7db40010"/>
        <function-ref name="getAlarm" scoped="" ref="0x7db40750"/>
        <function-ref name="start" scoped="" ref="0x7db418a0"/>
        <function-ref name="stop" scoped="" ref="0x7db41b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7db82cf0" loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7db82cf0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f252010"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f252010"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7db82ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7db40a08" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7db40a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7db3e200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7db3e600"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7db3e400"/>
        <function-ref name="overflow" scoped="" ref="0x7db3e800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7cb09290" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7cb09290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7cb09468"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7cb09548"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7cb09628"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7cb09708"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7cb097e8"/>
        <function-ref name="setControl" scoped="" ref="0x7cb098c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7cb10cf0" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7cb10cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7cb0d068"/>
        <function-ref name="fired" scoped="" ref="0x7cb0f918"/>
        <function-ref name="startAt" scoped="" ref="0x7cb0fd18"/>
        <function-ref name="isRunning" scoped="" ref="0x7cb0fb18"/>
        <function-ref name="getAlarm" scoped="" ref="0x7cb0d268"/>
        <function-ref name="start" scoped="" ref="0x7cb0f478"/>
        <function-ref name="stop" scoped="" ref="0x7cb0f718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7cb108b8" loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7cb108b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7cb10a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7cb0d520" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7cb0d520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7cb0dc70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7cb0c088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7cb0de70"/>
        <function-ref name="overflow" scoped="" ref="0x7cb0c288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7cb071c8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7cb071c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7cb073a0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7cb07480"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7cb07560"/>
        <function-ref name="countBusy" scoped="" ref="0x7cb07640"/>
        <function-ref name="getAssr" scoped="" ref="0x7cb07720"/>
        <function-ref name="setAssr" scoped="" ref="0x7cb07800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7cb09ab8" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7cb09ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7cb08dc0"/>
        <function-ref name="fired" scoped="" ref="0x7cb085c0"/>
        <function-ref name="get" scoped="" ref="0x7cb08120"/>
        <function-ref name="reset" scoped="" ref="0x7cb087c0"/>
        <function-ref name="isOn" scoped="" ref="0x7cb07010"/>
        <function-ref name="set" scoped="" ref="0x7cb08320"/>
        <function-ref name="start" scoped="" ref="0x7cb089c0"/>
        <function-ref name="stop" scoped="" ref="0x7cb08bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7cb0c500" loc="30:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7cb0c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7cb0bc10"/>
        <function-ref name="test" scoped="" ref="0x7cb0b810"/>
        <function-ref name="get" scoped="" ref="0x7cb0cb48"/>
        <function-ref name="setScale" scoped="" ref="0x7cb0be10"/>
        <function-ref name="getScale" scoped="" ref="0x7cb090d8"/>
        <function-ref name="reset" scoped="" ref="0x7cb0b210"/>
        <function-ref name="overflow" scoped="" ref="0x7cb0b010"/>
        <function-ref name="isOn" scoped="" ref="0x7cb0ba10"/>
        <function-ref name="set" scoped="" ref="0x7cb0cd48"/>
        <function-ref name="start" scoped="" ref="0x7cb0b410"/>
        <function-ref name="stop" scoped="" ref="0x7cb0b610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7db20ea8" loc="63:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7db20ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7db1e0c0"/>
        <function-ref name="runTask" scoped="" ref="0x7db1e1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7db21770" loc="38:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7db21770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7db20ad0"/>
        <function-ref name="fired" scoped="" ref="0x7db20390"/>
        <function-ref name="startAt" scoped="" ref="0x7db20790"/>
        <function-ref name="isRunning" scoped="" ref="0x7db20590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7db20cd0"/>
        <function-ref name="start" scoped="" ref="0x7db21ec0"/>
        <function-ref name="stop" scoped="" ref="0x7db20190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7db3b7c0" loc="37:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7db3b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7db210d8"/>
        <function-ref name="fired" scoped="" ref="0x7db234e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7db23a88"/>
        <function-ref name="isOneShot" scoped="" ref="0x7db238a8"/>
        <function-ref name="getdt" scoped="" ref="0x7db21498"/>
        <function-ref name="gett0" scoped="" ref="0x7db212b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7db236c8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7db3bde8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7db23da8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7db23088"/>
        <function-ref name="stop" scoped="" ref="0x7db23308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7daea708" loc="60:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7daea708"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7daea8e0"/>
        <function-ref name="runTask" scoped="" ref="0x7daea9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7daf2840" loc="38:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7daf2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7daea170"/>
        <function-ref name="fired" scoped="" ref="0x7daf1570"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7daf1b10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7daf1930"/>
        <function-ref name="getdt" scoped="" ref="0x7daea530"/>
        <function-ref name="gett0" scoped="" ref="0x7daea350"/>
        <function-ref name="isRunning" scoped="" ref="0x7daf1750"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7daf2e68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7daf1e30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7daf1110"/>
        <function-ref name="stop" scoped="" ref="0x7daf1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7db1b810" loc="37:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7db1b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7daf21e8"/>
        <function-ref name="fired" scoped="" ref="0x7daf4590"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7daf4b60"/>
        <function-ref name="isOneShot" scoped="" ref="0x7daf4970"/>
        <function-ref name="getdt" scoped="" ref="0x7daf25c8"/>
        <function-ref name="gett0" scoped="" ref="0x7daf23d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7daf4780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7db1be48"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7daf4e90"/>
        <function-ref name="startOneShot" scoped="" ref="0x7daf4110"/>
        <function-ref name="stop" scoped="" ref="0x7daf43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7dae1e90" loc="37:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7dae1e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7dae74f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7dae77d0" loc="38:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7dae77d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7dae7f20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7dae6338"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7dae6138"/>
        <function-ref name="overflow" scoped="" ref="0x7dae6538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataTimer" ref="0x7cb1a730" loc="47:../../../tos/lib/data/timer/DataTimerP.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC.DataTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataTimer" scoped="" ref="0x7cb1a730"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataTimer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba1930"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="expired" scoped="" ref="0x7cb19318"/>
        <function-ref name="start" scoped="" ref="0x7cb1ad58"/>
        <function-ref name="stop" scoped="" ref="0x7cb19098"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7cb1a388" loc="46:../../../tos/lib/data/timer/DataTimerP.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC.DataTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7cb1a388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7cb1a560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7cb19610" loc="50:../../../tos/lib/data/timer/DataTimerP.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC.DataTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7cb19610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7cb18f10"/>
        <function-ref name="fired" scoped="" ref="0x7cb18330"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7cb188d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7cb186f0"/>
        <function-ref name="getdt" scoped="" ref="0x7cb162e8"/>
        <function-ref name="gett0" scoped="" ref="0x7cb16108"/>
        <function-ref name="isRunning" scoped="" ref="0x7cb18510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7cb19c38"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7cb18bf0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7cb19eb8"/>
        <function-ref name="stop" scoped="" ref="0x7cb18150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dabb730" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.ComposeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dabb730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dabb908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7dabba68" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.ComposeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7dabba68"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7dabbc40"/>
        <function-ref name="clear" scoped="" ref="0x7dabbd20"/>
        <function-ref name="toggle" scoped="" ref="0x7dabbe00"/>
        <function-ref name="get" scoped="" ref="0x7dabbee0"/>
        <function-ref name="assign" scoped="" ref="0x7dab9010"/>
        <function-ref name="setAll" scoped="" ref="0x7dab90f0"/>
        <function-ref name="set" scoped="" ref="0x7dab91d0"/>
        <function-ref name="size" scoped="" ref="0x7dab92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dab8090" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.SalvageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dab8090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dab8268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7dab83c8" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.SalvageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7dab83c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7dab85a0"/>
        <function-ref name="clear" scoped="" ref="0x7dab8680"/>
        <function-ref name="toggle" scoped="" ref="0x7dab8760"/>
        <function-ref name="get" scoped="" ref="0x7dab8840"/>
        <function-ref name="assign" scoped="" ref="0x7dab8920"/>
        <function-ref name="setAll" scoped="" ref="0x7dab8a00"/>
        <function-ref name="set" scoped="" ref="0x7dab8ae0"/>
        <function-ref name="size" scoped="" ref="0x7dab8bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7daa9bb0" loc="43:../../../tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7daa9bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7daa9d88"/>
        <function-ref name="payloadLength" scoped="" ref="0x7daa9e68"/>
        <function-ref name="getPayload" scoped="" ref="0x7daa8010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7daa80f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7daa81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SubPacket" ref="0x7daa8350" loc="44:../../../tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7daa8350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7daa8528"/>
        <function-ref name="payloadLength" scoped="" ref="0x7daa8608"/>
        <function-ref name="getPayload" scoped="" ref="0x7daa86e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7daa87c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7daa88a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7da9dc00" loc="51:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7da9dc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7da9ddd8"/>
        <function-ref name="getPayload" scoped="" ref="0x7da9deb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da9c010"/>
        <function-ref name="cancel" scoped="" ref="0x7da9c0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7da9c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7da9c5d8" loc="52:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7da9c5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7da9c7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketEngineClient" ref="0x7da9b5d0" loc="54:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngineClient" scoped="" ref="0x7da9b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngineClient"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eaa0290"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7da9b7a8"/>
        <function-ref name="defaultLowerType" scoped="" ref="0x7da9b888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7daa0010" loc="45:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7daa0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7daa01e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7daa1100" loc="43:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7daa1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eaa0290"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7daa12d8"/>
        <function-ref name="getPayload" scoped="" ref="0x7daa13b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7daa1498"/>
        <function-ref name="cancel" scoped="" ref="0x7daa1578"/>
        <function-ref name="sendDone" scoped="" ref="0x7daa1658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7daa0330" loc="46:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7daa0330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7daa0508"/>
        <function-ref name="payloadLength" scoped="" ref="0x7daa05e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7daa06c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7daa07a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7daa0888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketWaitList" ref="0x7da9fe08" loc="48:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketWaitList" scoped="" ref="0x7da9fe08"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7da9d6c8"/>
        <function-ref name="next" scoped="" ref="0x7da9d448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngine" ref="0x7daa0c68" loc="47:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngine" scoped="" ref="0x7daa0c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7daa0e40"/>
        <function-ref name="send" scoped="" ref="0x7daa0f20"/>
        <function-ref name="receive" scoped="" ref="0x7da9f018"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7da9f0f8"/>
        <function-ref name="sendAdded" scoped="" ref="0x7da9f1d8"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7da9f2b8"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7da9f398"/>
        <function-ref name="packet" scoped="" ref="0x7da9f478"/>
        <function-ref name="sendDone" scoped="" ref="0x7da9f558"/>
        <function-ref name="drop" scoped="" ref="0x7da9f638"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7da9f718"/>
        <function-ref name="waitList" scoped="" ref="0x7da9f7f8"/>
        <function-ref name="setUpperType" scoped="" ref="0x7da9f8d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7daa1a30" loc="44:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7daa1a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7daa1c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7da9cbb8" loc="53:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7da9cbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7da9cd90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7da9ce70"/>
        <function-ref name="getPayload" scoped="" ref="0x7da9b010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da9b0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7da9b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7daa29f8" loc="42:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7daa29f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7daa2bd0"/>
        <function-ref name="stop" scoped="" ref="0x7daa2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7da98d70" loc="32:../../../tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="PacketEngineC.SendQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7da98d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ea92af8"/>
              <typename><typedef-ref name="packet_send_entry_t" ref="0x7ea92d48"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7da963c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7da99830" loc="31:../../../tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="PacketEngineC.SendQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7da99830"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ea92af8"/>
            <typename><typedef-ref name="packet_send_entry_t" ref="0x7ea92d48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7da98868"/>
        <function-ref name="evicted" scoped="" ref="0x7da98308"/>
        <function-ref name="insert" scoped="" ref="0x7da98048"/>
        <function-ref name="flush" scoped="" ref="0x7da98b08"/>
        <function-ref name="lookup" scoped="" ref="0x7da985a8"/>
        <function-ref name="size" scoped="" ref="0x7da99e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ca9f238" loc="69:../../../tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="PacketEngineC.SendQueueC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ca9f238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ca9f410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7ca9db40" loc="72:../../../tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="PacketEngineC.SendQueueC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7ca9db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ea92af8"/>
              <typename><typedef-ref name="packet_send_entry_t" ref="0x7ea92d48"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7ca9b1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7ca9f5e0" loc="70:../../../tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="PacketEngineC.SendQueueC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7ca9f5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ea92af8"/>
            <typename><typedef-ref name="packet_send_entry_t" ref="0x7ea92d48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7ca9d638"/>
        <function-ref name="evicted" scoped="" ref="0x7ca9d0d8"/>
        <function-ref name="insert" scoped="" ref="0x7ca9fde8"/>
        <function-ref name="flush" scoped="" ref="0x7ca9d8d8"/>
        <function-ref name="lookup" scoped="" ref="0x7ca9d378"/>
        <function-ref name="size" scoped="" ref="0x7ca9fc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7da945e0" loc="42:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="PacketEngineC.ReceivePoolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7da945e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
            <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7da7a490"/>
        <function-ref name="maxSize" scoped="" ref="0x7da7a010"/>
        <function-ref name="empty" scoped="" ref="0x7da94c08"/>
        <function-ref name="put" scoped="" ref="0x7da7a1f0"/>
        <function-ref name="size" scoped="" ref="0x7da94de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7ca8c9d0" loc="56:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="PacketEngineC.ReceivePoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7ca8c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
            <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ca8b850"/>
        <function-ref name="maxSize" scoped="" ref="0x7ca8b3d0"/>
        <function-ref name="empty" scoped="" ref="0x7ca8b010"/>
        <function-ref name="put" scoped="" ref="0x7ca8b5b0"/>
        <function-ref name="size" scoped="" ref="0x7ca8b1f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ca8c628" loc="55:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="PacketEngineC.ReceivePoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ca8c628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ca8c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7da79408" loc="42:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="PacketEngineC.SendPoolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7da79408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
            <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7da782b0"/>
        <function-ref name="maxSize" scoped="" ref="0x7da79df0"/>
        <function-ref name="empty" scoped="" ref="0x7da79a30"/>
        <function-ref name="put" scoped="" ref="0x7da78010"/>
        <function-ref name="size" scoped="" ref="0x7da79c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7ca828d8" loc="56:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="PacketEngineC.SendPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7ca828d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
            <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ca81768"/>
        <function-ref name="maxSize" scoped="" ref="0x7ca812e8"/>
        <function-ref name="empty" scoped="" ref="0x7ca82f00"/>
        <function-ref name="put" scoped="" ref="0x7ca814c8"/>
        <function-ref name="size" scoped="" ref="0x7ca81108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ca82530" loc="55:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="PacketEngineC.SendPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ca82530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ca82708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7da78da8" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="PacketEngineC.SendStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7da78da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7da76010"/>
        <function-ref name="toIdle" scoped="" ref="0x7da760f0"/>
        <function-ref name="isState" scoped="" ref="0x7da761d0"/>
        <function-ref name="isIdle" scoped="" ref="0x7da762b0"/>
        <function-ref name="requestState" scoped="" ref="0x7da76390"/>
        <function-ref name="forceState" scoped="" ref="0x7da76470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7da75100" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="PacketEngineC.SendBackoffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7da75100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7da74a10"/>
        <function-ref name="fired" scoped="" ref="0x7da75e08"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7da743d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7da741f0"/>
        <function-ref name="getdt" scoped="" ref="0x7da74dd0"/>
        <function-ref name="gett0" scoped="" ref="0x7da74bf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7da74010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7da75728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7da746f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7da759a8"/>
        <function-ref name="stop" scoped="" ref="0x7da75c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7caa9520" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7caa9520"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7caa96f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7caa97d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7caa98b8"/>
        <function-ref name="cancel" scoped="" ref="0x7caa9998"/>
        <function-ref name="sendDone" scoped="" ref="0x7caa9a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7caa9bb8" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7caa9bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7caa9d90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7caa9e70"/>
        <function-ref name="getPayload" scoped="" ref="0x7caa8010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7caa80f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7caa81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7caa8310" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7caa8310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7caa84e8"/>
        <function-ref name="source" scoped="" ref="0x7caa85c8"/>
        <function-ref name="address" scoped="" ref="0x7caa86a8"/>
        <function-ref name="destination" scoped="" ref="0x7caa8788"/>
        <function-ref name="setSource" scoped="" ref="0x7caa8868"/>
        <function-ref name="setDestination" scoped="" ref="0x7caa8948"/>
        <function-ref name="type" scoped="" ref="0x7caa8a28"/>
        <function-ref name="setType" scoped="" ref="0x7caa8b08"/>
        <function-ref name="isForMe" scoped="" ref="0x7caa8be8"/>
        <function-ref name="setGroup" scoped="" ref="0x7caa8cc8"/>
        <function-ref name="localGroup" scoped="" ref="0x7caa8da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7caa8f08" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7caa8f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7caa70f0"/>
        <function-ref name="noAck" scoped="" ref="0x7caa71d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7caa72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ca6a0c8" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7ca6a0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ca6a2a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ca6a380"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ca6a460"/>
        <function-ref name="cancel" scoped="" ref="0x7ca6a540"/>
        <function-ref name="sendDone" scoped="" ref="0x7ca6a620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7ca6a790" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7ca6a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ca6a968"/>
        <function-ref name="getPayload" scoped="" ref="0x7ca6aa48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ca6ab28"/>
        <function-ref name="cancel" scoped="" ref="0x7ca6ac08"/>
        <function-ref name="sendDone" scoped="" ref="0x7ca6ace8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7ca6ae28" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7ca6ae28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ca69050"/>
        <function-ref name="source" scoped="" ref="0x7ca69130"/>
        <function-ref name="address" scoped="" ref="0x7ca69210"/>
        <function-ref name="destination" scoped="" ref="0x7ca692f0"/>
        <function-ref name="setSource" scoped="" ref="0x7ca693d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7ca694b0"/>
        <function-ref name="type" scoped="" ref="0x7ca69590"/>
        <function-ref name="setType" scoped="" ref="0x7ca69670"/>
        <function-ref name="isForMe" scoped="" ref="0x7ca69750"/>
        <function-ref name="setGroup" scoped="" ref="0x7ca69830"/>
        <function-ref name="localGroup" scoped="" ref="0x7ca69910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7da482f0" loc="35:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7da482f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7da484c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7da485a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da48688"/>
        <function-ref name="cancel" scoped="" ref="0x7da48768"/>
        <function-ref name="sendDone" scoped="" ref="0x7da48848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7da1d868" loc="40:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7da1d868"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7da1da50"/>
        <function-ref name="getPayload" scoped="" ref="0x7da1db30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da1dc10"/>
        <function-ref name="cancel" scoped="" ref="0x7da1dcf0"/>
        <function-ref name="sendDone" scoped="" ref="0x7da1ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7da1d0f8" loc="38:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7da1d0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7da1d2e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7da1d3c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da1d4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7da1d580"/>
        <function-ref name="sendDone" scoped="" ref="0x7da1d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7da1cb08" loc="42:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7da1cb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7da1cce0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7da1cdc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7da1cea0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da1b010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7da1b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7da1b270" loc="161:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7da1b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7da1b448"/>
        <function-ref name="runTask" scoped="" ref="0x7da1b528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7da1b6a8" loc="118:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7da1b6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7da1b880"/>
        <function-ref name="runTask" scoped="" ref="0x7da1b960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7da1df10" loc="41:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7da1df10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7da1c108"/>
        <function-ref name="source" scoped="" ref="0x7da1c1e8"/>
        <function-ref name="address" scoped="" ref="0x7da1c2c8"/>
        <function-ref name="destination" scoped="" ref="0x7da1c3a8"/>
        <function-ref name="setSource" scoped="" ref="0x7da1c488"/>
        <function-ref name="setDestination" scoped="" ref="0x7da1c568"/>
        <function-ref name="type" scoped="" ref="0x7da1c648"/>
        <function-ref name="setType" scoped="" ref="0x7da1c728"/>
        <function-ref name="isForMe" scoped="" ref="0x7da1c808"/>
        <function-ref name="setGroup" scoped="" ref="0x7da1c8e8"/>
        <function-ref name="localGroup" scoped="" ref="0x7da1c9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7caa65e0" loc="39:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7caa65e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7caa67b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7caa6898"/>
        <function-ref name="getPayload" scoped="" ref="0x7caa6978"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7caa6a58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7caa6b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7caa62c8" loc="38:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7caa62c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7caa64a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7caa6c78" loc="40:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7caa6c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7caa6e50"/>
        <function-ref name="source" scoped="" ref="0x7caa4010"/>
        <function-ref name="address" scoped="" ref="0x7caa40f0"/>
        <function-ref name="destination" scoped="" ref="0x7caa41d0"/>
        <function-ref name="setSource" scoped="" ref="0x7caa42b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7caa4390"/>
        <function-ref name="type" scoped="" ref="0x7caa4470"/>
        <function-ref name="setType" scoped="" ref="0x7caa4550"/>
        <function-ref name="isForMe" scoped="" ref="0x7caa4630"/>
        <function-ref name="setGroup" scoped="" ref="0x7caa4710"/>
        <function-ref name="localGroup" scoped="" ref="0x7caa47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketWaitList" ref="0x7da06a60" loc="42:../../../tos/lib/netarch/multihop/PacketProcessorC.nc">
      <component-ref qname="DsrC.SinglePacketProcessorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketWaitList" scoped="" ref="0x7da06a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7da02338"/>
        <function-ref name="next" scoped="" ref="0x7da020b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngine" ref="0x7da07b20" loc="41:../../../tos/lib/netarch/multihop/PacketProcessorC.nc">
      <component-ref qname="DsrC.SinglePacketProcessorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngine" scoped="" ref="0x7da07b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7da07cf8"/>
        <function-ref name="send" scoped="" ref="0x7da07dd8"/>
        <function-ref name="receive" scoped="" ref="0x7da07eb8"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7da06010"/>
        <function-ref name="sendAdded" scoped="" ref="0x7da060f0"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7da061d0"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7da062b0"/>
        <function-ref name="packet" scoped="" ref="0x7da06390"/>
        <function-ref name="sendDone" scoped="" ref="0x7da06470"/>
        <function-ref name="drop" scoped="" ref="0x7da06550"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7da06630"/>
        <function-ref name="waitList" scoped="" ref="0x7da06710"/>
        <function-ref name="setUpperType" scoped="" ref="0x7da067f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketWaitList" ref="0x7d9ff280" loc="42:../../../tos/lib/netarch/multihop/PacketProcessorC.nc">
      <component-ref qname="DsrC.DsrPacketProcessorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketWaitList" scoped="" ref="0x7d9ff280"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d9ffb28"/>
        <function-ref name="next" scoped="" ref="0x7d9ff8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngine" ref="0x7da00338" loc="41:../../../tos/lib/netarch/multihop/PacketProcessorC.nc">
      <component-ref qname="DsrC.DsrPacketProcessorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngine" scoped="" ref="0x7da00338"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7da00510"/>
        <function-ref name="send" scoped="" ref="0x7da005f0"/>
        <function-ref name="receive" scoped="" ref="0x7da006d0"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7da007b0"/>
        <function-ref name="sendAdded" scoped="" ref="0x7da00890"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7da00970"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7da00a50"/>
        <function-ref name="packet" scoped="" ref="0x7da00b30"/>
        <function-ref name="sendDone" scoped="" ref="0x7da00c10"/>
        <function-ref name="drop" scoped="" ref="0x7da00cf0"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7da00dd0"/>
        <function-ref name="waitList" scoped="" ref="0x7da00eb0"/>
        <function-ref name="setUpperType" scoped="" ref="0x7d9ff010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7d9f7548" loc="50:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7d9f7548"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eaa0290"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d9f7720"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9f7800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9f78e0"/>
        <function-ref name="cancel" scoped="" ref="0x7d9f79c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d9f7aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7d9fa990" loc="42:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7d9fa990"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d9fab68"/>
        <function-ref name="destination" scoped="" ref="0x7d9fac48"/>
        <function-ref name="setSource" scoped="" ref="0x7d9fad28"/>
        <function-ref name="setDestination" scoped="" ref="0x7d9fae08"/>
        <function-ref name="isForMe" scoped="" ref="0x7d9faee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7d9f7ea8" loc="51:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7d9f7ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d9f50c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7d9f8810" loc="46:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7d9f8810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7d9f89e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d9f9330" loc="43:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d9f9330"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eaa0290"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d9f9508"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9f95e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9f96c8"/>
        <function-ref name="cancel" scoped="" ref="0x7d9f97a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7d9f9888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7d9f8258" loc="45:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7d9f8258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d9f8430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d9f8b30" loc="47:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d9f8b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d9f8d08"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d9f8de8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9f8ec8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9f7010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d9f70f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubIntercept" ref="0x7d9f54d0" loc="52:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubIntercept" scoped="" ref="0x7d9f54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7d9f56a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d9f9c60" loc="44:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d9f9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d9f9e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7d9ebe28" loc="52:../../../tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7d9ebe28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eaa0290"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d9ea050"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9ea130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9ea210"/>
        <function-ref name="cancel" scoped="" ref="0x7d9ea2f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d9ea3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7d9f02d8" loc="44:../../../tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7d9f02d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d9f04b0"/>
        <function-ref name="destination" scoped="" ref="0x7d9f0590"/>
        <function-ref name="setSource" scoped="" ref="0x7d9f0670"/>
        <function-ref name="setDestination" scoped="" ref="0x7d9f0750"/>
        <function-ref name="isForMe" scoped="" ref="0x7d9f0830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7d9ea7d8" loc="53:../../../tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7d9ea7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d9ea9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7d9eb158" loc="48:../../../tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7d9eb158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7d9eb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d9f0c48" loc="45:../../../tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d9f0c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eaa0290"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d9f0e20"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9f0f00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9ec010"/>
        <function-ref name="cancel" scoped="" ref="0x7d9ec0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d9ec1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7d9ecb80" loc="47:../../../tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7d9ecb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d9ecd58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d9eb478" loc="49:../../../tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d9eb478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d9eb650"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d9eb730"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9eb810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9eb8f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d9eb9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubIntercept" ref="0x7d9eadc0" loc="54:../../../tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubIntercept" scoped="" ref="0x7d9eadc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7d9e8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d9ec5a8" loc="46:../../../tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d9ec5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d9ec780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7d9e8188" loc="55:../../../tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7d9e8188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d9e8360"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d9e8440"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9e8520"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9e8600"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d9e86e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7d9e8830" loc="56:../../../tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d9e8830"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d9e8a08"/>
        <function-ref name="source" scoped="" ref="0x7d9e8ae8"/>
        <function-ref name="address" scoped="" ref="0x7d9e8bc8"/>
        <function-ref name="destination" scoped="" ref="0x7d9e8ca8"/>
        <function-ref name="setSource" scoped="" ref="0x7d9e8d88"/>
        <function-ref name="setDestination" scoped="" ref="0x7d9e8e68"/>
        <function-ref name="type" scoped="" ref="0x7d9e7010"/>
        <function-ref name="setType" scoped="" ref="0x7d9e70f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d9e71d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7d9e72b0"/>
        <function-ref name="localGroup" scoped="" ref="0x7d9e7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7d9a08c0" loc="44:../../../tos/lib/netarch/single/SingleProcessorSenderC.nc">
      <component-ref qname="DsrC.DsrSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7d9a08c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d9a0a98"/>
        <function-ref name="destination" scoped="" ref="0x7d9a0b78"/>
        <function-ref name="setSource" scoped="" ref="0x7d9a0c58"/>
        <function-ref name="setDestination" scoped="" ref="0x7d9a0d38"/>
        <function-ref name="isForMe" scoped="" ref="0x7d9a0e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d99fbe8" loc="46:../../../tos/lib/netarch/single/SingleProcessorSenderC.nc">
      <component-ref qname="DsrC.DsrSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d99fbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d99fdc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d99fea0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d99e010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d99e0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d99e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d9a0228" loc="43:../../../tos/lib/netarch/single/SingleProcessorSenderC.nc">
      <component-ref qname="DsrC.DsrSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d9a0228"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d9a0400"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9a04e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9a05c0"/>
        <function-ref name="cancel" scoped="" ref="0x7d9a06a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d9a0780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d99f010" loc="45:../../../tos/lib/netarch/single/SingleProcessorSenderC.nc">
      <component-ref qname="DsrC.DsrSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d99f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d99f1e8"/>
        <function-ref name="source" scoped="" ref="0x7d99f2c8"/>
        <function-ref name="address" scoped="" ref="0x7d99f3a8"/>
        <function-ref name="destination" scoped="" ref="0x7d99f488"/>
        <function-ref name="setSource" scoped="" ref="0x7d99f568"/>
        <function-ref name="setDestination" scoped="" ref="0x7d99f648"/>
        <function-ref name="type" scoped="" ref="0x7d99f728"/>
        <function-ref name="setType" scoped="" ref="0x7d99f808"/>
        <function-ref name="isForMe" scoped="" ref="0x7d99f8e8"/>
        <function-ref name="setGroup" scoped="" ref="0x7d99f9c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7d99faa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ca2cc00" loc="43:../../../tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="DsrC.DsrSendC.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7ca2cc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ca2cdd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ca2ceb8"/>
        <function-ref name="getPayload" scoped="" ref="0x7ca2b010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ca2b0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ca2b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ca2c568" loc="42:../../../tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="DsrC.DsrSendC.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7ca2c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ca2c740"/>
        <function-ref name="getPayload" scoped="" ref="0x7ca2c820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ca2c900"/>
        <function-ref name="cancel" scoped="" ref="0x7ca2c9e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ca2cac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngineClient" ref="0x7ca276d8" loc="41:../../../tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <component-ref qname="DsrC.DsrSendC.PacketSenderC.PacketEngineClientP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngineClient" scoped="" ref="0x7ca276d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngineClient"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7ca278b0"/>
        <function-ref name="defaultLowerType" scoped="" ref="0x7ca27990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7d99a3b0" loc="43:../../../tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d99a3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d99a588"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d99a668"/>
        <function-ref name="getPayload" scoped="" ref="0x7d99a748"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d99a828"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d99a908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SubPacket" ref="0x7d99aa88" loc="44:../../../tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7d99aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d99ac60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d99ad40"/>
        <function-ref name="getPayload" scoped="" ref="0x7d99ae20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d99af00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d999010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ca25e38" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7ca25e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ca22050"/>
        <function-ref name="getPayload" scoped="" ref="0x7ca22130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ca22210"/>
        <function-ref name="cancel" scoped="" ref="0x7ca222f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ca223d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ca22510" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7ca22510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ca226e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ca227c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7ca228a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ca22988"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ca22a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ca22ba8" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7ca22ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ca22d80"/>
        <function-ref name="source" scoped="" ref="0x7ca22e60"/>
        <function-ref name="address" scoped="" ref="0x7ca21010"/>
        <function-ref name="destination" scoped="" ref="0x7ca210f0"/>
        <function-ref name="setSource" scoped="" ref="0x7ca211d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7ca212b0"/>
        <function-ref name="type" scoped="" ref="0x7ca21390"/>
        <function-ref name="setType" scoped="" ref="0x7ca21470"/>
        <function-ref name="isForMe" scoped="" ref="0x7ca21550"/>
        <function-ref name="setGroup" scoped="" ref="0x7ca21630"/>
        <function-ref name="localGroup" scoped="" ref="0x7ca21710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7ca21870" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7ca21870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ca21a48"/>
        <function-ref name="noAck" scoped="" ref="0x7ca21b28"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ca21c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ca1cb10" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7ca1cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ca1cce8"/>
        <function-ref name="getPayload" scoped="" ref="0x7ca1cdc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ca1cea8"/>
        <function-ref name="cancel" scoped="" ref="0x7ca18010"/>
        <function-ref name="sendDone" scoped="" ref="0x7ca180f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7ca18260" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7ca18260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ca18438"/>
        <function-ref name="getPayload" scoped="" ref="0x7ca18518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ca185f8"/>
        <function-ref name="cancel" scoped="" ref="0x7ca186d8"/>
        <function-ref name="sendDone" scoped="" ref="0x7ca187b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7ca188f8" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7ca188f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ca18ad0"/>
        <function-ref name="source" scoped="" ref="0x7ca18bb0"/>
        <function-ref name="address" scoped="" ref="0x7ca18c90"/>
        <function-ref name="destination" scoped="" ref="0x7ca18d70"/>
        <function-ref name="setSource" scoped="" ref="0x7ca18e50"/>
        <function-ref name="setDestination" scoped="" ref="0x7ca17010"/>
        <function-ref name="type" scoped="" ref="0x7ca170f0"/>
        <function-ref name="setType" scoped="" ref="0x7ca171d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7ca172b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7ca17390"/>
        <function-ref name="localGroup" scoped="" ref="0x7ca17470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ca20f28" loc="39:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7ca20f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ca1f110"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ca1f1f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ca1f2d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ca1f3b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ca1f490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ca20c10" loc="38:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7ca20c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ca20de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ca1f5d0" loc="40:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7ca1f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ca1f7a8"/>
        <function-ref name="source" scoped="" ref="0x7ca1f888"/>
        <function-ref name="address" scoped="" ref="0x7ca1f968"/>
        <function-ref name="destination" scoped="" ref="0x7ca1fa48"/>
        <function-ref name="setSource" scoped="" ref="0x7ca1fb28"/>
        <function-ref name="setDestination" scoped="" ref="0x7ca1fc08"/>
        <function-ref name="type" scoped="" ref="0x7ca1fce8"/>
        <function-ref name="setType" scoped="" ref="0x7ca1fdc8"/>
        <function-ref name="isForMe" scoped="" ref="0x7ca1fea8"/>
        <function-ref name="setGroup" scoped="" ref="0x7ca1e010"/>
        <function-ref name="localGroup" scoped="" ref="0x7ca1e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ce5f150" loc="43:../../../tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="MultihopLightAppC.SenderC.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7ce5f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ce5f328"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ce5f408"/>
        <function-ref name="getPayload" scoped="" ref="0x7ce5f4e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ce5f5c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ce5f6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ce609f8" loc="42:../../../tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="MultihopLightAppC.SenderC.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7ce609f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ce60bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ce60cb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ce60d90"/>
        <function-ref name="cancel" scoped="" ref="0x7ce60e70"/>
        <function-ref name="sendDone" scoped="" ref="0x7ce5f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngineClient" ref="0x7ca09730" loc="41:../../../tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <component-ref qname="MultihopLightAppC.SenderC.PacketSenderC.PacketEngineClientP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngineClient" scoped="" ref="0x7ca09730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngineClient"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7ca09908"/>
        <function-ref name="defaultLowerType" scoped="" ref="0x7ca099e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7d991ef8" loc="44:../../../tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="MultihopLightAppC.ReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7d991ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d9900e0"/>
        <function-ref name="destination" scoped="" ref="0x7d9901c0"/>
        <function-ref name="setSource" scoped="" ref="0x7d9902a0"/>
        <function-ref name="setDestination" scoped="" ref="0x7d990380"/>
        <function-ref name="isForMe" scoped="" ref="0x7d990460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d983230" loc="46:../../../tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="MultihopLightAppC.ReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d983230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d983408"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d9834e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9835c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9836a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d983788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d991be0" loc="43:../../../tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="MultihopLightAppC.ReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d991be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d991db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d9905a0" loc="45:../../../tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="MultihopLightAppC.ReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d9905a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d990778"/>
        <function-ref name="source" scoped="" ref="0x7d990858"/>
        <function-ref name="address" scoped="" ref="0x7d990938"/>
        <function-ref name="destination" scoped="" ref="0x7d990a18"/>
        <function-ref name="setSource" scoped="" ref="0x7d990af8"/>
        <function-ref name="setDestination" scoped="" ref="0x7d990bd8"/>
        <function-ref name="type" scoped="" ref="0x7d990cb8"/>
        <function-ref name="setType" scoped="" ref="0x7d990d98"/>
        <function-ref name="isForMe" scoped="" ref="0x7d990e78"/>
        <function-ref name="setGroup" scoped="" ref="0x7d983010"/>
        <function-ref name="localGroup" scoped="" ref="0x7d9830f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ca04348" loc="42:../../../tos/lib/netarch/multihop/PacketReceiverC.nc">
      <component-ref qname="MultihopLightAppC.ReceiverC.PacketReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7ca04348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ca04520"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ca04600"/>
        <function-ref name="getPayload" scoped="" ref="0x7ca046e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ca047c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ca048a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ca04030" loc="41:../../../tos/lib/netarch/multihop/PacketReceiverC.nc">
      <component-ref qname="MultihopLightAppC.ReceiverC.PacketReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7ca04030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ca04208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7d97f010" loc="45:../../../tos/lib/netarch/single/SingleInterceptorC.nc">
      <component-ref qname="MultihopLightAppC.InterceptorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7d97f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d97f1e8"/>
        <function-ref name="destination" scoped="" ref="0x7d97f2c8"/>
        <function-ref name="setSource" scoped="" ref="0x7d97f3a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7d97f488"/>
        <function-ref name="isForMe" scoped="" ref="0x7d97f568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7d980c30" loc="44:../../../tos/lib/netarch/single/SingleInterceptorC.nc">
      <component-ref qname="MultihopLightAppC.InterceptorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7d980c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7d980e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d974310" loc="47:../../../tos/lib/netarch/single/SingleInterceptorC.nc">
      <component-ref qname="MultihopLightAppC.InterceptorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d974310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d9744e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d9745c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9746a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d974788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d974868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d97f6a8" loc="46:../../../tos/lib/netarch/single/SingleInterceptorC.nc">
      <component-ref qname="MultihopLightAppC.InterceptorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d97f6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d97f880"/>
        <function-ref name="source" scoped="" ref="0x7d97f960"/>
        <function-ref name="address" scoped="" ref="0x7d97fa40"/>
        <function-ref name="destination" scoped="" ref="0x7d97fb20"/>
        <function-ref name="setSource" scoped="" ref="0x7d97fc00"/>
        <function-ref name="setDestination" scoped="" ref="0x7d97fce0"/>
        <function-ref name="type" scoped="" ref="0x7d97fdc0"/>
        <function-ref name="setType" scoped="" ref="0x7d97fea0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d974010"/>
        <function-ref name="setGroup" scoped="" ref="0x7d9740f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7d9741d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7ca00bd0" loc="42:../../../tos/lib/netarch/multihop/PacketInterceptorC.nc">
      <component-ref qname="MultihopLightAppC.InterceptorC.PacketInterceptorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7ca00bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7ca00da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ca00ee8" loc="43:../../../tos/lib/netarch/multihop/PacketInterceptorC.nc">
      <component-ref qname="MultihopLightAppC.InterceptorC.PacketInterceptorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7ca00ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7c9f30e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7c9f31c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7c9f32a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7c9f3380"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7c9f3460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d9737b0" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="MultihopLightAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d9737b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d9700d8"/>
        <function-ref name="fired" scoped="" ref="0x7d9714c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d971a68"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d971888"/>
        <function-ref name="getdt" scoped="" ref="0x7d970498"/>
        <function-ref name="gett0" scoped="" ref="0x7d9702b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7d9716a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d973dd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d971d88"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d971068"/>
        <function-ref name="stop" scoped="" ref="0x7d9712e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d96b1f8" loc="19:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoC.nc">
      <component-ref qname="MultihopLightAppC.PhotoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d96b1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d96b820"/>
        <function-ref name="readDone" scoped="" ref="0x7d96ba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d964100" loc="3:/opt/tinyos-2.x/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <component-ref qname="ArbitratedPhotoDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d964100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d964728"/>
        <function-ref name="readDone" scoped="" ref="0x7d964908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadTemp" ref="0x7d95c450" loc="8:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadTemp" scoped="" ref="0x7d95c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d95ca78"/>
        <function-ref name="readDone" scoped="" ref="0x7d95cc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PhotoResource" ref="0x7d95e158" loc="5:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoResource" scoped="" ref="0x7d95e158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d95e330"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d95e410"/>
        <function-ref name="request" scoped="" ref="0x7d95e4f0"/>
        <function-ref name="granted" scoped="" ref="0x7d95e5d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7d95e6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TempResource" ref="0x7d95eae0" loc="6:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x7d95eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d95ecb8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d95ed98"/>
        <function-ref name="request" scoped="" ref="0x7d95ee78"/>
        <function-ref name="granted" scoped="" ref="0x7d95d010"/>
        <function-ref name="isOwner" scoped="" ref="0x7d95d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadPhoto" ref="0x7d95d5b8" loc="7:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadPhoto" scoped="" ref="0x7d95d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d95dbe0"/>
        <function-ref name="readDone" scoped="" ref="0x7d95ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x7d95adc0" loc="20:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x7d95adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d956010"/>
        <function-ref name="isInput" scoped="" ref="0x7d9560f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d9561d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9562b0"/>
        <function-ref name="get" scoped="" ref="0x7d956390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d956470"/>
        <function-ref name="set" scoped="" ref="0x7d956550"/>
        <function-ref name="clr" scoped="" ref="0x7d956630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7d9491c0" loc="34:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7d9491c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d949418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x7d955af8" loc="23:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x7d955af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d955cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7d955db0"/>
        <function-ref name="toggle" scoped="" ref="0x7d955e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7d954010"/>
        <function-ref name="get" scoped="" ref="0x7d9540f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9541d0"/>
        <function-ref name="set" scoped="" ref="0x7d9542b0"/>
        <function-ref name="clr" scoped="" ref="0x7d954390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x7d953808" loc="26:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x7d953808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9539e0"/>
        <function-ref name="isInput" scoped="" ref="0x7d953ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7d953ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d953c80"/>
        <function-ref name="get" scoped="" ref="0x7d953d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d953e40"/>
        <function-ref name="set" scoped="" ref="0x7d953f20"/>
        <function-ref name="clr" scoped="" ref="0x7d952018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7d949c30" loc="37:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7d949c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d949e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7d94b360" loc="39:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7d94b360"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d94b538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7d951508" loc="29:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7d951508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9516e0"/>
        <function-ref name="isInput" scoped="" ref="0x7d9517c0"/>
        <function-ref name="toggle" scoped="" ref="0x7d9518a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d951980"/>
        <function-ref name="get" scoped="" ref="0x7d951a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d951b40"/>
        <function-ref name="set" scoped="" ref="0x7d951c20"/>
        <function-ref name="clr" scoped="" ref="0x7d951d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x7d9567a8" loc="21:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x7d9567a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d956980"/>
        <function-ref name="isInput" scoped="" ref="0x7d956a60"/>
        <function-ref name="toggle" scoped="" ref="0x7d956b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7d956c20"/>
        <function-ref name="get" scoped="" ref="0x7d956d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d956de0"/>
        <function-ref name="set" scoped="" ref="0x7d956ec0"/>
        <function-ref name="clr" scoped="" ref="0x7d955010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x7d954508" loc="24:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x7d954508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9546e0"/>
        <function-ref name="isInput" scoped="" ref="0x7d9547c0"/>
        <function-ref name="toggle" scoped="" ref="0x7d9548a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d954980"/>
        <function-ref name="get" scoped="" ref="0x7d954a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d954b40"/>
        <function-ref name="set" scoped="" ref="0x7d954c20"/>
        <function-ref name="clr" scoped="" ref="0x7d954d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7d949590" loc="35:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7d949590"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d949768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x7d952190" loc="27:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x7d952190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d952368"/>
        <function-ref name="isInput" scoped="" ref="0x7d952448"/>
        <function-ref name="toggle" scoped="" ref="0x7d952528"/>
        <function-ref name="isOutput" scoped="" ref="0x7d952608"/>
        <function-ref name="get" scoped="" ref="0x7d9526e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9527c8"/>
        <function-ref name="set" scoped="" ref="0x7d9528a8"/>
        <function-ref name="clr" scoped="" ref="0x7d952988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7d94b6b0" loc="40:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7d94b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d94b888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7d951e78" loc="30:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7d951e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d950070"/>
        <function-ref name="isInput" scoped="" ref="0x7d950150"/>
        <function-ref name="toggle" scoped="" ref="0x7d950230"/>
        <function-ref name="isOutput" scoped="" ref="0x7d950310"/>
        <function-ref name="get" scoped="" ref="0x7d9503f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9504d0"/>
        <function-ref name="set" scoped="" ref="0x7d9505b0"/>
        <function-ref name="clr" scoped="" ref="0x7d950690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x7d955188" loc="22:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x7d955188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d955360"/>
        <function-ref name="isInput" scoped="" ref="0x7d955440"/>
        <function-ref name="toggle" scoped="" ref="0x7d955520"/>
        <function-ref name="isOutput" scoped="" ref="0x7d955600"/>
        <function-ref name="get" scoped="" ref="0x7d9556e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9557c0"/>
        <function-ref name="set" scoped="" ref="0x7d9558a0"/>
        <function-ref name="clr" scoped="" ref="0x7d955980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x7d954e78" loc="25:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x7d954e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d953070"/>
        <function-ref name="isInput" scoped="" ref="0x7d953150"/>
        <function-ref name="toggle" scoped="" ref="0x7d953230"/>
        <function-ref name="isOutput" scoped="" ref="0x7d953310"/>
        <function-ref name="get" scoped="" ref="0x7d9533f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9534d0"/>
        <function-ref name="set" scoped="" ref="0x7d9535b0"/>
        <function-ref name="clr" scoped="" ref="0x7d953690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7d9498e0" loc="36:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7d9498e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d949ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7d952b00" loc="28:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7d952b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d952cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7d952db8"/>
        <function-ref name="toggle" scoped="" ref="0x7d952e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7d951010"/>
        <function-ref name="get" scoped="" ref="0x7d9510f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9511d0"/>
        <function-ref name="set" scoped="" ref="0x7d9512b0"/>
        <function-ref name="clr" scoped="" ref="0x7d951390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7d94b010" loc="38:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7d94b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d94b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7d94ba00" loc="41:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7d94ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d94bbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7d950808" loc="31:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7d950808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9509e0"/>
        <function-ref name="isInput" scoped="" ref="0x7d950ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7d950ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d950c80"/>
        <function-ref name="get" scoped="" ref="0x7d950d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d950e40"/>
        <function-ref name="set" scoped="" ref="0x7d950f20"/>
        <function-ref name="clr" scoped="" ref="0x7d94d018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7d94ac80" loc="18:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7d94ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d94ae58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7d9456b0" loc="21:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7d9456b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d945888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7d945d50" loc="23:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7d945d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d945f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7d945010" loc="19:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7d945010"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d9451e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7d9430b0" loc="24:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7d9430b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d943288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7d945360" loc="20:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7d945360"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d945538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7d945a00" loc="22:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7d945a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d945bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7d943400" loc="25:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7d943400"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d9435d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempAdc" ref="0x7d9341b8" loc="17:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempAdc" scoped="" ref="0x7d9341b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7d934390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7d932c68" loc="16:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d932c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7d932e40"/>
        <function-ref name="getChannel" scoped="" ref="0x7d932f20"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7d934018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7d92d2c8" loc="82:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7d92d2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7d92d4b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d92d590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d8ea2e8" loc="86:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d8ea2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d8ea4d0"/>
        <function-ref name="configure" scoped="" ref="0x7d8ea5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7d92d6d0" loc="83:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d92d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d92d8a8"/>
        <function-ref name="requested" scoped="" ref="0x7d92d988"/>
        <function-ref name="granted" scoped="" ref="0x7d92da68"/>
        <function-ref name="isOwner" scoped="" ref="0x7d92db48"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d92dc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d930b60" loc="81:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d930b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d930d48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d930e28"/>
        <function-ref name="request" scoped="" ref="0x7d930f08"/>
        <function-ref name="granted" scoped="" ref="0x7d92d010"/>
        <function-ref name="isOwner" scoped="" ref="0x7d92d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7d92dd68" loc="84:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d92dd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d8ea010"/>
        <function-ref name="userId" scoped="" ref="0x7d8ea0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7c9e5438" loc="34:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7c9e5438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7c9e5610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7c9e5770" loc="35:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7c9e5770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7c9e5948"/>
        <function-ref name="isEmpty" scoped="" ref="0x7c9e5a28"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7c9e5b08"/>
        <function-ref name="dequeue" scoped="" ref="0x7c9e5be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7c9e2030" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7c9e2030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7c9e2218"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7c9e22f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7c9e1010" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7c9e1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7c9e11f8"/>
        <function-ref name="configure" scoped="" ref="0x7c9e12d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7c9e1438" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7c9e1438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7c9e1610"/>
        <function-ref name="isEmpty" scoped="" ref="0x7c9e16f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7c9e17d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7c9e18b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7c9e2438" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7c9e2438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7c9e2610"/>
        <function-ref name="requested" scoped="" ref="0x7c9e26f0"/>
        <function-ref name="granted" scoped="" ref="0x7c9e27d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7c9e28b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7c9e2990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7c9e19f0" loc="62:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7c9e19f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7c9e1bc8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7c9e1ca8"/>
        <function-ref name="led1On" scoped="" ref="0x7c9e1d88"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7c9e1e68"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7c9e0010"/>
        <function-ref name="get" scoped="" ref="0x7c9e00f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7c9e01d0"/>
        <function-ref name="led0On" scoped="" ref="0x7c9e0550"/>
        <function-ref name="set" scoped="" ref="0x7c9e0390"/>
        <function-ref name="led2On" scoped="" ref="0x7c9e02b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7c9e0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7c9e48d0" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7c9e48d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7c9e4ab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7c9e4b98"/>
        <function-ref name="request" scoped="" ref="0x7c9e4c78"/>
        <function-ref name="granted" scoped="" ref="0x7c9e4d58"/>
        <function-ref name="isOwner" scoped="" ref="0x7c9e4e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7c9e2ad0" loc="57:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7c9e2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7c9e2ca8"/>
        <function-ref name="userId" scoped="" ref="0x7c9e2d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7c9e06d0" loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7c9e06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7c9e08a8"/>
        <function-ref name="runTask" scoped="" ref="0x7c9e0988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7d8e7030" loc="82:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7d8e7030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7d8e7218"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d8e72f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d8e6010" loc="86:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d8e6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d8e61f8"/>
        <function-ref name="configure" scoped="" ref="0x7d8e62d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7d8e7438" loc="83:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d8e7438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d8e7610"/>
        <function-ref name="requested" scoped="" ref="0x7d8e76f0"/>
        <function-ref name="granted" scoped="" ref="0x7d8e77d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7d8e78b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d8e7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d8e88c8" loc="81:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d8e88c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d8e8ab0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d8e8b90"/>
        <function-ref name="request" scoped="" ref="0x7d8e8c70"/>
        <function-ref name="granted" scoped="" ref="0x7d8e8d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7d8e8e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7d8e7ad0" loc="84:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d8e7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d8e7ca8"/>
        <function-ref name="userId" scoped="" ref="0x7d8e7d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7c9c52d0" loc="34:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7c9c52d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7c9c54a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7c9c5608" loc="35:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7c9c5608"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7c9c57e0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7c9c58c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7c9c59a0"/>
        <function-ref name="dequeue" scoped="" ref="0x7c9c5a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7c9c4ee0" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7c9c4ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7c9c20e0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7c9c21c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7c9c2e58" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7c9c2e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7c9c1050"/>
        <function-ref name="configure" scoped="" ref="0x7c9c1130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7c9c1290" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7c9c1290"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7c9c1468"/>
        <function-ref name="isEmpty" scoped="" ref="0x7c9c1548"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7c9c1628"/>
        <function-ref name="dequeue" scoped="" ref="0x7c9c1708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7c9c2300" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7c9c2300"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7c9c24d8"/>
        <function-ref name="requested" scoped="" ref="0x7c9c25b8"/>
        <function-ref name="granted" scoped="" ref="0x7c9c2698"/>
        <function-ref name="isOwner" scoped="" ref="0x7c9c2778"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7c9c2858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7c9c1848" loc="62:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7c9c1848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7c9c1a20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7c9c1b00"/>
        <function-ref name="led1On" scoped="" ref="0x7c9c1be0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7c9c1cc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7c9c1da0"/>
        <function-ref name="get" scoped="" ref="0x7c9c1e80"/>
        <function-ref name="led1Off" scoped="" ref="0x7c9c0010"/>
        <function-ref name="led0On" scoped="" ref="0x7c9c0390"/>
        <function-ref name="set" scoped="" ref="0x7c9c01d0"/>
        <function-ref name="led2On" scoped="" ref="0x7c9c00f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7c9c02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7c9c47a0" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7c9c47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7c9c4988"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7c9c4a68"/>
        <function-ref name="request" scoped="" ref="0x7c9c4b48"/>
        <function-ref name="granted" scoped="" ref="0x7c9c4c28"/>
        <function-ref name="isOwner" scoped="" ref="0x7c9c4d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7c9c2998" loc="57:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7c9c2998"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7c9c2b70"/>
        <function-ref name="userId" scoped="" ref="0x7c9c2c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7c9c0510" loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7c9c0510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7c9c06e8"/>
        <function-ref name="runTask" scoped="" ref="0x7c9c07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7d8e5cd0" loc="82:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7d8e5cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7d8e5eb8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d8e4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d8e4c98" loc="86:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d8e4c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d8e4e80"/>
        <function-ref name="configure" scoped="" ref="0x7d8e3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7d8e4150" loc="83:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d8e4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d8e4328"/>
        <function-ref name="requested" scoped="" ref="0x7d8e4408"/>
        <function-ref name="granted" scoped="" ref="0x7d8e44e8"/>
        <function-ref name="isOwner" scoped="" ref="0x7d8e45c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d8e46a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d8e5590" loc="81:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d8e5590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d8e5778"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d8e5858"/>
        <function-ref name="request" scoped="" ref="0x7d8e5938"/>
        <function-ref name="granted" scoped="" ref="0x7d8e5a18"/>
        <function-ref name="isOwner" scoped="" ref="0x7d8e5af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7d8e47e8" loc="84:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d8e47e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d8e49c0"/>
        <function-ref name="userId" scoped="" ref="0x7d8e4aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7c7dfd60" loc="34:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7c7dfd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7c7dd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7c7dd170" loc="35:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7c7dd170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7c7dd348"/>
        <function-ref name="isEmpty" scoped="" ref="0x7c7dd428"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7c7dd508"/>
        <function-ref name="dequeue" scoped="" ref="0x7c7dd5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7c7dba28" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7c7dba28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7c7dbc10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7c7dbcf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7c7da9d0" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7c7da9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7c7dabb8"/>
        <function-ref name="configure" scoped="" ref="0x7c7dac98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7c7dadf8" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7c7dadf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7c7d9010"/>
        <function-ref name="isEmpty" scoped="" ref="0x7c7d90f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7c7d91d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7c7d92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7c7dbe30" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7c7dbe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7c7da050"/>
        <function-ref name="requested" scoped="" ref="0x7c7da130"/>
        <function-ref name="granted" scoped="" ref="0x7c7da210"/>
        <function-ref name="isOwner" scoped="" ref="0x7c7da2f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7c7da3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7c7d93f0" loc="62:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7c7d93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7c7d95c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7c7d96a8"/>
        <function-ref name="led1On" scoped="" ref="0x7c7d9788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7c7d9868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7c7d9948"/>
        <function-ref name="get" scoped="" ref="0x7c7d9a28"/>
        <function-ref name="led1Off" scoped="" ref="0x7c7d9b08"/>
        <function-ref name="led0On" scoped="" ref="0x7c7d9e88"/>
        <function-ref name="set" scoped="" ref="0x7c7d9cc8"/>
        <function-ref name="led2On" scoped="" ref="0x7c7d9be8"/>
        <function-ref name="led2Off" scoped="" ref="0x7c7d9da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7c7db2e8" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7c7db2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7c7db4d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7c7db5b0"/>
        <function-ref name="request" scoped="" ref="0x7c7db690"/>
        <function-ref name="granted" scoped="" ref="0x7c7db770"/>
        <function-ref name="isOwner" scoped="" ref="0x7c7db850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7c7da510" loc="57:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7c7da510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7c7da6e8"/>
        <function-ref name="userId" scoped="" ref="0x7c7da7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7c7d8030" loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7c7d8030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7c7d8208"/>
        <function-ref name="runTask" scoped="" ref="0x7c7d82e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7d8e1be0" loc="59:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7d8e1be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7d8e1db8"/>
        <function-ref name="stopDone" scoped="" ref="0x7d8e1e98"/>
        <function-ref name="start" scoped="" ref="0x7d8e0010"/>
        <function-ref name="stop" scoped="" ref="0x7d8e00f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7d8e0230" loc="61:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7d8e0230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7d8e0408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7d8e0548" loc="62:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d8e0548"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d8e0720"/>
        <function-ref name="requested" scoped="" ref="0x7d8e0800"/>
        <function-ref name="granted" scoped="" ref="0x7d8e08e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7d8e09c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d8e0aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7d8e0be0" loc="63:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d8e0be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d8e0db8"/>
        <function-ref name="userId" scoped="" ref="0x7d8e0e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7c7b7ac8" loc="51:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7c7b7ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7c7b7ca0"/>
        <function-ref name="stopDone" scoped="" ref="0x7c7b7d80"/>
        <function-ref name="start" scoped="" ref="0x7c7b7e60"/>
        <function-ref name="stop" scoped="" ref="0x7c7b5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7c7b5150" loc="53:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7c7b5150"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7c7b5328"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7c7b4010" loc="68:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7c7b4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7c7b41e8"/>
        <function-ref name="runTask" scoped="" ref="0x7c7b42c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7c7b5468" loc="54:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7c7b5468"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7c7b5640"/>
        <function-ref name="requested" scoped="" ref="0x7c7b5720"/>
        <function-ref name="granted" scoped="" ref="0x7c7b5800"/>
        <function-ref name="isOwner" scoped="" ref="0x7c7b58e0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7c7b59c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7c7b4448" loc="63:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7c7b4448"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7c7b4620"/>
        <function-ref name="runTask" scoped="" ref="0x7c7b4700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7c7b76d0" loc="50:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7c7b76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7c7b78a8"/>
        <function-ref name="stop" scoped="" ref="0x7c7b7988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7c7b5b00" loc="55:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7c7b5b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7c7b5cd8"/>
        <function-ref name="userId" scoped="" ref="0x7c7b5db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7d8c3bc0" loc="59:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7d8c3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7d8c3d98"/>
        <function-ref name="stopDone" scoped="" ref="0x7d8c3e78"/>
        <function-ref name="start" scoped="" ref="0x7d8c2010"/>
        <function-ref name="stop" scoped="" ref="0x7d8c20f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7d8c2230" loc="61:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7d8c2230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7d8c2408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7d8c2548" loc="62:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d8c2548"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d8c2720"/>
        <function-ref name="requested" scoped="" ref="0x7d8c2800"/>
        <function-ref name="granted" scoped="" ref="0x7d8c28e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7d8c29c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d8c2aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7d8c2be0" loc="63:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d8c2be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d8c2db8"/>
        <function-ref name="userId" scoped="" ref="0x7d8c2e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7c7a9270" loc="51:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7c7a9270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7c7a9448"/>
        <function-ref name="stopDone" scoped="" ref="0x7c7a9528"/>
        <function-ref name="start" scoped="" ref="0x7c7a9608"/>
        <function-ref name="stop" scoped="" ref="0x7c7a96e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7c7a9828" loc="53:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7c7a9828"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7c7a9a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7c7a8668" loc="68:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7c7a8668"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7c7a8840"/>
        <function-ref name="runTask" scoped="" ref="0x7c7a8920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7c7a9b40" loc="54:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7c7a9b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7c7a9d18"/>
        <function-ref name="requested" scoped="" ref="0x7c7a9df8"/>
        <function-ref name="granted" scoped="" ref="0x7c7a9ed8"/>
        <function-ref name="isOwner" scoped="" ref="0x7c7a8010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7c7a80f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7c7a8aa0" loc="63:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7c7a8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7c7a8c78"/>
        <function-ref name="runTask" scoped="" ref="0x7c7a8d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7c7abe30" loc="50:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7c7abe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7c7a9050"/>
        <function-ref name="stop" scoped="" ref="0x7c7a9130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7c7a8230" loc="55:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7c7a8230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7c7a8408"/>
        <function-ref name="userId" scoped="" ref="0x7c7a84e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7d8be340" loc="4:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7d8be340"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7d8be518"/>
        <function-ref name="stopDone" scoped="" ref="0x7d8be5f8"/>
        <function-ref name="start" scoped="" ref="0x7d8be6d8"/>
        <function-ref name="stop" scoped="" ref="0x7d8be7b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x7d8ac590" loc="8:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x7d8ac590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d8ac768"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d8ac848"/>
        <function-ref name="request" scoped="" ref="0x7d8ac928"/>
        <function-ref name="granted" scoped="" ref="0x7d8aca08"/>
        <function-ref name="isOwner" scoped="" ref="0x7d8acae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d8bea20" loc="5:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d8bea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8ac068"/>
        <function-ref name="readDone" scoped="" ref="0x7d8ac258"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x7d8a71a0" loc="32:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x7d8a71a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d8a7378"/>
        <function-ref name="runTask" scoped="" ref="0x7d8a7458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x7d8a9bc8" loc="10:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x7d8a9bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8a9da0"/>
        <function-ref name="isInput" scoped="" ref="0x7d8a9e80"/>
        <function-ref name="toggle" scoped="" ref="0x7d8a8010"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8a80f0"/>
        <function-ref name="get" scoped="" ref="0x7d8a81d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8a82b0"/>
        <function-ref name="set" scoped="" ref="0x7d8a8390"/>
        <function-ref name="clr" scoped="" ref="0x7d8a8470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x7d8a8660" loc="11:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x7d8a8660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8a8c88"/>
        <function-ref name="readDone" scoped="" ref="0x7d8a8e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7d8accb8" loc="9:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d8accb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d8a9650"/>
        <function-ref name="fired" scoped="" ref="0x7d8ab9d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d8a9010"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d8abd98"/>
        <function-ref name="getdt" scoped="" ref="0x7d8a9a10"/>
        <function-ref name="gett0" scoped="" ref="0x7d8a9830"/>
        <function-ref name="isRunning" scoped="" ref="0x7d8abbb8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d8ab2f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d8a9330"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d8ab578"/>
        <function-ref name="stop" scoped="" ref="0x7d8ab7f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7d8a6730" loc="4:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7d8a6730"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7d8a6908"/>
        <function-ref name="stopDone" scoped="" ref="0x7d8a69e8"/>
        <function-ref name="start" scoped="" ref="0x7d8a6ac8"/>
        <function-ref name="stop" scoped="" ref="0x7d8a6ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x7d8a5990" loc="8:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x7d8a5990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d8a5b68"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d8a5c48"/>
        <function-ref name="request" scoped="" ref="0x7d8a5d28"/>
        <function-ref name="granted" scoped="" ref="0x7d8a5e08"/>
        <function-ref name="isOwner" scoped="" ref="0x7d8a5ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d8a6e10" loc="5:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d8a6e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8a5468"/>
        <function-ref name="readDone" scoped="" ref="0x7d8a5658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x7d8a0540" loc="32:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x7d8a0540"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d8a0718"/>
        <function-ref name="runTask" scoped="" ref="0x7d8a07f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x7d8a1010" loc="10:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x7d8a1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8a11e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d8a12c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d8a13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8a1488"/>
        <function-ref name="get" scoped="" ref="0x7d8a1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8a1648"/>
        <function-ref name="set" scoped="" ref="0x7d8a1728"/>
        <function-ref name="clr" scoped="" ref="0x7d8a1808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x7d8a19f8" loc="11:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x7d8a19f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8a0048"/>
        <function-ref name="readDone" scoped="" ref="0x7d8a0228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7d8a30d0" loc="9:/opt/tinyos-2.x/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d8a30d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d8a2a10"/>
        <function-ref name="fired" scoped="" ref="0x7d8a3dd8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d8a23d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d8a21f0"/>
        <function-ref name="getdt" scoped="" ref="0x7d8a2dd0"/>
        <function-ref name="gett0" scoped="" ref="0x7d8a2bf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7d8a2010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d8a36f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d8a26f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d8a3978"/>
        <function-ref name="stop" scoped="" ref="0x7d8a3bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d89eab8" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="PhotoTempDeviceC.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d89eab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d89c3d8"/>
        <function-ref name="fired" scoped="" ref="0x7d89d7e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d89dd80"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d89dba0"/>
        <function-ref name="getdt" scoped="" ref="0x7d89c798"/>
        <function-ref name="gett0" scoped="" ref="0x7d89c5b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7d89d9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d89d100"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d89c0b8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d89d380"/>
        <function-ref name="stop" scoped="" ref="0x7d89d600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d7e05f0" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d7e05f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d7e07c8"/>
        <function-ref name="configure" scoped="" ref="0x7d7e08a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d8985e8" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d8985e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d898c10"/>
        <function-ref name="readDone" scoped="" ref="0x7d898df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7d7e0118" loc="24:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d7e0118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7d7e02f0"/>
        <function-ref name="getChannel" scoped="" ref="0x7d7e03d0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7d7e04b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d893d70" loc="18:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d893d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d8903c0"/>
        <function-ref name="readDone" scoped="" ref="0x7d8905a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7d88a710" loc="19:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7d88a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d88ad58"/>
        <function-ref name="readDone" scoped="" ref="0x7d88d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7d88d5c8" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d88d5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7d88d7a0"/>
        <function-ref name="getChannel" scoped="" ref="0x7d88d880"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7d88d960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7d88dd40" loc="23:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d88dd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d88df18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d889010"/>
        <function-ref name="request" scoped="" ref="0x7d8890f0"/>
        <function-ref name="granted" scoped="" ref="0x7d8891d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7d8892b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d87d428" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d87d428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d87d600"/>
        <function-ref name="configure" scoped="" ref="0x7d87d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7d878d08" loc="47:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7d878d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7d878ee0"/>
        <function-ref name="dataReady" scoped="" ref="0x7d87d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7d87e898" loc="46:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7d87e898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7d87ea70"/>
        <function-ref name="cancel" scoped="" ref="0x7d87eb50"/>
        <function-ref name="dataReady" scoped="" ref="0x7d87ec30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d885ae8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d885ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d885cc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d885da0"/>
        <function-ref name="request" scoped="" ref="0x7d885e80"/>
        <function-ref name="granted" scoped="" ref="0x7d884010"/>
        <function-ref name="isOwner" scoped="" ref="0x7d8840f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d874060" loc="65:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d874060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d874238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7d874c80" loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7d874c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7d874e58"/>
        <function-ref name="dataReady" scoped="" ref="0x7d873010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7d874790" loc="67:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7d874790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7d874968"/>
        <function-ref name="cancel" scoped="" ref="0x7d874a48"/>
        <function-ref name="dataReady" scoped="" ref="0x7d874b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x7d868188" loc="71:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7d868188"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7d868360"/>
        <function-ref name="getAdmux" scoped="" ref="0x7d868440"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7d868520"/>
        <function-ref name="isEnabled" scoped="" ref="0x7d868600"/>
        <function-ref name="enableAdc" scoped="" ref="0x7d8686e0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7d8687c0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7d8688a0"/>
        <function-ref name="isComplete" scoped="" ref="0x7d868980"/>
        <function-ref name="cancel" scoped="" ref="0x7d868a60"/>
        <function-ref name="disableAdc" scoped="" ref="0x7d868b40"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7d868c20"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7d868d00"/>
        <function-ref name="startConversion" scoped="" ref="0x7d868de0"/>
        <function-ref name="isStarted" scoped="" ref="0x7d871010"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7d8710f0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7d8711d0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7d8712b0"/>
        <function-ref name="getValue" scoped="" ref="0x7d871390"/>
        <function-ref name="dataReady" scoped="" ref="0x7d871470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7d874388" loc="66:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7d874388"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d874560"/>
        <function-ref name="stop" scoped="" ref="0x7d874640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7d8715c0" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7d8715c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7d871798"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7d871878"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7d871958"/>
        <function-ref name="actualMicro" scoped="" ref="0x7d871a38"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7d871b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7d84d248" loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7d84d248"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7d84d420"/>
        <function-ref name="getAdmux" scoped="" ref="0x7d84d500"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7d84d5e0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7d84d6c0"/>
        <function-ref name="enableAdc" scoped="" ref="0x7d84d7a0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7d84d880"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7d84d960"/>
        <function-ref name="isComplete" scoped="" ref="0x7d84da40"/>
        <function-ref name="cancel" scoped="" ref="0x7d84db20"/>
        <function-ref name="disableAdc" scoped="" ref="0x7d84dc00"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7d84dce0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7d84ddc0"/>
        <function-ref name="startConversion" scoped="" ref="0x7d84dea0"/>
        <function-ref name="isStarted" scoped="" ref="0x7d84c090"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7d84c170"/>
        <function-ref name="setContinuous" scoped="" ref="0x7d84c250"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7d84c330"/>
        <function-ref name="getValue" scoped="" ref="0x7d84c410"/>
        <function-ref name="dataReady" scoped="" ref="0x7d84c4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7d848a88" loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7d848a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7d848c60"/>
        <function-ref name="getAdmux" scoped="" ref="0x7d848d40"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7d848e20"/>
        <function-ref name="isEnabled" scoped="" ref="0x7d848f00"/>
        <function-ref name="enableAdc" scoped="" ref="0x7d847010"/>
        <function-ref name="setAdmux" scoped="" ref="0x7d8470f0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7d8471d0"/>
        <function-ref name="isComplete" scoped="" ref="0x7d8472b0"/>
        <function-ref name="cancel" scoped="" ref="0x7d847390"/>
        <function-ref name="disableAdc" scoped="" ref="0x7d847470"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7d847550"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7d847630"/>
        <function-ref name="startConversion" scoped="" ref="0x7d847710"/>
        <function-ref name="isStarted" scoped="" ref="0x7d847870"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7d847950"/>
        <function-ref name="setContinuous" scoped="" ref="0x7d847a30"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7d847b10"/>
        <function-ref name="getValue" scoped="" ref="0x7d847bf0"/>
        <function-ref name="dataReady" scoped="" ref="0x7d847cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7d847e40" loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7d847e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7d846050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7d849030" loc="82:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7d849030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7d849218"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d8492f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d82b010" loc="86:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d82b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d82b1f8"/>
        <function-ref name="configure" scoped="" ref="0x7d82b2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7d849438" loc="83:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d849438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d849610"/>
        <function-ref name="requested" scoped="" ref="0x7d8496f0"/>
        <function-ref name="granted" scoped="" ref="0x7d8497d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7d8498b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d849990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d84e8c8" loc="81:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d84e8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d84eab0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d84eb90"/>
        <function-ref name="request" scoped="" ref="0x7d84ec70"/>
        <function-ref name="granted" scoped="" ref="0x7d84ed50"/>
        <function-ref name="isOwner" scoped="" ref="0x7d84ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7d849ad0" loc="84:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d849ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d849ca8"/>
        <function-ref name="userId" scoped="" ref="0x7d849d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7c786128" loc="34:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7c786128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7c786300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7c786460" loc="35:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7c786460"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7c786638"/>
        <function-ref name="isEmpty" scoped="" ref="0x7c786718"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7c7867f8"/>
        <function-ref name="dequeue" scoped="" ref="0x7c7868d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7c785d18" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7c785d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7c785f00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7c784010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7c784ca8" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7c784ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7c784e90"/>
        <function-ref name="configure" scoped="" ref="0x7c782010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7c782170" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7c782170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7c782348"/>
        <function-ref name="isEmpty" scoped="" ref="0x7c782428"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7c782508"/>
        <function-ref name="dequeue" scoped="" ref="0x7c7825e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7c784150" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7c784150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7c784328"/>
        <function-ref name="requested" scoped="" ref="0x7c784408"/>
        <function-ref name="granted" scoped="" ref="0x7c7844e8"/>
        <function-ref name="isOwner" scoped="" ref="0x7c7845c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7c7846a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7c782728" loc="62:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7c782728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7c782900"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7c7829e0"/>
        <function-ref name="led1On" scoped="" ref="0x7c782ac0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7c782ba0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7c782c80"/>
        <function-ref name="get" scoped="" ref="0x7c782d60"/>
        <function-ref name="led1Off" scoped="" ref="0x7c782e40"/>
        <function-ref name="led0On" scoped="" ref="0x7c7811d8"/>
        <function-ref name="set" scoped="" ref="0x7c781018"/>
        <function-ref name="led2On" scoped="" ref="0x7c782f20"/>
        <function-ref name="led2Off" scoped="" ref="0x7c7810f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7c7855d8" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7c7855d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7c7857c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7c7858a0"/>
        <function-ref name="request" scoped="" ref="0x7c785980"/>
        <function-ref name="granted" scoped="" ref="0x7c785a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7c785b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7c7847e8" loc="57:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7c7847e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7c7849c0"/>
        <function-ref name="userId" scoped="" ref="0x7c784aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7c781358" loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7c781358"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7c781530"/>
        <function-ref name="runTask" scoped="" ref="0x7c781610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7d829ad8" loc="62:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7d829ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7d829cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7d829df0" loc="63:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d829df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d828010"/>
        <function-ref name="requested" scoped="" ref="0x7d8280f0"/>
        <function-ref name="granted" scoped="" ref="0x7d8281d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7d8282b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d828390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7d8296e0" loc="60:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7d8296e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d8298b8"/>
        <function-ref name="stop" scoped="" ref="0x7d829998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7d8284d0" loc="64:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d8284d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d8286a8"/>
        <function-ref name="userId" scoped="" ref="0x7d828788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7c761d60" loc="52:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7c761d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7c760010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7c760150" loc="53:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7c760150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7c760328"/>
        <function-ref name="requested" scoped="" ref="0x7c760408"/>
        <function-ref name="granted" scoped="" ref="0x7c7604e8"/>
        <function-ref name="isOwner" scoped="" ref="0x7c7605c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7c7606a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7c761968" loc="50:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7c761968"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7c761b40"/>
        <function-ref name="stop" scoped="" ref="0x7c761c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7c7607e8" loc="54:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7c7607e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7c7609c0"/>
        <function-ref name="userId" scoped="" ref="0x7c760aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d815010" loc="48:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d815010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d815638"/>
        <function-ref name="readDone" scoped="" ref="0x7d815818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7d815e28" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7d815e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d814488"/>
        <function-ref name="readDone" scoped="" ref="0x7d814688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7d813158" loc="53:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7d813158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7d813330"/>
        <function-ref name="getChannel" scoped="" ref="0x7d813410"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7d8134f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x7d8149b0" loc="52:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7d8149b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7d814b88"/>
        <function-ref name="cancel" scoped="" ref="0x7d814c68"/>
        <function-ref name="dataReady" scoped="" ref="0x7d814d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7d80a5d0" loc="103:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7d80a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d80a7a8"/>
        <function-ref name="runTask" scoped="" ref="0x7d80a888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d7ff010" loc="24:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d7ff010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d7ff648"/>
        <function-ref name="readDone" scoped="" ref="0x7d7ff838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7d7ffc98" loc="26:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7d7ffc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d7f22e8"/>
        <function-ref name="readDone" scoped="" ref="0x7d7f24d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7d7f2858" loc="27:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d7f2858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d7f2a40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d7f2b20"/>
        <function-ref name="request" scoped="" ref="0x7d7f2c00"/>
        <function-ref name="granted" scoped="" ref="0x7d7f2ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x7d7f2dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7d7dae30" loc="24:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7d7dae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d7d94b8"/>
        <function-ref name="readDone" scoped="" ref="0x7d7d96a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7d7d9b08" loc="26:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7d7d9b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d7d71e0"/>
        <function-ref name="readDone" scoped="" ref="0x7d7d73d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7d7d7750" loc="27:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d7d7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d7d7938"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d7d7a18"/>
        <function-ref name="request" scoped="" ref="0x7d7d7af8"/>
        <function-ref name="granted" scoped="" ref="0x7d7d7bd8"/>
        <function-ref name="isOwner" scoped="" ref="0x7d7d7cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d7ce668" loc="32:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeC.nc">
      <component-ref qname="DelugeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d7ce668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d7ce840"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d7ce920"/>
        <function-ref name="led1On" scoped="" ref="0x7d7cea00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d7ceae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d7cebc0"/>
        <function-ref name="get" scoped="" ref="0x7d7ceca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7d7ced80"/>
        <function-ref name="led2Off" scoped="" ref="0x7d7cd1d0"/>
        <function-ref name="set" scoped="" ref="0x7d7cee60"/>
        <function-ref name="led0On" scoped="" ref="0x7d7cd010"/>
        <function-ref name="led2On" scoped="" ref="0x7d7cd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadyNotify" ref="0x7d79d468" loc="37:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageC.nc">
      <component-ref qname="DelugeStorageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadyNotify" scoped="" ref="0x7d79d468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7d79dc70"/>
        <function-ref name="enable" scoped="" ref="0x7d79da90"/>
        <function-ref name="notify" scoped="" ref="0x7d79de50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x7d7ad4c0" loc="32:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageC.nc">
      <component-ref qname="DelugeStorageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x7d7ad4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d7ad698"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x7d7ad778"/>
        <function-ref name="computeCrc" scoped="" ref="0x7d7ad858"/>
        <function-ref name="getSize" scoped="" ref="0x7d7ad938"/>
        <function-ref name="readDone" scoped="" ref="0x7d7ada18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x7d7a7828" loc="33:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageC.nc">
      <component-ref qname="DelugeStorageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x7d7a7828"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x7d7a7a00"/>
        <function-ref name="writeDone" scoped="" ref="0x7d7a7ae0"/>
        <function-ref name="erase" scoped="" ref="0x7d7a7bc0"/>
        <function-ref name="eraseDone" scoped="" ref="0x7d7a7ca0"/>
        <function-ref name="write" scoped="" ref="0x7d7a7d80"/>
        <function-ref name="sync" scoped="" ref="0x7d7a7e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x7d7a3010" loc="35:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageC.nc">
      <component-ref qname="DelugeStorageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x7d7a3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getImgDesc" scoped="" ref="0x7d7a31e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeStorage" ref="0x7d7a4b38" loc="34:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageC.nc">
      <component-ref qname="DelugeStorageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeStorage" scoped="" ref="0x7d7a4b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeStorage"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x7d7a4d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7d790400" loc="35:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageP.nc">
      <component-ref qname="DelugeStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7d790400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7d7905d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadyNotify" ref="0x7d77a260" loc="49:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageP.nc">
      <component-ref qname="DelugeStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadyNotify" scoped="" ref="0x7d77a260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7d77aa68"/>
        <function-ref name="enable" scoped="" ref="0x7d77a888"/>
        <function-ref name="notify" scoped="" ref="0x7d77ac48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x7d77d6e8" loc="44:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageP.nc">
      <component-ref qname="DelugeStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x7d77d6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d77d8c0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x7d77d9a0"/>
        <function-ref name="computeCrc" scoped="" ref="0x7d77da80"/>
        <function-ref name="getSize" scoped="" ref="0x7d77db60"/>
        <function-ref name="readDone" scoped="" ref="0x7d77dc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x7d77c100" loc="45:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageP.nc">
      <component-ref qname="DelugeStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x7d77c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x7d77c2d8"/>
        <function-ref name="writeDone" scoped="" ref="0x7d77c3b8"/>
        <function-ref name="erase" scoped="" ref="0x7d77c498"/>
        <function-ref name="eraseDone" scoped="" ref="0x7d77c578"/>
        <function-ref name="write" scoped="" ref="0x7d77c658"/>
        <function-ref name="sync" scoped="" ref="0x7d77c738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x7d77ce40" loc="47:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageP.nc">
      <component-ref qname="DelugeStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x7d77ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getImgDesc" scoped="" ref="0x7d77a050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBlockRead" ref="0x7d791300" loc="33:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageP.nc">
      <component-ref qname="DelugeStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBlockRead" scoped="" ref="0x7d791300"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d7914d8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x7d7915b8"/>
        <function-ref name="computeCrc" scoped="" ref="0x7d791698"/>
        <function-ref name="getSize" scoped="" ref="0x7d791778"/>
        <function-ref name="readDone" scoped="" ref="0x7d791858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d790720" loc="36:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageP.nc">
      <component-ref qname="DelugeStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d790720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d7908f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d7909d8"/>
        <function-ref name="led1On" scoped="" ref="0x7d790ab8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d790b98"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d790c78"/>
        <function-ref name="get" scoped="" ref="0x7d790d58"/>
        <function-ref name="led1Off" scoped="" ref="0x7d790e38"/>
        <function-ref name="led2Off" scoped="" ref="0x7d7801d0"/>
        <function-ref name="set" scoped="" ref="0x7d790f18"/>
        <function-ref name="led0On" scoped="" ref="0x7d780010"/>
        <function-ref name="led2On" scoped="" ref="0x7d7800f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBlockWrite" ref="0x7d791c68" loc="34:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageP.nc">
      <component-ref qname="DelugeStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBlockWrite" scoped="" ref="0x7d791c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x7d791e40"/>
        <function-ref name="writeDone" scoped="" ref="0x7d791f20"/>
        <function-ref name="erase" scoped="" ref="0x7d790018"/>
        <function-ref name="eraseDone" scoped="" ref="0x7d7900f8"/>
        <function-ref name="write" scoped="" ref="0x7d7901d8"/>
        <function-ref name="sync" scoped="" ref="0x7d7902b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45dbVolume" ref="0x7d77d010" loc="40:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageP.nc">
      <component-ref qname="DelugeStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0x7d77d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x7d7c53c8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0x7d77d1e8"/>
        <function-ref name="remap" scoped="" ref="0x7d77d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeStorage" ref="0x7d77cb18" loc="46:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorageP.nc">
      <component-ref qname="DelugeStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeStorage" scoped="" ref="0x7d77cb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeStorage"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x7d77ccf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x7d730d60" loc="25:/opt/tinyos-2.x/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="DelugeStorageC.BlockStorageC_Golden"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x7d730d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x7d573010"/>
        <function-ref name="writeDone" scoped="" ref="0x7d5730f0"/>
        <function-ref name="erase" scoped="" ref="0x7d5731d0"/>
        <function-ref name="eraseDone" scoped="" ref="0x7d5732b0"/>
        <function-ref name="write" scoped="" ref="0x7d573390"/>
        <function-ref name="sync" scoped="" ref="0x7d573470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x7d5735b0" loc="26:/opt/tinyos-2.x/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="DelugeStorageC.BlockStorageC_Golden"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x7d5735b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d573788"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x7d573868"/>
        <function-ref name="computeCrc" scoped="" ref="0x7d573948"/>
        <function-ref name="getSize" scoped="" ref="0x7d573a28"/>
        <function-ref name="readDone" scoped="" ref="0x7d573b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45db" ref="0x7d70cb40" loc="48:/opt/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0x7d70cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0x7d717b10"/>
        <function-ref name="syncDone" scoped="" ref="0x7d70cdf8"/>
        <function-ref name="flushDone" scoped="" ref="0x7d70ced8"/>
        <function-ref name="read" scoped="" ref="0x7d717010"/>
        <function-ref name="writeDone" scoped="" ref="0x7d7170f0"/>
        <function-ref name="copyPage" scoped="" ref="0x7d7171d0"/>
        <function-ref name="erase" scoped="" ref="0x7d7172b0"/>
        <function-ref name="eraseDone" scoped="" ref="0x7d717390"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x7d717470"/>
        <function-ref name="flush" scoped="" ref="0x7d717550"/>
        <function-ref name="syncAll" scoped="" ref="0x7d717630"/>
        <function-ref name="flushAll" scoped="" ref="0x7d717710"/>
        <function-ref name="write" scoped="" ref="0x7d7177f0"/>
        <function-ref name="sync" scoped="" ref="0x7d717950"/>
        <function-ref name="computeCrc" scoped="" ref="0x7d717a30"/>
        <function-ref name="readDone" scoped="" ref="0x7d70cd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x7d71b5d8" loc="44:/opt/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x7d71b5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x7d71b7b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7d71b890"/>
        <function-ref name="erase" scoped="" ref="0x7d71b970"/>
        <function-ref name="eraseDone" scoped="" ref="0x7d71ba50"/>
        <function-ref name="write" scoped="" ref="0x7d71bb30"/>
        <function-ref name="sync" scoped="" ref="0x7d71bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x7d719010" loc="45:/opt/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x7d719010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d7191e8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x7d7192c8"/>
        <function-ref name="computeCrc" scoped="" ref="0x7d7193a8"/>
        <function-ref name="getSize" scoped="" ref="0x7d719488"/>
        <function-ref name="readDone" scoped="" ref="0x7d719568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BConfig" ref="0x7d705608" loc="51:/opt/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BConfig" scoped="" ref="0x7d705608"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbBlockConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="npages" scoped="" ref="0x7d7057e0"/>
        <function-ref name="flipped" scoped="" ref="0x7d7058c0"/>
        <function-ref name="isConfig" scoped="" ref="0x7d7059a0"/>
        <function-ref name="writeHook" scoped="" ref="0x7d705a80"/>
        <function-ref name="remap" scoped="" ref="0x7d705b60"/>
        <function-ref name="writeContinue" scoped="" ref="0x7d705c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45dbVolume" ref="0x7d717ef0" loc="49:/opt/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0x7d717ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0x7d7160e0"/>
        <function-ref name="remap" scoped="" ref="0x7d7161c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7d7165a0" loc="50:/opt/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d7165a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d716778"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d716858"/>
        <function-ref name="request" scoped="" ref="0x7d716938"/>
        <function-ref name="granted" scoped="" ref="0x7d716a18"/>
        <function-ref name="isOwner" scoped="" ref="0x7d716af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45db" ref="0x7d6a28e0" loc="25:/opt/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0x7d6a28e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0x7d6a1870"/>
        <function-ref name="syncDone" scoped="" ref="0x7d6a2b98"/>
        <function-ref name="flushDone" scoped="" ref="0x7d6a2c78"/>
        <function-ref name="read" scoped="" ref="0x7d6a2d58"/>
        <function-ref name="writeDone" scoped="" ref="0x7d6a2e38"/>
        <function-ref name="copyPage" scoped="" ref="0x7d6a2f18"/>
        <function-ref name="erase" scoped="" ref="0x7d6a1010"/>
        <function-ref name="eraseDone" scoped="" ref="0x7d6a10f0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x7d6a11d0"/>
        <function-ref name="flush" scoped="" ref="0x7d6a12b0"/>
        <function-ref name="syncAll" scoped="" ref="0x7d6a1390"/>
        <function-ref name="flushAll" scoped="" ref="0x7d6a1470"/>
        <function-ref name="write" scoped="" ref="0x7d6a1550"/>
        <function-ref name="sync" scoped="" ref="0x7d6a16b0"/>
        <function-ref name="computeCrc" scoped="" ref="0x7d6a1790"/>
        <function-ref name="readDone" scoped="" ref="0x7d6a2ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7d6a0328" loc="27:/opt/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d6a0328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d6a0500"/>
        <function-ref name="requested" scoped="" ref="0x7d6a05e0"/>
        <function-ref name="granted" scoped="" ref="0x7d6a06c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7d6a07a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d6a0880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d6a1c50" loc="26:/opt/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d6a1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d6a1e28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d6a1f08"/>
        <function-ref name="request" scoped="" ref="0x7d6a0010"/>
        <function-ref name="granted" scoped="" ref="0x7d6a00f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7d6a01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7d6a09d0" loc="28:/opt/tinyos-2.x/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d6a09d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d6a0ba8"/>
        <function-ref name="userId" scoped="" ref="0x7d6a0c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAt45db" ref="0x7d67ec88" loc="48:/opt/tinyos-2.x/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0x7d67ec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7d689010"/>
        <function-ref name="waitCompare" scoped="" ref="0x7d68a010"/>
        <function-ref name="crcDone" scoped="" ref="0x7d68a0f0"/>
        <function-ref name="flushDone" scoped="" ref="0x7d68a1d0"/>
        <function-ref name="read" scoped="" ref="0x7d68a2b0"/>
        <function-ref name="erase" scoped="" ref="0x7d68a390"/>
        <function-ref name="writeDone" scoped="" ref="0x7d68a470"/>
        <function-ref name="waitIdleDone" scoped="" ref="0x7d68a550"/>
        <function-ref name="waitCompareDone" scoped="" ref="0x7d68a630"/>
        <function-ref name="eraseDone" scoped="" ref="0x7d68a710"/>
        <function-ref name="waitIdle" scoped="" ref="0x7d68a7f0"/>
        <function-ref name="flush" scoped="" ref="0x7d68a8d0"/>
        <function-ref name="write" scoped="" ref="0x7d68a9b0"/>
        <function-ref name="compareDone" scoped="" ref="0x7d68ab10"/>
        <function-ref name="compare" scoped="" ref="0x7d68abf0"/>
        <function-ref name="crc" scoped="" ref="0x7d68acd0"/>
        <function-ref name="readBuffer" scoped="" ref="0x7d68adb0"/>
        <function-ref name="fillDone" scoped="" ref="0x7d68ae90"/>
        <function-ref name="readDone" scoped="" ref="0x7d67ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45db" ref="0x7d68db20" loc="45:/opt/tinyos-2.x/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0x7d68db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0x7d68cb10"/>
        <function-ref name="syncDone" scoped="" ref="0x7d68ddd8"/>
        <function-ref name="flushDone" scoped="" ref="0x7d68deb8"/>
        <function-ref name="read" scoped="" ref="0x7d68c010"/>
        <function-ref name="writeDone" scoped="" ref="0x7d68c0f0"/>
        <function-ref name="copyPage" scoped="" ref="0x7d68c1d0"/>
        <function-ref name="erase" scoped="" ref="0x7d68c2b0"/>
        <function-ref name="eraseDone" scoped="" ref="0x7d68c390"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x7d68c470"/>
        <function-ref name="flush" scoped="" ref="0x7d68c550"/>
        <function-ref name="syncAll" scoped="" ref="0x7d68c630"/>
        <function-ref name="flushAll" scoped="" ref="0x7d68c710"/>
        <function-ref name="write" scoped="" ref="0x7d68c7f0"/>
        <function-ref name="sync" scoped="" ref="0x7d68c950"/>
        <function-ref name="computeCrc" scoped="" ref="0x7d68ca30"/>
        <function-ref name="readDone" scoped="" ref="0x7d68dcf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7d67ae70" loc="49:/opt/tinyos-2.x/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7d67ae70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120958"/>
            <typename><typedef-ref name="TMicro" ref="0x7f120b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7d67c5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskSuccess" ref="0x7d6622e8" loc="134:/opt/tinyos-2.x/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskSuccess" scoped="" ref="0x7d6622e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d6624c0"/>
        <function-ref name="runTask" scoped="" ref="0x7d6625a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskFail" ref="0x7d6611e0" loc="137:/opt/tinyos-2.x/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskFail" scoped="" ref="0x7d6611e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d6613b8"/>
        <function-ref name="runTask" scoped="" ref="0x7d661498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d68d800" loc="44:/opt/tinyos-2.x/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d68d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d68d9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45db" ref="0x7d61a960" loc="20:/opt/tinyos-2.x/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <component-ref qname="HplAt45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0x7d61a960"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f260dc0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f260dc0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7d619bf0"/>
        <function-ref name="waitCompare" scoped="" ref="0x7d61ac18"/>
        <function-ref name="crcDone" scoped="" ref="0x7d61acf8"/>
        <function-ref name="flushDone" scoped="" ref="0x7d61add8"/>
        <function-ref name="read" scoped="" ref="0x7d61aeb8"/>
        <function-ref name="erase" scoped="" ref="0x7d619010"/>
        <function-ref name="writeDone" scoped="" ref="0x7d6190f0"/>
        <function-ref name="waitIdleDone" scoped="" ref="0x7d6191d0"/>
        <function-ref name="waitCompareDone" scoped="" ref="0x7d6192b0"/>
        <function-ref name="eraseDone" scoped="" ref="0x7d619390"/>
        <function-ref name="waitIdle" scoped="" ref="0x7d619470"/>
        <function-ref name="flush" scoped="" ref="0x7d619550"/>
        <function-ref name="write" scoped="" ref="0x7d619630"/>
        <function-ref name="compareDone" scoped="" ref="0x7d619790"/>
        <function-ref name="compare" scoped="" ref="0x7d619870"/>
        <function-ref name="crc" scoped="" ref="0x7d619950"/>
        <function-ref name="readBuffer" scoped="" ref="0x7d619a30"/>
        <function-ref name="fillDone" scoped="" ref="0x7d619b10"/>
        <function-ref name="readDone" scoped="" ref="0x7d61ab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45db" ref="0x7d616518" loc="26:/opt/tinyos-2.x/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0x7d616518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="readDone" scoped="" ref="0x7d615790"/>
        <function-ref name="waitCompare" scoped="" ref="0x7d6167d0"/>
        <function-ref name="crcDone" scoped="" ref="0x7d6168b0"/>
        <function-ref name="flushDone" scoped="" ref="0x7d616990"/>
        <function-ref name="read" scoped="" ref="0x7d616a70"/>
        <function-ref name="erase" scoped="" ref="0x7d616b50"/>
        <function-ref name="writeDone" scoped="" ref="0x7d616c30"/>
        <function-ref name="waitIdleDone" scoped="" ref="0x7d616d10"/>
        <function-ref name="waitCompareDone" scoped="" ref="0x7d616df0"/>
        <function-ref name="eraseDone" scoped="" ref="0x7d616ed0"/>
        <function-ref name="waitIdle" scoped="" ref="0x7d615010"/>
        <function-ref name="flush" scoped="" ref="0x7d6150f0"/>
        <function-ref name="write" scoped="" ref="0x7d6151d0"/>
        <function-ref name="compareDone" scoped="" ref="0x7d615330"/>
        <function-ref name="compare" scoped="" ref="0x7d615410"/>
        <function-ref name="crc" scoped="" ref="0x7d6154f0"/>
        <function-ref name="readBuffer" scoped="" ref="0x7d6155d0"/>
        <function-ref name="fillDone" scoped="" ref="0x7d6156b0"/>
        <function-ref name="fill" scoped="" ref="0x7d6166f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAt45dbByte" ref="0x7d5e0328" loc="30:/opt/tinyos-2.x/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0x7d5e0328"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0x7d5e0500"/>
        <function-ref name="waitIdle" scoped="" ref="0x7d5e05e0"/>
        <function-ref name="idle" scoped="" ref="0x7d5e06c0"/>
        <function-ref name="select" scoped="" ref="0x7d5e07a0"/>
        <function-ref name="deselect" scoped="" ref="0x7d5e0880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7d615900" loc="28:/opt/tinyos-2.x/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d615900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d615ad8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d615bb8"/>
        <function-ref name="request" scoped="" ref="0x7d615c98"/>
        <function-ref name="granted" scoped="" ref="0x7d615d78"/>
        <function-ref name="isOwner" scoped="" ref="0x7d615e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FlashSpi" ref="0x7d5e0010" loc="29:/opt/tinyos-2.x/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x7d5e0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7d5e01e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45dbByte" ref="0x7d5cfb38" loc="21:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0x7d5cfb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0x7d5cfd10"/>
        <function-ref name="waitIdle" scoped="" ref="0x7d5cfdf0"/>
        <function-ref name="idle" scoped="" ref="0x7d5cfed0"/>
        <function-ref name="select" scoped="" ref="0x7d5ce010"/>
        <function-ref name="deselect" scoped="" ref="0x7d5ce0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d5cf140" loc="19:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d5cf140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d5cf318"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d5cf3f8"/>
        <function-ref name="request" scoped="" ref="0x7d5cf4d8"/>
        <function-ref name="granted" scoped="" ref="0x7d5cf5b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7d5cf698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlashSpi" ref="0x7d5cf810" loc="20:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x7d5cf810"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7d5cf9e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="In" ref="0x7d5c7188" loc="55:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="In" scoped="" ref="0x7d5c7188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d5c7360"/>
        <function-ref name="isInput" scoped="" ref="0x7d5c7440"/>
        <function-ref name="toggle" scoped="" ref="0x7d5c7520"/>
        <function-ref name="isOutput" scoped="" ref="0x7d5c7600"/>
        <function-ref name="get" scoped="" ref="0x7d5c76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d5c77c0"/>
        <function-ref name="set" scoped="" ref="0x7d5c78a0"/>
        <function-ref name="clr" scoped="" ref="0x7d5c7980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InInterrupt" ref="0x7d5c7b08" loc="56:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InInterrupt" scoped="" ref="0x7d5c7b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d5c7ce0"/>
        <function-ref name="fired" scoped="" ref="0x7d5c7dc0"/>
        <function-ref name="disable" scoped="" ref="0x7d5c7ea0"/>
        <function-ref name="edge" scoped="" ref="0x7d5c6010"/>
        <function-ref name="enable" scoped="" ref="0x7d5c60f0"/>
        <function-ref name="getValue" scoped="" ref="0x7d5c61d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Out" ref="0x7d5c87a8" loc="54:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Out" scoped="" ref="0x7d5c87a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d5c8980"/>
        <function-ref name="isInput" scoped="" ref="0x7d5c8a60"/>
        <function-ref name="toggle" scoped="" ref="0x7d5c8b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7d5c8c20"/>
        <function-ref name="get" scoped="" ref="0x7d5c8d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d5c8de0"/>
        <function-ref name="set" scoped="" ref="0x7d5c8ec0"/>
        <function-ref name="clr" scoped="" ref="0x7d5c7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Select" ref="0x7d5c9468" loc="52:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Select" scoped="" ref="0x7d5c9468"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d5c9640"/>
        <function-ref name="isInput" scoped="" ref="0x7d5c9720"/>
        <function-ref name="toggle" scoped="" ref="0x7d5c9800"/>
        <function-ref name="isOutput" scoped="" ref="0x7d5c98e0"/>
        <function-ref name="get" scoped="" ref="0x7d5c99c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d5c9aa0"/>
        <function-ref name="set" scoped="" ref="0x7d5c9b80"/>
        <function-ref name="clr" scoped="" ref="0x7d5c9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45dbByte" ref="0x7d5cac78" loc="49:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0x7d5cac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0x7d5cae50"/>
        <function-ref name="waitIdle" scoped="" ref="0x7d5c9010"/>
        <function-ref name="idle" scoped="" ref="0x7d5c90f0"/>
        <function-ref name="select" scoped="" ref="0x7d5c91d0"/>
        <function-ref name="deselect" scoped="" ref="0x7d5c92b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Clk" ref="0x7d5c9dd8" loc="53:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Clk" scoped="" ref="0x7d5c9dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d5c8010"/>
        <function-ref name="isInput" scoped="" ref="0x7d5c80f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d5c81d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d5c82b0"/>
        <function-ref name="get" scoped="" ref="0x7d5c8390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d5c8470"/>
        <function-ref name="set" scoped="" ref="0x7d5c8550"/>
        <function-ref name="clr" scoped="" ref="0x7d5c8630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7d5c6458" loc="57:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7d5c6458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120958"/>
            <typename><typedef-ref name="TMicro" ref="0x7f120b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7d5c6ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d5ca600" loc="47:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d5ca600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d5ca7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="avail" ref="0x7d5b4010" loc="123:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="avail" scoped="" ref="0x7d5b4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d5b41e8"/>
        <function-ref name="runTask" scoped="" ref="0x7d5b42c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlashSpi" ref="0x7d5ca950" loc="48:/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x7d5ca950"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7d5cab28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7d5a05a8" loc="31:/opt/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7d5a05a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120958"/>
            <typename><typedef-ref name="TMicro" ref="0x7f120b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7d5a0cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d5a1e80" loc="22:/opt/tinyos-2.x/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d5a1e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d59c070"/>
        <function-ref name="configure" scoped="" ref="0x7d59c150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d5a17c8" loc="21:/opt/tinyos-2.x/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d5a17c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d5a19a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d5a1a80"/>
        <function-ref name="request" scoped="" ref="0x7d5a1b60"/>
        <function-ref name="granted" scoped="" ref="0x7d5a1c40"/>
        <function-ref name="isOwner" scoped="" ref="0x7d5a1d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="granted" ref="0x7d59c2d0" loc="25:/opt/tinyos-2.x/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="granted" scoped="" ref="0x7d59c2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d59c4a8"/>
        <function-ref name="runTask" scoped="" ref="0x7d59c588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7d583618" loc="82:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7d583618"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7d583800"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d5838e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d582600" loc="86:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d582600"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d5827e8"/>
        <function-ref name="configure" scoped="" ref="0x7d5828c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7d583a20" loc="83:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7d583a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d583bf8"/>
        <function-ref name="requested" scoped="" ref="0x7d583cd8"/>
        <function-ref name="granted" scoped="" ref="0x7d583db8"/>
        <function-ref name="isOwner" scoped="" ref="0x7d583e98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d582010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d590ec8" loc="81:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d590ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d5830c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d5831a0"/>
        <function-ref name="request" scoped="" ref="0x7d583280"/>
        <function-ref name="granted" scoped="" ref="0x7d583360"/>
        <function-ref name="isOwner" scoped="" ref="0x7d583440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7d582150" loc="84:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d582150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d582328"/>
        <function-ref name="userId" scoped="" ref="0x7d582408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7c701930" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="At45dbC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7c701930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7c701b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7c701c68" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="At45dbC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7c701c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7c701e40"/>
        <function-ref name="isEmpty" scoped="" ref="0x7c701f20"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7c6ff018"/>
        <function-ref name="dequeue" scoped="" ref="0x7c6ff0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7c6fd568" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7c6fd568"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7c6fd750"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7c6fd830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7c6fc4f0" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7c6fc4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7c6fc6d8"/>
        <function-ref name="configure" scoped="" ref="0x7c6fc7b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7c6fc918" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7c6fc918"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7c6fcaf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7c6fcbd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7c6fccb0"/>
        <function-ref name="dequeue" scoped="" ref="0x7c6fcd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7c6fd970" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7c6fd970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7c6fdb48"/>
        <function-ref name="requested" scoped="" ref="0x7c6fdc28"/>
        <function-ref name="granted" scoped="" ref="0x7c6fdd08"/>
        <function-ref name="isOwner" scoped="" ref="0x7c6fdde8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7c6fdec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7c6fced0" loc="62:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7c6fced0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7c6fb0c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7c6fb1a0"/>
        <function-ref name="led1On" scoped="" ref="0x7c6fb280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7c6fb360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7c6fb440"/>
        <function-ref name="get" scoped="" ref="0x7c6fb520"/>
        <function-ref name="led1Off" scoped="" ref="0x7c6fb600"/>
        <function-ref name="led0On" scoped="" ref="0x7c6fb980"/>
        <function-ref name="set" scoped="" ref="0x7c6fb7c0"/>
        <function-ref name="led2On" scoped="" ref="0x7c6fb6e0"/>
        <function-ref name="led2Off" scoped="" ref="0x7c6fb8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7c6ffdd0" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7c6ffdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7c6fd010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7c6fd0f0"/>
        <function-ref name="request" scoped="" ref="0x7c6fd1d0"/>
        <function-ref name="granted" scoped="" ref="0x7c6fd2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7c6fd390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7c6fc030" loc="57:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7c6fc030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7c6fc208"/>
        <function-ref name="userId" scoped="" ref="0x7c6fc2e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7c6fbb00" loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7c6fbb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7c6fbcd8"/>
        <function-ref name="runTask" scoped="" ref="0x7c6fbdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45dbVolume" ref="0x7d6a8ec0" loc="18:/opt/tinyos-2.x/tos/chips/at45db/At45dbStorageManagerC.nc">
      <component-ref qname="At45dbStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0x7d6a8ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x7d7c53c8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0x7d5710c0"/>
        <function-ref name="remap" scoped="" ref="0x7d5711a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x7d572ca8" loc="25:/opt/tinyos-2.x/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="DelugeStorageC.BlockStorageC_1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x7d572ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x7d572e80"/>
        <function-ref name="writeDone" scoped="" ref="0x7d56b010"/>
        <function-ref name="erase" scoped="" ref="0x7d56b0f0"/>
        <function-ref name="eraseDone" scoped="" ref="0x7d56b1d0"/>
        <function-ref name="write" scoped="" ref="0x7d56b2b0"/>
        <function-ref name="sync" scoped="" ref="0x7d56b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x7d56b4d0" loc="26:/opt/tinyos-2.x/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="DelugeStorageC.BlockStorageC_1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x7d56b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d56b6a8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x7d56b788"/>
        <function-ref name="computeCrc" scoped="" ref="0x7d56b868"/>
        <function-ref name="getSize" scoped="" ref="0x7d56b948"/>
        <function-ref name="readDone" scoped="" ref="0x7d56ba28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7d55fa28" loc="35:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7d55fa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7d55fc00"/>
        <function-ref name="stopDone" scoped="" ref="0x7d55fce0"/>
        <function-ref name="start" scoped="" ref="0x7d55fdc0"/>
        <function-ref name="stop" scoped="" ref="0x7d55fea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d55e288" loc="36:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d55e288"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d55e460"/>
        <function-ref name="getPayload" scoped="" ref="0x7d55e540"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d55e620"/>
        <function-ref name="cancel" scoped="" ref="0x7d55e700"/>
        <function-ref name="sendDone" scoped="" ref="0x7d55e7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d55eed8" loc="38:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d55eed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d55d0c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d55d1a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d55d280"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d55d360"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d55d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d55ebb8" loc="37:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d55ebb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d55ed90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d55c758" loc="42:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d55c758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d55c930"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d55ca10"/>
        <function-ref name="led1On" scoped="" ref="0x7d55caf0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d55cbd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d55ccb0"/>
        <function-ref name="get" scoped="" ref="0x7d55cd90"/>
        <function-ref name="led1Off" scoped="" ref="0x7d55ce70"/>
        <function-ref name="led2Off" scoped="" ref="0x7d55b2b0"/>
        <function-ref name="set" scoped="" ref="0x7d55b010"/>
        <function-ref name="led0On" scoped="" ref="0x7d55b0f0"/>
        <function-ref name="led2On" scoped="" ref="0x7d55b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7d55c248" loc="40:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7d55c248"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7d55c420"/>
        <function-ref name="noAck" scoped="" ref="0x7d55c500"/>
        <function-ref name="wasAcked" scoped="" ref="0x7d55c5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d55d590" loc="39:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d55d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d55d768"/>
        <function-ref name="source" scoped="" ref="0x7d55d848"/>
        <function-ref name="address" scoped="" ref="0x7d55d928"/>
        <function-ref name="destination" scoped="" ref="0x7d55da08"/>
        <function-ref name="setSource" scoped="" ref="0x7d55dae8"/>
        <function-ref name="setDestination" scoped="" ref="0x7d55dbc8"/>
        <function-ref name="type" scoped="" ref="0x7d55dca8"/>
        <function-ref name="setType" scoped="" ref="0x7d55dd88"/>
        <function-ref name="isForMe" scoped="" ref="0x7d55de68"/>
        <function-ref name="setGroup" scoped="" ref="0x7d55c010"/>
        <function-ref name="localGroup" scoped="" ref="0x7d55c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7d521360" loc="43:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7d521360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d521538"/>
        <function-ref name="getPayload" scoped="" ref="0x7d521618"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d5216f8"/>
        <function-ref name="cancel" scoped="" ref="0x7d5217d8"/>
        <function-ref name="sendDone" scoped="" ref="0x7d5218b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7d521a18" loc="44:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7d521a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d521bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d558088" loc="36:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d558088"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d558270"/>
        <function-ref name="getPayload" scoped="" ref="0x7d558350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d558430"/>
        <function-ref name="cancel" scoped="" ref="0x7d558510"/>
        <function-ref name="sendDone" scoped="" ref="0x7d5585f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d522770" loc="39:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d522770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d522948"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d522a28"/>
        <function-ref name="getPayload" scoped="" ref="0x7d522b08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d522be8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d522cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d5587c8" loc="37:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d5587c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d5589b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7d522e08" loc="40:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7d522e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7d521010"/>
        <function-ref name="noAck" scoped="" ref="0x7d5210f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7d5211d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d558af0" loc="38:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d558af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d558cc8"/>
        <function-ref name="source" scoped="" ref="0x7d558da8"/>
        <function-ref name="address" scoped="" ref="0x7d558e88"/>
        <function-ref name="destination" scoped="" ref="0x7d522010"/>
        <function-ref name="setSource" scoped="" ref="0x7d5220f0"/>
        <function-ref name="setDestination" scoped="" ref="0x7d5221d0"/>
        <function-ref name="type" scoped="" ref="0x7d5222b0"/>
        <function-ref name="setType" scoped="" ref="0x7d522390"/>
        <function-ref name="isForMe" scoped="" ref="0x7d522470"/>
        <function-ref name="setGroup" scoped="" ref="0x7d522550"/>
        <function-ref name="localGroup" scoped="" ref="0x7d522630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7d511920" loc="39:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7d511920"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7d511af8"/>
        <function-ref name="stopDone" scoped="" ref="0x7d511bd8"/>
        <function-ref name="start" scoped="" ref="0x7d511cb8"/>
        <function-ref name="stop" scoped="" ref="0x7d511d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d510708" loc="41:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d510708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7eba08b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d5108e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d5109c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d510aa0"/>
        <function-ref name="cancel" scoped="" ref="0x7d510b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7d510c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d5115f8" loc="38:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d5115f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d5117d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d510178" loc="40:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d510178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7eba08b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d510350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d50d658" loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d50d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d50d830"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d50d910"/>
        <function-ref name="led1On" scoped="" ref="0x7d50d9f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d50dad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d50dbb0"/>
        <function-ref name="get" scoped="" ref="0x7d50dc90"/>
        <function-ref name="led1Off" scoped="" ref="0x7d50dd70"/>
        <function-ref name="led2Off" scoped="" ref="0x7d50c1d0"/>
        <function-ref name="set" scoped="" ref="0x7d50de50"/>
        <function-ref name="led0On" scoped="" ref="0x7d50c010"/>
        <function-ref name="led2On" scoped="" ref="0x7d50c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7d50d178" loc="44:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7d50d178"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7eba08b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7d50d350"/>
        <function-ref name="offset" scoped="" ref="0x7d50d430"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7d50d510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7d506b70" loc="64:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7d506b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7d506d48"/>
        <function-ref name="stopDone" scoped="" ref="0x7d506e28"/>
        <function-ref name="start" scoped="" ref="0x7d506f08"/>
        <function-ref name="stop" scoped="" ref="0x7d505010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7d4c1a98" loc="326:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x7d4c1a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d4c1c70"/>
        <function-ref name="runTask" scoped="" ref="0x7d4c1d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7d4fb5f0" loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7d4fb5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d4fb7c8"/>
        <function-ref name="stop" scoped="" ref="0x7d4fb8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7d4dd588" loc="189:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x7d4dd588"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d4dd760"/>
        <function-ref name="runTask" scoped="" ref="0x7d4dd840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d506848" loc="63:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d506848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d506a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7d4f4ca8" loc="73:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x7d4f4ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7d4f4e80"/>
        <function-ref name="flush" scoped="" ref="0x7d4f6010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7d4c2af0" loc="320:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x7d4c2af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d4c2cc8"/>
        <function-ref name="runTask" scoped="" ref="0x7d4c2da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7d4f70a8" loc="70:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7d4f70a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7d4f7280"/>
        <function-ref name="resetSend" scoped="" ref="0x7d4f7360"/>
        <function-ref name="dataReceived" scoped="" ref="0x7d4f7440"/>
        <function-ref name="resetReceive" scoped="" ref="0x7d4f7520"/>
        <function-ref name="putData" scoped="" ref="0x7d4f7600"/>
        <function-ref name="putDone" scoped="" ref="0x7d4f76e0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7d4f77c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d4f7908" loc="71:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d4f7908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d4f7ae0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d4f7bc0"/>
        <function-ref name="led1On" scoped="" ref="0x7d4f7ca0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d4f7d80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d4f7e60"/>
        <function-ref name="get" scoped="" ref="0x7d4fb010"/>
        <function-ref name="led1Off" scoped="" ref="0x7d4fb0f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7d4fb470"/>
        <function-ref name="set" scoped="" ref="0x7d4fb1d0"/>
        <function-ref name="led0On" scoped="" ref="0x7d4fb2b0"/>
        <function-ref name="led2On" scoped="" ref="0x7d4fb390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7d4b3350" loc="335:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7d4b3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d4b3528"/>
        <function-ref name="runTask" scoped="" ref="0x7d4b3608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7d5006b0" loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7d5006b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7d500888"/>
        <function-ref name="nextByte" scoped="" ref="0x7d500968"/>
        <function-ref name="startSend" scoped="" ref="0x7d500a48"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7d500b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7d4fdcf0" loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7d4fdcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7d4fdec8"/>
        <function-ref name="byteReceived" scoped="" ref="0x7d502010"/>
        <function-ref name="endPacket" scoped="" ref="0x7d5020f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7d43dc28" loc="264:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x7d43dc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d43de00"/>
        <function-ref name="runTask" scoped="" ref="0x7d43dee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d47a7b8" loc="40:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d47a7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7eba08b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d47a9a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d47aa80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d47ab60"/>
        <function-ref name="cancel" scoped="" ref="0x7d47ac40"/>
        <function-ref name="sendDone" scoped="" ref="0x7d47ad20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7d43c080" loc="147:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x7d43c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d43c258"/>
        <function-ref name="runTask" scoped="" ref="0x7d43c338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d47a3f8" loc="39:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d47a3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7eba08b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d47a5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7d43e010" loc="43:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x7d43e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7eba08b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7d43e1f8"/>
        <function-ref name="offset" scoped="" ref="0x7d43e2d8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7d43e3b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d43d010" loc="46:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d43d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d43d1e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d43d2c8"/>
        <function-ref name="led1On" scoped="" ref="0x7d43d3a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d43d488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d43d568"/>
        <function-ref name="get" scoped="" ref="0x7d43d648"/>
        <function-ref name="led1Off" scoped="" ref="0x7d43d728"/>
        <function-ref name="led2On" scoped="" ref="0x7d43daa8"/>
        <function-ref name="set" scoped="" ref="0x7d43d8e8"/>
        <function-ref name="led2Off" scoped="" ref="0x7d43d808"/>
        <function-ref name="led0On" scoped="" ref="0x7d43d9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7d43e9d0" loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7d43e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7d43eba8"/>
        <function-ref name="nextByte" scoped="" ref="0x7d43ec88"/>
        <function-ref name="startSend" scoped="" ref="0x7d43ed68"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7d43ee48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7d43e4f8" loc="44:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7d43e4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7d43e6d0"/>
        <function-ref name="byteReceived" scoped="" ref="0x7d43e7b0"/>
        <function-ref name="endPacket" scoped="" ref="0x7d43e890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7d4252e8" loc="38:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7d4252e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d4254c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7d4255a0"/>
        <function-ref name="receive" scoped="" ref="0x7d425680"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7d425760"/>
        <function-ref name="receiveDone" scoped="" ref="0x7d425840"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7d425920"/>
        <function-ref name="sendDone" scoped="" ref="0x7d425a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7d436040" loc="36:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7d436040"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7d436218"/>
        <function-ref name="resetSend" scoped="" ref="0x7d4362f8"/>
        <function-ref name="dataReceived" scoped="" ref="0x7d4363d8"/>
        <function-ref name="resetReceive" scoped="" ref="0x7d4364b8"/>
        <function-ref name="putData" scoped="" ref="0x7d436598"/>
        <function-ref name="putDone" scoped="" ref="0x7d436678"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7d436758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d425b48" loc="39:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d425b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d425d20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d425e00"/>
        <function-ref name="led1On" scoped="" ref="0x7d425ee0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d434010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d4340f0"/>
        <function-ref name="get" scoped="" ref="0x7d4341d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7d4342b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7d434630"/>
        <function-ref name="set" scoped="" ref="0x7d434390"/>
        <function-ref name="led0On" scoped="" ref="0x7d434470"/>
        <function-ref name="led2On" scoped="" ref="0x7d434550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7d412b28" loc="42:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7d412b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d412d00"/>
        <function-ref name="receive" scoped="" ref="0x7d412de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7d417920" loc="41:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7d417920"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d417af8"/>
        <function-ref name="receivedByte" scoped="" ref="0x7d417bd8"/>
        <function-ref name="receive" scoped="" ref="0x7d417cb8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7d417d98"/>
        <function-ref name="receiveDone" scoped="" ref="0x7d417e78"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7d416010"/>
        <function-ref name="sendDone" scoped="" ref="0x7d4160f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7d4174f8" loc="40:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7d4174f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d4176d0"/>
        <function-ref name="stop" scoped="" ref="0x7d4177b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7d40e180" loc="41:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7d40e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d40e358"/>
        <function-ref name="receive" scoped="" ref="0x7d40e438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7d40e5a8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7d40e5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d40e780"/>
        <function-ref name="receivedByte" scoped="" ref="0x7d40e860"/>
        <function-ref name="receive" scoped="" ref="0x7d40e940"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7d40ea20"/>
        <function-ref name="receiveDone" scoped="" ref="0x7d40eb00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7d40ebe0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d40ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7d40d010" loc="43:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7d40d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120958"/>
            <typename><typedef-ref name="TMicro" ref="0x7f120b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d40d760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7d40db60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7d40d960"/>
        <function-ref name="overflow" scoped="" ref="0x7d40dd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7d414d20" loc="40:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7d414d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d414ef8"/>
        <function-ref name="stop" scoped="" ref="0x7d40e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7d40ac68" loc="50:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7d40ac68"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d40ae40"/>
        <function-ref name="receive" scoped="" ref="0x7d40af20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7d409930" loc="53:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7d409930"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d409b08"/>
        <function-ref name="stop" scoped="" ref="0x7d409be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d40a518" loc="48:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d40a518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d40a6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7d409098" loc="51:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7d409098"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d409270"/>
        <function-ref name="receivedByte" scoped="" ref="0x7d409350"/>
        <function-ref name="receive" scoped="" ref="0x7d409430"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7d409510"/>
        <function-ref name="receiveDone" scoped="" ref="0x7d4095f0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7d4096d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d4097b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7d3dcea8" loc="56:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7d3dcea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120958"/>
            <typename><typedef-ref name="TMicro" ref="0x7f120b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d3db610"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7d3dba10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7d3db810"/>
        <function-ref name="overflow" scoped="" ref="0x7d3dbc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x7d3dc270" loc="55:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x7d3dc270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7d3dc448"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7d3dc528"/>
        <function-ref name="rxDone" scoped="" ref="0x7d3dc608"/>
        <function-ref name="txDone" scoped="" ref="0x7d3dc6e8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7d3dc7c8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7d3dc8a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7d3dc988"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7d3dca68"/>
        <function-ref name="tx" scoped="" ref="0x7d3dcb48"/>
        <function-ref name="rx" scoped="" ref="0x7d3dcc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7d40a850" loc="49:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7d40a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d40aa28"/>
        <function-ref name="stop" scoped="" ref="0x7d40ab08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7d409d68" loc="54:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7d409d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d3dc010"/>
        <function-ref name="stop" scoped="" ref="0x7d3dc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7d3c3d68" loc="40:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7d3c3d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7d3c1010"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7d3c10f0"/>
        <function-ref name="rxDone" scoped="" ref="0x7d3c11d0"/>
        <function-ref name="txDone" scoped="" ref="0x7d3c12b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7d3c1390"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7d3c1470"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7d3c1550"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7d3c1630"/>
        <function-ref name="tx" scoped="" ref="0x7d3c1710"/>
        <function-ref name="rx" scoped="" ref="0x7d3c17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7d3c0270" loc="44:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7d3c0270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7d3c0448"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7d3c0528"/>
        <function-ref name="rxDone" scoped="" ref="0x7d3c0608"/>
        <function-ref name="txDone" scoped="" ref="0x7d3c06e8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7d3c07c8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7d3c08a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7d3c0988"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7d3c0a68"/>
        <function-ref name="tx" scoped="" ref="0x7d3c0b48"/>
        <function-ref name="rx" scoped="" ref="0x7d3c0c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7d3c3930" loc="39:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7d3c3930"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d3c3b08"/>
        <function-ref name="stop" scoped="" ref="0x7d3c3be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7d3c1970" loc="42:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7d3c1970"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d3c1b48"/>
        <function-ref name="stop" scoped="" ref="0x7d3c1c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7d3c1da8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7d3c1da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d3c0010"/>
        <function-ref name="stop" scoped="" ref="0x7d3c00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7d3c34f8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7d3c34f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d3c36d0"/>
        <function-ref name="stop" scoped="" ref="0x7d3c37b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x7d3bb030" loc="71:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x7d3bb030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d3bb208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7d3bbc58" loc="74:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7d3bbc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7d3bbe30"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7d3bbf10"/>
        <function-ref name="rxDone" scoped="" ref="0x7d3ba010"/>
        <function-ref name="txDone" scoped="" ref="0x7d3ba0f0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7d3ba1d0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7d3ba2b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7d3ba390"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7d3ba470"/>
        <function-ref name="tx" scoped="" ref="0x7d3ba550"/>
        <function-ref name="rx" scoped="" ref="0x7d3ba630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x7d3ba7c8" loc="76:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x7d3ba7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d3ba9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7d3b9468" loc="79:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7d3b9468"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7d3b9640"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7d3b9720"/>
        <function-ref name="rxDone" scoped="" ref="0x7d3b9800"/>
        <function-ref name="txDone" scoped="" ref="0x7d3b98e0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7d3b99c0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7d3b9aa0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7d3b9b80"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7d3b9c60"/>
        <function-ref name="tx" scoped="" ref="0x7d3b9d40"/>
        <function-ref name="rx" scoped="" ref="0x7d3b9e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7d3bb800" loc="73:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7d3bb800"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d3bb9d8"/>
        <function-ref name="stop" scoped="" ref="0x7d3bbab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7d3bab40" loc="77:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7d3bab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d3bad18"/>
        <function-ref name="stop" scoped="" ref="0x7d3badf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7d3b9010" loc="78:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7d3b9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d3b91e8"/>
        <function-ref name="stop" scoped="" ref="0x7d3b92c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7d3b8010" loc="81:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7d3b8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7d3b81e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7d3b82c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7d3b83a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7d3b8488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7d3b8568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7d3b86d8" loc="82:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7d3b86d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7d3b88b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7d3bb3a8" loc="72:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7d3bb3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d3bb580"/>
        <function-ref name="stop" scoped="" ref="0x7d3bb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7d37dab0" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7d37dab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120958"/>
            <typename><typedef-ref name="TMicro" ref="0x7f120b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d37c228"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7d37c628"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7d37c428"/>
        <function-ref name="overflow" scoped="" ref="0x7d37c828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7d378e80" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7d378e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120958"/>
            <typename><typedef-ref name="TThree" ref="0x7f0809b8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d3775e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7d3779e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7d3777e0"/>
        <function-ref name="overflow" scoped="" ref="0x7d377be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7d370ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7d370ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7d370ca0"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7d370d80"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7d370e60"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7d366010"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7d3660f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7d3661d0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7d3662b0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7d366390"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7d366470"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7d366550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7d366770" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7d366770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7d363010"/>
        <function-ref name="test" scoped="" ref="0x7d365b50"/>
        <function-ref name="get" scoped="" ref="0x7d366db8"/>
        <function-ref name="captured" scoped="" ref="0x7d3652b0"/>
        <function-ref name="reset" scoped="" ref="0x7d365550"/>
        <function-ref name="isOn" scoped="" ref="0x7d365d50"/>
        <function-ref name="set" scoped="" ref="0x7d365010"/>
        <function-ref name="start" scoped="" ref="0x7d365750"/>
        <function-ref name="stop" scoped="" ref="0x7d365950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7d3635b8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7d3635b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d3628b8"/>
        <function-ref name="fired" scoped="" ref="0x7d3620b8"/>
        <function-ref name="get" scoped="" ref="0x7d363c00"/>
        <function-ref name="reset" scoped="" ref="0x7d3622b8"/>
        <function-ref name="isOn" scoped="" ref="0x7d362ab8"/>
        <function-ref name="set" scoped="" ref="0x7d363e00"/>
        <function-ref name="start" scoped="" ref="0x7d3624b8"/>
        <function-ref name="stop" scoped="" ref="0x7d3626b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d376cf0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d376cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7d370448"/>
        <function-ref name="test" scoped="" ref="0x7d370048"/>
        <function-ref name="get" scoped="" ref="0x7d372370"/>
        <function-ref name="setScale" scoped="" ref="0x7d370648"/>
        <function-ref name="getScale" scoped="" ref="0x7d3708e8"/>
        <function-ref name="reset" scoped="" ref="0x7d372a10"/>
        <function-ref name="overflow" scoped="" ref="0x7d372810"/>
        <function-ref name="isOn" scoped="" ref="0x7d370248"/>
        <function-ref name="set" scoped="" ref="0x7d372570"/>
        <function-ref name="start" scoped="" ref="0x7d372c10"/>
        <function-ref name="stop" scoped="" ref="0x7d372e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7d35be90" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7d35be90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7d35a080"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7d35a160"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7d35a240"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7d35a320"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7d35a400"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7d35a4e0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7d35a5c0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7d35a6a0"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7d35a780"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7d35a860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7d357568" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7d357568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d356868"/>
        <function-ref name="fired" scoped="" ref="0x7d356068"/>
        <function-ref name="get" scoped="" ref="0x7d357bb0"/>
        <function-ref name="reset" scoped="" ref="0x7d356268"/>
        <function-ref name="isOn" scoped="" ref="0x7d356a68"/>
        <function-ref name="set" scoped="" ref="0x7d357db0"/>
        <function-ref name="start" scoped="" ref="0x7d356468"/>
        <function-ref name="stop" scoped="" ref="0x7d356668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7d35aa80" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7d35aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7d357248"/>
        <function-ref name="test" scoped="" ref="0x7d358e38"/>
        <function-ref name="get" scoped="" ref="0x7d3580f8"/>
        <function-ref name="captured" scoped="" ref="0x7d358598"/>
        <function-ref name="reset" scoped="" ref="0x7d358838"/>
        <function-ref name="isOn" scoped="" ref="0x7d357048"/>
        <function-ref name="set" scoped="" ref="0x7d3582f8"/>
        <function-ref name="start" scoped="" ref="0x7d358a38"/>
        <function-ref name="stop" scoped="" ref="0x7d358c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7d356ce8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7d356ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d353048"/>
        <function-ref name="fired" scoped="" ref="0x7d354810"/>
        <function-ref name="get" scoped="" ref="0x7d354370"/>
        <function-ref name="reset" scoped="" ref="0x7d354a10"/>
        <function-ref name="isOn" scoped="" ref="0x7d353248"/>
        <function-ref name="set" scoped="" ref="0x7d354570"/>
        <function-ref name="start" scoped="" ref="0x7d354c10"/>
        <function-ref name="stop" scoped="" ref="0x7d354e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7d3534c8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7d3534c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d351810"/>
        <function-ref name="fired" scoped="" ref="0x7d351010"/>
        <function-ref name="get" scoped="" ref="0x7d353b10"/>
        <function-ref name="reset" scoped="" ref="0x7d351210"/>
        <function-ref name="isOn" scoped="" ref="0x7d351a10"/>
        <function-ref name="set" scoped="" ref="0x7d353d10"/>
        <function-ref name="start" scoped="" ref="0x7d351410"/>
        <function-ref name="stop" scoped="" ref="0x7d351610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d35c0b0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d35c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7d35b810"/>
        <function-ref name="test" scoped="" ref="0x7d35b410"/>
        <function-ref name="get" scoped="" ref="0x7d35c6f8"/>
        <function-ref name="setScale" scoped="" ref="0x7d35ba10"/>
        <function-ref name="getScale" scoped="" ref="0x7d35bcb0"/>
        <function-ref name="reset" scoped="" ref="0x7d35cd98"/>
        <function-ref name="overflow" scoped="" ref="0x7d35cb98"/>
        <function-ref name="isOn" scoped="" ref="0x7d35b610"/>
        <function-ref name="set" scoped="" ref="0x7d35c8f8"/>
        <function-ref name="start" scoped="" ref="0x7d35b010"/>
        <function-ref name="stop" scoped="" ref="0x7d35b210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d2fbb18" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d2fbb18"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f252010"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f252010"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d2fbcf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7d2fbf00" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d2fbf00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7d2f8648"/>
        <function-ref name="test" scoped="" ref="0x7d2f8248"/>
        <function-ref name="get" scoped="" ref="0x7d2f9578"/>
        <function-ref name="setScale" scoped="" ref="0x7d2f8848"/>
        <function-ref name="getScale" scoped="" ref="0x7d2f8ae8"/>
        <function-ref name="reset" scoped="" ref="0x7d2f9c18"/>
        <function-ref name="overflow" scoped="" ref="0x7d2f9a18"/>
        <function-ref name="isOn" scoped="" ref="0x7d2f8448"/>
        <function-ref name="set" scoped="" ref="0x7d2f9778"/>
        <function-ref name="start" scoped="" ref="0x7d2f9e18"/>
        <function-ref name="stop" scoped="" ref="0x7d2f8048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7d2fda20" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7d2fda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120958"/>
            <typename><typedef-ref name="TThree" ref="0x7f0809b8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d2f6200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7d2f6600"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7d2f6400"/>
        <function-ref name="overflow" scoped="" ref="0x7d2f6800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7d2f6a68" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d2f6a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7d2f3210"/>
        <function-ref name="test" scoped="" ref="0x7d2f5d78"/>
        <function-ref name="get" scoped="" ref="0x7d2f50d8"/>
        <function-ref name="setScale" scoped="" ref="0x7d2f3410"/>
        <function-ref name="getScale" scoped="" ref="0x7d2f36b0"/>
        <function-ref name="reset" scoped="" ref="0x7d2f5778"/>
        <function-ref name="overflow" scoped="" ref="0x7d2f5578"/>
        <function-ref name="isOn" scoped="" ref="0x7d2f3010"/>
        <function-ref name="set" scoped="" ref="0x7d2f52d8"/>
        <function-ref name="start" scoped="" ref="0x7d2f5978"/>
        <function-ref name="stop" scoped="" ref="0x7d2f5b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7d2f0078" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7d2f0078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120958"/>
            <typename><typedef-ref name="TThree" ref="0x7f0809b8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d2f07c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7d2f0bc8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7d2f09c8"/>
        <function-ref name="overflow" scoped="" ref="0x7d2f0dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7d379010" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7d379010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120958"/>
            <typename><typedef-ref name="TMicro" ref="0x7f120b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d379760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7d379b60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7d379960"/>
        <function-ref name="overflow" scoped="" ref="0x7d379d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7d2ea328" loc="36:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x7d2ea328"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7d2ea500"/>
        <function-ref name="offset" scoped="" ref="0x7d2ea5e0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7d2ea6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7d2e5b20" loc="29:/opt/tinyos-2.x/tos/lib/net/Deluge/AutoStarterC.nc">
      <component-ref qname="AutoStarterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7d2e5b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7d2e5cf8"/>
        <function-ref name="stopDone" scoped="" ref="0x7d2e5dd8"/>
        <function-ref name="start" scoped="" ref="0x7d2e5eb8"/>
        <function-ref name="stop" scoped="" ref="0x7d2e1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7d2d5388" loc="31:/opt/tinyos-2.x/tos/lib/net/Deluge/AutoStarterP.nc">
      <component-ref qname="AutoStarterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7d2d5388"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7d2d5560"/>
        <function-ref name="stopDone" scoped="" ref="0x7d2d5640"/>
        <function-ref name="start" scoped="" ref="0x7d2d5720"/>
        <function-ref name="stop" scoped="" ref="0x7d2d5800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7d2d5060" loc="30:/opt/tinyos-2.x/tos/lib/net/Deluge/AutoStarterP.nc">
      <component-ref qname="AutoStarterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7d2d5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7d2d5238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReprogNotify" ref="0x7d1ffd00" loc="34:/opt/tinyos-2.x/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReprogNotify" scoped="" ref="0x7d1ffd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7d1fd530"/>
        <function-ref name="enable" scoped="" ref="0x7d1fd350"/>
        <function-ref name="notify" scoped="" ref="0x7d1fd710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x7d1fda10" loc="37:/opt/tinyos-2.x/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x7d1fda10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d1fdbf8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x7d1fdcd8"/>
        <function-ref name="computeCrc" scoped="" ref="0x7d1fddb8"/>
        <function-ref name="getSize" scoped="" ref="0x7d1fde98"/>
        <function-ref name="readDone" scoped="" ref="0x7d1fc010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x7d1fc1e8" loc="38:/opt/tinyos-2.x/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x7d1fc1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x7d1fc3d0"/>
        <function-ref name="writeDone" scoped="" ref="0x7d1fc4b0"/>
        <function-ref name="erase" scoped="" ref="0x7d1fc590"/>
        <function-ref name="eraseDone" scoped="" ref="0x7d1fc670"/>
        <function-ref name="write" scoped="" ref="0x7d1fc750"/>
        <function-ref name="sync" scoped="" ref="0x7d1fc830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeStorage" ref="0x7d1fca08" loc="40:/opt/tinyos-2.x/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeStorage" scoped="" ref="0x7d1fca08"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeStorage"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x7d1fcbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DissNotify" ref="0x7d1ff010" loc="33:/opt/tinyos-2.x/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DissNotify" scoped="" ref="0x7d1ff010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7d1ff818"/>
        <function-ref name="enable" scoped="" ref="0x7d1ff638"/>
        <function-ref name="notify" scoped="" ref="0x7d1ff9f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7c677128" loc="41:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7c677128"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7c677300"/>
        <function-ref name="getPayload" scoped="" ref="0x7c6773e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7c6774c0"/>
        <function-ref name="cancel" scoped="" ref="0x7c6775a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7c677680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7c6777c0" loc="42:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7c6777c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7c677998"/>
        <function-ref name="payloadLength" scoped="" ref="0x7c677a78"/>
        <function-ref name="getPayload" scoped="" ref="0x7c677b58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7c677c38"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7c677d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7c677e58" loc="43:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7c677e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7c675050"/>
        <function-ref name="source" scoped="" ref="0x7c675130"/>
        <function-ref name="address" scoped="" ref="0x7c675210"/>
        <function-ref name="destination" scoped="" ref="0x7c6752f0"/>
        <function-ref name="setSource" scoped="" ref="0x7c6753d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7c6754b0"/>
        <function-ref name="type" scoped="" ref="0x7c675590"/>
        <function-ref name="setType" scoped="" ref="0x7c675670"/>
        <function-ref name="isForMe" scoped="" ref="0x7c675750"/>
        <function-ref name="setGroup" scoped="" ref="0x7c675830"/>
        <function-ref name="localGroup" scoped="" ref="0x7c675910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7c675a70" loc="44:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7c675a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7c675c48"/>
        <function-ref name="noAck" scoped="" ref="0x7c675d28"/>
        <function-ref name="wasAcked" scoped="" ref="0x7c675e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7c659d48" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7c659d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7c659f20"/>
        <function-ref name="getPayload" scoped="" ref="0x7c655018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7c6550f8"/>
        <function-ref name="cancel" scoped="" ref="0x7c6551d8"/>
        <function-ref name="sendDone" scoped="" ref="0x7c6552b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7c655428" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7c655428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7c655600"/>
        <function-ref name="getPayload" scoped="" ref="0x7c6556e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7c6557c0"/>
        <function-ref name="cancel" scoped="" ref="0x7c6558a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7c655980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7c655ac0" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7c655ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7c655c98"/>
        <function-ref name="source" scoped="" ref="0x7c655d78"/>
        <function-ref name="address" scoped="" ref="0x7c655e58"/>
        <function-ref name="destination" scoped="" ref="0x7c654010"/>
        <function-ref name="setSource" scoped="" ref="0x7c6540f0"/>
        <function-ref name="setDestination" scoped="" ref="0x7c6541d0"/>
        <function-ref name="type" scoped="" ref="0x7c6542b0"/>
        <function-ref name="setType" scoped="" ref="0x7c654390"/>
        <function-ref name="isForMe" scoped="" ref="0x7c654470"/>
        <function-ref name="setGroup" scoped="" ref="0x7c654550"/>
        <function-ref name="localGroup" scoped="" ref="0x7c654630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d2c01a0" loc="36:/opt/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d2c01a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d2c0378"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2c0458"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d2c0538"/>
        <function-ref name="cancel" scoped="" ref="0x7d2c0618"/>
        <function-ref name="sendDone" scoped="" ref="0x7d2c06f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7d2beec8" loc="40:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d2beec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d2bd0c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2bd1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d2bd280"/>
        <function-ref name="cancel" scoped="" ref="0x7d2bd360"/>
        <function-ref name="sendDone" scoped="" ref="0x7d2bd440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d2be758" loc="38:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d2be758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d2be940"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2bea20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d2beb00"/>
        <function-ref name="cancel" scoped="" ref="0x7d2bebe0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d2becc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7d2bc230" loc="42:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d2bc230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d2bc408"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d2bc4e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d2bc5c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d2bc6a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d2bc788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7d2bc908" loc="161:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7d2bc908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d2bcae0"/>
        <function-ref name="runTask" scoped="" ref="0x7d2bcbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7d2bcd40" loc="118:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7d2bcd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d2bcf18"/>
        <function-ref name="runTask" scoped="" ref="0x7d2bb010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7d2bd580" loc="41:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d2bd580"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d2bd758"/>
        <function-ref name="source" scoped="" ref="0x7d2bd838"/>
        <function-ref name="address" scoped="" ref="0x7d2bd918"/>
        <function-ref name="destination" scoped="" ref="0x7d2bd9f8"/>
        <function-ref name="setSource" scoped="" ref="0x7d2bdad8"/>
        <function-ref name="setDestination" scoped="" ref="0x7d2bdbb8"/>
        <function-ref name="type" scoped="" ref="0x7d2bdc98"/>
        <function-ref name="setType" scoped="" ref="0x7d2bdd78"/>
        <function-ref name="isForMe" scoped="" ref="0x7d2bde58"/>
        <function-ref name="setGroup" scoped="" ref="0x7d2bc010"/>
        <function-ref name="localGroup" scoped="" ref="0x7d2bc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7c673220" loc="38:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7c673220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7c6733f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7c6734d8"/>
        <function-ref name="getPayload" scoped="" ref="0x7c6735b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7c673698"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7c673778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7c674ef0" loc="37:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7c674ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7c6730e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7c6738b8" loc="39:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7c6738b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7c673a90"/>
        <function-ref name="source" scoped="" ref="0x7c673b70"/>
        <function-ref name="address" scoped="" ref="0x7c673c50"/>
        <function-ref name="destination" scoped="" ref="0x7c673d30"/>
        <function-ref name="setSource" scoped="" ref="0x7c673e10"/>
        <function-ref name="setDestination" scoped="" ref="0x7c673ef0"/>
        <function-ref name="type" scoped="" ref="0x7c672010"/>
        <function-ref name="setType" scoped="" ref="0x7c6720f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7c6721d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7c6722b0"/>
        <function-ref name="localGroup" scoped="" ref="0x7c672390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NetProg" ref="0x7c66fe10" loc="42:/opt/tinyos-2.x/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x7c66fe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImgAndReboot" scoped="" ref="0x7c66e010"/>
        <function-ref name="reboot" scoped="" ref="0x7c66e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7c66e2e0" loc="43:/opt/tinyos-2.x/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7c66e2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7c66cbf0"/>
        <function-ref name="fired" scoped="" ref="0x7c66c010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7c66c5b0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7c66c3d0"/>
        <function-ref name="getdt" scoped="" ref="0x7c66b010"/>
        <function-ref name="gett0" scoped="" ref="0x7c66cdd0"/>
        <function-ref name="isRunning" scoped="" ref="0x7c66c1f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7c66e908"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7c66c8d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7c66eb88"/>
        <function-ref name="stop" scoped="" ref="0x7c66ee08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMSender" ref="0x7c66b1c8" loc="45:/opt/tinyos-2.x/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialAMSender" scoped="" ref="0x7c66b1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7c66b3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7c66b480"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7c66b560"/>
        <function-ref name="cancel" scoped="" ref="0x7c66b640"/>
        <function-ref name="sendDone" scoped="" ref="0x7c66b720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReprogNotify" ref="0x7c671e00" loc="34:/opt/tinyos-2.x/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReprogNotify" scoped="" ref="0x7c671e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7c670628"/>
        <function-ref name="enable" scoped="" ref="0x7c670448"/>
        <function-ref name="notify" scoped="" ref="0x7c670808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x7c670b08" loc="38:/opt/tinyos-2.x/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x7c670b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7c670cf0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x7c670dd0"/>
        <function-ref name="computeCrc" scoped="" ref="0x7c670eb0"/>
        <function-ref name="getSize" scoped="" ref="0x7c66f010"/>
        <function-ref name="readDone" scoped="" ref="0x7c66f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x7c66f2c8" loc="39:/opt/tinyos-2.x/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x7c66f2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x7c66f4b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7c66f590"/>
        <function-ref name="erase" scoped="" ref="0x7c66f670"/>
        <function-ref name="eraseDone" scoped="" ref="0x7c66f750"/>
        <function-ref name="write" scoped="" ref="0x7c66f830"/>
        <function-ref name="sync" scoped="" ref="0x7c66f910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMReceiver" ref="0x7c66b880" loc="46:/opt/tinyos-2.x/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialAMReceiver" scoped="" ref="0x7c66b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7c66ba58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7c66bb98" loc="47:/opt/tinyos-2.x/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7c66bb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7c66bd70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7c66be50"/>
        <function-ref name="led1On" scoped="" ref="0x7c66a010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7c66a0f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7c66a1d0"/>
        <function-ref name="get" scoped="" ref="0x7c66a2b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7c66a390"/>
        <function-ref name="led0On" scoped="" ref="0x7c66a710"/>
        <function-ref name="set" scoped="" ref="0x7c66a550"/>
        <function-ref name="led2On" scoped="" ref="0x7c66a470"/>
        <function-ref name="led2Off" scoped="" ref="0x7c66a630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeStorage" ref="0x7c66fae8" loc="41:/opt/tinyos-2.x/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeStorage" scoped="" ref="0x7c66fae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeStorage"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x7c66fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DissNotify" ref="0x7c671130" loc="33:/opt/tinyos-2.x/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DissNotify" scoped="" ref="0x7c671130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7c671938"/>
        <function-ref name="enable" scoped="" ref="0x7c671758"/>
        <function-ref name="notify" scoped="" ref="0x7c671b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d25ee18" loc="36:/opt/tinyos-2.x/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d25ee18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d25a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7d25a178" loc="37:/opt/tinyos-2.x/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d25a178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d25a350"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d25a430"/>
        <function-ref name="led1On" scoped="" ref="0x7d25a510"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d25a5f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d25a6d0"/>
        <function-ref name="get" scoped="" ref="0x7d25a7b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7d25a890"/>
        <function-ref name="led2Off" scoped="" ref="0x7d25ac10"/>
        <function-ref name="set" scoped="" ref="0x7d25a970"/>
        <function-ref name="led0On" scoped="" ref="0x7d25aa50"/>
        <function-ref name="led2On" scoped="" ref="0x7d25ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d259af0" loc="33:/opt/tinyos-2.x/tos/system/NoLedsP.nc">
      <component-ref qname="NoLedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d259af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d259cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7d259e30" loc="34:/opt/tinyos-2.x/tos/system/NoLedsP.nc">
      <component-ref qname="NoLedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d259e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d255050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d255130"/>
        <function-ref name="led1On" scoped="" ref="0x7d255210"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d2552f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d2553d0"/>
        <function-ref name="get" scoped="" ref="0x7d2554b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7d255590"/>
        <function-ref name="led2Off" scoped="" ref="0x7d255910"/>
        <function-ref name="set" scoped="" ref="0x7d255670"/>
        <function-ref name="led0On" scoped="" ref="0x7d255750"/>
        <function-ref name="led2On" scoped="" ref="0x7d255830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NetProg" ref="0x7d238b20" loc="37:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProgC.nc">
      <component-ref qname="NetProgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x7d238b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImgAndReboot" scoped="" ref="0x7d238cf8"/>
        <function-ref name="reboot" scoped="" ref="0x7d238dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InternalFlash" ref="0x7d22a3b8" loc="34:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/avr/InternalFlashC.nc">
      <component-ref qname="InternalFlashC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InternalFlash" scoped="" ref="0x7d22a3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="InternalFlash"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d22a590"/>
        <function-ref name="write" scoped="" ref="0x7d22a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Crc" ref="0x7d220cb8" loc="30:/opt/tinyos-2.x/tos/lib/net/Deluge/CrcP.nc">
      <component-ref qname="CrcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Crc" scoped="" ref="0x7d220cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Crc"/>
      </instance>
      <interface-functions>
        <function-ref name="crc16" scoped="" ref="0x7d220e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NetProg" ref="0x7d216010" loc="36:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x7d216010"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImgAndReboot" scoped="" ref="0x7d2161e8"/>
        <function-ref name="reboot" scoped="" ref="0x7d2162c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7d2144e0" loc="45:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7d2144e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7d2146b8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7d214798"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7d214878"/>
        <function-ref name="syncDone" scoped="" ref="0x7d214958"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7d214a38"/>
        <function-ref name="setChannel" scoped="" ref="0x7d214b18"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7d214bf8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7d214cd8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7d214db8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7d214e98"/>
        <function-ref name="sync" scoped="" ref="0x7d213010"/>
        <function-ref name="getChannel" scoped="" ref="0x7d2130f0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7d2131d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IFlash" ref="0x7d216d58" loc="41:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IFlash" scoped="" ref="0x7d216d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="InternalFlash"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d215010"/>
        <function-ref name="write" scoped="" ref="0x7d2150f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d216410" loc="37:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d216410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d2165e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeMetadata" ref="0x7d215560" loc="43:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x7d215560"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getImgDesc" scoped="" ref="0x7d215738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d215880" loc="44:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d215880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d215a58"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d215b38"/>
        <function-ref name="led1On" scoped="" ref="0x7d215c18"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d215cf8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d215dd8"/>
        <function-ref name="get" scoped="" ref="0x7d215eb8"/>
        <function-ref name="led1Off" scoped="" ref="0x7d214010"/>
        <function-ref name="led2Off" scoped="" ref="0x7d214390"/>
        <function-ref name="set" scoped="" ref="0x7d2140f0"/>
        <function-ref name="led0On" scoped="" ref="0x7d2141d0"/>
        <function-ref name="led2On" scoped="" ref="0x7d2142b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeStorage" ref="0x7d216a08" loc="40:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeStorage" scoped="" ref="0x7d216a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeStorage"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x7d216be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Crc" ref="0x7d215238" loc="42:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Crc" scoped="" ref="0x7d215238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Crc"/>
      </instance>
      <interface-functions>
        <function-ref name="crc16" scoped="" ref="0x7d215410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7c668858" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7c668858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7c665170"/>
        <function-ref name="fired" scoped="" ref="0x7c667570"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7c667b10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7c667930"/>
        <function-ref name="getdt" scoped="" ref="0x7c665530"/>
        <function-ref name="gett0" scoped="" ref="0x7c665350"/>
        <function-ref name="isRunning" scoped="" ref="0x7c667750"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7c668e80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7c667e30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7c667110"/>
        <function-ref name="stop" scoped="" ref="0x7c667390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x7d1f0e70" loc="34:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x7d1f0e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d1f3070"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x7d1f3150"/>
        <function-ref name="computeCrc" scoped="" ref="0x7d1f3230"/>
        <function-ref name="getSize" scoped="" ref="0x7d1f3310"/>
        <function-ref name="readDone" scoped="" ref="0x7d1f33f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x7d1f37d0" loc="35:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x7d1f37d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x7d1f39a8"/>
        <function-ref name="writeDone" scoped="" ref="0x7d1f3a88"/>
        <function-ref name="erase" scoped="" ref="0x7d1f3b68"/>
        <function-ref name="eraseDone" scoped="" ref="0x7d1f3c48"/>
        <function-ref name="write" scoped="" ref="0x7d1f3d28"/>
        <function-ref name="sync" scoped="" ref="0x7d1f3e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d1f2010" loc="36:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d1f2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d1f21e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d1f22c8"/>
        <function-ref name="led1On" scoped="" ref="0x7d1f23a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d1f2488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d1f2568"/>
        <function-ref name="get" scoped="" ref="0x7d1f2648"/>
        <function-ref name="led1Off" scoped="" ref="0x7d1f2728"/>
        <function-ref name="led2Off" scoped="" ref="0x7d1f2aa8"/>
        <function-ref name="set" scoped="" ref="0x7d1f2808"/>
        <function-ref name="led0On" scoped="" ref="0x7d1f28e8"/>
        <function-ref name="led2On" scoped="" ref="0x7d1f29c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ObjectTransfer" ref="0x7d1f05e8" loc="32:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x7d1f05e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d1f07c0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7d1f08a0"/>
        <function-ref name="publish" scoped="" ref="0x7d1f0980"/>
        <function-ref name="stop" scoped="" ref="0x7d1f0a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7d1e0728" loc="39:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d1e0728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d1de068"/>
        <function-ref name="fired" scoped="" ref="0x7d1df470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d1dfa10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d1df830"/>
        <function-ref name="getdt" scoped="" ref="0x7d1de428"/>
        <function-ref name="gett0" scoped="" ref="0x7d1de248"/>
        <function-ref name="isRunning" scoped="" ref="0x7d1df650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d1e0d50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d1dfd30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d1df010"/>
        <function-ref name="stop" scoped="" ref="0x7d1df290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendAdvMsg" ref="0x7d1dc588" loc="43:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendAdvMsg" scoped="" ref="0x7d1dc588"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d1dc760"/>
        <function-ref name="getPayload" scoped="" ref="0x7d1dc840"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d1dc920"/>
        <function-ref name="cancel" scoped="" ref="0x7d1dca00"/>
        <function-ref name="sendDone" scoped="" ref="0x7d1dcae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7d1e0268" loc="38:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7d1e0268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7d1e0440"/>
        <function-ref name="rand32" scoped="" ref="0x7d1e0520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveAdvMsg" ref="0x7d1dcc58" loc="44:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveAdvMsg" scoped="" ref="0x7d1dcc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d1dce30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x7d1db258" loc="46:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x7d1db258"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x7d1db430"/>
        <function-ref name="writeDone" scoped="" ref="0x7d1db510"/>
        <function-ref name="erase" scoped="" ref="0x7d1db5f0"/>
        <function-ref name="eraseDone" scoped="" ref="0x7d1db6d0"/>
        <function-ref name="write" scoped="" ref="0x7d1db7b0"/>
        <function-ref name="sync" scoped="" ref="0x7d1db890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalObjRecvDone" ref="0x7d1cf238" loc="100:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalObjRecvDone" scoped="" ref="0x7d1cf238"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d1cf410"/>
        <function-ref name="runTask" scoped="" ref="0x7d1cf4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d1db9d8" loc="48:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d1db9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d1dbbb0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d1dbc90"/>
        <function-ref name="led1On" scoped="" ref="0x7d1dbd70"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d1dbe50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d1d5010"/>
        <function-ref name="get" scoped="" ref="0x7d1d50f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7d1d51d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7d1d5550"/>
        <function-ref name="set" scoped="" ref="0x7d1d52b0"/>
        <function-ref name="led0On" scoped="" ref="0x7d1d5390"/>
        <function-ref name="led2On" scoped="" ref="0x7d1d5470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugePageTransfer" ref="0x7d1d7910" loc="40:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugePageTransfer" scoped="" ref="0x7d1d7910"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugePageTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="setWorkingPage" scoped="" ref="0x7d1dc0f0"/>
        <function-ref name="dataAvailable" scoped="" ref="0x7d1d7bc8"/>
        <function-ref name="suppressMsgs" scoped="" ref="0x7d1d7ca8"/>
        <function-ref name="receivedPage" scoped="" ref="0x7d1d7d88"/>
        <function-ref name="setImgNum" scoped="" ref="0x7d1d7e68"/>
        <function-ref name="isTransferring" scoped="" ref="0x7d1dc010"/>
        <function-ref name="stop" scoped="" ref="0x7d1d7ae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Crc" ref="0x7d1dc238" loc="41:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Crc" scoped="" ref="0x7d1dc238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Crc"/>
      </instance>
      <interface-functions>
        <function-ref name="crc16" scoped="" ref="0x7d1dc410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ObjectTransfer" ref="0x7d1e2c58" loc="36:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x7d1e2c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d1e2e30"/>
        <function-ref name="receiveDone" scoped="" ref="0x7d1e2f10"/>
        <function-ref name="publish" scoped="" ref="0x7d1e0010"/>
        <function-ref name="stop" scoped="" ref="0x7d1e00f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendReqMsg" ref="0x7d19aa30" loc="37:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendReqMsg" scoped="" ref="0x7d19aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d19ac08"/>
        <function-ref name="getPayload" scoped="" ref="0x7d19ace8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d19adc8"/>
        <function-ref name="cancel" scoped="" ref="0x7d19aea8"/>
        <function-ref name="sendDone" scoped="" ref="0x7d199010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x7d19cb38" loc="31:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x7d19cb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d19cd10"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x7d19cdf0"/>
        <function-ref name="computeCrc" scoped="" ref="0x7d19ced0"/>
        <function-ref name="getSize" scoped="" ref="0x7d19b010"/>
        <function-ref name="readDone" scoped="" ref="0x7d19b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x7d19b4d0" loc="32:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x7d19b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x7d19b6a8"/>
        <function-ref name="writeDone" scoped="" ref="0x7d19b788"/>
        <function-ref name="erase" scoped="" ref="0x7d19b868"/>
        <function-ref name="eraseDone" scoped="" ref="0x7d19b948"/>
        <function-ref name="write" scoped="" ref="0x7d19ba28"/>
        <function-ref name="sync" scoped="" ref="0x7d19bb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveDataMsg" ref="0x7d19bc80" loc="34:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDataMsg" scoped="" ref="0x7d19bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d19be58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveReqMsg" ref="0x7d19a010" loc="35:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveReqMsg" scoped="" ref="0x7d19a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d19a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendDataMsg" ref="0x7d19a360" loc="36:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendDataMsg" scoped="" ref="0x7d19a360"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d19a538"/>
        <function-ref name="getPayload" scoped="" ref="0x7d19a618"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d19a6f8"/>
        <function-ref name="cancel" scoped="" ref="0x7d19a7d8"/>
        <function-ref name="sendDone" scoped="" ref="0x7d19a8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugePageTransfer" ref="0x7d19c010" loc="29:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugePageTransfer" scoped="" ref="0x7d19c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugePageTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="setWorkingPage" scoped="" ref="0x7d19c728"/>
        <function-ref name="dataAvailable" scoped="" ref="0x7d19c2c8"/>
        <function-ref name="suppressMsgs" scoped="" ref="0x7d19c3a8"/>
        <function-ref name="receivedPage" scoped="" ref="0x7d19c488"/>
        <function-ref name="setImgNum" scoped="" ref="0x7d19c568"/>
        <function-ref name="isTransferring" scoped="" ref="0x7d19c648"/>
        <function-ref name="stop" scoped="" ref="0x7d19c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7d199d50" loc="39:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7d199d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7d199f28"/>
        <function-ref name="noAck" scoped="" ref="0x7d198018"/>
        <function-ref name="wasAcked" scoped="" ref="0x7d1980f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d198240" loc="40:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d198240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d198418"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d1984f8"/>
        <function-ref name="led1On" scoped="" ref="0x7d1985d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d1986b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d198798"/>
        <function-ref name="get" scoped="" ref="0x7d198878"/>
        <function-ref name="led1Off" scoped="" ref="0x7d198958"/>
        <function-ref name="led2Off" scoped="" ref="0x7d198cd8"/>
        <function-ref name="set" scoped="" ref="0x7d198a38"/>
        <function-ref name="led0On" scoped="" ref="0x7d198b18"/>
        <function-ref name="led2On" scoped="" ref="0x7d198bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7d199160" loc="38:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d199160"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d199338"/>
        <function-ref name="source" scoped="" ref="0x7d199418"/>
        <function-ref name="address" scoped="" ref="0x7d1994f8"/>
        <function-ref name="destination" scoped="" ref="0x7d1995d8"/>
        <function-ref name="setSource" scoped="" ref="0x7d1996b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7d199798"/>
        <function-ref name="type" scoped="" ref="0x7d199878"/>
        <function-ref name="setType" scoped="" ref="0x7d199958"/>
        <function-ref name="isForMe" scoped="" ref="0x7d199a38"/>
        <function-ref name="setGroup" scoped="" ref="0x7d199b18"/>
        <function-ref name="localGroup" scoped="" ref="0x7d199bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7d182768" loc="49:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7d182768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7d182940"/>
        <function-ref name="rand32" scoped="" ref="0x7d182a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendReqMsg" ref="0x7d185010" loc="45:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendReqMsg" scoped="" ref="0x7d185010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d1851e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d1852c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d1853a8"/>
        <function-ref name="cancel" scoped="" ref="0x7d185488"/>
        <function-ref name="sendDone" scoped="" ref="0x7d185568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x7d190100" loc="39:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x7d190100"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d1902d8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x7d1903b8"/>
        <function-ref name="computeCrc" scoped="" ref="0x7d190498"/>
        <function-ref name="getSize" scoped="" ref="0x7d190578"/>
        <function-ref name="readDone" scoped="" ref="0x7d190658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BitVecUtils" ref="0x7d187920" loc="38:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVecUtils" scoped="" ref="0x7d187920"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVecUtils"/>
      </instance>
      <interface-functions>
        <function-ref name="indexOf" scoped="" ref="0x7d187af8"/>
        <function-ref name="printBitVec" scoped="" ref="0x7d187bd8"/>
        <function-ref name="countOnes" scoped="" ref="0x7d187cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x7d190a38" loc="40:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x7d190a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x7d190c10"/>
        <function-ref name="writeDone" scoped="" ref="0x7d190cf0"/>
        <function-ref name="erase" scoped="" ref="0x7d190dd0"/>
        <function-ref name="eraseDone" scoped="" ref="0x7d190eb0"/>
        <function-ref name="write" scoped="" ref="0x7d18a010"/>
        <function-ref name="sync" scoped="" ref="0x7d18a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveDataMsg" ref="0x7d18a268" loc="42:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDataMsg" scoped="" ref="0x7d18a268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d18a440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveReqMsg" ref="0x7d18a5b8" loc="43:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveReqMsg" scoped="" ref="0x7d18a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d18a790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendDataMsg" ref="0x7d18a908" loc="44:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendDataMsg" scoped="" ref="0x7d18a908"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d18aae0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d18abc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d18aca0"/>
        <function-ref name="cancel" scoped="" ref="0x7d18ad80"/>
        <function-ref name="sendDone" scoped="" ref="0x7d18ae60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d182b68" loc="51:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d182b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d182dc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d182ea0"/>
        <function-ref name="led1On" scoped="" ref="0x7d181010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d1810f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d1811d0"/>
        <function-ref name="get" scoped="" ref="0x7d1812b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7d181390"/>
        <function-ref name="led2Off" scoped="" ref="0x7d181710"/>
        <function-ref name="set" scoped="" ref="0x7d181470"/>
        <function-ref name="led0On" scoped="" ref="0x7d181550"/>
        <function-ref name="led2On" scoped="" ref="0x7d181630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugePageTransfer" ref="0x7d193618" loc="36:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugePageTransfer" scoped="" ref="0x7d193618"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugePageTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="setWorkingPage" scoped="" ref="0x7d193d30"/>
        <function-ref name="dataAvailable" scoped="" ref="0x7d1938d0"/>
        <function-ref name="suppressMsgs" scoped="" ref="0x7d1939b0"/>
        <function-ref name="receivedPage" scoped="" ref="0x7d193a90"/>
        <function-ref name="setImgNum" scoped="" ref="0x7d193b70"/>
        <function-ref name="isTransferring" scoped="" ref="0x7d193c50"/>
        <function-ref name="stop" scoped="" ref="0x7d1937f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7d184328" loc="47:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7d184328"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7d184500"/>
        <function-ref name="noAck" scoped="" ref="0x7d1845e0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7d1846c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7d1856b8" loc="46:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d1856b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d185890"/>
        <function-ref name="source" scoped="" ref="0x7d185970"/>
        <function-ref name="address" scoped="" ref="0x7d185a50"/>
        <function-ref name="destination" scoped="" ref="0x7d185b30"/>
        <function-ref name="setSource" scoped="" ref="0x7d185c10"/>
        <function-ref name="setDestination" scoped="" ref="0x7d185cf0"/>
        <function-ref name="type" scoped="" ref="0x7d185dd0"/>
        <function-ref name="setType" scoped="" ref="0x7d185eb0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d184010"/>
        <function-ref name="setGroup" scoped="" ref="0x7d1840f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7d1841d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7d1848c8" loc="48:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d1848c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d182208"/>
        <function-ref name="fired" scoped="" ref="0x7d183600"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d183ba0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d1839c0"/>
        <function-ref name="getdt" scoped="" ref="0x7d1825c8"/>
        <function-ref name="gett0" scoped="" ref="0x7d1823e8"/>
        <function-ref name="isRunning" scoped="" ref="0x7d1837e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d184ef0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d183ec0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d1831a0"/>
        <function-ref name="stop" scoped="" ref="0x7d183420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVecUtils" ref="0x7d133d60" loc="31:/opt/tinyos-2.x/tos/lib/net/Deluge/BitVecUtilsC.nc">
      <component-ref qname="BitVecUtilsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVecUtils" scoped="" ref="0x7d133d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVecUtils"/>
      </instance>
      <interface-functions>
        <function-ref name="indexOf" scoped="" ref="0x7d132010"/>
        <function-ref name="printBitVec" scoped="" ref="0x7d1320f0"/>
        <function-ref name="countOnes" scoped="" ref="0x7d1321d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d135920" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugePageTransferC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d135920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d125330"/>
        <function-ref name="fired" scoped="" ref="0x7d1346f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d134c90"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d134ab0"/>
        <function-ref name="getdt" scoped="" ref="0x7d1256f0"/>
        <function-ref name="gett0" scoped="" ref="0x7d125510"/>
        <function-ref name="isRunning" scoped="" ref="0x7d1348d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d134010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d125010"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d134290"/>
        <function-ref name="stop" scoped="" ref="0x7d134510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d120080" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d120080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d120258"/>
        <function-ref name="getPayload" scoped="" ref="0x7d120338"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d120418"/>
        <function-ref name="cancel" scoped="" ref="0x7d1204f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7d1205d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d120718" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d120718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d1208f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d1209d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d120ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d120b90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d120c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d120db0" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d120db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d11e010"/>
        <function-ref name="source" scoped="" ref="0x7d11e0f0"/>
        <function-ref name="address" scoped="" ref="0x7d11e1d0"/>
        <function-ref name="destination" scoped="" ref="0x7d11e2b0"/>
        <function-ref name="setSource" scoped="" ref="0x7d11e390"/>
        <function-ref name="setDestination" scoped="" ref="0x7d11e470"/>
        <function-ref name="type" scoped="" ref="0x7d11e550"/>
        <function-ref name="setType" scoped="" ref="0x7d11e630"/>
        <function-ref name="isForMe" scoped="" ref="0x7d11e710"/>
        <function-ref name="setGroup" scoped="" ref="0x7d11e7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7d11e8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7d11ea30" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7d11ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7d11ec08"/>
        <function-ref name="noAck" scoped="" ref="0x7d11ece8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7d11edc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7c5f91f0" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7c5f91f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7c5f93c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7c5f94a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7c5f9588"/>
        <function-ref name="cancel" scoped="" ref="0x7c5f9668"/>
        <function-ref name="sendDone" scoped="" ref="0x7c5f9748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7c5f98b8" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7c5f98b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7c5f9a90"/>
        <function-ref name="getPayload" scoped="" ref="0x7c5f9b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7c5f9c50"/>
        <function-ref name="cancel" scoped="" ref="0x7c5f9d30"/>
        <function-ref name="sendDone" scoped="" ref="0x7c5f9e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7c5f8010" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7c5f8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7c5f81e8"/>
        <function-ref name="source" scoped="" ref="0x7c5f82c8"/>
        <function-ref name="address" scoped="" ref="0x7c5f83a8"/>
        <function-ref name="destination" scoped="" ref="0x7c5f8488"/>
        <function-ref name="setSource" scoped="" ref="0x7c5f8568"/>
        <function-ref name="setDestination" scoped="" ref="0x7c5f8648"/>
        <function-ref name="type" scoped="" ref="0x7c5f8728"/>
        <function-ref name="setType" scoped="" ref="0x7c5f8808"/>
        <function-ref name="isForMe" scoped="" ref="0x7c5f88e8"/>
        <function-ref name="setGroup" scoped="" ref="0x7c5f89c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7c5f8aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d11a010" loc="38:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d11a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d11a1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d11a2c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d11a3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d11a488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d11a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d11bc28" loc="37:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d11bc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d11be00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d11a6a8" loc="39:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d11a6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d11a880"/>
        <function-ref name="source" scoped="" ref="0x7d11a960"/>
        <function-ref name="address" scoped="" ref="0x7d11aa40"/>
        <function-ref name="destination" scoped="" ref="0x7d11ab20"/>
        <function-ref name="setSource" scoped="" ref="0x7d11ac00"/>
        <function-ref name="setDestination" scoped="" ref="0x7d11ace0"/>
        <function-ref name="type" scoped="" ref="0x7d11adc0"/>
        <function-ref name="setType" scoped="" ref="0x7d11aea0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d116010"/>
        <function-ref name="setGroup" scoped="" ref="0x7d1160f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7d1161d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d1151f8" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d1151f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d1153d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d1154b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d115590"/>
        <function-ref name="cancel" scoped="" ref="0x7d115670"/>
        <function-ref name="sendDone" scoped="" ref="0x7d115750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d115890" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d115890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d115a68"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d115b48"/>
        <function-ref name="getPayload" scoped="" ref="0x7d115c28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d115d08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d115de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d115f28" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d115f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d114110"/>
        <function-ref name="source" scoped="" ref="0x7d1141f0"/>
        <function-ref name="address" scoped="" ref="0x7d1142d0"/>
        <function-ref name="destination" scoped="" ref="0x7d1143b0"/>
        <function-ref name="setSource" scoped="" ref="0x7d114490"/>
        <function-ref name="setDestination" scoped="" ref="0x7d114570"/>
        <function-ref name="type" scoped="" ref="0x7d114650"/>
        <function-ref name="setType" scoped="" ref="0x7d114730"/>
        <function-ref name="isForMe" scoped="" ref="0x7d114810"/>
        <function-ref name="setGroup" scoped="" ref="0x7d1148f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7d1149d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7d114b30" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7d114b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7d114d08"/>
        <function-ref name="noAck" scoped="" ref="0x7d114de8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7d114ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7c5eb8f8" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7c5eb8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7c5ebad0"/>
        <function-ref name="getPayload" scoped="" ref="0x7c5ebbb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7c5ebc90"/>
        <function-ref name="cancel" scoped="" ref="0x7c5ebd70"/>
        <function-ref name="sendDone" scoped="" ref="0x7c5ebe50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7c5e7010" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7c5e7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7c5e71e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7c5e72c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7c5e73a8"/>
        <function-ref name="cancel" scoped="" ref="0x7c5e7488"/>
        <function-ref name="sendDone" scoped="" ref="0x7c5e7568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7c5e76a8" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7c5e76a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7c5e7880"/>
        <function-ref name="source" scoped="" ref="0x7c5e7960"/>
        <function-ref name="address" scoped="" ref="0x7c5e7a40"/>
        <function-ref name="destination" scoped="" ref="0x7c5e7b20"/>
        <function-ref name="setSource" scoped="" ref="0x7c5e7c00"/>
        <function-ref name="setDestination" scoped="" ref="0x7c5e7ce0"/>
        <function-ref name="type" scoped="" ref="0x7c5e7dc0"/>
        <function-ref name="setType" scoped="" ref="0x7c5e7ea0"/>
        <function-ref name="isForMe" scoped="" ref="0x7c5e6010"/>
        <function-ref name="setGroup" scoped="" ref="0x7c5e60f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7c5e61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d112388" loc="38:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d112388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d112560"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d112640"/>
        <function-ref name="getPayload" scoped="" ref="0x7d112720"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d112800"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d1128e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d112070" loc="37:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d112070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d112248"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d112a20" loc="39:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d112a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d112bf8"/>
        <function-ref name="source" scoped="" ref="0x7d112cd8"/>
        <function-ref name="address" scoped="" ref="0x7d112db8"/>
        <function-ref name="destination" scoped="" ref="0x7d112e98"/>
        <function-ref name="setSource" scoped="" ref="0x7d110010"/>
        <function-ref name="setDestination" scoped="" ref="0x7d1100f0"/>
        <function-ref name="type" scoped="" ref="0x7d1101d0"/>
        <function-ref name="setType" scoped="" ref="0x7d1102b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d110390"/>
        <function-ref name="setGroup" scoped="" ref="0x7d110470"/>
        <function-ref name="localGroup" scoped="" ref="0x7d110550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d10f520" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d10f520"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d10f6f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d10f7d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d10f8b8"/>
        <function-ref name="cancel" scoped="" ref="0x7d10f998"/>
        <function-ref name="sendDone" scoped="" ref="0x7d10fa78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d10fbb8" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d10fbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d10fd90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d10fe70"/>
        <function-ref name="getPayload" scoped="" ref="0x7d10e010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d10e0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d10e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d10e310" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d10e310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d10e4e8"/>
        <function-ref name="source" scoped="" ref="0x7d10e5c8"/>
        <function-ref name="address" scoped="" ref="0x7d10e6a8"/>
        <function-ref name="destination" scoped="" ref="0x7d10e788"/>
        <function-ref name="setSource" scoped="" ref="0x7d10e868"/>
        <function-ref name="setDestination" scoped="" ref="0x7d10e948"/>
        <function-ref name="type" scoped="" ref="0x7d10ea28"/>
        <function-ref name="setType" scoped="" ref="0x7d10eb08"/>
        <function-ref name="isForMe" scoped="" ref="0x7d10ebe8"/>
        <function-ref name="setGroup" scoped="" ref="0x7d10ecc8"/>
        <function-ref name="localGroup" scoped="" ref="0x7d10eda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7d10ef08" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7d10ef08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7d10d0f0"/>
        <function-ref name="noAck" scoped="" ref="0x7d10d1d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7d10d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7c5d3030" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7c5d3030"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7c5d3208"/>
        <function-ref name="getPayload" scoped="" ref="0x7c5d32e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7c5d33c8"/>
        <function-ref name="cancel" scoped="" ref="0x7c5d34a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7c5d3588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7c5d36f8" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7c5d36f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7c5d38d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7c5d39b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7c5d3a90"/>
        <function-ref name="cancel" scoped="" ref="0x7c5d3b70"/>
        <function-ref name="sendDone" scoped="" ref="0x7c5d3c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7c5d3d90" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7c5d3d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7c5d2010"/>
        <function-ref name="source" scoped="" ref="0x7c5d20f0"/>
        <function-ref name="address" scoped="" ref="0x7c5d21d0"/>
        <function-ref name="destination" scoped="" ref="0x7c5d22b0"/>
        <function-ref name="setSource" scoped="" ref="0x7c5d2390"/>
        <function-ref name="setDestination" scoped="" ref="0x7c5d2470"/>
        <function-ref name="type" scoped="" ref="0x7c5d2550"/>
        <function-ref name="setType" scoped="" ref="0x7c5d2630"/>
        <function-ref name="isForMe" scoped="" ref="0x7c5d2710"/>
        <function-ref name="setGroup" scoped="" ref="0x7c5d27f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7c5d28d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d10c740" loc="38:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d10c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d10c918"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d10c9f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d10cad8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d10cbb8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d10cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d10c428" loc="37:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d10c428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d10c600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d10cdd8" loc="39:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d10cdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d10b010"/>
        <function-ref name="source" scoped="" ref="0x7d10b0f0"/>
        <function-ref name="address" scoped="" ref="0x7d10b1d0"/>
        <function-ref name="destination" scoped="" ref="0x7d10b2b0"/>
        <function-ref name="setSource" scoped="" ref="0x7d10b390"/>
        <function-ref name="setDestination" scoped="" ref="0x7d10b470"/>
        <function-ref name="type" scoped="" ref="0x7d10b550"/>
        <function-ref name="setType" scoped="" ref="0x7d10b630"/>
        <function-ref name="isForMe" scoped="" ref="0x7d10b710"/>
        <function-ref name="setGroup" scoped="" ref="0x7d10b7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7d10b8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d1097b8" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="ObjectTransferC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d1097b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d1060d8"/>
        <function-ref name="fired" scoped="" ref="0x7d1084e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d108a88"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d1088a8"/>
        <function-ref name="getdt" scoped="" ref="0x7d106498"/>
        <function-ref name="gett0" scoped="" ref="0x7d1062b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7d1086c8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d109de0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d108da8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d108088"/>
        <function-ref name="stop" scoped="" ref="0x7d108308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x7d03b010" loc="51:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="DelugeC.DisseminatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x7d03b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeDissemination" ref="0x7d7d1a10"/>
            <typename><typedef-ref name="DelugeDissemination" ref="0x7d7d01b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x7d03b638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x7d083280" loc="50:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="DelugeC.DisseminatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x7d083280"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeDissemination" ref="0x7d7d1a10"/>
            <typename><typedef-ref name="DelugeDissemination" ref="0x7d7d01b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x7d083d68"/>
        <function-ref name="get" scoped="" ref="0x7d0838c8"/>
        <function-ref name="set" scoped="" ref="0x7d083ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationCache" ref="0x7c5bf288" loc="50:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x7c5bf288"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-functions>
        <function-ref name="requestData" scoped="" ref="0x7c5bf540"/>
        <function-ref name="storeData" scoped="" ref="0x7c5bf8c0"/>
        <function-ref name="newData" scoped="" ref="0x7c5bf620"/>
        <function-ref name="start" scoped="" ref="0x7c5bf700"/>
        <function-ref name="requestSeqno" scoped="" ref="0x7c5bf7e0"/>
        <function-ref name="stop" scoped="" ref="0x7c5bf460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x7c5c19d0" loc="49:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x7c5c19d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeDissemination" ref="0x7d7d1a10"/>
            <typename><typedef-ref name="DelugeDissemination" ref="0x7d7d01b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x7c5bf010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7c5bfa20" loc="52:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7c5bfa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7c5bfbf8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7c5bfcd8"/>
        <function-ref name="led1On" scoped="" ref="0x7c5bfdb8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7c5bfe98"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7c5be010"/>
        <function-ref name="get" scoped="" ref="0x7c5be0f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7c5be1d0"/>
        <function-ref name="led0On" scoped="" ref="0x7c5be550"/>
        <function-ref name="set" scoped="" ref="0x7c5be390"/>
        <function-ref name="led2On" scoped="" ref="0x7c5be2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7c5be470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x7c5c2c70" loc="48:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x7c5c2c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeDissemination" ref="0x7d7d1a10"/>
            <typename><typedef-ref name="DelugeDissemination" ref="0x7d7d01b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x7c5c1788"/>
        <function-ref name="get" scoped="" ref="0x7c5c12e8"/>
        <function-ref name="set" scoped="" ref="0x7c5c14e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7c5c27c8" loc="46:/opt/tinyos-2.x/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7c5c27c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7c5c29a0"/>
        <function-ref name="stop" scoped="" ref="0x7c5c2a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x7d0c4ea8" loc="52:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7d0c4ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7d0c70c0"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7d0c71a0"/>
        <function-ref name="reset" scoped="" ref="0x7d0c7280"/>
        <function-ref name="start" scoped="" ref="0x7d0c7360"/>
        <function-ref name="stop" scoped="" ref="0x7d0c7440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x7d0ca718" loc="51:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x7d0ca718"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x7d0ca9d0"/>
        <function-ref name="stop" scoped="" ref="0x7d0cad50"/>
        <function-ref name="newData" scoped="" ref="0x7d0caab0"/>
        <function-ref name="start" scoped="" ref="0x7d0cab90"/>
        <function-ref name="requestSeqno" scoped="" ref="0x7d0cac70"/>
        <function-ref name="requestData" scoped="" ref="0x7d0ca8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7d0ca040" loc="48:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7d0ca040"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d0ca218"/>
        <function-ref name="stop" scoped="" ref="0x7d0ca2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x7d0c7860" loc="53:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x7d0c7860"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d0c7a38"/>
        <function-ref name="stop" scoped="" ref="0x7d0c7b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeReceive" ref="0x7d0bc010" loc="57:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeReceive" scoped="" ref="0x7d0bc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d0bc1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeAMSend" ref="0x7d0bd8f8" loc="56:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeAMSend" scoped="" ref="0x7d0bd8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d0bdad0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d0bdbb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d0bdc90"/>
        <function-ref name="cancel" scoped="" ref="0x7d0bdd70"/>
        <function-ref name="sendDone" scoped="" ref="0x7d0bde50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7d0bfef0" loc="53:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d0bfef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d0bd0e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d0bd1c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d0bd2a0"/>
        <function-ref name="cancel" scoped="" ref="0x7d0bd380"/>
        <function-ref name="sendDone" scoped="" ref="0x7d0bd460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x7d0bf178" loc="50:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7d0bf178"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7d0bf350"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7d0bf430"/>
        <function-ref name="reset" scoped="" ref="0x7d0bf510"/>
        <function-ref name="start" scoped="" ref="0x7d0bf5f0"/>
        <function-ref name="stop" scoped="" ref="0x7d0bf6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x7d0c0738" loc="49:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x7d0c0738"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x7d0c09f0"/>
        <function-ref name="stop" scoped="" ref="0x7d0c0d70"/>
        <function-ref name="newData" scoped="" ref="0x7d0c0ad0"/>
        <function-ref name="start" scoped="" ref="0x7d0c0bb0"/>
        <function-ref name="requestSeqno" scoped="" ref="0x7d0c0c90"/>
        <function-ref name="requestData" scoped="" ref="0x7d0c0910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7d0bd5a8" loc="54:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d0bd5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d0bd780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d0bc330" loc="59:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d0bc330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d0bc508"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d0bc5e8"/>
        <function-ref name="led1On" scoped="" ref="0x7d0bc6c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d0bc7a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d0bc888"/>
        <function-ref name="get" scoped="" ref="0x7d0bc968"/>
        <function-ref name="led1Off" scoped="" ref="0x7d0bca48"/>
        <function-ref name="led2Off" scoped="" ref="0x7d0bcdc8"/>
        <function-ref name="set" scoped="" ref="0x7d0bcb28"/>
        <function-ref name="led0On" scoped="" ref="0x7d0bcc08"/>
        <function-ref name="led2On" scoped="" ref="0x7d0bcce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7d0c0060" loc="46:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7d0c0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d0c0238"/>
        <function-ref name="stop" scoped="" ref="0x7d0c0318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x7d0bfaf0" loc="51:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x7d0bfaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d0bfcc8"/>
        <function-ref name="stop" scoped="" ref="0x7d0bfda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d0c2e40" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d0c2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d0c1050"/>
        <function-ref name="getPayload" scoped="" ref="0x7d0c1130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d0c1210"/>
        <function-ref name="cancel" scoped="" ref="0x7d0c12f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d0c13d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d0c1510" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d0c1510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d0c16e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d0c17c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d0c18a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d0c1988"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d0c1a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d0c1ba8" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d0c1ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d0c1d80"/>
        <function-ref name="source" scoped="" ref="0x7d0c1e60"/>
        <function-ref name="address" scoped="" ref="0x7d091010"/>
        <function-ref name="destination" scoped="" ref="0x7d0910f0"/>
        <function-ref name="setSource" scoped="" ref="0x7d0911d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7d0912b0"/>
        <function-ref name="type" scoped="" ref="0x7d091390"/>
        <function-ref name="setType" scoped="" ref="0x7d091470"/>
        <function-ref name="isForMe" scoped="" ref="0x7d091550"/>
        <function-ref name="setGroup" scoped="" ref="0x7d091630"/>
        <function-ref name="localGroup" scoped="" ref="0x7d091710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7d091870" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7d091870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7d091a48"/>
        <function-ref name="noAck" scoped="" ref="0x7d091b28"/>
        <function-ref name="wasAcked" scoped="" ref="0x7d091c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7c5b1e68" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7c5b1e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7c5ae050"/>
        <function-ref name="getPayload" scoped="" ref="0x7c5ae130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7c5ae210"/>
        <function-ref name="cancel" scoped="" ref="0x7c5ae2f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7c5ae3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7c5ae540" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7c5ae540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7c5ae718"/>
        <function-ref name="getPayload" scoped="" ref="0x7c5ae7f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7c5ae8d8"/>
        <function-ref name="cancel" scoped="" ref="0x7c5ae9b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7c5aea98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7c5aebd8" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7c5aebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7c5aedb0"/>
        <function-ref name="source" scoped="" ref="0x7c5aee90"/>
        <function-ref name="address" scoped="" ref="0x7c5ad010"/>
        <function-ref name="destination" scoped="" ref="0x7c5ad0f0"/>
        <function-ref name="setSource" scoped="" ref="0x7c5ad1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7c5ad2b0"/>
        <function-ref name="type" scoped="" ref="0x7c5ad390"/>
        <function-ref name="setType" scoped="" ref="0x7c5ad470"/>
        <function-ref name="isForMe" scoped="" ref="0x7c5ad550"/>
        <function-ref name="setGroup" scoped="" ref="0x7c5ad630"/>
        <function-ref name="localGroup" scoped="" ref="0x7c5ad710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d08f248" loc="38:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d08f248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d08f420"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d08f500"/>
        <function-ref name="getPayload" scoped="" ref="0x7d08f5e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d08f6c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d08f7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d090f18" loc="37:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d090f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d08f108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d08f8e0" loc="39:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d08f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d08fab8"/>
        <function-ref name="source" scoped="" ref="0x7d08fb98"/>
        <function-ref name="address" scoped="" ref="0x7d08fc78"/>
        <function-ref name="destination" scoped="" ref="0x7d08fd58"/>
        <function-ref name="setSource" scoped="" ref="0x7d08fe38"/>
        <function-ref name="setDestination" scoped="" ref="0x7d08ff18"/>
        <function-ref name="type" scoped="" ref="0x7d08e010"/>
        <function-ref name="setType" scoped="" ref="0x7d08e0f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d08e1d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7d08e2b0"/>
        <function-ref name="localGroup" scoped="" ref="0x7d08e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d08d520" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d08d520"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d08d6f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d08d7d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d08d8b8"/>
        <function-ref name="cancel" scoped="" ref="0x7d08d998"/>
        <function-ref name="sendDone" scoped="" ref="0x7d08da78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d08dbb8" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d08dbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d08dd90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d08de70"/>
        <function-ref name="getPayload" scoped="" ref="0x7d08b010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d08b0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d08b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d08b310" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d08b310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d08b4e8"/>
        <function-ref name="source" scoped="" ref="0x7d08b5c8"/>
        <function-ref name="address" scoped="" ref="0x7d08b6a8"/>
        <function-ref name="destination" scoped="" ref="0x7d08b788"/>
        <function-ref name="setSource" scoped="" ref="0x7d08b868"/>
        <function-ref name="setDestination" scoped="" ref="0x7d08b948"/>
        <function-ref name="type" scoped="" ref="0x7d08ba28"/>
        <function-ref name="setType" scoped="" ref="0x7d08bb08"/>
        <function-ref name="isForMe" scoped="" ref="0x7d08bbe8"/>
        <function-ref name="setGroup" scoped="" ref="0x7d08bcc8"/>
        <function-ref name="localGroup" scoped="" ref="0x7d08bda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7d08bf08" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7d08bf08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7d08a0f0"/>
        <function-ref name="noAck" scoped="" ref="0x7d08a1d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7d08a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7c5995f8" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7c5995f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7c5997d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7c5998b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7c599990"/>
        <function-ref name="cancel" scoped="" ref="0x7c599a70"/>
        <function-ref name="sendDone" scoped="" ref="0x7c599b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7c599cc0" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7c599cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7c599e98"/>
        <function-ref name="getPayload" scoped="" ref="0x7c598010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7c5980f0"/>
        <function-ref name="cancel" scoped="" ref="0x7c5981d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7c5982b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7c5983f0" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7c5983f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7c5985c8"/>
        <function-ref name="source" scoped="" ref="0x7c5986a8"/>
        <function-ref name="address" scoped="" ref="0x7c598788"/>
        <function-ref name="destination" scoped="" ref="0x7c598868"/>
        <function-ref name="setSource" scoped="" ref="0x7c598948"/>
        <function-ref name="setDestination" scoped="" ref="0x7c598a28"/>
        <function-ref name="type" scoped="" ref="0x7c598b08"/>
        <function-ref name="setType" scoped="" ref="0x7c598be8"/>
        <function-ref name="isForMe" scoped="" ref="0x7c598cc8"/>
        <function-ref name="setGroup" scoped="" ref="0x7c598da8"/>
        <function-ref name="localGroup" scoped="" ref="0x7c598e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d0899b8" loc="38:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d0899b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d089b90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d089c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7d089d50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d089e30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d089f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d0896a0" loc="37:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d0896a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d089878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d088070" loc="39:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d088070"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d088248"/>
        <function-ref name="source" scoped="" ref="0x7d088328"/>
        <function-ref name="address" scoped="" ref="0x7d088408"/>
        <function-ref name="destination" scoped="" ref="0x7d0884e8"/>
        <function-ref name="setSource" scoped="" ref="0x7d0885c8"/>
        <function-ref name="setDestination" scoped="" ref="0x7d0886a8"/>
        <function-ref name="type" scoped="" ref="0x7d088788"/>
        <function-ref name="setType" scoped="" ref="0x7d088868"/>
        <function-ref name="isForMe" scoped="" ref="0x7d088948"/>
        <function-ref name="setGroup" scoped="" ref="0x7d088a28"/>
        <function-ref name="localGroup" scoped="" ref="0x7d088b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x7d082908" loc="45:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationTimerP.nc">
      <component-ref qname="DisseminationTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7d082908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7d082ae0"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7d082bc0"/>
        <function-ref name="reset" scoped="" ref="0x7d082ca0"/>
        <function-ref name="start" scoped="" ref="0x7d082d80"/>
        <function-ref name="stop" scoped="" ref="0x7d082e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x7d040438" loc="47:/opt/tinyos-2.x/tos/lib/net/TrickleTimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7d040438"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7d040620"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7d040700"/>
        <function-ref name="reset" scoped="" ref="0x7d0407e0"/>
        <function-ref name="start" scoped="" ref="0x7d0408c0"/>
        <function-ref name="stop" scoped="" ref="0x7d0409a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pending" ref="0x7c586010" loc="54:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pending" scoped="" ref="0x7c586010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7c5861e8"/>
        <function-ref name="clear" scoped="" ref="0x7c5862c8"/>
        <function-ref name="toggle" scoped="" ref="0x7c5863a8"/>
        <function-ref name="get" scoped="" ref="0x7c586488"/>
        <function-ref name="assign" scoped="" ref="0x7c586568"/>
        <function-ref name="setAll" scoped="" ref="0x7c586648"/>
        <function-ref name="set" scoped="" ref="0x7c586728"/>
        <function-ref name="size" scoped="" ref="0x7c586808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Changed" ref="0x7c586968" loc="55:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Changed" scoped="" ref="0x7c586968"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7c586b40"/>
        <function-ref name="clear" scoped="" ref="0x7c586c20"/>
        <function-ref name="toggle" scoped="" ref="0x7c586d00"/>
        <function-ref name="get" scoped="" ref="0x7c586de0"/>
        <function-ref name="assign" scoped="" ref="0x7c586ec0"/>
        <function-ref name="setAll" scoped="" ref="0x7c585010"/>
        <function-ref name="set" scoped="" ref="0x7c5850f0"/>
        <function-ref name="size" scoped="" ref="0x7c5851d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7c585310" loc="56:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7c585310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7c5854e8"/>
        <function-ref name="rand32" scoped="" ref="0x7c5855c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x7c58a8d0" loc="50:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7c58a8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7c58aab8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7c58ab98"/>
        <function-ref name="reset" scoped="" ref="0x7c58ac78"/>
        <function-ref name="start" scoped="" ref="0x7c58ad58"/>
        <function-ref name="stop" scoped="" ref="0x7c58ae38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7c58a520" loc="49:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7c58a520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7c58a6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerTask" ref="0x7c584350" loc="146:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerTask" scoped="" ref="0x7c584350"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7c584528"/>
        <function-ref name="runTask" scoped="" ref="0x7c584608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7c585708" loc="57:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7c585708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7c5858e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7c5859c0"/>
        <function-ref name="led1On" scoped="" ref="0x7c585aa0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7c585b80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7c585c60"/>
        <function-ref name="get" scoped="" ref="0x7c585d40"/>
        <function-ref name="led1Off" scoped="" ref="0x7c585e20"/>
        <function-ref name="led0On" scoped="" ref="0x7c5841d0"/>
        <function-ref name="set" scoped="" ref="0x7c584010"/>
        <function-ref name="led2On" scoped="" ref="0x7c585f00"/>
        <function-ref name="led2Off" scoped="" ref="0x7c5840f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7c588058" loc="53:/opt/tinyos-2.x/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7c588058"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7c587a10"/>
        <function-ref name="fired" scoped="" ref="0x7c588d60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7c5873d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7c5871f0"/>
        <function-ref name="getdt" scoped="" ref="0x7c587dd0"/>
        <function-ref name="gett0" scoped="" ref="0x7c587bf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7c587010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7c588680"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7c5876f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7c588900"/>
        <function-ref name="stop" scoped="" ref="0x7c588b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7c582d38" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7c582d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7c580650"/>
        <function-ref name="fired" scoped="" ref="0x7c581a50"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7c580010"/>
        <function-ref name="isOneShot" scoped="" ref="0x7c581e10"/>
        <function-ref name="getdt" scoped="" ref="0x7c580a10"/>
        <function-ref name="gett0" scoped="" ref="0x7c580830"/>
        <function-ref name="isRunning" scoped="" ref="0x7c581c30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7c581370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7c580330"/>
        <function-ref name="startOneShot" scoped="" ref="0x7c5815f0"/>
        <function-ref name="stop" scoped="" ref="0x7c581870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7c57f6b0" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7c57f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7c57f888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7c57f9e8" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7c57f9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7c57fbc0"/>
        <function-ref name="clear" scoped="" ref="0x7c57fca0"/>
        <function-ref name="toggle" scoped="" ref="0x7c57fd80"/>
        <function-ref name="get" scoped="" ref="0x7c57fe60"/>
        <function-ref name="assign" scoped="" ref="0x7c57e010"/>
        <function-ref name="setAll" scoped="" ref="0x7c57e0f0"/>
        <function-ref name="set" scoped="" ref="0x7c57e1d0"/>
        <function-ref name="size" scoped="" ref="0x7c57e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7c57ef08" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7c57ef08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7c57d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7c57d250" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7c57d250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7c57d428"/>
        <function-ref name="clear" scoped="" ref="0x7c57d508"/>
        <function-ref name="toggle" scoped="" ref="0x7c57d5e8"/>
        <function-ref name="get" scoped="" ref="0x7c57d6c8"/>
        <function-ref name="assign" scoped="" ref="0x7c57d7a8"/>
        <function-ref name="setAll" scoped="" ref="0x7c57d888"/>
        <function-ref name="set" scoped="" ref="0x7c57d968"/>
        <function-ref name="size" scoped="" ref="0x7c57da48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7d037e38" loc="47:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationC.nc">
      <component-ref qname="DisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7d037e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d036050"/>
        <function-ref name="stop" scoped="" ref="0x7d036130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NetProg" ref="0x7d02f818" loc="37:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x7d02f818"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImgAndReboot" scoped="" ref="0x7d02f9f0"/>
        <function-ref name="reboot" scoped="" ref="0x7d02fad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSplitControl" ref="0x7d02e098" loc="39:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSplitControl" scoped="" ref="0x7d02e098"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7d02e270"/>
        <function-ref name="stopDone" scoped="" ref="0x7d02e350"/>
        <function-ref name="start" scoped="" ref="0x7d02e430"/>
        <function-ref name="stop" scoped="" ref="0x7d02e510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DissNotify" ref="0x7d02e720" loc="42:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DissNotify" scoped="" ref="0x7d02e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7d02ef28"/>
        <function-ref name="enable" scoped="" ref="0x7d02ed48"/>
        <function-ref name="notify" scoped="" ref="0x7d02d118"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControlDissemination" ref="0x7d030b08" loc="34:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControlDissemination" scoped="" ref="0x7d030b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7d030ce0"/>
        <function-ref name="stop" scoped="" ref="0x7d030dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IFlash" ref="0x7d02fc48" loc="38:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IFlash" scoped="" ref="0x7d02fc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="InternalFlash"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7d02fe20"/>
        <function-ref name="write" scoped="" ref="0x7d02ff00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReprogNotify" ref="0x7d02d420" loc="43:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReprogNotify" scoped="" ref="0x7d02d420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7d02dc28"/>
        <function-ref name="enable" scoped="" ref="0x7d02da48"/>
        <function-ref name="notify" scoped="" ref="0x7d02de08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeMetadata" ref="0x7d030f10" loc="35:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x7d030f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getImgDesc" scoped="" ref="0x7d02f108"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7d038a40" loc="30:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7d038a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7d038c18"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7d038cf8"/>
        <function-ref name="led1On" scoped="" ref="0x7d038dd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7d038eb8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7d033010"/>
        <function-ref name="get" scoped="" ref="0x7d0330f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7d0331d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7d033550"/>
        <function-ref name="set" scoped="" ref="0x7d0332b0"/>
        <function-ref name="led0On" scoped="" ref="0x7d033390"/>
        <function-ref name="led2On" scoped="" ref="0x7d033470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationUpdate" ref="0x7d0324e8" loc="32:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x7d0324e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeDissemination" ref="0x7d7d1a10"/>
            <typename><typedef-ref name="DelugeDissemination" ref="0x7d7d01b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x7d032b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StorageReadyNotify" ref="0x7d033768" loc="31:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageReadyNotify" scoped="" ref="0x7d033768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7d032010"/>
        <function-ref name="enable" scoped="" ref="0x7d033d90"/>
        <function-ref name="notify" scoped="" ref="0x7d0321f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationValue" ref="0x7d032e28" loc="33:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x7d032e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeDissemination" ref="0x7d7d1a10"/>
            <typename><typedef-ref name="DelugeDissemination" ref="0x7d7d01b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x7d030928"/>
        <function-ref name="get" scoped="" ref="0x7d030488"/>
        <function-ref name="set" scoped="" ref="0x7d030688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ObjectTransfer" ref="0x7d02f258" loc="36:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x7d02f258"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d02f430"/>
        <function-ref name="receiveDone" scoped="" ref="0x7d02f510"/>
        <function-ref name="publish" scoped="" ref="0x7d02f5f0"/>
        <function-ref name="stop" scoped="" ref="0x7d02f6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d035620" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugeC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d035620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d019010"/>
        <function-ref name="fired" scoped="" ref="0x7d01a350"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d01a8f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d01a710"/>
        <function-ref name="getdt" scoped="" ref="0x7d0193d0"/>
        <function-ref name="gett0" scoped="" ref="0x7d0191f0"/>
        <function-ref name="isRunning" scoped="" ref="0x7d01a530"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d035c48"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d01ac10"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d035ec8"/>
        <function-ref name="stop" scoped="" ref="0x7d01a170"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.6 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7ef83190" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10;</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7ef92a60" loc="49:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7ef63af0" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7ef63898" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7ef70550" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.&#10;</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7ef70b20" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10;</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7ef708a8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7ef63148" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10;</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7ef70e78" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7ef63530" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10;</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10;</short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7ef13010" loc="33:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7ef13328" loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7ef20990" loc="31:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7ef13960" loc="36:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7ef20ca8" loc="32:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7ef13640" loc="35:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7ef20370" loc="29:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clr" ref="0x7ef20680" loc="30:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.&#10;&#10;</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f2322f0" loc="46:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f232ad8" loc="61:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f232708" loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10;</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f2129e8" loc="56:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f212df0" loc="64:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f052010" loc="59:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep. </short>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7efe3cc0" loc="54:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f160920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7eff2bc0" loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7eb50a28" loc="92:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10;</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7eb50788" loc="92:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7eb45598" loc="117:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.&#10;&#10;</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7eb45348" loc="117:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7eb50468" loc="83:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents. </short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7eb45028" loc="109:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents. </short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
      <documentation loc="15:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.6 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x7eb70230" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10;</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param msg The complete message received.&#10;&#10; @param payload The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb71ab0" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7eb71c50" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eb71de0" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7eb84cd8" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba1930"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7eb84428" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba1930"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7eb845d8" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eb84760" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7eb82838" loc="124:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb823c0" loc="124:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eb82548" loc="124:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7eb82078" loc="112:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7eb83418" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb83030" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7eb83c00" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb83760" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7eb838e8" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7eb42260" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet. </short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  msg    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb42010" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7eb428d0" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  msg    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb425b0" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7eb35368" loc="115:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param msg   the packet &#10; @param len   the length of payload required&#10; @return      a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb40a90" loc="115:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eb40c18" loc="115:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7eb40748" loc="95:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7eb40270" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param msg   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb42c20" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eb42da8" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7eb14420" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7eb14068" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7eb141f0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7eb149f0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7feb0a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7eb14788" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7eb20ce8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.&#10;&#10;</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7eb20af8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7eb13010" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7eb14d58" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7eb11498" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7eb11498"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7eb118f8" loc="55:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.&#10; &#10;</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7eb10010" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().&#10;&#10;</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7eb11498"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7eb11c18" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7eb11da0" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7eb11498"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.6 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7eb73010" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  msg      the receied packet&#10; @param  payload  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return          a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
              <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb75740" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7eb758e0" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eb75a68" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <short>&#10; Constants for manipulating LEDs.&#10;&#10;</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7ebf3a58" loc="50:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7ebf3e30" loc="56:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7ebf21c0" loc="61:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7ebf2908" loc="72:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7ebf13e8" loc="89:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7ebf1930" loc="106:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7ebf2530" loc="66:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7ebe5020" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask. </short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7ebf1c68" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7ebf36e8" loc="45:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7ebf2c78" loc="78:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7ebf1010" loc="83:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7eb64840" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7eb64840"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7eb60720" loc="125:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7eb63b20" loc="72:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7eb62b58" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7eb625c8" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7eb62758" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7eb622a0" loc="87:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.&#10;</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7eb55010" loc="140:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7eb60b60" loc="133:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7eb63ef0" loc="81:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7eb64ef8" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7eb64c50" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7eb603c8" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7eb62e80" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7eb60030" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7eb634e0" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7eb63238" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7eb637e8" loc="67:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7eb24ee8" loc="166:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param amsg the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7eba1758"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb24ba0" loc="166:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7eb31148" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba1930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb32e68" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7eb32530" loc="57:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.&#10;</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba1930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="destination" ref="0x7eb32b18" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba1930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb32888" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7eb25328" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet. </short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba1930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb31d20" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7eb31eb0" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba1930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7eb319d8" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet. </short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba1930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb31490" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7eb31620" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba1930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7eb24010" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.&#10;</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb25da0" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7eb24850" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet. </short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  amsg    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb24350" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7eb244d8" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7eb25a58" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb25670" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7eb23670" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param amsg the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7eba1758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb23248" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7eb233d8" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7eba1758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7eb23a20" loc="184:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.&#10;&#10;</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7eba1758"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SinglePacket" loc="39:../../../tos/lib/netarch/single/SinglePacket.nc">
      <documentation loc="39:../../../tos/lib/netarch/single/SinglePacket.nc">
        <short>&#10;&#10; Access and set the properties of a multihop packet with a single&#10;&#10; node address based destination.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access and set the properties of a multihop packet with a single&#10;&#10; node address based destination.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="source" ref="0x7ea81110" loc="47:../../../tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="41:../../../tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; Returns the address of the source of the multihop packet.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns the address of the source of the multihop packet.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @return The source node of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba1930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ea83e38" loc="47:../../../tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7ea80268" loc="67:../../../tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="61:../../../tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; Returns the address of the destination of the multihop packet.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns the address of the destination of the multihop packet.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @return The destination node of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba1930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ea80010" loc="67:../../../tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7ea81ac8" loc="59:../../../tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="49:../../../tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; Sets the address of the source of the multihop packet. </short>
          <long>&#10;&#10; Sets the address of the source of the multihop packet.  As with&#10;&#10; the AM layer, this is set by the multihop layer, and should not&#10;&#10; need to be used when sending a packet.  However, buffers or other&#10;&#10; storage components may wish to use it to store the address for&#10;&#10; later retrieval.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @param src The source node of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba1930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ea81608" loc="59:../../../tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="src" ref="0x7ea81798" loc="59:../../../tos/lib/netarch/single/SinglePacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba1930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7ea80c28" loc="79:../../../tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="69:../../../tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; Sets the address of the destination of the multihop packet. </short>
          <long>&#10;&#10; Sets the address of the destination of the multihop packet.  As&#10;&#10; with the AM layer, this is set by the multihop layer, and should not&#10;&#10; need to be used when sending a packet.  However, buffers or other&#10;&#10; storage components may wish to use it to store the address for&#10;&#10; later retrieval.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @param dest The destination node of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba1930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ea80760" loc="79:../../../tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dest" ref="0x7ea808f0" loc="79:../../../tos/lib/netarch/single/SinglePacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba1930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7ea76480" loc="89:../../../tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="81:../../../tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; As with the AM layer, returns whether this node is the destination&#10;&#10; for the packet, but can also include special processing for broadcast&#10;&#10; addresses or similar values.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; As with the AM layer, returns whether this node is the destination&#10;&#10; for the packet, but can also include special processing for broadcast&#10;&#10; addresses or similar values.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @return Whether this node is the destination of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ea76140" loc="89:../../../tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IndexedIterator" loc="40:../../../tos/interfaces/IndexedIterator.nc">
      <parameters>
        <typedef name="iterator_item_t" ref="0x7ea24a70" loc="40:../../../tos/interfaces/IndexedIterator.nc">
          <interfacedef-ref qname="IndexedIterator"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7ea24a70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="end" ref="0x7ea23940" loc="56:../../../tos/interfaces/IndexedIterator.nc">
        <documentation loc="50:../../../tos/interfaces/IndexedIterator.nc">
          <short>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10; @param m Current item's index.&#10;&#10; @return TRUE if the current item is the end, FALSE otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="iterator_end_t" ref="0x7ea25960"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7ea24a70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7ea23700" loc="56:../../../tos/interfaces/IndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7ea24a70"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="next" ref="0x7ea23230" loc="48:../../../tos/interfaces/IndexedIterator.nc">
        <documentation loc="42:../../../tos/interfaces/IndexedIterator.nc">
          <short>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10; @param m Current item's index.&#10;&#10; @return The next item's index.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7ea24a70"/></type-var>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7ea24a70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7ea23030" loc="48:../../../tos/interfaces/IndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7ea24a70"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketEngine" loc="46:../../../tos/lib/netarch/multihop/PacketEngine.nc">
      <documentation loc="46:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <short>&#10;&#10; The PacketEngine interface connects the packet engine to any data&#10;&#10; control components. </short>
        <long>&#10;&#10; The PacketEngine interface connects the packet engine to any data&#10;&#10; control components.  Data control components can implement any number&#10;&#10; of functions on set of packets.  In fact, an entire routing Allow a data control component to manage its packets in the data&#10;&#10; engine.  Packet IDs are passed to the control component to simplify&#10;&#10; management of any additional data structures for each packet in the&#10;&#10; buffer.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperType" ref="0x7ea35a10" loc="179:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="173:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Returns the upper layer AM type of a given packet.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns the upper layer AM type of a given packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @return The upper layer AM type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_am_id_t" ref="0x7ea960f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ea357e8" loc="179:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="send" ref="0x7ea43b70" loc="98:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="89:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Marks this packet as next in line to be sent. </short>
          <long>&#10;&#10; Marks this packet as next in line to be sent.  The packet must be one&#10;&#10; that was signaled via the added event and cannot be the ID of any&#10;&#10; arbitrary packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @return SUCCESS if the action takes place, FAIL if not, EINVAL if the&#10;&#10;         packet is not found in the buffer or is not a waiting packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ea43878" loc="98:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7ea408a8" loc="135:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="126:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Passes this packet to upper layer as a received packet immediately. </short>
          <long>&#10;&#10; Passes this packet to upper layer as a received packet immediately.  The&#10;&#10; packet must be one that was signaled via the added event and cannot be&#10;&#10; the ID of any arbitrary packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @return SUCCESS if the action takes place, FAIL if not, EINVAL if the&#10;&#10;         packet is not found in the buffer or is not a waiting packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ea40588" loc="135:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendIntercept" ref="0x7ea400a0" loc="124:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="115:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Marks this packet as next in line to be sent, but allows the upper layer&#10;&#10; to intercept the packet first. </short>
          <long>&#10;&#10; Marks this packet as next in line to be sent, but allows the upper layer&#10;&#10; to intercept the packet first.  The packet must be one that was signaled&#10;&#10; via the added event and cannot be the ID of any arbitrary packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @return SUCCESS if the action takes place, FAIL if not, EINVAL if the&#10;&#10;         packet is not found in the buffer or is not a waiting packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ea41cc0" loc="124:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendAdded" ref="0x7ea457f0" loc="57:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="48:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; A packet to be sent was added to the packet engine by an upper layer.&#10;&#10;</short>
          <long>&#10;&#10; A packet to be sent was added to the packet engine by an upper layer.&#10;&#10; Unlike the Receive interface, this event does not allow swapping packet&#10;&#10; buffers because ownership of the packet does not leave the packet&#10;&#10; engine.&#10;&#10;&#10;&#10; @param pid Packet ID within the packet engine.&#10;&#10; @param msg Pointer to the packet that was added.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ea45330" loc="57:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7ea454e0" loc="57:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveAdded" ref="0x7ea441d0" loc="68:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="59:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; A received packet was added to the packet engine from a lower layer.&#10;&#10;</short>
          <long>&#10;&#10; A received packet was added to the packet engine from a lower layer.&#10;&#10; Unlike the Receive interface, this event does not allow swapping packet&#10;&#10; buffers because ownership of the packet does not leave the packet&#10;&#10; engine.&#10;&#10;&#10;&#10; @param pid Packet ID within the packet engine.&#10;&#10; @param msg Pointer to the packet that was added.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ea45cd8" loc="68:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7ea45e88" loc="68:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="snoopAdded" ref="0x7ea44bd0" loc="79:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="70:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; An overheard packet (this node is not the intended destination) was&#10;&#10; added to the packet engine from a lower layer. </short>
          <long>&#10;&#10; An overheard packet (this node is not the intended destination) was&#10;&#10; added to the packet engine from a lower layer.  Unlike the Receive&#10;&#10; interface, this event does not allow swapping packet buffers because&#10;&#10; ownership of the packet does not leave the packet engine.&#10;&#10;&#10;&#10; @param pid Packet ID within the packet engine.&#10;&#10; @param msg Pointer to the packet that was added.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ea446b8" loc="79:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7ea44868" loc="79:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="packet" ref="0x7ea43390" loc="87:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="81:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Gets the packet associated with a given ID in the packet engine.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Gets the packet associated with a given ID in the packet engine.&#10;&#10;&#10;&#10; @param pid ID of packet to access.&#10;&#10; @return Pointer to the packet, NULL if the ID is not in use or too large.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
              <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ea43100" loc="87:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ea417d0" loc="113:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="100:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Signals the completion of a send event to the lower layer. </short>
          <long>&#10;&#10; Signals the completion of a send event to the lower layer.  The return&#10;&#10; value indicates what should be done next with the packet.&#10;&#10;&#10;&#10; @param pid Packet ID within the packet engine.&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @param result SUCCESS if it was transmitted successfully, FAIL if&#10;&#10;               it was not, ECANCEL if it was cancelled by the upper&#10;&#10;               layer.&#10;&#10; @return If the packet is no longer needed, return PKT_SEND_DONE. If the&#10;&#10;         packet should be resent, return PKT_SEND_RETRY.  If the packet&#10;&#10;         should move back to the wait state, return PKT_SEND_WAIT.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_send_action_t" ref="0x7ea967f8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ea41088" loc="113:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7ea41238" loc="113:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="result" ref="0x7ea413c0" loc="113:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drop" ref="0x7ea361c0" loc="146:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="137:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Drops the packet from the buffer immediately. </short>
          <long>&#10;&#10; Drops the packet from the buffer immediately.  The packet must be one&#10;&#10; that was signaled via the added event and cannot be the ID of any&#10;&#10; arbitrary packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @return SUCCESS if the action takes place, FAIL if not, EINVAL if the&#10;&#10;         packet is not found in the buffer or is not a waiting packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ea40d90" loc="146:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="upperSendDone" ref="0x7ea36ba8" loc="158:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="148:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Manually signals the upper layer sendDone event with the given result&#10;&#10; for the given packet. </short>
          <long>&#10;&#10; Manually signals the upper layer sendDone event with the given result&#10;&#10; for the given packet.  This should be used carefully to avoid signally&#10;&#10; sendDone multiple times for the same packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @param result Send result.&#10;&#10; @return SUCCESS if the action takes place, FAIL if not, EINVAL if the&#10;&#10;         packet is not found in the buffer or is not a waiting packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ea366b0" loc="158:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
            </type-int>
          </variable>
          <variable name="result" ref="0x7ea36838" loc="158:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="waitList" ref="0x7ea352f0" loc="171:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="160:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Access a list of all packets still waiting for a control descision. </short>
          <long>&#10;&#10; Access a list of all packets still waiting for a control descision.  For&#10;&#10; example, if a routing path is found to destination B, this could be used&#10;&#10; to check if any other packets were also waiting for that same path since&#10;&#10; they can now be sent.  This command gives the index of the first packet&#10;&#10; in a list of waiting packets.  Traverse the rest of the list with the&#10;&#10; PacketWaitList interface provided by the engine.&#10;&#10;&#10;&#10; @return The ID for the first waiting packet, bufferSize if there aren't&#10;&#10;         any waiting packets.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setUpperType" ref="0x7ea342c0" loc="187:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="181:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Sets the upper layer AM type of a given packet.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Sets the upper layer AM type of a given packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @param newUid The new upper layer AM type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ea35ef8" loc="187:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eaa0950"/></typename>
            </type-int>
          </variable>
          <variable name="newUid" ref="0x7ea34090" loc="187:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10;</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7ea14270" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param msg - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ea20d60" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7ea14908" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param msg - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ea145d8" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7ea12010" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10;</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param msg - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ea14c78" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StaticIndexedIterator" loc="42:../../../tos/interfaces/StaticIndexedIterator.nc">
      <documentation loc="42:../../../tos/interfaces/StaticIndexedIterator.nc">
        <short>&#10;&#10; Iteration operations using indices. </short>
        <long>&#10;&#10; Iteration operations using indices.  This interface is the static or&#10;&#10; stateless version which requires a pointer to the structure containing&#10;&#10; the data to be passed in along with the index.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_source_t" ref="0x7e9c3be8" loc="42:../../../tos/interfaces/StaticIndexedIterator.nc">
          <interfacedef-ref qname="StaticIndexedIterator"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_source_t" scoped="" ref="0x7e9c3be8"/></type-var>
        </typedef>
        <typedef name="iterator_item_t" ref="0x7e9c3d00" loc="42:../../../tos/interfaces/StaticIndexedIterator.nc">
          <interfacedef-ref qname="StaticIndexedIterator"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e9c3d00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="end" ref="0x7e9c1038" loc="60:../../../tos/interfaces/StaticIndexedIterator.nc">
        <documentation loc="53:../../../tos/interfaces/StaticIndexedIterator.nc">
          <short>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10; @param d Pointer to the data source.&#10;&#10; @param m Current item's index.&#10;&#10; @return TRUE if the current item is the end, FALSE otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="iterator_end_t" ref="0x7ea25960"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="data_source_t" scoped="" ref="0x7e9c3be8"/></type-var>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e9c3d00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="d" ref="0x7e9c2c28" loc="60:../../../tos/interfaces/StaticIndexedIterator.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="data_source_t" scoped="" ref="0x7e9c3be8"/></type-var>
            </type-pointer>
          </variable>
          <variable name="m" ref="0x7e9c2db8" loc="60:../../../tos/interfaces/StaticIndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e9c3d00"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="next" ref="0x7e9c2718" loc="51:../../../tos/interfaces/StaticIndexedIterator.nc">
        <documentation loc="44:../../../tos/interfaces/StaticIndexedIterator.nc">
          <short>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10; @param d Pointer to the data source.&#10;&#10; @param m Current item's index.&#10;&#10; @return The next item's index.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e9c3d00"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="data_source_t" scoped="" ref="0x7e9c3be8"/></type-var>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e9c3d00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="d" ref="0x7e9c2358" loc="51:../../../tos/interfaces/StaticIndexedIterator.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="data_source_t" scoped="" ref="0x7e9c3be8"/></type-var>
            </type-pointer>
          </variable>
          <variable name="m" ref="0x7e9c24e8" loc="51:../../../tos/interfaces/StaticIndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e9c3d00"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TlvSinglePacket" loc="42:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
      <function command="" provided="0" name="value" ref="0x7e9e02c8" loc="75:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
        <documentation loc="68:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
          <short>&#10;&#10; Returns the value in this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the value in this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then NULL is returned.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @return Pointer to the value in this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e9e0010" loc="75:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x7e9d54e0" loc="100:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
        <documentation loc="93:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
          <short>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @return SUCCESS if the type instance was found and removed, EINVAL&#10;&#10;         otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e9d5288" loc="100:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="length" ref="0x7e9e1010" loc="51:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
        <documentation loc="44:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
          <short>&#10;&#10; Returns the length of this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the length of this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then 0 is returned.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @return Length of this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e9e2d50" loc="51:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x7e9e1aa8" loc="66:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
        <documentation loc="53:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
          <short>&#10;&#10; Sets the length of a type instance within the TLV block. </short>
          <long>&#10;&#10; Sets the length of a type instance within the TLV block.  This&#10;&#10; operation moves data around and should always be performed before&#10;&#10; storing a value with a different length than the one currently&#10;&#10; stored.  If the type instance is not found in the block or there&#10;&#10; is not enough room for the new length, returns ESIZE.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @return SUCCESS if the type instance was found, enough space was&#10;&#10;         available, and the length was set, ESIZE if there wasn't&#10;&#10;         enough space, EINVAL if the instance wasn't found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e9e1510" loc="66:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e9e1698" loc="66:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x7e9e0d70" loc="91:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
        <documentation loc="77:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
          <short>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance. </short>
          <long>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance.  This operation moves data around and&#10;&#10; should always be performed before storing a value of the given&#10;&#10; type.  The type instance will be added to the block as long as&#10;&#10; there are at least len + 2 bytes available in the buffer holding&#10;&#10; the TLV block.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @return SUCCESS if enough space was available and the length was&#10;&#10;         set, EALREADY if an instance already exists, ESIZE if&#10;&#10;         there wasn't enough space.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e9e07c0" loc="91:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e9e0948" loc="91:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TlvBlockPacket" loc="39:../../../tos/lib/netarch/tlv/TlvBlockPacket.nc">
      <documentation loc="39:../../../tos/lib/netarch/tlv/TlvBlockPacket.nc">
        <short>&#10;&#10; Manipulate a packet with a TLV block independent of the types it&#10;&#10; contains.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Manipulate a packet with a TLV block independent of the types it&#10;&#10; contains.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="remove" ref="0x7e9f04b8" loc="58:../../../tos/lib/netarch/tlv/TlvBlockPacket.nc">
        <documentation loc="52:../../../tos/lib/netarch/tlv/TlvBlockPacket.nc">
          <short>&#10;&#10; Removes a TLV block from the beginning of a given packet.</short>
          <long>&#10;&#10; Removes a TLV block from the beginning of a given packet. Other&#10;&#10; data is moved to fill the gap.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvBlockPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e9f0280" loc="58:../../../tos/lib/netarch/tlv/TlvBlockPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="length" ref="0x7e9f0c20" loc="67:../../../tos/lib/netarch/tlv/TlvBlockPacket.nc">
        <documentation loc="60:../../../tos/lib/netarch/tlv/TlvBlockPacket.nc">
          <short>&#10;&#10; Returns the length of the entire TLV block, including the block&#10;&#10; length value itself.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns the length of the entire TLV block, including the block&#10;&#10; length value itself.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @return Length of the TLV block.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvBlockPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e9f09b0" loc="67:../../../tos/lib/netarch/tlv/TlvBlockPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x7e9f1d70" loc="50:../../../tos/lib/netarch/tlv/TlvBlockPacket.nc">
        <documentation loc="41:../../../tos/lib/netarch/tlv/TlvBlockPacket.nc">
          <short>&#10;&#10; Adds a TLV block at the beginning of a given packet. </short>
          <long>&#10;&#10; Adds a TLV block at the beginning of a given packet.  Other&#10;&#10; data is moved to accomidate it.  This must be called on any new TLV&#10;&#10; block before using any other TLV commands.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @return SUCCESS if the add completed, ESIZE if there wasn't enough&#10;&#10;         space.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvBlockPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e9f1a98" loc="50:../../../tos/lib/netarch/tlv/TlvBlockPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TlvMultiplePacket" loc="42:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
      <documentation loc="42:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
        <short>&#10;&#10; Access data stored in a generalized Type-Length-Value (TLV) block&#10;&#10; within a packet. </short>
        <long>&#10;&#10; Access data stored in a generalized Type-Length-Value (TLV) block&#10;&#10; within a packet.  This interface, when used together with the TlvList&#10;&#10; interface, has no restrictions of the number of instances of a type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="value" ref="0x7e9d0080" loc="82:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
        <documentation loc="74:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
          <short>&#10;&#10; Returns the value in this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the value in this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then NULL is returned.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @return Pointer to the value in this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiplePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e9d1bf0" loc="82:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e9d1d80" loc="82:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="list" ref="0x7e9c6e30" loc="120:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
        <documentation loc="111:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
          <short>&#10;&#10; Access a list of all instances of a type within the TLV block.&#10;&#10;</short>
          <long>&#10;&#10; Access a list of all instances of a type within the TLV block.&#10;&#10; This command gives the key for the first such instance.&#10;&#10; Traverse the rest of the list with the TlvList interface.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @return The key for the first instance of a type in the TLV&#10;&#10;         block.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiplePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e9c6b50" loc="120:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x7e9c6640" loc="109:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
        <documentation loc="101:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
          <short>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @return SUCCESS if the type instance was found and removed, EINVAL&#10;&#10;         otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiplePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e9c6228" loc="109:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e9c63b8" loc="109:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="length" ref="0x7e9d29e8" loc="52:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
        <documentation loc="44:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
          <short>&#10;&#10; Returns the length of this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the length of this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then 0 is returned.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @return Length of this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiplePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e9d25a0" loc="52:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e9d2730" loc="52:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x7e9d16f0" loc="71:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
        <documentation loc="54:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
          <short>&#10;&#10; Sets the length of a type instance within the TLV block. </short>
          <long>&#10;&#10; Sets the length of a type instance within the TLV block.  This&#10;&#10; operation moves data around and should always be performed before&#10;&#10; storing a value with a different length than the one currently&#10;&#10; stored.  If the type instance is not found in the block or there&#10;&#10; is not enough room for the new length, returns ESIZE.&#10;&#10;&#10;&#10; Setting the length of a type instance typically invalidates any&#10;&#10; keys received prior to the change.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @return SUCCESS if the type instance was found, enough space was&#10;&#10;         available, and the length was set, ESIZE if wasn't enough&#10;&#10;         space, EINVAL if the instance wasn't found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiplePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e9d2ef8" loc="71:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e9d10b0" loc="71:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x7e9d1248" loc="72:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x7e9d0d10" loc="98:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
        <documentation loc="84:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
          <short>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance. </short>
          <long>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance.  This operation moves data around and&#10;&#10; should always be performed before storing a value of the given&#10;&#10; type.  The type instance will be added to the block as long as&#10;&#10; there are at least len + 2 bytes available in the buffer holding&#10;&#10; the TLV block.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @param key Pointer to store the key for the TLV type instance.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @return SUCCESS if enough space was available and the length was&#10;&#10;         set, ESIZE if there wasn't enough space.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiplePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e9d0588" loc="98:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e9d0738" loc="98:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e9d08d0" loc="99:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TlvMultiple" loc="42:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
      <documentation loc="42:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
        <short>&#10;&#10; Access data stored in a generalized Type-Length-Value (TLV) block.&#10;&#10;</short>
        <long>&#10;&#10; Access data stored in a generalized Type-Length-Value (TLV) block.&#10;&#10; This interface, when used together with the TlvList interface, has&#10;&#10; no restrictions of the number of instances of a type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="value" ref="0x7e970d50" loc="85:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="77:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Returns the value in this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the value in this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then NULL is returned.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @return Pointer to the value in this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e9708d0" loc="85:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e970a60" loc="85:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="list" ref="0x7e964078" loc="126:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="117:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Access a list of all instances of a type within the TLV block.&#10;&#10;</short>
          <long>&#10;&#10; Access a list of all instances of a type within the TLV block.&#10;&#10; This command gives the key for the first such instance.&#10;&#10; Traverse the rest of the list with the TlvList interface.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @return The key for the first instance of a type in the TLV&#10;&#10;         block.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e965d40" loc="126:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x7e965860" loc="115:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="106:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @param trailLen Current length of trailing data.&#10;&#10; @return SUCCESS if the type instance was found and removed, EINVAL&#10;&#10;         otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e965278" loc="115:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e965408" loc="115:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
            </type-int>
          </variable>
          <variable name="trailLen" ref="0x7e965598" loc="115:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="length" ref="0x7e971348" loc="52:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="44:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Returns the length of this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the length of this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then 0 is returned.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @return Length of this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e972ed0" loc="52:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e971088" loc="52:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x7e970400" loc="73:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="54:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Sets the length of a type instance within the TLV block. </short>
          <long>&#10;&#10; Sets the length of a type instance within the TLV block.  This&#10;&#10; operation moves data around and should always be performed before&#10;&#10; storing a value with a different length than the one currently&#10;&#10; stored.  If the type instance is not found in the block or there&#10;&#10; is not enough room for the new length, returns ESIZE.&#10;&#10;&#10;&#10; Setting the length of a type instance typically invalidates any&#10;&#10; keys received prior to the change.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @param trailLen Current length of trailing data.&#10;&#10; @param maxLen Maximum possible length of TLV block and trailing data.&#10;&#10; @return SUCCESS if the type instance was found, enough space was&#10;&#10;         available, and the length was set, ESIZE if wasn't enough&#10;&#10;         space, EINVAL if the instance wasn't found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e971828" loc="73:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e9719b8" loc="73:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x7e971b50" loc="74:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="trailLen" ref="0x7e971ce0" loc="74:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7e971e78" loc="75:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x7e967d78" loc="103:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="87:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance. </short>
          <long>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance.  This operation moves data around and&#10;&#10; should always be performed before storing a value of the given&#10;&#10; type.  The type instance will be added to the block as long as&#10;&#10; there are at least len + 2 bytes available in the buffer holding&#10;&#10; the TLV block.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Pointer to store the key for the TLV type instance.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @param trailLen Current length of trailing data.&#10;&#10; @param maxLen Maximum possible length of TLV block and trailing data.&#10;&#10; @return SUCCESS if enough space was available and the length was&#10;&#10;         set, ESIZE if there wasn't enough space.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e967248" loc="103:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e9673f8" loc="103:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="tlv_key_t" ref="0x7e9e38b8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e967590" loc="104:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="trailLen" ref="0x7e967720" loc="104:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7e9678a8" loc="104:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StaticVoidIndexedIterator" loc="42:../../../tos/interfaces/StaticVoidIndexedIterator.nc">
      <documentation loc="42:../../../tos/interfaces/StaticVoidIndexedIterator.nc">
        <short>&#10;&#10; Iteration operations using indices. </short>
        <long>&#10;&#10; Iteration operations using indices.  This interface is the static or&#10;&#10; stateless version which requires a pointer to the structure containing&#10;&#10; the data to be passed in along with the index.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="iterator_item_t" ref="0x7e961070" loc="42:../../../tos/interfaces/StaticVoidIndexedIterator.nc">
          <interfacedef-ref qname="StaticVoidIndexedIterator"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e961070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="end" ref="0x7e960328" loc="60:../../../tos/interfaces/StaticVoidIndexedIterator.nc">
        <documentation loc="53:../../../tos/interfaces/StaticVoidIndexedIterator.nc">
          <short>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10; @param d Pointer to the data source.&#10;&#10; @param m Current item's index.&#10;&#10; @return TRUE if the current item is the end, FALSE otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="StaticVoidIndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="iterator_end_t" ref="0x7ea25960"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e961070"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="d" ref="0x7e961f18" loc="60:../../../tos/interfaces/StaticVoidIndexedIterator.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="m" ref="0x7e9600c0" loc="60:../../../tos/interfaces/StaticVoidIndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e961070"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="next" ref="0x7e961a10" loc="51:../../../tos/interfaces/StaticVoidIndexedIterator.nc">
        <documentation loc="44:../../../tos/interfaces/StaticVoidIndexedIterator.nc">
          <short>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10; @param d Pointer to the data source.&#10;&#10; @param m Current item's index.&#10;&#10; @return The next item's index.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="StaticVoidIndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e961070"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e961070"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="d" ref="0x7e961650" loc="51:../../../tos/interfaces/StaticVoidIndexedIterator.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="m" ref="0x7e9617e0" loc="51:../../../tos/interfaces/StaticVoidIndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e961070"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TlvBlock" loc="38:../../../tos/lib/netarch/tlv/TlvBlock.nc">
      <documentation loc="38:../../../tos/lib/netarch/tlv/TlvBlock.nc">
        <short>&#10;&#10; Manipulate a TLV block independent of the types it contains.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Manipulate a TLV block independent of the types it contains.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="remove" ref="0x7e985790" loc="60:../../../tos/lib/netarch/tlv/TlvBlock.nc">
        <documentation loc="53:../../../tos/lib/netarch/tlv/TlvBlock.nc">
          <short>&#10;&#10; Removes a TLV block from the beginning of a given data buffer.&#10;&#10;</short>
          <long>&#10;&#10; Removes a TLV block from the beginning of a given data buffer.&#10;&#10; Other data is moved to fill the gap.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param trailLen Current length of trailing data.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvBlock"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e985378" loc="60:../../../tos/lib/netarch/tlv/TlvBlock.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="trailLen" ref="0x7e985508" loc="60:../../../tos/lib/netarch/tlv/TlvBlock.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="length" ref="0x7e985ee0" loc="69:../../../tos/lib/netarch/tlv/TlvBlock.nc">
        <documentation loc="62:../../../tos/lib/netarch/tlv/TlvBlock.nc">
          <short>&#10;&#10; Returns the length of the entire TLV block, including the block&#10;&#10; length value itself.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns the length of the entire TLV block, including the block&#10;&#10; length value itself.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @return Length of the TLV block.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvBlock"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e985c68" loc="69:../../../tos/lib/netarch/tlv/TlvBlock.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x7e986e98" loc="51:../../../tos/lib/netarch/tlv/TlvBlock.nc">
        <documentation loc="40:../../../tos/lib/netarch/tlv/TlvBlock.nc">
          <short>&#10;&#10; Adds a TLV block at the beginning of a given data buffer. </short>
          <long>&#10;&#10; Adds a TLV block at the beginning of a given data buffer.  Other&#10;&#10; data is moved to accomidate it.  This must be called on any new TLV&#10;&#10; block before using any other TLV commands.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param trailLen Current length of trailing data.&#10;&#10; @param maxLen Maximum possible length of TLV block and trailing data.&#10;&#10; @return SUCCESS if the add completed, ESIZE if there wasn't enough&#10;&#10;         space.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvBlock"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e986810" loc="51:../../../tos/lib/netarch/tlv/TlvBlock.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="trailLen" ref="0x7e9869a0" loc="51:../../../tos/lib/netarch/tlv/TlvBlock.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7e986b28" loc="51:../../../tos/lib/netarch/tlv/TlvBlock.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TlvSingle" loc="41:../../../tos/lib/netarch/tlv/TlvSingle.nc">
      <documentation loc="41:../../../tos/lib/netarch/tlv/TlvSingle.nc">
        <short>&#10;&#10; Access data stored in a generalized Type-Length-Value (TLV) block.&#10;&#10;</short>
        <long>&#10;&#10; Access data stored in a generalized Type-Length-Value (TLV) block.&#10;&#10; This interface allows at most one instance of a type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="value" ref="0x7e9774d0" loc="77:../../../tos/lib/netarch/tlv/TlvSingle.nc">
        <documentation loc="70:../../../tos/lib/netarch/tlv/TlvSingle.nc">
          <short>&#10;&#10; Returns the value in this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the value in this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then NULL is returned.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @return Pointer to the value in this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e977210" loc="77:../../../tos/lib/netarch/tlv/TlvSingle.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x7e976c80" loc="106:../../../tos/lib/netarch/tlv/TlvSingle.nc">
        <documentation loc="98:../../../tos/lib/netarch/tlv/TlvSingle.nc">
          <short>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param trailLen Current length of trailing data.&#10;&#10; @return SUCCESS if the type instance was found and removed, EINVAL&#10;&#10;         otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e976858" loc="106:../../../tos/lib/netarch/tlv/TlvSingle.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="trailLen" ref="0x7e9769e8" loc="106:../../../tos/lib/netarch/tlv/TlvSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="length" ref="0x7e981ee8" loc="50:../../../tos/lib/netarch/tlv/TlvSingle.nc">
        <documentation loc="43:../../../tos/lib/netarch/tlv/TlvSingle.nc">
          <short>&#10;&#10; Returns the length of this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the length of this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then 0 is returned.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @return Length of this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e981c58" loc="50:../../../tos/lib/netarch/tlv/TlvSingle.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x7e980d28" loc="67:../../../tos/lib/netarch/tlv/TlvSingle.nc">
        <documentation loc="52:../../../tos/lib/netarch/tlv/TlvSingle.nc">
          <short>&#10;&#10; Sets the length of a type instance within the TLV block. </short>
          <long>&#10;&#10; Sets the length of a type instance within the TLV block.  This&#10;&#10; operation moves data around and should always be performed before&#10;&#10; storing a value with a different length than the one currently&#10;&#10; stored.  If the type instance is not found in the block or there&#10;&#10; is not enough room for the new length, returns ESIZE.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @param trailLen Current length of trailing data.&#10;&#10; @param maxLen Maximum possible length of TLV block and trailing data.&#10;&#10; @return SUCCESS if the type instance was found, enough space was&#10;&#10;         available, and the length was set, ESIZE if there wasn't&#10;&#10;         enough space, EINVAL if the instance wasn't found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e9803d8" loc="67:../../../tos/lib/netarch/tlv/TlvSingle.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e980560" loc="67:../../../tos/lib/netarch/tlv/TlvSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="trailLen" ref="0x7e980700" loc="68:../../../tos/lib/netarch/tlv/TlvSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7e980888" loc="68:../../../tos/lib/netarch/tlv/TlvSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x7e976380" loc="95:../../../tos/lib/netarch/tlv/TlvSingle.nc">
        <documentation loc="79:../../../tos/lib/netarch/tlv/TlvSingle.nc">
          <short>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance. </short>
          <long>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance.  This operation moves data around and&#10;&#10; should always be performed before storing a value of the given&#10;&#10; type.  The type instance will be added to the block as long as&#10;&#10; there are at least len + 2 bytes available in the buffer holding&#10;&#10; the TLV block.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @param trailLen Current length of trailing data.&#10;&#10; @param maxLen Maximum possible length of TLV block and trailing data.&#10;&#10; @return SUCCESS if enough space was available and the length was&#10;&#10;         set, EALREADY if an instance already exists, ESIZE if&#10;&#10;         there wasn't enough space.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e9779a8" loc="95:../../../tos/lib/netarch/tlv/TlvSingle.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e977b30" loc="95:../../../tos/lib/netarch/tlv/TlvSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="trailLen" ref="0x7e977cd0" loc="96:../../../tos/lib/netarch/tlv/TlvSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7e977e58" loc="96:../../../tos/lib/netarch/tlv/TlvSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
      <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.&#10; </short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7e8352f0" loc="50:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7e8352f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7e834938" loc="96:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.&#10;&#10;</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7e8352f0"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7e834010" loc="80:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10;</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="empty" ref="0x7e8357f8" loc="61:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.&#10;</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="put" ref="0x7e834588" loc="88:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.&#10;&#10;</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7e8352f0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7e834350" loc="88:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7e8352f0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7e835c38" loc="72:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="PacketEngineClient" loc="40:../../../tos/lib/netarch/multihop/PacketEngineClient.nc">
      <documentation loc="40:../../../tos/lib/netarch/multihop/PacketEngineClient.nc">
        <short>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client. </short>
        <long>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.  This information aids in moving between the two kinds&#10;&#10; of AM types.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperType" ref="0x7e8477c0" loc="47:../../../tos/lib/netarch/multihop/PacketEngineClient.nc">
        <documentation loc="42:../../../tos/lib/netarch/multihop/PacketEngineClient.nc">
          <short>&#10;&#10; Returns the upper AM type used by this client above the the packet&#10;&#10; engine layer.&#10;&#10;</short>
          <long>&#10;&#10; Returns the upper AM type used by this client above the the packet&#10;&#10; engine layer.&#10;&#10; @return The upper AM type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngineClient"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="defaultLowerType" ref="0x7e847d88" loc="54:../../../tos/lib/netarch/multihop/PacketEngineClient.nc">
        <documentation loc="49:../../../tos/lib/netarch/multihop/PacketEngineClient.nc">
          <short>&#10;&#10; Returns the default lower AM type packets sent by this client should&#10;&#10; initially be set to.&#10;&#10;</short>
          <long>&#10;&#10; Returns the default lower AM type packets sent by this client should&#10;&#10; initially be set to.&#10;&#10; @return The default lower AM type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngineClient"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1588"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10;</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7e823c20" loc="41:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7e823868" loc="35:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.x/tos/interfaces/State.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10;</short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7e8250f0" loc="71:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7e827518" loc="56:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isState" ref="0x7e827d60" loc="66:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7e827bb0" loc="66:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7e827870" loc="61:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7e828c78" loc="45:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10;</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7e828a38" loc="45:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7e8271e0" loc="51:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7e827010" loc="51:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DataCache" loc="32:../../../tos/lib/data/cache/DataCache.nc">
      <documentation loc="32:../../../tos/lib/data/cache/DataCache.nc">
        <short>&#10; A data cache. </short>
        <long>&#10; A data cache.  While this is quite similar to the Cache interface, here a&#10; pointer to the element in the cache matching the given input item is&#10; returned.  Additional features, such as remove and eviction, are also&#10; available.&#10;&#10; @author Ryan Stinnett&#10;</long>
      </documentation>
      <parameters>
        <typedef name="item_t" ref="0x7e848e40" loc="32:../../../tos/lib/data/cache/DataCache.nc">
          <interfacedef-ref qname="DataCache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e848e40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="remove" ref="0x7e842b98" loc="74:../../../tos/lib/data/cache/DataCache.nc">
        <documentation loc="68:../../../tos/lib/data/cache/DataCache.nc">
          <short>&#10; Removes an item from the cache.&#10;&#10;</short>
          <long>&#10; Removes an item from the cache.&#10;&#10; @param item Pointer to the data item to remove from the cache.&#10; @return SUCCESS if found and removed, EINVAL if not found.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e848e40"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7e842968" loc="74:../../../tos/lib/data/cache/DataCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e848e40"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7e842010" loc="57:../../../tos/lib/data/cache/DataCache.nc">
        <documentation loc="49:../../../tos/lib/data/cache/DataCache.nc">
          <short>&#10; Notification that the given item is about to be evicted due to an insert&#10; which was requested when the cache was already full. </short>
          <long>&#10; Notification that the given item is about to be evicted due to an insert&#10; which was requested when the cache was already full.  Note that this is&#10; &#60;b>not&#60;/b> signaled on calls of remove.  The pointer passed here should&#10; not saved, as it will not longer be vaild once this event returns.&#10;&#10; @param item Pointer to the data item being evicted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e848e40"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7e843c00" loc="57:../../../tos/lib/data/cache/DataCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e848e40"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insert" ref="0x7e8438c8" loc="47:../../../tos/lib/data/cache/DataCache.nc">
        <documentation loc="40:../../../tos/lib/data/cache/DataCache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary. </short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.  An atomic lookup&#10; after insert should return true.&#10;&#10; @param item Pointer to the data item to insert into the cache.&#10; @return A pointer to the item in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e848e40"/></type-var>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e848e40"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7e843628" loc="47:../../../tos/lib/data/cache/DataCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e848e40"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7e842eb0" loc="79:../../../tos/lib/data/cache/DataCache.nc">
        <documentation loc="76:../../../tos/lib/data/cache/DataCache.nc">
          <short>&#10; Flush the cache of all entries.&#10;</short>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="lookup" ref="0x7e842628" loc="66:../../../tos/lib/data/cache/DataCache.nc">
        <documentation loc="59:../../../tos/lib/data/cache/DataCache.nc">
          <short>&#10; Returns a pointer to the item in the cache by matching various keys or&#10; NULL if it was not found.&#10;&#10;</short>
          <long>&#10; Returns a pointer to the item in the cache by matching various keys or&#10; NULL if it was not found.&#10;&#10; @param item Pointer to the data item to find in the cache.&#10; @return A pointer to the item in the cache, or NULL if not found.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e848e40"/></type-var>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e848e40"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7e842350" loc="66:../../../tos/lib/data/cache/DataCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e848e40"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7e8432e8" loc="38:../../../tos/lib/data/cache/DataCache.nc">
        <documentation loc="34:../../../tos/lib/data/cache/DataCache.nc">
          <short>&#10; Returns the number of items currently stored in the cache.&#10;</short>
          <long>&#10; Returns the number of items currently stored in the cache.&#10; @return The number of items.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Equal" loc="39:../../../tos/interfaces/Equal.nc">
      <documentation loc="39:../../../tos/interfaces/Equal.nc">
        <short>&#10;&#10; Generalized equality interface between two items. </short>
        <long>&#10;&#10; Generalized equality interface between two items.  Many uses are possible&#10;&#10; here, since the inputs could be array indices, as just one example.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="equal_t" ref="0x7e8556c8" loc="39:../../../tos/interfaces/Equal.nc">
          <interfacedef-ref qname="Equal"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7e8556c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7e854028" loc="48:../../../tos/interfaces/Equal.nc">
        <documentation loc="41:../../../tos/interfaces/Equal.nc">
          <short>&#10;&#10; Checks whether two items are equal.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks whether two items are equal.&#10;&#10;&#10;&#10; @param a First item to test.&#10;&#10; @param b Second item to test.&#10;&#10; @return TRUE if they are equal, FALSE if they are not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Equal"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7e8556c8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7e8556c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x7e855c40" loc="48:../../../tos/interfaces/Equal.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7e8556c8"/></type-var>
          </variable>
          <variable name="b" ref="0x7e855dc8" loc="48:../../../tos/interfaces/Equal.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7e8556c8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7e8642c0" loc="74:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e864738" loc="84:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.6 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7e726530" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7e726530"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7e726c30" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7e726530"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7e726930" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7e726530"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DataTimer" loc="41:../../../tos/lib/data/timer/DataTimer.nc">
      <parameters>
        <typedef name="data_t" ref="0x7e6e1288" loc="41:../../../tos/lib/data/timer/DataTimer.nc">
          <interfacedef-ref qname="DataTimer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7e6e1288"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="expired" ref="0x7e6e0ab0" loc="68:../../../tos/lib/data/timer/DataTimer.nc">
        <documentation loc="63:../../../tos/lib/data/timer/DataTimer.nc">
          <short>&#10;&#10; The timer for a given data item has expired.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The timer for a given data item has expired.&#10;&#10;&#10;&#10; @param data The data item which expired.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7e6e1288"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e6e08b0" loc="68:../../../tos/lib/data/timer/DataTimer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7e6e1288"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e6e1c88" loc="51:../../../tos/lib/data/timer/DataTimer.nc">
        <documentation loc="43:../../../tos/lib/data/timer/DataTimer.nc">
          <short>&#10;&#10; Starts the non-periodic timer for a given data item. </short>
          <long>&#10;&#10; Starts the non-periodic timer for a given data item.  If the same&#10;&#10; item is started multiple times, it will be tracked multiple times.&#10;&#10;&#10;&#10; @param data The data item to start timing.&#10;&#10; @param delay Time units before the data expires.&#10;&#10; @return SUCCESS, or FAIL if already full.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7e6e1288"/></type-var>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="data_timer_time_t" ref="0x7e6e2ea8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e6e1820" loc="51:../../../tos/lib/data/timer/DataTimer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7e6e1288"/></type-var>
          </variable>
          <variable name="delay" ref="0x7e6e19b8" loc="51:../../../tos/lib/data/timer/DataTimer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="data_timer_time_t" ref="0x7e6e2ea8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e6e03f8" loc="61:../../../tos/lib/data/timer/DataTimer.nc">
        <documentation loc="53:../../../tos/lib/data/timer/DataTimer.nc">
          <short>&#10;&#10; Stops the timer for a given data item. </short>
          <long>&#10;&#10; Stops the timer for a given data item.  If the item was started&#10;&#10; multiple times, this removes the instance that was closest to&#10;&#10; expiring.&#10;&#10;&#10;&#10; @param data The data item to stop timing.&#10;&#10; @return SUCCESS, or EINVAL if the item was not found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7e6e1288"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e6e0168" loc="61:../../../tos/lib/data/timer/DataTimer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7e6e1288"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RouteCache" loc="39:../../../tos/lib/netarch/dsr/RouteCache.nc">
      <documentation loc="39:../../../tos/lib/netarch/dsr/RouteCache.nc">
        <short>&#10;&#10; Access some kind of route cache or table that stores information about&#10;&#10; paths or links in the network and looks for routes when requested.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access some kind of route cache or table that stores information about&#10;&#10; paths or links in the network and looks for routes when requested.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="removeLink" ref="0x7e6f2518" loc="61:../../../tos/lib/netarch/dsr/RouteCache.nc">
        <documentation loc="51:../../../tos/lib/netarch/dsr/RouteCache.nc">
          <short>&#10;&#10; Removes any information stored for a given link from the route cache.&#10;&#10;</short>
          <long>&#10;&#10; Removes any information stored for a given link from the route cache.&#10;&#10; If the cache stores entire paths, then any path containing the link&#10;&#10; must at least be shortened enough to remove the given link or else&#10;&#10; discarded entirely.&#10;&#10;&#10;&#10; @param src The source node in the link to remove.&#10;&#10; @param dest The destination node in the link to remove.&#10;&#10; @param reverse If TRUE, the reverse path is also removed.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e6f3e68" loc="61:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7e6f2030" loc="61:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
            </type-int>
          </variable>
          <variable name="reverse" ref="0x7e6f21b8" loc="61:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="routeUpdate" ref="0x7e6ea578" loc="97:../../../tos/lib/netarch/dsr/RouteCache.nc">
        <documentation loc="80:../../../tos/lib/netarch/dsr/RouteCache.nc">
          <short>&#10;&#10; Provides the newest information available pertaining to a requested&#10;&#10; route. </short>
          <long>&#10;&#10; Provides the newest information available pertaining to a requested&#10;&#10; route.  Whether or not a route is available when the request is made,&#10;&#10; a routeUpdate will be signaled once the current availability is known.&#10;&#10; If the route is not initially available, a subsequent routeUpdate will&#10;&#10; be signaled if a route is later found and the route was requested via&#10;&#10; the trackRoute command.  If a route was found, numLinks is the number&#10;&#10; of links along the route.  If a route was not found, numLinks is 0.&#10;&#10; The route itself is accessible via the RouteNodeList interface.  Note&#10;&#10; that RouteNodeList traverses the route &#60;b>in reverse&#60;/b>, returning the&#10;&#10; previous or source node for a given node in the route.&#10;&#10;&#10;&#10; @param src The source node of the route.&#10;&#10; @param dest The destination node of the route.&#10;&#10; @param numLinks Number of links along the route if one was found, 0&#10;&#10;                 if no route was found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7e7097c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e6f0bf0" loc="97:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7e6f0d88" loc="97:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
            </type-int>
          </variable>
          <variable name="numLinks" ref="0x7e6ea010" loc="98:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7e7097c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addPath" ref="0x7e6f3998" loc="49:../../../tos/lib/netarch/dsr/RouteCache.nc">
        <documentation loc="41:../../../tos/lib/netarch/dsr/RouteCache.nc">
          <short>&#10;&#10; Adds a path to the route cache with a given number of links along the&#10;&#10; path and optionally adds the reverse path as well.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Adds a path to the route cache with a given number of links along the&#10;&#10; path and optionally adds the reverse path as well.&#10;&#10;&#10;&#10; @param nodes An array of nodes that make up the path to add.&#10;&#10; @param numLinks The number of links along the path.&#10;&#10; @param reverse If TRUE, the reverse path is also added.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7e7097c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="nodes" ref="0x7e6f3338" loc="49:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numLinks" ref="0x7e6f34d8" loc="49:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7e7097c8"/></typename>
            </type-int>
          </variable>
          <variable name="reverse" ref="0x7e6f3660" loc="49:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="trackRoute" ref="0x7e6f2e10" loc="70:../../../tos/lib/netarch/dsr/RouteCache.nc">
        <documentation loc="63:../../../tos/lib/netarch/dsr/RouteCache.nc">
          <short>&#10;&#10; Indicates the need for a route from node src to node dest. </short>
          <long>&#10;&#10; Indicates the need for a route from node src to node dest.  This is&#10;&#10; tracked by the route cache until the need is met.&#10;&#10;&#10;&#10; @param src The source node of the route.&#10;&#10; @param dest The destination node of the route.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e6f29e8" loc="70:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7e6f2b80" loc="70:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkRoute" ref="0x7e6f0720" loc="78:../../../tos/lib/netarch/dsr/RouteCache.nc">
        <documentation loc="72:../../../tos/lib/netarch/dsr/RouteCache.nc">
          <short>&#10;&#10; Requests an initial check for a route from node src to node dest.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Requests an initial check for a route from node src to node dest.&#10;&#10;&#10;&#10; @param src The source node of the route.&#10;&#10; @param dest The destination node of the route.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e6f0320" loc="78:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7e6f04b8" loc="78:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7099a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="29:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.&#10;&#10;</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x7e6d5780" loc="34:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.&#10;</short>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clear" ref="0x7e6d4a18" loc="58:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.&#10;</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7e6d4850" loc="58:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7e6d4f20" loc="64:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.&#10;</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7e6d4d58" loc="64:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7e6d4010" loc="46:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.&#10;</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7e6d5df8" loc="46:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x7e6d25e8" loc="71:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.&#10;</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7e6d2278" loc="71:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x7e6d2400" loc="71:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x7e6d5ab0" loc="39:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.&#10;</short>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e6d4510" loc="52:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.&#10;</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7e6d4350" loc="52:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7e6d2968" loc="77:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.&#10;</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Graph" loc="40:../../../tos/lib/data/graph/Graph.nc">
      <documentation loc="40:../../../tos/lib/data/graph/Graph.nc">
        <short>&#10;&#10; Basic operations for processsing and modifying a graph.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Basic operations for processsing and modifying a graph.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="maxEdges" ref="0x7e5d51c0" loc="77:../../../tos/lib/data/graph/Graph.nc">
        <documentation loc="69:../../../tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Gets the maximum number of edges that the graph can hold. </short>
          <long>&#10;&#10; Gets the maximum number of edges that the graph can hold.  This should&#10;&#10; return the number of &#34;conceptual&#34; edges.  For example, an undirected graph&#10;&#10; might use two directed edges for each undirected edge in its&#10;&#10; implementation, but this only counts as one edge here.&#10;&#10;&#10;&#10; @return The maximum number of edges that the graph can hold.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="removed" ref="0x7e5d0010" loc="150:../../../tos/lib/data/graph/Graph.nc">
        <documentation loc="145:../../../tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; The structure of the graph changed because an edge was removed.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The structure of the graph changed because an edge was removed.&#10;&#10;&#10;&#10; @param m The key for the edge that was removed.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e5d1d18" loc="150:../../../tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x7e5d3010" loc="115:../../../tos/lib/data/graph/Graph.nc">
        <documentation loc="107:../../../tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Remove an edge from the graph between vertices s and d.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Remove an edge from the graph between vertices s and d.&#10;&#10;&#10;&#10; @param s The first vertex or source of the edge.&#10;&#10; @param d The second vertex or destination of the edge.&#10;&#10; @return SUCCESS if the edge was found and removed, EINVAL if it was not.&#10;&#10;         ESIZE returned if either vertex is too large.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7e5d4b38" loc="115:../../../tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </variable>
          <variable name="d" ref="0x7e5d4cd0" loc="115:../../../tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7e5d3988" loc="126:../../../tos/lib/data/graph/Graph.nc">
        <documentation loc="117:../../../tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Retrieves an edge between vertices s and d, if it exists. </short>
          <long>&#10;&#10; Retrieves an edge between vertices s and d, if it exists.  If the graph is&#10;&#10; directed, s is taken to be the source and d is taken to be the destination&#10;&#10; of the directed edge.&#10;&#10;&#10;&#10; @param s The first vertex or source of the edge.&#10;&#10; @param d The second vertex or destination of the edge.&#10;&#10; @return The edge key if the edge was found, maxEdges() if it was not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7e5d34d0" loc="126:../../../tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </variable>
          <variable name="d" ref="0x7e5d3668" loc="126:../../../tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="directed" ref="0x7e5d5718" loc="85:../../../tos/lib/data/graph/Graph.nc">
        <documentation loc="79:../../../tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Checks if the graph is directed or not. </short>
          <long>&#10;&#10; Checks if the graph is directed or not.  This value should not change at&#10;&#10; run-time.&#10;&#10;&#10;&#10; @return TRUE if the graph is directed, FALSE if it is undirected.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="vertices" ref="0x7e5d7ea8" loc="49:../../../tos/lib/data/graph/Graph.nc">
        <documentation loc="42:../../../tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Gets the number of vertices currently in the graph. </short>
          <long>&#10;&#10; Gets the number of vertices currently in the graph.  For some&#10;&#10; implementations, this will always equal maxVertices() if all vertices&#10;&#10; are preallocated.&#10;&#10;&#10;&#10; @return The number of vertices currently in the graph.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="parallelEdges" ref="0x7e5d5c80" loc="93:../../../tos/lib/data/graph/Graph.nc">
        <documentation loc="87:../../../tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Checks if parallel edges are allowed or not. </short>
          <long>&#10;&#10; Checks if parallel edges are allowed or not.  This value should not change&#10;&#10; at run-time.&#10;&#10;&#10;&#10; @return TRUE if parallel edges are allowed, FALSE if they are not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="maxVertices" ref="0x7e5d6460" loc="56:../../../tos/lib/data/graph/Graph.nc">
        <documentation loc="51:../../../tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Gets the maximum number of vertices that the graph can hold.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Gets the maximum number of vertices that the graph can hold.&#10;&#10;&#10;&#10; @return The maximum number of vertices that the graph can hold.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="insert" ref="0x7e5d4680" loc="105:../../../tos/lib/data/graph/Graph.nc">
        <documentation loc="95:../../../tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Add a new edge to the graph between vertices s and d.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Add a new edge to the graph between vertices s and d.&#10;&#10;&#10;&#10; @param s The first vertex or source of the edge.&#10;&#10; @param d The second vertex or destination of the edge.&#10;&#10; @return If all of the edges have already been allocated or if parallel&#10;&#10;         edges are not supported and this edge has already been added or if either&#10;&#10;         vertex is too large, then maxEdges() is returned.  Otherwise, the key for&#10;&#10;         the new edge is returned.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7e5d4178" loc="105:../../../tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </variable>
          <variable name="d" ref="0x7e5d4310" loc="105:../../../tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="inserted" ref="0x7e5d1870" loc="143:../../../tos/lib/data/graph/Graph.nc">
        <documentation loc="138:../../../tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; The structure of the graph changed because an edge was inserted.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The structure of the graph changed because an edge was inserted.&#10;&#10;&#10;&#10; @param m The key for the edge that was inserted.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e5d1640" loc="143:../../../tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeList" ref="0x7e5d1190" loc="136:../../../tos/lib/data/graph/Graph.nc">
        <documentation loc="128:../../../tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Retrieves a list of edges adjacent to vertex s. </short>
          <long>&#10;&#10; Retrieves a list of edges adjacent to vertex s.  If the graph is directed,&#10;&#10; s is taken to be the source of the directed edge.&#10;&#10;&#10;&#10; @param s The first vertex or source of the edge.&#10;&#10; @return The key to the first node of the list if the vertex was valid,&#10;&#10;         maxEdges() if it was not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7e5d3e50" loc="136:../../../tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edges" ref="0x7e5d6ac0" loc="67:../../../tos/lib/data/graph/Graph.nc">
        <documentation loc="58:../../../tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Gets the number of edges currently in the graph. </short>
          <long>&#10;&#10; Gets the number of edges currently in the graph.  This should return the&#10;&#10; number of &#34;conceptual&#34; edges.  For example, an undirected graph might use&#10;&#10; two directed edges for each undirected edge in its implementation, but this&#10;&#10; only counts as one edge here.  For some implementations, this will always&#10;&#10; equal maxEdges() if all edges are preallocated.&#10;&#10;&#10;&#10; @return The number of edges currently in the graph.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SourceShortestPath" loc="38:../../../tos/lib/data/graph/SourceShortestPath.nc">
      <documentation loc="38:../../../tos/lib/data/graph/SourceShortestPath.nc">
        <short>&#10;&#10; Access details on the shortest path between vertices of a graph.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access details on the shortest path between vertices of a graph.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="rebuildNeeded" ref="0x7e5c76d8" loc="82:../../../tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="75:../../../tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; Checks if the tree should be rebuilt either because the source has changed&#10;&#10; or because the underlying graph structure has changed.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if the tree should be rebuilt either because the source has changed&#10;&#10; or because the underlying graph structure has changed.&#10;&#10;&#10;&#10; @param src The source vertex.&#10;&#10; @return Whether a rebuild is needed.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e5c7408" loc="82:../../../tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="buildTree" ref="0x7e5c9430" loc="47:../../../tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="40:../../../tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; Build a shortest path tree from vertex src.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Build a shortest path tree from vertex src.&#10;&#10;&#10;&#10; @param src The source vertex.&#10;&#10; @return If the vertex is too large then ESIZE or if a tree is currently&#10;&#10;         being built then EBUSY, else SUCCESS.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e5c91c0" loc="47:../../../tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="builtTree" ref="0x7e5c9b28" loc="54:../../../tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="49:../../../tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; The shortest path tree from vertex src is complete.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The shortest path tree from vertex src is complete.&#10;&#10;&#10;&#10; @param src The source vertex.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e5c9920" loc="54:../../../tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="buildingTree" ref="0x7e5c7c30" loc="89:../../../tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="84:../../../tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; Checks if the tree is currently being built.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if the tree is currently being built.&#10;&#10;&#10;&#10; @return Whether the tree is being built.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="edgeCount" ref="0x7e5c5468" loc="100:../../../tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="91:../../../tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; Get the number of edges to the destination vertex.&#10;&#10;</short>
          <long>&#10;&#10; Get the number of edges to the destination vertex.&#10;&#10; For example, if the shortest path from A to C was A -> D -> C, edgeCount()&#10;&#10; would return 2.&#10;&#10;&#10;&#10; @param dest The destination vertex.&#10;&#10; @return The number of edges.  If there is no path to the given destination,&#10;&#10;         or if an input vertex is too large, then the count is 0.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7e5c5178" loc="100:../../../tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="buildTreeTo" ref="0x7e5c8478" loc="64:../../../tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="56:../../../tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; Build the shortest path from vertex src to vertex dest.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Build the shortest path from vertex src to vertex dest.&#10;&#10;&#10;&#10; @param src The source vertex.&#10;&#10; @param dest The destination vertex.&#10;&#10; @return If the vertex is too large then ESIZE or if a tree is currently&#10;&#10;         being built then EBUSY, else SUCCESS.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e5c8030" loc="64:../../../tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7e5c81c8" loc="64:../../../tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="builtTreeTo" ref="0x7e5c8ef0" loc="72:../../../tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="66:../../../tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; The shortest path from vertex src to vertex dest is complete.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The shortest path from vertex src to vertex dest is complete.&#10;&#10;&#10;&#10; @param src The source vertex.&#10;&#10; @param dest The destination vertex.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e5c8968" loc="72:../../../tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7e5c8b00" loc="72:../../../tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
            </type-int>
          </variable>
          <variable name="pathResult" ref="0x7e5c8ca0" loc="73:../../../tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GraphEdge" loc="38:../../../tos/lib/data/graph/GraphEdge.nc">
      <documentation loc="38:../../../tos/lib/data/graph/GraphEdge.nc">
        <short>&#10;&#10; Access information about an edge of the graph.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access information about an edge of the graph.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="src" ref="0x7e5a7c28" loc="46:../../../tos/lib/data/graph/GraphEdge.nc">
        <documentation loc="40:../../../tos/lib/data/graph/GraphEdge.nc">
          <short>&#10;&#10; Get the first or source vertex of the edge.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Get the first or source vertex of the edge.&#10;&#10; &#10;&#10; @param m The key for the edge.&#10;&#10; @return The first or source vertex.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdge"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e5a7a08" loc="46:../../../tos/lib/data/graph/GraphEdge.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dest" ref="0x7e5a6350" loc="54:../../../tos/lib/data/graph/GraphEdge.nc">
        <documentation loc="48:../../../tos/lib/data/graph/GraphEdge.nc">
          <short>&#10;&#10; Get the second or destination vertex of the edge.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Get the second or destination vertex of the edge.&#10;&#10; &#10;&#10; @param m The key for the edge.&#10;&#10; @return The second or destination vertex.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdge"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5ea850"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e5a6120" loc="54:../../../tos/lib/data/graph/GraphEdge.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GraphEdgeWeight" loc="38:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
      <documentation loc="38:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
        <short>&#10;&#10; Access information about the weight of an edge of the graph.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access information about the weight of an edge of the graph.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="weight_t" ref="0x7e5a1888" loc="38:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
          <interfacedef-ref qname="GraphEdgeWeight"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="weight_t" scoped="" ref="0x7e5a1888"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="canChangeWeights" ref="0x7e5a1ef0" loc="46:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
        <documentation loc="40:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
          <short>&#10;&#10; Checks if the graph weights can be changed. </short>
          <long>&#10;&#10; Checks if the graph weights can be changed.  This value should not change &#10;&#10; at run-time.&#10;&#10; &#10;&#10; @return TRUE if the graph weights can change, FALSE if they cannot.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="weightChanged" ref="0x7e59b5e8" loc="71:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
        <documentation loc="66:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
          <short>&#10;&#10; The weight of an edge in the graph changed.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; The weight of an edge in the graph changed.&#10;&#10; &#10;&#10; @param m The key for the edge that had its weight changed.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e59b3d0" loc="71:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setWeight" ref="0x7e5a0ec8" loc="64:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
        <documentation loc="57:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
          <short>&#10;&#10; Set the weight of the edge. </short>
          <long>&#10;&#10; Set the weight of the edge.  If the graph is actually unweighted, no&#10;&#10; action is taken.&#10;&#10; &#10;&#10; @param m The key for the edge.&#10;&#10; @param w The updated weight.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="weight_t" scoped="" ref="0x7e5a1888"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e5a0b08" loc="64:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
            </type-int>
          </variable>
          <variable name="w" ref="0x7e5a0c98" loc="64:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="weight_t" scoped="" ref="0x7e5a1888"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="weight" ref="0x7e5a0630" loc="55:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
        <documentation loc="48:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
          <short>&#10;&#10; Get the weight of the edge. </short>
          <long>&#10;&#10; Get the weight of the edge.  If the graph is actually unweighted, a unit&#10;&#10; weight is always returned.&#10;&#10; &#10;&#10; @param m The key for the edge.&#10;&#10; @return The weight of the edge.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="weight_t" scoped="" ref="0x7e5a1888"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e5a03f0" loc="55:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5eaa20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IndexedAlloc" loc="42:../../../tos/lib/data/alloc/IndexedAlloc.nc">
      <documentation loc="42:../../../tos/lib/data/alloc/IndexedAlloc.nc">
        <short>&#10;&#10; Interface to a component that implements a run-time allocation policy on top&#10;&#10; of a static size array via indices. </short>
        <long>&#10;&#10; Interface to a component that implements a run-time allocation policy on top&#10;&#10; of a static size array via indices.  This simplifies component design by&#10;&#10; moving the policy out of each component, leading to cleaner code.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="size" ref="0x7e5873c8" loc="64:../../../tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="58:../../../tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; The number of elements currently allocated.&#10;&#10;</short>
          <long>&#10;&#10; The number of elements currently allocated.&#10;&#10; Always less than or equal to maxSize().&#10;&#10;&#10;&#10; @return The number of elements currently allocated.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5919f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="allocated" ref="0x7e586d38" loc="95:../../../tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="90:../../../tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Checks if an index is currently allocated.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if an index is currently allocated.&#10;&#10;&#10;&#10; @return TRUE if the index is allocated, FALSE if it is not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5919f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e586b28" loc="95:../../../tos/lib/data/alloc/IndexedAlloc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5919f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7e587920" loc="71:../../../tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="66:../../../tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; The maximum number of elements that can be allocated.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The maximum number of elements that can be allocated.&#10;&#10;&#10;&#10; @return The maximum size that can be allocated.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5919f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="alloc" ref="0x7e587eb0" loc="79:../../../tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="73:../../../tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Allocate an index in the set.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Allocate an index in the set.&#10;&#10;&#10;&#10; @return If an index is free, it will be allocated and returned.  Otherwise,&#10;&#10;         maxSize() is returned to indicate that all elements are allocated.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5919f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="none" ref="0x7e5888b0" loc="49:../../../tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="44:../../../tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Checks if none of the elements are allocated.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if none of the elements are allocated.&#10;&#10;&#10;&#10; @return TRUE if none of the elements are allocated, FALSE otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="free" ref="0x7e586650" loc="88:../../../tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="81:../../../tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Frees an index in the set.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Frees an index in the set.&#10;&#10;&#10;&#10; @return If an index is allocated, it will be freed and SUCCESS is returned.&#10;&#10;         If it was already free, no change is made and EALREADY is returned.&#10;&#10;         If the index is too large, ESIZE is returned.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5919f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e5863c8" loc="88:../../../tos/lib/data/alloc/IndexedAlloc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5919f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="all" ref="0x7e588e00" loc="56:../../../tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="51:../../../tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Checks if all of the elements are allocated.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if all of the elements are allocated.&#10;&#10;&#10;&#10; @return TRUE if all of the elements are allocated, FALSE otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="PriorityQueue" loc="40:../../../tos/lib/data/queue/PriorityQueue.nc">
      <documentation loc="40:../../../tos/lib/data/queue/PriorityQueue.nc">
        <short>&#10;&#10; Interface to a priority queue sitting on top of an index heap. </short>
        <long>&#10;&#10; Interface to a priority queue sitting on top of an index heap.  The meaning&#10;&#10; of some terms defined here is implementation dependent since either a min or&#10;&#10; max heap could be used.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7e507de8" loc="122:../../../tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="119:../../../tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Removes all elements from the priority queue.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="findBest" ref="0x7e507318" loc="109:../../../tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="103:../../../tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Finds the index of the element with the best priority (at the root of the&#10;&#10; heap), but does not remove it.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Finds the index of the element with the best priority (at the root of the&#10;&#10; heap), but does not remove it.&#10;&#10; &#10;&#10; @return Index of the element with the best priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7e512270"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7e50b790" loc="62:../../../tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="57:../../../tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; The maximum number of elements the priority queue can hold.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The maximum number of elements the priority queue can hold.&#10;&#10;&#10;&#10; @return The maximum priority queue size.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7e512270"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="insert" ref="0x7e50a010" loc="72:../../../tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="64:../../../tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Insert the element at index m into the priority queue.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Insert the element at index m into the priority queue.&#10;&#10;&#10;&#10; @param m Index of the element to insert.&#10;&#10; @return If the priority queue is full then FAIL, if m is too large for the&#10;&#10;         queue then ESIZE, if m has already been inserted then EALREADY,&#10;&#10;         otherwise SUCCESS.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e512270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e50bc68" loc="72:../../../tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e512270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="moveUp" ref="0x7e50ae80" loc="87:../../../tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="82:../../../tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; If the priority of element m has improved, move that element up the heap&#10;&#10; if needed.&#10;&#10;</short>
          <long>&#10;&#10; If the priority of element m has improved, move that element up the heap&#10;&#10; if needed.&#10;&#10; @param m Index of the element with altered priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e512270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e50ac20" loc="87:../../../tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e512270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="move" ref="0x7e508d20" loc="101:../../../tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="96:../../../tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; If the priority of element m has changed, move that element up or down the &#10;&#10; heap if needed.&#10;&#10;</short>
          <long>&#10;&#10; If the priority of element m has changed, move that element up or down the &#10;&#10; heap if needed.&#10;&#10; @param m Index of the element with altered priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e512270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e508ab0" loc="101:../../../tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e512270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inserted" ref="0x7e50a750" loc="80:../../../tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="74:../../../tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Checks whether element m has already been inserted.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Checks whether element m has already been inserted.&#10;&#10; &#10;&#10; @param m Index of the element to check on.&#10;&#10; @return TRUE if element m has already been inserted, otherwise FALSE.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e512270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e50a4f0" loc="80:../../../tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e512270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="moveDown" ref="0x7e5085e0" loc="94:../../../tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="89:../../../tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; If the priority of element m has worsened, move that element down the heap&#10;&#10; if needed.&#10;&#10;</short>
          <long>&#10;&#10; If the priority of element m has worsened, move that element down the heap&#10;&#10; if needed.&#10;&#10; @param m Index of the element with altered priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e512270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e508380" loc="94:../../../tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e512270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7e50cc70" loc="47:../../../tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="42:../../../tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Checks if the priority queue is empty.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if the priority queue is empty.&#10;&#10;&#10;&#10; @return Whether the priority queue is empty.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="removeBest" ref="0x7e507918" loc="117:../../../tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="111:../../../tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Finds the index of the element with the best priority (at the root of the&#10;&#10; heap) and removes it from the priority queue.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Finds the index of the element with the best priority (at the root of the&#10;&#10; heap) and removes it from the priority queue.&#10;&#10; &#10;&#10; @return Index of the element with the best priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7e512270"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="size" ref="0x7e50b228" loc="55:../../../tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="49:../../../tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; The number of elements currently in the priority queue.&#10;&#10;</short>
          <long>&#10;&#10; The number of elements currently in the priority queue.&#10;&#10; Always less than or equal to maxSize().&#10;&#10;&#10;&#10; @return The number of elements in the priority queue.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7e512270"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Compare" loc="39:../../../tos/interfaces/Compare.nc">
      <documentation loc="39:../../../tos/interfaces/Compare.nc">
        <short>&#10;&#10; Generalized comparison interface between two items. </short>
        <long>&#10;&#10; Generalized comparison interface between two items.  Many uses are possible&#10;&#10; here, since the inputs could be array indices, as just one example.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="compare_t" ref="0x7e504b00" loc="39:../../../tos/interfaces/Compare.nc">
          <interfacedef-ref qname="Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7e504b00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7e503528" loc="49:../../../tos/interfaces/Compare.nc">
        <documentation loc="41:../../../tos/interfaces/Compare.nc">
          <short>&#10;&#10; Returns a negative integer, zero, or a positive integer if the first&#10;&#10; argument is less than, equal to, or greater than the second.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns a negative integer, zero, or a positive integer if the first&#10;&#10; argument is less than, equal to, or greater than the second.&#10;&#10;&#10;&#10; @param a First item to test.&#10;&#10; @param b Second item to test.&#10;&#10; @return A negative integer, zero, or a positive integer.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1">
            <typename><typedef-ref name="int16_t" ref="0x7fea00f0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7e504b00"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7e504b00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x7e503090" loc="49:../../../tos/interfaces/Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7e504b00"/></type-var>
          </variable>
          <variable name="b" ref="0x7e503220" loc="49:../../../tos/interfaces/Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7e504b00"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10;</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10;&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7e3d34d8" loc="95:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10;</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3d3278" loc="95:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7e3d4938" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10;</short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3d46f8" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7e3d6e10" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10;</short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7e3d6be0" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7e3d6888" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10;</short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7e3d6660" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7e3d4388" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet. </short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7e3d4168" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7e3d4ef8" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10;</short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3d4cb0" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10;</short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getLocalSleepInterval" ref="0x7e3d0918" loc="58:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return the local node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getRxDutyCycle" ref="0x7e3ccde0" loc="112:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="108:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return the destination node's duty cycle configured in this message&#10;     in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3ccc00" loc="112:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleepIntervalToDutyCycle" ref="0x7e3cba20" loc="128:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10;</short>
          <long>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; @param sleepInterval The sleep interval in units of [ms]&#10; @return The duty cycle in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepInterval" ref="0x7e3cb788" loc="128:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalDutyCycle" ref="0x7e3cd378" loc="81:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return this node's radio duty cycle rate, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setRxSleepInterval" ref="0x7e3cdb38" loc="90:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10;</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10; @param msg Pointer to the message that will be sent&#10; @param sleepInterval The receiving node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3cd6c8" loc="90:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="sleepIntervalMs" ref="0x7e3cd860" loc="90:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalDutyCycle" ref="0x7e3cd010" loc="76:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10;</short>
          <long>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10; For example, to get a 0.05% duty cycle,&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(5);&#10; &#60;/code>&#10;&#10; For a 100% duty cycle (always on),&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(10000);&#10; &#60;/code>&#10;&#10; This is the equivalent of setting the local sleep interval explicitly.&#10; &#10; @param dutyCycle The duty cycle percentage, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x7e3d0c50" loc="76:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxDutyCycle" ref="0x7e3cc8a8" loc="106:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10;</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10; Duty cycle is in units of [percentage*100], i.e. 0.25% duty cycle = 25.&#10; &#10; @param msg Pointer to the message that will be sent&#10; @param dutyCycle The duty cycle of the receiving mote, in units of &#10;     [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3cc3d0" loc="106:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dutyCycle" ref="0x7e3cc568" loc="106:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dutyCycleToSleepInterval" ref="0x7e3cb438" loc="120:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="114:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10;</short>
          <long>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; @param dutyCycle The duty cycle in units of [percentage*100]&#10; @return The equivalent sleep interval, in units of [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x7e3cb178" loc="120:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxSleepInterval" ref="0x7e3cc088" loc="95:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return the destination node's sleep interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3cde98" loc="95:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalSleepInterval" ref="0x7e3d05c8" loc="53:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio sleep interval, in milliseconds.&#10;</short>
          <long>&#10; Set this this node's radio sleep interval, in milliseconds.&#10; Once every interval, the node will sleep and perform an Rx check &#10; on the radio.  Setting the sleep interval to 0 will keep the radio&#10; always on.&#10;&#10; This is the equivalent of setting the local duty cycle rate.&#10;&#10; @param sleepIntervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x7e3d02c0" loc="53:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <short>&#10;</short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7e3c6a30" loc="63:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10;</short>
          <long>&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3c6878" loc="63:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7e3c78f0" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10;</short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param msg&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3c74f0" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7e3c7688" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7e3c6520" loc="58:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short> &#10;</short>
          <long> &#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3c6368" loc="58:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7e3c6010" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10;</short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3c7c38" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7e3c7dd0" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7e3c6f20" loc="68:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3c6d80" loc="68:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.&#10;</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7e3d8010" loc="47:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10;</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param msg A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3dbc48" loc="47:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.6 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7e3b9010" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   msg     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3ba920" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e3baaa8" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7e3b8b98" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length. </short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   msg    the packet&#10; @return         a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3b8698" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e3b8820" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7e3b8350" loc="101:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e3b96e0" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   msg    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3b9358" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e3b9ed8" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param msg   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3b9a28" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7e3b9bb0" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7e3ac558" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10;</short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7e3ac120" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7e3ac2b0" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7e3addd8" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7e3ada68" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @param on TRUE to turn address recognition on, FALSE to turn it off&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7e3ad8b0" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7e3b1db8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7e3b1c50" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7e3b0d78" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7e3b0c10" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7e3b0590" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7e3b0428" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7e3acc50" loc="101:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7e3ad588" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7e3ad420" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7e3ac8f0" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7e3b08e8" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sync" ref="0x7e3b1930" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7e3b0108" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7e3ad0f8" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.&#10;</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeader" ref="0x7e3b6e10" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10;</short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:11" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7ebe2a18"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7ebe13d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3b6c40" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7e3b3388" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10;</short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:9" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7ebe18b8"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7ebe0298"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3b31b0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7e3a85f0" loc="50:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10;</short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba1930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="changed" ref="0x7e3a8c98" loc="60:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.&#10;</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7e3a8948" loc="55:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10;</short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7eba1758"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7e3a8288" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10;</short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7eba1758"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba1930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7e3a9eb0" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7eba1758"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7e3a8068" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba1930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7e366c48" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10;</short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e366880" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7e366a08" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e3655f0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.&#10;&#10;</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="modify" ref="0x7e363668" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e363068" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7e363210" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e363398" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e365cf8" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10;</short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e365958" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7e365ae0" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7e365248" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10;</short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7e365010" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7e36a7a0" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7e3695b8" loc="97:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.&#10;&#10;</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7e369238" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.&#10;&#10;</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7e36bc90" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7e36a3a8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.&#10;&#10;</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7e36aaf8" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7e36ae98" loc="83:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.&#10;&#10;</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7e36a010" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7e36e010" loc="110:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.  &#10;&#10;</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request 	  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7e370690" loc="87:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="request" ref="0x7e370260" loc="78:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0x7e3709b0" loc="92:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7e36e418" loc="118:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7e314b88" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.&#10;&#10;</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe2888"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e314968" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e313118" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.&#10; &#10;</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe2888"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e314ed8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10;</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e325a70" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e325a70"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7e325b88" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e325b88"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7e3239c0" loc="98:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e325b88"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7e324998" loc="67:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7e323648" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e325b88"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e325b88"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7e323120" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e325b88"/></type-var>
          </variable>
          <variable name="dt" ref="0x7e3232b0" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e325b88"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7e324dd0" loc="77:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7e323df8" loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10;</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e325b88"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="start" ref="0x7e3242a8" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e325b88"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7e324010" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e325b88"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e324660" loc="62:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.&#10;</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7e30f6d0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe2888"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7e3175d8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe2888"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e317010" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7e3171b8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e317340" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e317ee8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe2888"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e317920" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7e317ac8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e317c50" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7e31cf28" loc="57:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7e31cb80" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10;</short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7e31c7c0" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7e31c498" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7e26c1b0" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0823a8"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f0825f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x7e26d178" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b1640"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1890"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e26d010" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b1640"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1890"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7e26d988" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0901a8"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0903f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x7e26e118" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c1708"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c1958"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7e26de40" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0901a8"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0903f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7e26dcd8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0901a8"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0903f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7e26c668" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0823a8"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f0825f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7e26c500" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0823a8"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f0825f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x7e26e780" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0700"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0950"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x7e26e450" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b1640"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1890"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x7e26ec40" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c1708"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c1958"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e26ead8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c1708"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c1958"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x7e26d630" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0700"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0950"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e26d4c8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0700"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0950"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7e268080" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e268080"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7e266620" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.&#10;</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7e266438" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7e267d40" loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10;</short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e2684f0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.&#10;</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e268080"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x7e267010" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.&#10;</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e268080"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e268d60" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e268080"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7e267348" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7e266100" loc="73:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10;</short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e268a18" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.&#10;</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e268080"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e268830" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e268080"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e267678" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e2679a8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7e265ee8" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e265ee8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7e260928" loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10;</short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7e261bd0" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e261380" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.&#10;</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e265ee8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x7e261f08" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7e260cb0" loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10;</short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e2618a0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.&#10;</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e265ee8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e2616c0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e265ee8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e260260" loc="56:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e260590" loc="59:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.  &#10;</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7e2863d0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e2863d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7e2844a0" loc="89:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="test" ref="0x7e285dd0" loc="78:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10;</short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e286830" loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.&#10;</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e2863d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7e2849b8" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.&#10;</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7e2847e0" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7e284d50" loc="101:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.&#10;</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x7e2853c8" loc="66:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7e285090" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7e284178" loc="84:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10;</short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e286d30" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.&#10;</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e2863d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e286b70" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e2863d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e285700" loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e285a30" loc="72:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x7e245de0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f100140"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f100390"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7e244e48" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0d1208"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0d1458"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7e244638" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f1e38"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0d20e0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7e244af0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f1e38"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0d20e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7e244988" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f1e38"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0d20e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7e242320" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0d1208"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0d1458"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7e2421b8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0d1208"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0d1458"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7e2442e0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f100140"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f100390"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e244178" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f100140"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f100390"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="15:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x7e22eed0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x7e22d2d8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x7e22ead8" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7e22d6d8" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7e22e260" loc="21:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10;</short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f2ad0"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x7f0f2d20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7e22e790" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10;</short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f2ad0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f0f2d20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7e22e5a0" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f2ad0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f0f2d20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10;</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e0e1b78" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e0e1b78"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7e0e1c90" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e0e1c90"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7e0d2198" loc="53:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e0e1c90"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7e0d28f8" loc="65:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7e0d25b8" loc="60:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits. </short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7e0d2cc8" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed. </short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.6 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7e042260" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7e042ac8" loc="55:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.&#10;</short>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x7e042798" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7e0425a8" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7e043f20" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.&#10;&#10;</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7e020950" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7e012640" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7e0205f8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="edge" ref="0x7e012300" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.&#10;</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7e012088" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7e0202a8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7e020d28" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10;</short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7dff3420" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="17:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip. </short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7df8f660" loc="24:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released. </short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7df8fa00" loc="31:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus. </short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7df8fe28" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10;</short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7df85968" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7df85510" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7df85698" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7df832f8" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7df84d60" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7df84ee8" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7df83088" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7df84a00" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe2888"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7df845d8" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7df84760" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7df851a8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe2888"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7df88d58" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7df88ee0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7df84270" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7df85cc8" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7df85e50" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7df84010" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus. </short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7df61470" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.&#10;&#10;</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param txBuf A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param rxBuf A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7df62d28" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7df62ed0" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7df61088" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7df54010" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.&#10;&#10;</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param txBuf The buffer used for transmission&#10; @param rxBuf The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7df617d0" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7df61978" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7df61b08" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7df61ca0" loc="72:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7df647f0" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10;</short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7df645b8" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7deca010" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7dec6920" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7dec70f0" loc="100:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7dec6dd8" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7dec6c70" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7deccbe0" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7dec7d70" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7dec7c08" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7dec95e0" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7dec9478" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7deca6c0" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10;</short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7dec37e8" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7dec3680" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7dec9908" loc="97:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7dec55e8" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7dec5480" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7dec5c30" loc="120:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7dec65f8" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7dec6490" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7dec3338" loc="124:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7dec75a0" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7dec7438" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7decabc8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10;</short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7deca9f8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7dec9db0" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7dec9c48" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7dec6140" loc="106:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7dec5140" loc="112:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7dec5908" loc="115:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7dec3010" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7dec78c0" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7deca350" loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7dec9138" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete. &#10;</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7decaf08" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7dea4c48" loc="80:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.&#10;&#10;</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="userId" ref="0x7dea3068" loc="88:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.&#10; &#10;</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7de62898" loc="74:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7de62d30" loc="84:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10;</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7de20d98" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7de1f288" loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7de1b3f0" loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.&#10;</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="configure" ref="0x7de1b018" loc="49:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.&#10;</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7de13c30" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10;</short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7de1ded8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7de139f8" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7de1ded8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7de14c40" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.&#10;&#10;</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7de13298" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10;</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7de1ded8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7de13010" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7de1ded8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7de136a8" loc="60:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue. &#10;</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7de1ded8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10;</short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7dd79130" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="RadioTimeStamping" loc="33:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <short>&#10; Interface for receiving time stamp information from the radio.&#10;</short>
        <long>&#10; Interface for receiving time stamp information from the radio.&#10; This information is also embedded in packet metadata.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   October 10 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="transmittedSFD" ref="0x7dd7c648" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter has been&#10; transmitted: units are in terms of a 32kHz clock.&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7dd7c2b0" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
          <variable name="p_msg" ref="0x7dd7c460" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedSFD" ref="0x7dd7cd00" loc="50:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock. </short>
          <long> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock.  &#60;b>NOTE&#60;/b> that receiving&#10; a receivedSFD() event does NOT mean that a packet will be&#10; received; the transmission may stop, become corrupted, or be&#10; filtered by the physical or link layers.  The number of rxSFD&#10; events will always be great than or equal to the number of&#10; Receive message events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7dd7c990" loc="50:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7dd430f0" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.&#10;&#10;</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7dd44c88" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7dd44e38" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7dd44950" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7dd44590" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.&#10;&#10;</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7dd44390" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7db94c38" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7db94c38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7db93118" loc="50:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/opt/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="16:/opt/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x7d949010" loc="20:/opt/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/opt/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</short>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="19:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10;</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7d932728" loc="32:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10;</short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7d932360" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.&#10;</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7d932af0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.&#10;</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10;</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007/02/04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7d925010" loc="56:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10;</short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="requested" ref="0x7d9258d8" loc="73:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0x7d926b30" loc="46:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7d925420" loc="65:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10; </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7d925db0" loc="81:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="45:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7d8da290" loc="52:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource. </short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="51:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7d88b6b8" loc="51:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7d88b6b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7d88bb38" loc="57:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.&#10; &#10;</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7d88a258" loc="65:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().&#10;&#10;</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7d88b6b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7d88be78" loc="65:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7d88a030" loc="65:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7d88b6b8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10;&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10;&#10; from multiple channels using the ATmega128's free-running mode.&#10;&#10;</short>
        <long>&#10;&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10;&#10; from multiple channels using the ATmega128's free-running mode.&#10;&#10; &#60;p>&#10;&#10; Because of the possibility that samples may be imprecise after &#10;&#10; switching channels and/or reference voltages, and because there&#10;&#10; is a one sample delay on swithcing channels and reference voltages,&#10;&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10;&#10; &#60;ol type=&#34;A&#34;>&#10;&#10; &#60;li>Acquire N samples from channel C:&#10;&#10;    &#60;ol>&#10;&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;&#10;       (note that the choice of prescalers is very limited, so you&#10;&#10;       don't have many choices for sampling rate)&#10;&#10;    &#60;li>ignore the first dataReady event&#10;&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;&#10;       on the last one&#10;&#10;    &#60;/ol>&#10;&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;&#10;    assumes that none of these channels are differential)&#10;&#10;    &#60;ol>&#10;&#10;    &#60;li>call getData to start sampling on channel C1&#10;&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;&#10;       *newChannel&#10;&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;&#10;       (the data from the first dataReady event is ignored)&#10;&#10;    &#60;/ol>&#10;&#10; &#60;/ol>&#10;&#10;&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;&#10; @author David Gay&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7d879888" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10;&#10; Initiates free-running ADC conversions, with the ability to switch &#10;&#10; channels and reference-voltage with a one sample delay.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Initiates free-running ADC conversions, with the ability to switch &#10;&#10; channels and reference-voltage with a one sample delay.&#10;&#10;&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;&#10;   be changed in the dataReady event, though these changes happen&#10;&#10;   with a one-sample delay (this is a hardware restriction).&#10;&#10; @param refVoltage Initial A/D reference voltage. See the&#10;&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;&#10;   the reference voltage can be changed in the dataReady event with&#10;&#10;   a one-sample delay.&#10;&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;&#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10;&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;&#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;&#10;  See the ATmega128 manual for details.&#10;&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;&#10;   imprecise (due to a change in reference voltage, or switching to a&#10;&#10;   differential input channel)&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7d87bd30" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7d87bec0" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7d879088" loc="92:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7d879218" loc="92:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7d8789b0" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10;&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10;&#10; Returns the next sample in a free-running conversion. Allow the user&#10;&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10;&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10;&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;&#10;   (we assume that the second conversion after a change of reference&#10;&#10;   voltage or after switching to a differential channel is precise)&#10;&#10; @param channel Channel this sample was from.&#10;&#10; @param newChannel Change this parameter to switch to a new channel&#10;&#10;   for the second next sample.&#10;&#10; @param newRefVoltage Change this parameter to change the reference &#10;&#10;   voltage for the second next sample.&#10;&#10;&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7d879db8" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7d878010" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7d878198" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7d878358" loc="111:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7d878508" loc="111:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="43:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10;&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10;&#10; a single sample from a channel.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10;&#10; a single sample from a channel.&#10;&#10;&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;&#10; @author David Gay&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7d87f698" loc="61:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10;&#10; Initiates an ADC conversion on a given channel.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Initiates an ADC conversion on a given channel.&#10;&#10;&#10;&#10; @param channel A/D conversion channel.&#10;&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10;&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;&#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10;&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;&#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;&#10;  See the ATmega128 manual for details.&#10;&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;&#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;&#10;   differential input channel)&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7d880cd8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7d880e68" loc="61:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7d87f030" loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7d87f1c0" loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7d87e720" loc="82:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10;&#10; Cancel an outstanding getData operation.</short>
          <long>&#10;&#10; Cancel an outstanding getData operation. Use with care, to&#10;&#10; avoid problems with races between the dataReady event and cancel.&#10;&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;&#10;   conversion was already complete. dataReady will be (or has&#10;&#10;   already been) signaled.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7d87e0a8" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10;&#10; Indicates a sample has been recorded by the ADC as the result&#10;&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Indicates a sample has been recorded by the ADC as the result&#10;&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10;&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10;&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7d87fbb0" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7d87fd38" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7d86b428" loc="105:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7d86f780" loc="44:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10;</short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f132cc8"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x7f131010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7d869588" loc="131:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="126:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10;</short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7d869368" loc="131:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7d86b828" loc="113:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10;</short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7d86ec98" loc="73:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7d86fca8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10;</short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f132cc8"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f131010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7d86fac8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f132cc8"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f131010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7d86c348" loc="82:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7d869028" loc="124:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="119:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10;</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7d869a80" loc="141:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="133:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7d86c010" loc="77:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7d86c9c0" loc="90:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7d86c688" loc="86:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7d86cd98" loc="97:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7d86bbd8" loc="118:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="114:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10;</short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7d86e5d0" loc="60:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10;</short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f121150"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f121540"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7d86e3e8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f121150"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f121540"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7d86b0f0" loc="101:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7d86e0a0" loc="55:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10;</short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f121150"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f121540"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7d86e968" loc="66:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10;</short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7d868010" loc="147:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="143:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10;</short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7d869dc8" loc="147:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Notify" loc="52:/opt/tinyos-2.x/tos/interfaces/Notify.nc">
      <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Notify.nc">
        <short>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates.</short>
        <long>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates. For example, a&#10; driver for a motion detector or a switch might provide this&#10; interface. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, both calls must be&#10; guaranteed to succeed. This interface should be used when a single&#10; logical unit supports both getting and setting.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7d79f390" loc="52:/opt/tinyos-2.x/tos/interfaces/Notify.nc">
          <interfacedef-ref qname="Notify"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7d79f390"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="disable" ref="0x7d79fc48" loc="67:/opt/tinyos-2.x/tos/interfaces/Notify.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/Notify.nc">
          <short>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10;</short>
          <long>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enable" ref="0x7d79f850" loc="59:/opt/tinyos-2.x/tos/interfaces/Notify.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/Notify.nc">
          <short>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10;</short>
          <long>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="notify" ref="0x7d79d218" loc="74:/opt/tinyos-2.x/tos/interfaces/Notify.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Notify.nc">
          <short>&#10; Signals the arrival of a new value from the device.&#10;&#10;</short>
          <long>&#10; Signals the arrival of a new value from the device.&#10;&#10; @param val the value arriving from the device&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7d79f390"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7d79d010" loc="74:/opt/tinyos-2.x/tos/interfaces/Notify.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7d79f390"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockRead" loc="42:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
      <function command="" provided="0" name="read" ref="0x7d7c0c68" loc="56:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
          <short>&#10; Initiate a read operation within a given volume.</short>
          <long>&#10; Initiate a read operation within a given volume. On SUCCESS, the&#10; &#60;code>readDone&#60;/code> event will signal completion of the&#10; operation.&#10; &#10; @param addr starting address to begin reading.&#10; @param buf buffer to place read data.&#10; @param len number of bytes to read.&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x7d7c55a0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x7d7c5778"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7d7c05e0" loc="56:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x7d7c55a0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7d7c0780" loc="56:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7d7c0910" loc="56:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x7d7c5778"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="computeCrcDone" ref="0x7d7afc80" loc="95:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
        <documentation loc="86:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
          <short>&#10; Signals the completion of a crc computation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a crc computation.&#10;&#10; @param addr stating address.&#10; @param len number of bytes the crc was computed over.&#10; @param crc the resulting crc value.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x7d7c55a0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x7d7c5778"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7d7af518" loc="95:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x7d7c55a0"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x7d7af6a8" loc="95:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x7d7c5778"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x7d7af848" loc="96:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7d7af9d0" loc="96:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="computeCrc" ref="0x7d7af1f0" loc="83:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
          <short>&#10; Initiate a crc computation.</short>
          <long>&#10; Initiate a crc computation. On SUCCESS, the&#10; &#60;code>computeCrcDone&#60;/code> event will signal completion of the&#10; operation.&#10;&#10; @param addr starting address.&#10; @param len the number of bytes to compute the crc over.&#10; @parm crc initial CRC value&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x7d7c55a0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x7d7c5778"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7d7b0ab0" loc="83:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x7d7c55a0"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x7d7b0c40" loc="83:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x7d7c5778"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x7d7b0de0" loc="84:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSize" ref="0x7d7ad0a8" loc="103:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
          <short>&#10; Report the usable volume size in bytes (this may be different than&#10; the actual volume size because of metadata overheads).&#10;</short>
          <long>&#10; Report the usable volume size in bytes (this may be different than&#10; the actual volume size because of metadata overheads).&#10; @return Volume size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="storage_len_t" ref="0x7d7c5778"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7d7b0780" loc="67:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
          <short>&#10; Signals the completion of a read operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param addr starting address of read.&#10; @param buf buffer where read data was placed.&#10; @param len number of bytes read.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x7d7c55a0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x7d7c5778"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7d7b0010" loc="67:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x7d7c55a0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7d7b01b0" loc="67:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7d7b0340" loc="67:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x7d7c5778"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7d7b04d8" loc="68:/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockWrite" loc="42:/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
        <short>&#10; Write interface for the block storage abstraction described in&#10; TEP103.&#10;&#10;</short>
        <long>&#10; Write interface for the block storage abstraction described in&#10; TEP103.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="syncDone" ref="0x7d7a7410" loc="113:/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
        <documentation loc="106:/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of a sync operation.</short>
          <long>&#10; Signals the completion of a sync operation. All written data is&#10; flushed to non-volatile storage after this event.&#10;&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7d7a71b0" loc="113:/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7d7a9078" loc="71:/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation. However, data is not&#10; guaranteed to survive a power-cycle unless a sync operation has&#10; been completed.&#10;&#10; @param addr starting address of write.&#10; @param buf buffer that written data was read from.&#10; @param len number of bytes written.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x7d7c55a0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x7d7c5778"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7d7aa860" loc="71:/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x7d7c55a0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7d7aaa00" loc="71:/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7d7aab90" loc="71:/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x7d7c5778"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7d7aad28" loc="72:/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x7d7a9478" loc="83:/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate an erase operation.</short>
          <long>&#10; Initiate an erase operation. On SUCCESS, the&#10; &#60;code>eraseDone&#60;/code> event will signal completion of the&#10; operation.&#10;&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x7d7a99b8" loc="91:/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of an erase operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of an erase operation.&#10;&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7d7a9798" loc="91:/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7d7aa538" loc="58:/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate a write operation within a given volume.</short>
          <long>&#10; Initiate a write operation within a given volume. On SUCCESS, the&#10; &#60;code>writeDone&#60;/code> event will signal completion of the&#10; operation.&#10; &#60;p>&#10; Between two erases, no byte may be written more than once.&#10; &#10; @param addr starting address to begin write.&#10; @param buf buffer to write data from.&#10; @param len number of bytes to write.&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x7d7c55a0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x7d7c5778"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7d7abdd8" loc="58:/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x7d7c55a0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7d7aa010" loc="58:/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7d7aa1a0" loc="58:/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x7d7c5778"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7d7a9e70" loc="104:/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
        <documentation loc="93:/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate a sync operation and finialize any additional writes to&#10; the volume.</short>
          <long>&#10; Initiate a sync operation and finialize any additional writes to&#10; the volume. A sync operation must be issued to ensure that data is&#10; stored in non-volatile storage. On SUCCES, the&#10; &#60;code>syncDone&#60;/code> event will signal completion of the&#10; operation.&#10;&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="DelugeMetadata" loc="31:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeMetadata.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeMetadata.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getImgDesc" ref="0x7d7a5df0" loc="32:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeMetadata.nc">
        <interfacedef-ref qname="DelugeMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:14" alignment="I:1"><struct-ref name="DelugeImgDesc" ref="0x7d7d26f8"/>
              <typename><typedef-ref name="DelugeImgDesc" ref="0x7d7d11b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="imgnum_t" ref="0x7d7d23a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x7d7a5c68" loc="32:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeMetadata.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="imgnum_t" ref="0x7d7d23a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DelugeStorage" loc="46:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorage.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorage.nc">
        <short>&#10;&#10; The same as StorageMap interface for STM25P.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; The same as StorageMap interface for STM25P.&#10;&#10;&#10;&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPhysicalAddress" ref="0x7d7a4720" loc="54:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorage.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorage.nc">
          <short>&#10;&#10; Get the physical address of a volume address.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Get the physical address of a volume address.&#10;&#10;&#10;&#10; @param addr the volume addres.&#10;&#10; @return the physical address.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="DelugeStorage"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="storage_addr_t" ref="0x7d7c55a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x7d7c55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7d7a4508" loc="54:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugeStorage.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x7d7c55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45dbVolume" loc="18:/opt/tinyos-2.x/tos/chips/at45db/At45dbVolume.nc">
      <documentation loc="18:/opt/tinyos-2.x/tos/chips/at45db/At45dbVolume.nc">
        <short>&#10; AT45DB interface for managing flash volumes.&#10;&#10;</short>
        <long>&#10; AT45DB interface for managing flash volumes.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="volumeSize" ref="0x7d77bb30" loc="30:/opt/tinyos-2.x/tos/chips/at45db/At45dbVolume.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/at45db/At45dbVolume.nc">
          <short>&#10; Find the flash volume size&#10;</short>
          <long>&#10; Find the flash volume size&#10; @return Flash volume size in pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbVolume"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="remap" ref="0x7d77b7c0" loc="24:/opt/tinyos-2.x/tos/chips/at45db/At45dbVolume.nc">
        <documentation loc="19:/opt/tinyos-2.x/tos/chips/at45db/At45dbVolume.nc">
          <short>&#10; Map a volume page to the corresponding page in the whole flash&#10;</short>
          <long>&#10; Map a volume page to the corresponding page in the whole flash&#10; @return What flash page this volume page maps to, or &#10;   AT45_MAX_PAGES for invalid volumes&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbVolume"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="volumePage" ref="0x7d77b570" loc="24:/opt/tinyos-2.x/tos/chips/at45db/At45dbVolume.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45db" loc="52:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
      <documentation loc="52:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <short>&#10; HAL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HAL for Atmel's AT45DB family of serial dataflash chips. This provides&#10; reasonably high-level operations on AT45DB pages, including automatic&#10; buffer management. Writes are only guaranteed to happen after a flush,&#10; flushAll, sync or syncAll.&#10; &#60;p>&#10; When buffers are flushed to the flash (either explicitly or implicitly),&#10; their contents are checked to ensure the write was succesful. If this&#10; check fails, the flush is retried some number of times. If this fails&#10; more than some number of times, all access to the flash is disabled&#10; (all requests will report FAIL in their completion event).&#10; &#60;p>&#10; This interface only supports one operation at a time - components offering&#10; At45db should use the &#60;code>Resource&#60;/code> interface for resource sharing.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="readDone" ref="0x7d70e5e0" loc="162:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="157:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a read operation.</short>
          <long>&#10; Signal completion of a read operation. The buffer passed to read&#10; is implictly returned.&#10; @param error SUCCESS for a successful read, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7d70e3b0" loc="162:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7d710548" loc="125:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="121:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a sync or syncAll operation. &#10;</short>
          <long>&#10; Signal completion of a sync or syncAll operation. &#10; @param error SUCCESS if the sync was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7d710330" loc="125:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="flushDone" ref="0x7d70f428" loc="143:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="139:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of an flush or flushAll operation. &#10;</short>
          <long>&#10; Signal completion of an flush or flushAll operation. &#10; @param error SUCCESS if the flush was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7d70f200" loc="143:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7d70e010" loc="155:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="145:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Read some data from an AT45DB page.</short>
          <long>&#10; Read some data from an AT45DB page. readDone will be signaled.&#10; @param page Flash page to read from. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x7d70f748" loc="155:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x7d70f8e0" loc="155:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7d70fa90" loc="156:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x7d70fc28" loc="156:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7d714918" loc="69:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a write operation.</short>
          <long>&#10; Signal completion of a write operation. The buffer passed to write&#10; is implictly returned.&#10; @param error SUCCESS for a successful write, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7d7146e0" loc="69:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="copyPage" ref="0x7d7131e8" loc="80:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Copy one flash page to another.</short>
          <long>&#10; Copy one flash page to another. copyDone will be signaled. If page&#10; from had been modified, it is first flushed to flash. Page&#10; &#60;code>to&#60;/code> will only actually be written when the buffer holding&#10; it is flushed (see flush, flushAll, sync, syncAll).&#10;&#10; @param from Flash page to copy. Must be less than AT45_MAX_PAGES.&#10; @param to Flash page to overwrite. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="from" ref="0x7d714c40" loc="80:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </variable>
          <variable name="to" ref="0x7d714dd0" loc="80:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x7d712038" loc="100:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Erase an AT45DB page.</short>
          <long>&#10; Erase an AT45DB page. eraseDone will be signaled.&#10; @param page Flash page to erase. Must be less than AT45_MAX_PAGES.&#10; @param eraseKind How to handle the erase:&#10;   &#60;br>&#60;code>AT45_ERASE&#60;/code>: actually erase the page in the flash chip&#10;   &#60;br>&#60;code>AT45_DONT_ERASE&#60;/code>: don't erase the page in the flash &#10;     chip, but reserve a buffer for this page - subsequent writes to this&#10;     page will be faster because the old contents need not be read&#10;   &#60;br>&#60;code>AT45_PREVIOUSLY_ERASED&#60;/code>: assume the page was previously&#10;     erased in the flash and reserve a buffer for this page - subsequent&#10;     writes to page will be faster because the old contents need not be &#10;     read and the write itself will be faster&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x7d713a30" loc="100:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </variable>
          <variable name="eraseKind" ref="0x7d713bc0" loc="100:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x7d712560" loc="105:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="101:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of an erase operation. &#10;</short>
          <long>&#10; Signal completion of an erase operation. &#10; @param error SUCCESS if the erase was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7d712358" loc="105:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="computeCrcDone" ref="0x7d70c9c8" loc="183:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="178:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a CRC computation.&#10;</short>
          <long>&#10; Signal completion of a CRC computation.&#10; @param error SUCCESS if the CRC was successfully computed, FAIL otherwise&#10; @param crc CRC value (valid only if error == SUCCESS)&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7d70c5e8" loc="183:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x7d70c778" loc="183:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7d710b20" loc="133:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush an AT45DB page from the buffers to the actual flash.</short>
          <long>&#10; Flush an AT45DB page from the buffers to the actual flash. flushDone&#10; will be signaled once the flush has been initiated. If the page is not&#10; in the buffers, flushDone will succeed &#34;immediately&#34;.&#10; @param page Flash page to sync. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x7d710868" loc="133:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="syncAll" ref="0x7d710010" loc="120:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush all AT45DB buffers to the actual flash.</short>
          <long>&#10; Flush all AT45DB buffers to the actual flash. syncDone&#10; will be signaled once the flush has been completed and the buffer &#10; contents successfully compared with the flash. &#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="flushAll" ref="0x7d710ec0" loc="138:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="134:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush all AT45DB buffers to the actual flash.</short>
          <long>&#10; Flush all AT45DB buffers to the actual flash. flushDone&#10; will be signaled once the flushes have been initiated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="write" ref="0x7d7143c0" loc="62:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Write some data to an AT45DB page.</short>
          <long>&#10; Write some data to an AT45DB page. writeDone will be signaled.&#10; @param page Flash page to write to. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start writing - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Data to write. The buffer is &#34;returned&#34; at writeDone time.&#10; @param n Number of bytes to write (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x7d715b78" loc="62:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x7d715d10" loc="62:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7d715ec0" loc="63:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x7d714088" loc="63:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7d712b70" loc="114:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="107:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush an AT45DB page from the buffers to the actual flash.</short>
          <long>&#10; Flush an AT45DB page from the buffers to the actual flash. syncDone&#10; will be signaled once the flush has been completed and the buffer &#10; contents successfully compared with the flash. If the page is not&#10; in the buffers, syncDone will succeed &#34;immediately&#34;.&#10; @param page Flash page to sync. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x7d712880" loc="114:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="computeCrc" ref="0x7d70c2c8" loc="176:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="164:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Compute the CRC of some data from an AT45DB page (using the CRC&#10; function from crc.h).</short>
          <long>&#10; Compute the CRC of some data from an AT45DB page (using the CRC&#10; function from crc.h). computeCrcDone will be signaled.&#10; @param page Flash page to read from. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10; @param baseCrc initial CRC value - use 0 if computing a &#34;standalone&#34;&#10;   CRC, or a previous computeCrc result if computing a CRC over several&#10;   flash pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x7d70e908" loc="176:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x7d70eaa0" loc="176:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0x7d70ec48" loc="177:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
          </variable>
          <variable name="baseCrc" ref="0x7d70edd8" loc="177:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="copyPageDone" ref="0x7d713710" loc="85:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a copyPage operation. &#10;</short>
          <long>&#10; Signal completion of a copyPage operation. &#10; @param error SUCCESS if the copy was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7d713508" loc="85:/opt/tinyos-2.x/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45dbBlockConfig" loc="19:/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
      <documentation loc="19:/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
        <short>&#10; Private interface between the AT45DB implementations of config and block storage&#10;&#10;</short>
        <long>&#10; Private interface between the AT45DB implementations of config and block storage&#10;&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <function event="" provided="0" name="npages" ref="0x7d707bf0" loc="50:/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Return size of a config volume in pages (half of the actual block)&#10;</short>
          <long>&#10; Return size of a config volume in pages (half of the actual block)&#10; @return Config volume size&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="flipped" ref="0x7d708e90" loc="30:/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Query which half of the block is used by the current config state&#10;</short>
          <long>&#10; Query which half of the block is used by the current config state&#10; @return TRUE for 2nd half, FALSE for 1st half&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isConfig" ref="0x7d708ae0" loc="24:/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="20:/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Check if this block is a config volumes&#10;</short>
          <long>&#10; Check if this block is a config volumes&#10; @return TRUE for config volumes, FALSE for block volumes&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="writeHook" ref="0x7d7072a8" loc="37:/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="32:/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Hook called by block storage just before the start of each write&#10;</short>
          <long>&#10; Hook called by block storage just before the start of each write&#10; @return TRUE to delay the write until &#60;code>writeContinue&#60;/code>&#10;    is called, FALSE to proceed immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="remap" ref="0x7d7051c8" loc="58:/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Map a volume-relative page to an absolute flash page, taking account&#10; of the current flipped status&#10;</short>
          <long>&#10; Map a volume-relative page to an absolute flash page, taking account&#10; of the current flipped status&#10; @param page Volume-relative page&#10; @return Actual flash page for &#60;code>page&#60;/code>&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x7d707f20" loc="58:/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeContinue" ref="0x7d707840" loc="44:/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Continue or abort write suspended as a result of a &#60;code>writeHook&#60;/code>&#10; event&#10;</short>
          <long>&#10; Continue or abort write suspended as a result of a &#60;code>writeHook&#60;/code>&#10; event&#10; @param error SUCCESS to continue write, anything else to abort write &#10;   returning that error code&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7d7075c8" loc="44:/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAt45db" loc="23:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <short>&#10; HPL for Atmel's AT45DB family of serial dataflash chips. &#10;</short>
        <long>&#10; HPL for Atmel's AT45DB family of serial dataflash chips. &#10; Provides access to all basic AT45DB operations plus operations to &#10; wait for the flash to go idle or finish a comparison. See the AT45DB&#10; family datasheets for full details on these operations.&#10; &#60;p>&#10; This interface only supports one operation at a time.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="readDone" ref="0x7d681610" loc="141:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="137:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when data has been read from the buffer.</short>
          <long>&#10; Signaled when data has been read from the buffer. The data buffer&#10; is &#34;returned&#34;.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="waitCompare" ref="0x7d687820" loc="41:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Wait for a buffer-flash comparison to complete.</short>
          <long>&#10; Wait for a buffer-flash comparison to complete. waitCompareDone will&#10; be signaled when that occurs.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="crcDone" ref="0x7d67f948" loc="163:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="159:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when CRC has been computed.&#10;</short>
          <long>&#10; Signaled when CRC has been computed.&#10; @param computedCrc CRC value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="computedCrc" ref="0x7d67f770" loc="163:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="flushDone" ref="0x7d685390" loc="79:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when flush command sent (use waitIdle to detect when&#10; flush command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="read" ref="0x7d681288" loc="134:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read directly from flash.</short>
          <long>&#10; Read directly from flash. readDone will be signaled.&#10; @param cmd AT45_C_READ_CONTINUOUS or AT45_C_READ_PAGE. When the end of&#10;   a page is read, AT45_C_READ_CONTINUOUS continues on the next page,&#10;   while AT45_C_READ_PAGE continues at the start of the same page.&#10; @param page Page to read from&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7d6827a0" loc="134:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x7d682930" loc="134:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x7d682ac8" loc="134:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7d682c80" loc="135:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x7d682e18" loc="135:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x7d683540" loc="100:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="95:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Erase a flash page.</short>
          <long>&#10; Erase a flash page. eraseDone will be signaled.&#10; @param cmd must be AT45_C_ERASE_PAGE&#10; @param page Page to compare with (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7d683188" loc="100:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x7d683318" loc="100:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7d67eb10" loc="185:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="181:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when data has been written to the buffer.</short>
          <long>&#10; Signaled when data has been written to the buffer. The data buffer&#10; is &#34;returned&#34;.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="waitIdleDone" ref="0x7d687488" loc="35:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="32:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when the flash is idle.&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="waitCompareDone" ref="0x7d687d70" loc="47:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when the buffer-flash comparison is complete.&#10;</short>
          <long>&#10; Signaled when the buffer-flash comparison is complete.&#10; @param compareOk TRUE if the comparison succeeded, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="compareOk" ref="0x7d687b48" loc="47:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x7d683898" loc="106:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when erase command sent (use waitIdle to detect when&#10; erase command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="waitIdle" ref="0x7d687168" loc="30:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="24:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Wait for a &#34;Group A&#34; operation to complete (essentially all non-buffer&#10; operations).</short>
          <long>&#10; Wait for a &#34;Group A&#34; operation to complete (essentially all non-buffer&#10; operations). You should use waitComapre if you are waiting for a&#10; comparison to complete. waitIdleDone will be signaled when the operation&#10; is complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="flush" ref="0x7d685038" loc="73:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Write a buffer to a flash page.</short>
          <long>&#10; Write a buffer to a flash page. flushDone will be signaled.&#10; @param cmd AT45_C_FLUSH_BUFFER1 to write buffer 1 to flash,&#10;   AT45_C_FLUSH_BUFFER2 to write buffer 2 to flash,&#10;   AT45_C_QFLUSH_BUFFER1 to write buffer 1 to flash w/o erase&#10;   (page must have been previously erased),&#10;   AT45_C_QFLUSH_BUFFER2 to write buffer 2 to flash w/o erase&#10;   (page must have been previously erased),&#10; @param page Page to write (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7d686b30" loc="73:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x7d686cc0" loc="73:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7d67e788" loc="178:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="165:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Write some data to a flash buffer, and optionally the flash itself. &#10;</short>
          <long>&#10; Write some data to a flash buffer, and optionally the flash itself. &#10; writeDone will be signaled.&#10; @param cmd One of AT45_C_WRITE_BUFFER1/2 or AT45_C_WRITE_MEM_BUFFER1/2&#10;   to write respectively to buffer 1/2, or to buffer 1/2 and the &#10;   specified main memory page.&#10; @param page Page to write when cmd is AT45_C_WRITE_MEM_BUFFER1/2&#10; @param offset Offset in page at which to start writing - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Data to write. The buffer is &#34;returned&#34; at writeDone time.&#10; @param n Number of bytes to write (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7d67fc60" loc="178:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x7d67fdf0" loc="178:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x7d67e010" loc="178:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7d67e1c8" loc="179:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x7d67e360" loc="179:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="compareDone" ref="0x7d685e50" loc="93:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when compare command sent (use waitCompare to detect when&#10; compare command completes and find out comparison result)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="compare" ref="0x7d685ad0" loc="87:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Compare a page from flash with a buffer.</short>
          <long>&#10; Compare a page from flash with a buffer. compareDone will be signaled.&#10; @param cmd AT45_C_COMPARE_BUFFER1 to compare buffer 1, &#10;   AT45_C_COMPARE_BUFFER2 to compare buffer 2&#10; @param page Page to compare with (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7d6856a8" loc="87:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x7d685838" loc="87:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crc" ref="0x7d67f448" loc="157:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="143:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Compute CRC of data in a flash buffer (using the CRC function from crc.h).&#10;</short>
          <long>&#10; Compute CRC of data in a flash buffer (using the CRC function from crc.h).&#10; crcDone will be signaled.&#10; @param cmd AT45_C_READ_BUFFER1 to compute CRC from buffer 1,&#10;   AT45_C_READ_BUFFER2 to compute CRC from buffer 2&#10; @param page ignored (reserved for future use)&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10; @param baseCrc initial CRC value - use 0 if computing a &#34;standalone&#34;&#10;   CRC, or a previous crc result if computing a CRC over several&#10;   flash pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7d681928" loc="157:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x7d681ab8" loc="157:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x7d681c50" loc="157:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0x7d681df8" loc="158:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
          </variable>
          <variable name="baseCrc" ref="0x7d67f010" loc="158:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readBuffer" ref="0x7d682408" loc="119:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="108:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read from a flash buffer.</short>
          <long>&#10; Read from a flash buffer. readDone will be signaled.&#10; @param cmd AT45_C_READ_BUFFER1 to read from buffer 1,&#10;   AT45_C_READ_BUFFER2 to read from buffer 2&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7d683bb8" loc="119:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x7d683d50" loc="119:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x7d7c4f18"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7d683f08" loc="120:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x7d6820b0" loc="120:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fillDone" ref="0x7d686818" loc="61:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when fill command sent (use waitIdle to detect when&#10; fill command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="fill" ref="0x7d6864c0" loc="55:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read a page from flash into a buffer.</short>
          <long>&#10; Read a page from flash into a buffer. fillDone will be signaled.&#10; @param cmd AT45_C_FILL_BUFFER1 to read into buffer 1, &#10;   AT45_C_FILL_BUFFER2 to read into buffer 2&#10; @param page Page to read (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7d6860b0" loc="55:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x7d686240" loc="55:/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x7d7c4d38"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10;</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7d67a438" loc="48:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7d67a438"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7d67a550" loc="48:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7d67a550"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7d67abb0" loc="55:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7d67a550"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7d67a978" loc="55:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7d67a550"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAt45dbByte" loc="24:/opt/tinyos-2.x/tos/chips/at45db/HplAt45dbByte.nc">
      <documentation loc="24:/opt/tinyos-2.x/tos/chips/at45db/HplAt45dbByte.nc">
        <short>&#10; Interface between generic byte-at-a-time AT45DB HPL implementation and&#10; its platform specific aspects.&#10;</short>
        <long>&#10; Interface between generic byte-at-a-time AT45DB HPL implementation and&#10; its platform specific aspects.&#10; &#60;p>&#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this directory provides a generic HPL&#10; implementation (HplAt45dbByteC) which can easily be used to build an&#10; AT45DB HPL by connecting it to a byte-at-a-time SPI interface, and an&#10; implementation of the operations of this interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCompareStatus" ref="0x7d601608" loc="42:/opt/tinyos-2.x/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; This command may be called immediately after idle is signaled.</short>
          <long>&#10; This command may be called immediately after idle is signaled. It&#10; must report the flash's current compare status.&#10; @return TRUE if the last compare succeeded, FALSE if it failed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="waitIdle" ref="0x7d611ed0" loc="31:/opt/tinyos-2.x/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="25:/opt/tinyos-2.x/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Wait for the flash chip to report that it is idle.</short>
          <long>&#10; Wait for the flash chip to report that it is idle. This command is&#10; called immediately after sending a status request command to the&#10; flash, so it is sufficient to wait for the flash's data pin to go&#10; high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="idle" ref="0x7d601200" loc="35:/opt/tinyos-2.x/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="32:/opt/tinyos-2.x/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Signaled when the flash chip is idle.&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="select" ref="0x7d601920" loc="47:/opt/tinyos-2.x/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Assert the flash's select pin.&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="deselect" ref="0x7d601c40" loc="52:/opt/tinyos-2.x/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Deassert the flash's select pin.&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10;</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7d50bd68" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10;</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7d50b8c8" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7d50ba58" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7d50ed40" loc="15:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.&#10;</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7d50b558" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10;</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7d50b0d0" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb900c8"/>
                <typename><typedef-ref name="message_t" ref="0x7eb90a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7d50b260" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="32:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.&#10;&#10;</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7d4f4b30" loc="43:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="flush" ref="0x7d4f47f0" loc="38:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="36:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7d4f9348" loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7d4f9d80" loc="61:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7d4f8b78" loc="83:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7d4f88d0" loc="83:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7d4f8200" loc="68:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="putData" ref="0x7d4f9940" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10; </short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7d4f9688" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7d4f8f10" loc="89:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7d4f8590" loc="74:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="42:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10;&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7d5019d0" loc="60:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7d501e98" loc="70:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7d501508" loc="51:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10;</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7d5011d8" loc="51:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7d500538" loc="80:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7d500200" loc="80:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="37:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7d4fee68" loc="51:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10;</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7d4fd460" loc="58:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7d4fd1d0" loc="58:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7d4fdb78" loc="69:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7d4fd7a0" loc="69:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7d432ad8" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param buf Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7d4326a0" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7d432830" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7d4300d8" loc="79:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.&#10;&#10;</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7d431ee8" loc="79:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7d430870" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param buf Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7d430438" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7d4305c8" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7d4317f0" loc="65:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7d425170" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.&#10;&#10;</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param buf Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7d430bd0" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7d430d60" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7d430ee8" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7d431ba8" loc="72:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.&#10;&#10;</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7d4313f0" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.&#10;&#10;</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param buf Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7d432e38" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7d431010" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7d431198" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7d412250" loc="46:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7d412010" loc="46:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7d4129b0" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param byte Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7d4125b0" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7d412738" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10;</short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7d402ac0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7d402480" loc="42:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x7d400d98" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7d400c30" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7d4005e0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7d406e18" loc="40:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7d402160" loc="41:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7d4027a0" loc="43:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x7d402de0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="tx" ref="0x7d4002d0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7d400168" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7d4008f8" loc="48:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="NetProg" loc="34:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProg.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProg.nc">
        <short>&#10; Top level interface for network programming integration with&#10; applications.&#10;&#10;</short>
        <long>&#10; Top level interface for network programming integration with&#10; applications.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="programImgAndReboot" ref="0x7d29ac98" loc="55:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProg.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProg.nc">
          <short>&#10; Reboot into the image specified by &#60;code>imgNum&#60;/code>.</short>
          <long>&#10; Reboot into the image specified by &#60;code>imgNum&#60;/code>. This&#10; assumes that an image has been downloaded into slot &#60;code>imgNum&#60;/code>&#10; using Deluge.&#10;&#10; @param imgNum  Number of image to boot in to.&#10; @return        &#60;code>FAIL&#60;/code> if the reboot command fails to &#10;                complete due to an invalid imgNum or incomplete &#10;                image, &#10;                does not return, otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NetProg"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x7d29a960" loc="55:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reboot" ref="0x7d29a630" loc="42:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProg.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/net/Deluge/extra/NetProg.nc">
          <short>&#10; Reboot the node.&#10;&#10;</short>
          <long>&#10; Reboot the node.&#10;&#10; @return  Does not return.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NetProg"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="InternalFlash" loc="35:/opt/tinyos-2.x/tos/interfaces/InternalFlash.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/InternalFlash.nc">
        <short>&#10; A generic interface to read from and write to the internal flash of&#10; a microcontroller.&#10;&#10;</short>
        <long>&#10; A generic interface to read from and write to the internal flash of&#10; a microcontroller.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Prabal Dutta &#60;prabal@cs.berkeley.edu> (Port to T2)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7d22b7e0" loc="48:/opt/tinyos-2.x/tos/interfaces/InternalFlash.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/InternalFlash.nc">
          <short>&#10; Read &#60;code>size&#60;/code> bytes starting from &#60;code>addr&#60;/code> and&#10; return them in &#60;code>buf&#60;/code>.&#10;&#10;</short>
          <long>&#10; Read &#60;code>size&#60;/code> bytes starting from &#60;code>addr&#60;/code> and&#10; return them in &#60;code>buf&#60;/code>.&#10;&#10; @param   addr A pointer to the starting address from which to read.&#10; @param   buf  A pointer to the buffer into which read bytes are&#10;               placed.&#10; @param   size The number of bytes to read.&#10; @return  SUCCESS if the bytes were successfully read.&#10;          FAIL if the call could not be completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="InternalFlash"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7d22b130" loc="48:/opt/tinyos-2.x/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x7d22b2d0" loc="48:/opt/tinyos-2.x/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7d22b460" loc="48:/opt/tinyos-2.x/tos/interfaces/InternalFlash.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7d22a240" loc="60:/opt/tinyos-2.x/tos/interfaces/InternalFlash.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/InternalFlash.nc">
          <short>&#10; Write &#60;code>size&#60;/code> bytes from &#60;code>buf&#60;/code> into internal&#10; flash starting at &#60;code>addr&#60;/code>.&#10;&#10;</short>
          <long>&#10; Write &#60;code>size&#60;/code> bytes from &#60;code>buf&#60;/code> into internal&#10; flash starting at &#60;code>addr&#60;/code>.&#10;&#10; @param   addr A pointer to the starting address to which to write.&#10; @param   buf  A pointer to the buffer from which bytes are read.&#10; @param   size The number of bytes to write.&#10; @return  SUCCESS if the bytes were successfully written.&#10;          FAIL if the call could not be completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="InternalFlash"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7d22bb18" loc="60:/opt/tinyos-2.x/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x7d22bcb8" loc="60:/opt/tinyos-2.x/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7d22be48" loc="60:/opt/tinyos-2.x/tos/interfaces/InternalFlash.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Crc" loc="26:/opt/tinyos-2.x/tos/lib/net/Deluge/Crc.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/lib/net/Deluge/Crc.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="crc16" ref="0x7d220b40" loc="28:/opt/tinyos-2.x/tos/lib/net/Deluge/Crc.nc">
        <interfacedef-ref qname="Crc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7d220848" loc="28:/opt/tinyos-2.x/tos/lib/net/Deluge/Crc.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7d2209d0" loc="28:/opt/tinyos-2.x/tos/lib/net/Deluge/Crc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ObjectTransfer" loc="29:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransfer.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransfer.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="receive" ref="0x7d1f1c70" loc="32:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x7d799b40"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x7d799ef0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x7d1f17d8" loc="32:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x7d799b40"/></typename>
            </type-int>
          </variable>
          <variable name="new_size" ref="0x7d1f1970" loc="32:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x7d799ef0"/></typename>
            </type-int>
          </variable>
          <variable name="img_num" ref="0x7d1f1af8" loc="32:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7d1f0178" loc="33:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7d1f0010" loc="33:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="publish" ref="0x7d1f14a8" loc="31:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x7d799b40"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x7d799ef0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x7d1f1010" loc="31:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x7d799b40"/></typename>
            </type-int>
          </variable>
          <variable name="new_size" ref="0x7d1f11a8" loc="31:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x7d799ef0"/></typename>
            </type-int>
          </variable>
          <variable name="img_num" ref="0x7d1f1330" loc="31:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7d1f0470" loc="35:/opt/tinyos-2.x/tos/lib/net/Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="DelugePageTransfer" loc="33:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransfer.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x7d1d7798" loc="41:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="dataAvailable" ref="0x7d1d8178" loc="35:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sourceAddr" ref="0x7d1d8010" loc="35:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="suppressMsgs" ref="0x7d1d8910" loc="37:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x7d799b40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x7d1d87a8" loc="37:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x7d799b40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedPage" ref="0x7d1d7010" loc="38:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x7d799b40"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x7d7982c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x7d1d8c40" loc="38:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x7d799b40"/></typename>
            </type-int>
          </variable>
          <variable name="new_pgNum" ref="0x7d1d8dd8" loc="38:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x7d7982c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setImgNum" ref="0x7d1d74a0" loc="39:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_img_num" ref="0x7d1d7338" loc="39:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransferring" ref="0x7d1d8478" loc="36:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setWorkingPage" ref="0x7d1dabf8" loc="34:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x7d799b40"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x7d7982c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x7d1da8f0" loc="34:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x7d799b40"/></typename>
            </type-int>
          </variable>
          <variable name="new_pgNum" ref="0x7d1daa88" loc="34:/opt/tinyos-2.x/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x7d7982c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVecUtils" loc="28:/opt/tinyos-2.x/tos/lib/net/Deluge/BitVecUtils.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/lib/net/Deluge/BitVecUtils.nc">
        <short>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10;</short>
        <long>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="indexOf" ref="0x7d189528" loc="39:/opt/tinyos-2.x/tos/lib/net/Deluge/BitVecUtils.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/lib/net/Deluge/BitVecUtils.nc">
          <short>&#10; Locates the index of the first '1' bit in a bit vector.&#10;&#10;</short>
          <long>&#10; Locates the index of the first '1' bit in a bit vector.&#10;&#10; @param result     the location of the '1' bit&#10; @param fromIndex  the index to start search for '1' bit&#10; @param bitVec     the bit vector&#10; @param length     the length of the bit vector in bits&#10; @return           &#60;code>SUCCESS&#60;/code> if a '1' bit was found;&#10;                   &#60;code>FAIL&#60;/code> otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVecUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pResult" ref="0x7d192ce0" loc="39:/opt/tinyos-2.x/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="fromIndex" ref="0x7d192e78" loc="39:/opt/tinyos-2.x/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
          <variable name="bitVec" ref="0x7d189068" loc="40:/opt/tinyos-2.x/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7d1891f8" loc="40:/opt/tinyos-2.x/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="printBitVec" ref="0x7d1877a8" loc="61:/opt/tinyos-2.x/tos/lib/net/Deluge/BitVecUtils.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/lib/net/Deluge/BitVecUtils.nc">
          <short>&#10; Generates an ASCII representation of the bit vector.&#10;&#10;</short>
          <long>&#10; Generates an ASCII representation of the bit vector.&#10;&#10; @param buf     the character array to place the ASCII string&#10; @param bitVec  the bit vector&#10; @param length  the length of the bit vector in bits&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVecUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7d1871e8" loc="61:/opt/tinyos-2.x/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="bitVec" ref="0x7d187390" loc="61:/opt/tinyos-2.x/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7d187520" loc="61:/opt/tinyos-2.x/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="countOnes" ref="0x7d189ea0" loc="51:/opt/tinyos-2.x/tos/lib/net/Deluge/BitVecUtils.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/lib/net/Deluge/BitVecUtils.nc">
          <short>&#10; Counts the number of '1' bits in a bit vector.&#10;&#10;</short>
          <long>&#10; Counts the number of '1' bits in a bit vector.&#10;&#10; @param result  the number of '1' bits&#10; @param bitVec  the bit vector&#10; @param length  the length of the bit vector in bits&#10; @return        &#60;code>SUCCESS&#60;/code> if the operation completed successfully;&#10;                &#60;code>FAIL&#60;/code> otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVecUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pResult" ref="0x7d189878" loc="51:/opt/tinyos-2.x/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="bitVec" ref="0x7d189a20" loc="51:/opt/tinyos-2.x/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7d189bc0" loc="52:/opt/tinyos-2.x/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="40:/opt/tinyos-2.x/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7d0ee238" loc="40:/opt/tinyos-2.x/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7d0ee238"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x7d0ee990" loc="52:/opt/tinyos-2.x/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7d0ee238"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7d0ee648" loc="52:/opt/tinyos-2.x/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7d0ee238"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="36:/opt/tinyos-2.x/tos/lib/net/DisseminationValue.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10;</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7d0f3708" loc="36:/opt/tinyos-2.x/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7d0f3708"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x7d0f25b8" loc="61:/opt/tinyos-2.x/tos/lib/net/DisseminationValue.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.&#10;</short>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7d0f3ca0" loc="47:/opt/tinyos-2.x/tos/lib/net/DisseminationValue.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7d0f3708"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7d0f2290" loc="56:/opt/tinyos-2.x/tos/lib/net/DisseminationValue.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7d0f3708"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x7d0f2010" loc="56:/opt/tinyos-2.x/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7d0f3708"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationCache" loc="44:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationCache.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationCache.nc">
        <short>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.&#10;&#10;</short>
        <long>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestData" ref="0x7d0e2010" loc="47:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x7d0e4db0" loc="47:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="storeData" ref="0x7d0e27d8" loc="48:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7d0e2348" loc="48:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7d0e24d0" loc="48:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="seqno" ref="0x7d0e2660" loc="48:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="newData" ref="0x7d0e2dd0" loc="50:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="start" ref="0x7d0e4778" loc="45:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="requestSeqno" ref="0x7d0e2ae0" loc="49:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="stop" ref="0x7d0e4a70" loc="46:/opt/tinyos-2.x/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="TrickleTimer" loc="49:/opt/tinyos-2.x/tos/lib/net/TrickleTimer.nc">
      <function event="" provided="0" name="fired" ref="0x7d0c4a88" loc="82:/opt/tinyos-2.x/tos/lib/net/TrickleTimer.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/lib/net/TrickleTimer.nc">
          <short>&#10; The trickle timer has fired.</short>
          <long>&#10; The trickle timer has fired. Signaled if C &#38;gt; K.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="incrementCounter" ref="0x7d0c4740" loc="77:/opt/tinyos-2.x/tos/lib/net/TrickleTimer.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Increment the counter C.</short>
          <long>&#10; Increment the counter C. When an interval ends, C is set to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x7d0c43d8" loc="72:/opt/tinyos-2.x/tos/lib/net/TrickleTimer.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Reset the timer period to L.</short>
          <long>&#10; Reset the timer period to L. If called while the timer is running,&#10; then a new interval (of length L) begins immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="start" ref="0x7d0c9cc8" loc="60:/opt/tinyos-2.x/tos/lib/net/TrickleTimer.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Start the trickle timer.</short>
          <long>&#10; Start the trickle timer. At boot, the timer period is its maximum&#10; value (H). If a protocol requires starting at the minimum value&#10; (e.g., fast start), then it should call &#60;tt>reset&#60;/tt> before&#10; &#60;tt>start&#60;/tt>.&#10;&#10; @return error_t SUCCESS if the timer was started, EBUSY if it is already&#10; running, and FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7d0c4048" loc="66:/opt/tinyos-2.x/tos/lib/net/TrickleTimer.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Stop the trickle timer.</short>
          <long>&#10; Stop the trickle timer. This call sets the timer period to H and&#10; C to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>

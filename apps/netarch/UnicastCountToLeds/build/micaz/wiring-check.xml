<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="95:UnicastCountToLedsAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ec00010"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ef92cf8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ef92cf8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ec14300"/></to>
    </wire>
    <wire loc="98:UnicastCountToLedsAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ebe4010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d996be0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d996be0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d9fec60"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="99:UnicastCountToLedsAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7eb73310"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d99c900"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d99c900"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d9fe330"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="100:UnicastCountToLedsAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7eb52af0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e3f73f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e3f73f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e3ed010"/></to>
    </wire>
    <wire loc="101:UnicastCountToLedsAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7eb30b98"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3f4590"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e3f4590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3ecaa8"/></to>
    </wire>
    <wire loc="102:UnicastCountToLedsAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7eb42538"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d99a310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d99a310"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d9fdb30"/></to>
    </wire>
    <wire loc="105:UnicastCountToLedsAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ebe53e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7eb10520"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7eb10520"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7eb01208"/></to>
    </wire>
    <wire loc="106:UnicastCountToLedsAppC.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0x7eb62538"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d9876d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d9876d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dba7370"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d386530"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d399628"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d3ab238"/></to>
    </wire>
    <wire loc="79:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e886078"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dba0498"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d431388"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d4517f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d4644c8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dc43010"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dc5ed88"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dcdd938"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dd60770"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e2c74c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d4e0608"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7df072f0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e331128"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d5f0760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d5fdef0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d63b010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d645ed0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e736960"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7ec14648"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f232c50"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f232c50"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f071598"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7ec14b78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ef808d0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ef808d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ef528d0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ec14ee8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83490"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ef61ad8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e12d1e0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ef613e0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ec43160"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7ef51010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ec44d58"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7ef52c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ead1848"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7ef52c40"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7ef40610"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7ef40610"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7ef32af0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ef40978"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7ef61ad8"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7ef122f8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7ef00af8"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7ef00af8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7edd4330"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ef12c80"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7ef40978"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7ee90808"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ece0998"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7eec2858"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ed92bf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ed92bf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8a2718"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7eeb09d8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ed726b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ed726b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d86a0f8"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7ee93808"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ed54ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ed54ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8366c0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7eef3e78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7edd36b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7edd36b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d93da88"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7eea0508"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ed61840"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ed61840"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d839228"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7eef1190"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7edc43a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7edc43a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9112b0"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7eed2348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7edb0f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7edb0f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8d7c08"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7eec05e8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ed90890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ed90890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d89d570"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7eea27a8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ed70330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ed70330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d864010"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7ef02e18"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ede26b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ede26b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9457f8"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7eef0e78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7edc2030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7edc2030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d90a0f8"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7eed0068"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7eda3ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7eda3ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8d2a88"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7eeb2348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ed835d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ed835d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d898538"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7ee91508"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ed52890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ed52890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d831538"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7ee827a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ecc23b0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7eeb16c8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ed73330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ed73330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d86ec78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7edd4330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9406c0"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7eee2bd8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7edc1c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7edc1c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d904010"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7ee83428"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ecd3cb8"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7eed3010"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7edb1bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7edb1bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8da7f8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7eec1268"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ed915d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ed915d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8a00f8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7eea3428"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ed71030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ed71030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d868ac8"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7ee92190"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ed535d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ed535d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8340b0"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7eef2808"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7edd2030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7edd2030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d93b538"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7eef1b00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7edc4cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7edc4cf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d910c78"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7eed2cb8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7eda4890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7eda4890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8d56c0"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7eeb3010"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ed84250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ed84250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d89b010"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7eea1188"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ed70c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ed70c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8639e8"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7ef017a8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ede1030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ede1030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d943228"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7eee3808"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7edc2988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7edc2988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d908ac8"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7eed09d8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7eda25d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7eda25d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8d0538"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7ee91e78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ed51250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ed51250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d82f010"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7eec3d98"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ed922a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ed922a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8a6d08"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7eeb0068"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ed73c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ed73c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d86c718"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7eea0e78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ed54250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ed54250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d838c08"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7ee80188"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ecb46c0"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7eef3508"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7edd4c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7edd4c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d93e0b0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7eee15e8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7edb46b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7edb46b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d9039e8"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7eea1af8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ed62eb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ed62eb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d83b7f8"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7eed3980"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7edb05d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7edb05d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8d8228"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7eec1bd8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ed91f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ed91f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d89fac8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7eea3d98"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ed71988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ed71988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d866570"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7ee92b00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ed53f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ed53f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d833a88"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7ef024a8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ede3d18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ede3d18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d94be18"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7eef0508"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7edc36b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7edc36b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d90c718"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7eed16c8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7eda3250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7eda3250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8d30b0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7eeb3980"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ed84ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ed84ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d89a9e8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7ee83d98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ecc4050"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7eeb2cb8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ed749c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ed749c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d86f2b0"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7eec3428"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7eda2f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7eda2f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d8cd010"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7ef00188"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ede1988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ede1988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d942c08"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7eee2268"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7edc1330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7edc1330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7d906570"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f071d30"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f052188"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f0108c0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7efe3e38"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7e22ac58"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ead1848"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7eb05ea0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7eb01e58"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7ead3b18"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7ead3b18"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7ef017a8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7eb007e8"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7ead2528"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7ead2528"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7ef02e18"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7eaf5188"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7ead2eb8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7ead2eb8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7ef024a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7d99b010"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7d9ff990"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7d9ff990"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7d9f52d8"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7d9fdb30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d9f3478"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d99b6a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3f4590"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x7d9fc548"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Send" scoped="" ref="0x7d7c2450"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d7c2450"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7daa6100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7eac1490"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/lib/netarch/single/SingleProtocolC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7d99f3b0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7d99fa88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x7d99fa88"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3f6ea0"/></to>
    </wire>
    <wire loc="50:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7dab2bb0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ea740c8"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ea740c8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e9d5d60"/></to>
    </wire>
    <wire loc="51:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7ea36268"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7dab1350"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x7dab1350"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3f6ea0"/></to>
    </wire>
    <wire loc="53:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7ea556f8"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7da0cb20"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7ea556f8"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7da06338"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketEngine" scoped="" ref="0x7da06338"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7daa5c68"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PacketEngine" scoped="" ref="0x7da0cb20"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7daa5c68"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SinglePacketEngine" scoped="" ref="0x7ea72598"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7da0cb20"/></to>
    </wire>
    <wire loc="56:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="DsrPacketEngine" scoped="" ref="0x7ea714b0"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7da06338"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7ea44d48"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7da0ba60"/></to>
    </wire>
    <wire loc="58:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7ea44d48"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7da04280"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketWaitList" scoped="" ref="0x7da04280"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7daa4e08"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PacketWaitList" scoped="" ref="0x7da0ba60"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7daa4e08"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7ea52960"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7da0ba60"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7ea435b0"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7da04280"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7ea34398"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e3f3248"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e3f3248"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e3e8248"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7ea34880"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7d9ff990"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ea34f28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3f4590"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="ComposePacket" scoped="" ref="0x7ea40b48"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d9a4be8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d9a4be8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d9fdb30"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/netarch/dsr/DsrC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ea36930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d9a5228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d9a5228"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d9fe330"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7e9d5d60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e897730"/></to>
    </wire>
    <wire loc="76:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7e9d3538"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7ea36268"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7e6269e0"/></from>
      <to><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7ea556f8"/></to>
    </wire>
    <wire loc="79:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SinglePacketEngine" scoped="" ref="0x7e6258f0"/></from>
      <to><interface-ref name="SinglePacketEngine" scoped="" ref="0x7ea72598"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="DsrPacketEngine" scoped="" ref="0x7e624738"/></from>
      <to><interface-ref name="DsrPacketEngine" scoped="" ref="0x7ea714b0"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7e6236e0"/></from>
      <to><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7ea44d48"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7e6212f8"/></from>
      <to><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7ea52960"/></to>
    </wire>
    <wire loc="83:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7e621f08"/></from>
      <to><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7ea435b0"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7e615d50"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7ea34398"/></to>
    </wire>
    <wire loc="86:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7e614238"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7ea34880"/></to>
    </wire>
    <wire loc="87:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e6148d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ea34f28"/></to>
    </wire>
    <wire loc="88:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="ComposePacket" scoped="" ref="0x7e6134f0"/></from>
      <to><interface-ref name="ComposePacket" scoped="" ref="0x7ea40b48"/></to>
    </wire>
    <wire loc="90:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7e611030"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ea36930"/></to>
    </wire>
    <wire loc="92:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="DsrHeader" scoped="" ref="0x7e628090"/></from>
      <to><interface-ref name="DsrHeader" scoped="" ref="0x7ea14080"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="DsrHeader" scoped="" ref="0x7ea14080"/></from>
      <to><interface-ref name="TlvBlockPacket" scoped="" ref="0x7e8a0338"/></to>
    </wire>
    <wire loc="93:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteRequest" scoped="" ref="0x7e628588"/></from>
      <to><interface-ref name="RouteRequest" scoped="" ref="0x7ea00698"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteRequest" scoped="" ref="0x7ea00698"/></from>
      <to><interface-ref name="TlvSinglePacket" scoped="" ref="0x7e8a08a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteError" scoped="" ref="0x7e628c40"/></from>
      <to><interface-ref name="RouteError" scoped="" ref="0x7e9e4110"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteError" scoped="" ref="0x7e9e4110"/></from>
      <to><interface-ref name="TlvMultiplePacket" scoped="" ref="0x7e898010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteErrorList" scoped="" ref="0x7e627530"/></from>
      <to><interface-ref name="RouteErrorList" scoped="" ref="0x7e9e4a10"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteErrorList" scoped="" ref="0x7e9e4a10"/></from>
      <to><interface-ref name="TlvListPacket" scoped="" ref="0x7e898970"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="96:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SourceRoute" scoped="" ref="0x7e626328"/></from>
      <to><interface-ref name="SourceRoute" scoped="" ref="0x7e9d56c0"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="SourceRoute" scoped="" ref="0x7e9d56c0"/></from>
      <to><interface-ref name="TlvSinglePacket" scoped="" ref="0x7e8a08a8"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteCache" scoped="" ref="0x7e620a10"/></from>
      <to><interface-ref name="RouteCache" scoped="" ref="0x7e606010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RouteCache" scoped="" ref="0x7e606010"/></from>
      <to><interface-ref name="RouteCache" scoped="" ref="0x7d673298"/></to>
    </wire>
    <wire loc="99:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="SalvageRouteCache" scoped="" ref="0x7e61b170"/></from>
      <to><interface-ref name="RouteCache" scoped="" ref="0x7e606010"/></to>
    </wire>
    <wire loc="100:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteNodeList" scoped="" ref="0x7e61b8b8"/></from>
      <to><interface-ref name="RouteNodeList" scoped="" ref="0x7e606758"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RouteNodeList" scoped="" ref="0x7e606758"/></from>
      <to><interface-ref name="RouteNodeList" scoped="" ref="0x7d6739e0"/></to>
    </wire>
    <wire loc="101:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteRequestInCache" scoped="" ref="0x7e61a458"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7dbf33d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DataCache" scoped="" ref="0x7dbf33d8"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7d464870"/></to>
    </wire>
    <wire loc="102:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteRequestOutCache" scoped="" ref="0x7e619980"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7dbc2120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DataCache" scoped="" ref="0x7dbc2120"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7d451ba0"/></to>
    </wire>
    <wire loc="103:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="RouteRequestOutTimer" scoped="" ref="0x7e617ef8"/></from>
      <to><interface-ref name="DataTimer" scoped="" ref="0x7dbbcd78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DataTimer" scoped="" ref="0x7dbbcd78"/></from>
      <to><interface-ref name="DataTimer" scoped="" ref="0x7d431730"/></to>
    </wire>
    <wire loc="105:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Equal" scoped="" ref="0x7dbf2938"/></from>
      <to><interface-ref name="RouteRequestInEqual" scoped="" ref="0x7e62ba20"/></to>
    </wire>
    <wire loc="106:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Equal" scoped="" ref="0x7dbc0678"/></from>
      <to><interface-ref name="RouteRequestOutEqual" scoped="" ref="0x7e62a410"/></to>
    </wire>
    <wire loc="108:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Compose" scoped="" ref="0x7e613ba8"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7dac0a68"/></to>
    </wire>
    <wire loc="109:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Salvage" scoped="" ref="0x7e6126b0"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7dabe3c8"/></to>
    </wire>
    <wire loc="111:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e6116c8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e740760"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e740760"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e733648"/></to>
    </wire>
    <wire loc="113:../../../tos/lib/netarch/dsr/DsrP.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7e62ad40"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ef92cf8"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="AckList" scoped="" ref="0x7e9d6908"/></from>
      <to><interface-ref name="TlvListPacket" scoped="" ref="0x7e898970"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteReplyList" scoped="" ref="0x7e9e1330"/></from>
      <to><interface-ref name="TlvListPacket" scoped="" ref="0x7e898970"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7e897730"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d79eab0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvBlockPacket" scoped="" ref="0x7e8a0338"/></from>
      <to><interface-ref name="TlvBlockPacket" scoped="" ref="0x7d7a1648"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="AckRequest" scoped="" ref="0x7e9e0858"/></from>
      <to><interface-ref name="TlvSinglePacket" scoped="" ref="0x7e8a08a8"/>
      <arguments>
        <value cst="I:160">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="RouteReply" scoped="" ref="0x7e9f5010"/></from>
      <to><interface-ref name="TlvMultiplePacket" scoped="" ref="0x7e898010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="Ack" scoped="" ref="0x7e9d6010"/></from>
      <to><interface-ref name="TlvMultiplePacket" scoped="" ref="0x7e898010"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7e897e18"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7e9d3538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvListPacket" scoped="" ref="0x7e898970"/></from>
      <to><interface-ref name="TlvListPacket" scoped="" ref="0x7d7a0d08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvMultiplePacket" scoped="" ref="0x7e898010"/></from>
      <to><interface-ref name="TlvMultiplePacket" scoped="" ref="0x7d7a03a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvSinglePacket" scoped="" ref="0x7e8a08a8"/></from>
      <to><interface-ref name="TlvSinglePacket" scoped="" ref="0x7d7a1bb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x7d79b400"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7e897e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvBlock" scoped="" ref="0x7d79d188"/></from>
      <to><interface-ref name="TlvBlock" scoped="" ref="0x7e901c08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvSingle" scoped="" ref="0x7d79d6f8"/></from>
      <to><interface-ref name="TlvSingle" scoped="" ref="0x7e9003f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvMultiple" scoped="" ref="0x7d79de38"/></from>
      <to><interface-ref name="TlvMultiple" scoped="" ref="0x7e900d28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TlvList" scoped="" ref="0x7d79c738"/></from>
      <to><interface-ref name="TlvList" scoped="" ref="0x7e8f6848"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7e870010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7daa15d8"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7e8715d0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7daa2c00"/></to>
    </wire>
    <wire loc="86:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SendPool" scoped="" ref="0x7e847c00"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7da7e408"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="PacketEngineClient" scoped="" ref="0x7e8632f8"/></from>
      <to><interface-ref name="PacketEngineClient" scoped="" ref="0x7daa05d0"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="ReceivePool" scoped="" ref="0x7e851d28"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7da995e0"/></to>
    </wire>
    <wire loc="88:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e836e00"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e740760"/></to>
    </wire>
    <wire loc="83:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7e867d10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e3f73f0"/></to>
    </wire>
    <wire loc="87:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7e838318"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7da7dda8"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7e853138"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7da9e830"/></to>
    </wire>
    <wire loc="76:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7e8705f0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7daa1bb8"/></to>
    </wire>
    <wire loc="195:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <from><interface-ref name="msgAction" scoped="" ref="0x7e823ea8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="194:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <from><interface-ref name="msgAdded" scoped="" ref="0x7e823778"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SendBackoff" scoped="" ref="0x7e842300"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7da7a100"/></to>
    </wire>
    <wire loc="90:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="SubSendPacket" scoped="" ref="0x7e870d40"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3f6ea0"/></to>
    </wire>
    <wire loc="91:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e863700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3f4590"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e733648"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e7285d8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7e738e88"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7e736d78"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7e736d78"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7e729d18"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e7421f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e736960"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e736960"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e729900"/></to>
    </wire>
    <wire>
      <from><interface-ref name="composePkt" scoped="" ref="0x7e611b00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RouteCache" scoped="" ref="0x7d673298"/></from>
      <to><interface-ref name="RouteCache" scoped="" ref="0x7e5f2cd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RouteNodeList" scoped="" ref="0x7d6739e0"/></from>
      <to><interface-ref name="PathEdgeList" scoped="" ref="0x7d66d4a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PathEdgeList" scoped="" ref="0x7d66d4a0"/></from>
      <to><interface-ref name="PathEdgeList" scoped="" ref="0x7d650c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d66c058"/></from>
      <to><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7e400b58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7e5e0188"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7d671e28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7d671e28"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7d6607d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SourceShortestPath" scoped="" ref="0x7e5d55e0"/></from>
      <to><interface-ref name="SourceShortestPath" scoped="" ref="0x7d66eaf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SourceShortestPath" scoped="" ref="0x7d66eaf0"/></from>
      <to><interface-ref name="SourceShortestPath" scoped="" ref="0x7d650380"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Track" scoped="" ref="0x7e5f1778"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7d66a520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Initial" scoped="" ref="0x7e5f0188"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7d669d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e5f0ad0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3f4590"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7d6607d0"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7d644200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PathEdgeList" scoped="" ref="0x7d650c88"/></from>
      <to><interface-ref name="PathEdgeList" scoped="" ref="0x7d5fcb28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SourceShortestPath" scoped="" ref="0x7d650380"/></from>
      <to><interface-ref name="SourceShortestPath" scoped="" ref="0x7d5fc220"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdge" scoped="" ref="0x7d66fb30"/></from>
      <to><interface-ref name="GraphEdge" scoped="" ref="0x7d6524d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdge" scoped="" ref="0x7d6524d0"/></from>
      <to><interface-ref name="GraphEdge" scoped="" ref="0x7d644eb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeList" scoped="" ref="0x7d66e010"/></from>
      <to><interface-ref name="GraphEdgeList" scoped="" ref="0x7d652978"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeList" scoped="" ref="0x7d652978"/></from>
      <to><interface-ref name="GraphEdgeList" scoped="" ref="0x7d642390"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7d64e7b0"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7d6607d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdge" scoped="" ref="0x7d64d4d0"/></from>
      <to><interface-ref name="GraphEdge" scoped="" ref="0x7d6524d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeList" scoped="" ref="0x7d64ca78"/></from>
      <to><interface-ref name="GraphEdgeList" scoped="" ref="0x7d652978"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d64d958"/></from>
      <to><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d66c058"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IndexedAlloc" scoped="" ref="0x7d642e90"/></from>
      <to><interface-ref name="IndexedAlloc" scoped="" ref="0x7d646820"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IndexedAlloc" scoped="" ref="0x7d646820"/></from>
      <to><interface-ref name="IndexedAlloc" scoped="" ref="0x7d63e440"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IndexedAlloc" scoped="" ref="0x7d63e440"/></from>
      <to><interface-ref name="IndexedAlloc" scoped="" ref="0x7d63a7b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Boot" scoped="" ref="0x7d639070"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ef92cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BitVector" scoped="" ref="0x7d639388"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7d63b348"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Graph" scoped="" ref="0x7d5fac48"/></from>
      <to><interface-ref name="Graph" scoped="" ref="0x7d64e7b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdge" scoped="" ref="0x7d5f9930"/></from>
      <to><interface-ref name="GraphEdge" scoped="" ref="0x7d64d4d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d5f9db8"/></from>
      <to><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d64d958"/></to>
    </wire>
    <wire>
      <from><interface-ref name="GraphEdgeList" scoped="" ref="0x7d5f7e58"/></from>
      <to><interface-ref name="GraphEdgeList" scoped="" ref="0x7d64ca78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x7d5fe900"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7d5fb728"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PriorityQueue" scoped="" ref="0x7d5fa070"/></from>
      <to><interface-ref name="PriorityQueue" scoped="" ref="0x7d601ba0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PriorityQueue" scoped="" ref="0x7d601ba0"/></from>
      <to><interface-ref name="PriorityQueue" scoped="" ref="0x7d5f0a78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x7d5e2740"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7d5fe900"/></to>
    </wire>
    <wire>
      <from><interface-ref name="buildTreeTask" scoped="" ref="0x7d5f69b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e3ed010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7dc25e48"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7e3f7c40"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e3ed860"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7e3ed860"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e3ca7a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7e3f6b80"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e3ec780"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7e3ec780"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e3c96d8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7e3f6ea0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3eb6a0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7e3eb6a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3c8698"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e3f65a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e3ec1a8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e3ec1a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e3c9100"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e3e8248"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7dc97010"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e3ecaa8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3c9a00"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7dc25e48"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7dc236a0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7e3e0298"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7e383100"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7e383100"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7e37d5d0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7e3e4bd8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7dc98988"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7e3d3610"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7dc25340"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7dc25340"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7dc21ae8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7e3cda78"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7dc11f08"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7dc11f08"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7dc07ad8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7e3e1a50"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7dc97910"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7dc236a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e385de0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e385de0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e37e658"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7e3c08a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dc65a78"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7dc65a78"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dc5e6e8"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7dc621c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dc11860"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7dc11860"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7dc10620"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7dc10620"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dc26918"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7dc26918"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7dc24c50"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7dc24c50"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dc32db8"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7dc32db8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7dc31bb0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7dc31bb0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e384418"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7e384418"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e37ec38"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7e3c4010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7dc25010"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7dc25010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7dc23348"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7dc23348"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7dc52b18"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7dc52b18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7dc44930"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7dc48228"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7dc314d8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7dc314d8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7dc31868"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7dc31868"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e384ad8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e384ad8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7dce0338"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e3b0a68"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7dd9e160"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7e3c4338"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7dc98988"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e3ba078"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dc97500"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7e3b4a60"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7e33a010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7e33a010"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7e331b38"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7dce0338"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7dcda680"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e370760"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3ecaa8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e376188"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e33b8b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e33b8b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e331470"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7e371388"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7e33ae58"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7e33ae58"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7e3309e0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7e371d20"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7dd86b98"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7e371d20"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7dce1940"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7dce1940"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7dcddc80"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7dd86b98"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7dd60ab8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7e36a458"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7dd85010"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7dd85010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dd60f08"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7e36ab50"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7dd856b8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7dd856b8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7dd5f5e0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7e369040"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7dc98988"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e369630"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dc97500"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e370338"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e740760"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7e369b08"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7dc70010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7dc70010"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7df0d718"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e36e418"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7eb10520"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7e366660"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7e367f10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7e3675c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7e334348"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7e32f4e8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e316010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3ecaa8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7e3279d0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7e2c7970"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7e2c7970"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7e2c2c90"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7e326200"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7e061188"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7e061188"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7eef1190"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7e326b90"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7e060e78"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7e060e78"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7eef3e78"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7e325530"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7e051190"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7e051190"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x7eef3508"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7e3209b0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7e046b10"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7e046b10"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7dfb0298"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7e316c48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ddd47f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7ddd47f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7df83450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7e3131c0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7ddd3e08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7ddd3e08"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7e313530"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7ddd2190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ddd2190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7e313c18"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7ddd2b98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ddd2b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7e3138a8"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7ddd2ef0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ddd2ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7e318bb8"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7ddd05b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ddd05b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7e31a0a8"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7ddd0a70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ddd0a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7e31a4f8"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7ddd0ea8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ddd0ea8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7e31a950"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7ddc6320"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ddc6320"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e31ada8"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7ddc6758"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ddc6758"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7e31b9c0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7ddc5cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7ddc5cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df82c80"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7e319288"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7ddc5010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ddc5010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7e3196d8"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7ddc5448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7ddc5448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7e315b50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ddc0908"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7ddc0908"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7df83450"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7e315458"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ddb59f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7ddb59f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7df83450"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e322010"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7dd9e160"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7e30ed28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7e30e5f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e2c74c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e0663c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7e0663c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e069b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7e2c2c90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d5964c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7d5964c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d5837d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7d580078"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d592010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7d592010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d57b490"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x7d581010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e0e3af0"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7e0e3af0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e0a50c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7d57ac30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e2877d0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e2877d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e1cd6f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7d577af8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7e2639b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7e285010"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7e1ca558"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7e270010"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7e1c9150"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e2639b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7e1c8c18"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e2639b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7e1c53b0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e2639b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7e1c4b38"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x7e1c12c8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7e247ca0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7e247ca0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7e22dc90"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7e2401c8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7e229010"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e24b5a8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7e22b5a8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e24f538"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e22fe50"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e12d5c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e2877d0"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7e0a4150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e0d2010"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7e0d2010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e0ce990"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e0cd960"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e2877d0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7e061af8"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7eee15e8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7e060508"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7eea27a8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7e062760"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7eeb3980"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7e052808"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7eec05e8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7e0464f8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7e02fc60"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7e0491b0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7e02b720"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x7e043300"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7e270010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7e02bd18"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7e00dbe8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7e00dbe8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7dfc6978"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x7dfb08c8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7e062760"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7e00f430"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7dfd16c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7e00ebe8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7dfcb788"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7e00c430"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7dfc4a88"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7e00fbe8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7dfcf6c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7e00d430"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7dfc88f0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7e010c50"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e0086c0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7e00e430"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7dfcd6c0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e008e78"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7e004c48"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7dfd1e78"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7e006010"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7dfcfe78"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7e006388"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7dfcde78"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7e006700"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7dfc9010"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7e006a78"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7dfc70b8"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7e006df0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7dfc5190"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7e0031b0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7dfc3270"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7e003528"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x7dfafdf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ddd2840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ddc45c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df82c80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ddc6b90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ddd4eb0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7df83b18"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7df83b18"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7df80c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ddd3758"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7ddd0260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ddc4190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df82c80"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ddc4a00"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7df822f8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7ddd3ab0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ddc5880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df82c80"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ddd3400"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7ddd24e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ddc3270"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7df822f8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7df822f8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7df70e30"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7df82c80"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df6f7e0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7df81438"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df6fea0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7df83450"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7df704d0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df6d5a8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7df65dd8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7df14a38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7df14a38"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7df0d718"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7df6d940"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7df09da8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7df09da8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dee9300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7df68188"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7df084f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x7df084f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7deea8e8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7df659a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7df08828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7df08828"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7deeac30"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7df695b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7eb10520"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7df63e90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7df0d718"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7df078a0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7deeac30"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7dee4080"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7deea8e8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7dee5d38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7df09a70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7deea5a8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7deea5a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dee5a18"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7dee9300"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dee4718"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7ded4a40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7de35d10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7de35d10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7d4df938"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7dec37b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7de34890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7de34890"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7d4dd4b0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7dec9e98"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7de7c300"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7de7c300"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7de76010"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7dec3bb8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff2d38"/></to>
    </wire>
    <wire loc="207:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7de9d1e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7de70af8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff2d38"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7de73470"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7eef1190"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7de73de0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7eef1b00"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7de727a8"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7eef0508"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7de70188"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7eef0e78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7de34488"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7d4dd0a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7d4dd970"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7de34d40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x7d4ddd98"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7d4e0940"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x7d4dc430"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ddba2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ddbb5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ddbda18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ddb8880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df82c80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ddbbe38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7ddba6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ddbccf8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ddbf010"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7df83b18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ddbf880"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7ddbc4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ddbc190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ddbba00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ddbdd70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ddb8448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df82c80"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ddb8cb8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7df822f8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7ddbfbd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ddbb190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ddbc840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7ddbd010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7ddb8010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df82c80"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ddbab20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df82c80"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ddbf528"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7ddbd6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ddbd368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ddb7510"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7df822f8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7dda62b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ddb05c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ddb3ab8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dda5880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df82c80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ddb0e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7dda66e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ddb2cf8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ddb4170"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7df83b18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ddb49e0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7ddb24e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ddb2190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ddb0a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ddb3e10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7dda5448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df82c80"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7dda5cb8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7df822f8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7ddb4d38"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ddb0190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ddb2840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7ddb30b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7dda5010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df82c80"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7dda6b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df82c80"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ddb4688"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7ddb3760"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ddb3408"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dda4510"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7df822f8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7dd7f198"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7dd5e618"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7dd81d68"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7dd5e298"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioTimeStamping" scoped="" ref="0x7dd808e0"/></from>
      <to><interface-ref name="TimeStamp" scoped="" ref="0x7dd5fdc0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7dd5eac0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7e2c7970"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7dd5a288"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7e062760"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7dd5ac18"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7e061188"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7dd596e8"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7e052808"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7dd5cc58"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7e0464f8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7dd58090"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dcf7518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7dcf7518"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7df83450"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7dd58758"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7dcf7bd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7dcf7bd0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7df83b18"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7dd57cf0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7dcf6840"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7dcf6840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7dd56088"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7dcf5260"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7dcf5260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7dd56400"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7dcf55b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7dcf55b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7dd56778"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7dcf64e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7dcf64e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7dd578a0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7dcf2920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7dcf2920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dd58c88"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7dce7010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dce7010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7df822f8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dd57450"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dcf0368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dcf0368"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df82c80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7dd56af0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7dcf24e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7dcf24e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7dd51c58"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7dce1d68"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7dce1d68"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7dcda180"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7dd5c210"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7dc98988"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dd5c800"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dc97500"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7dd53338"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7eb10520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7dcf2d58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7dcf20b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7dcf1270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7dcf3820"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7dcf3010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7dcf5c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7dcf5910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7dcf1f18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df82c80"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7dcf07a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7df822f8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7dcf3c58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7dcf3368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7dcf6b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7dcf1ae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df82c80"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7dcf16a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df82c80"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7dcf6190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7dcf6ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7dce06b8"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7dcdaa00"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7dcd4010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7eb10520"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7dcdad70"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7e061188"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7dcd97c8"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7e061af8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7dcd81a8"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7e060508"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7dcd8b40"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7e0491b0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7dcd71b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dc9aaa0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7dc9aaa0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7df83450"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7dcd78a0"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7dc7dcb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7dc7dcb8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7df822f8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7dcd6388"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7dc99688"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7dc99688"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7dcd6010"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7dc804e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x7dc804e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7dcd6750"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7dc98988"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dcd6d40"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dc97500"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7dcd5180"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7e33a010"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7dcc73f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7dc7e2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7dc7f5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7dc82ab8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dc7d880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df82c80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7dc7fe38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x7dc7e6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7dc80cf8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7dc99170"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7df83b18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7dc999e0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7dc80190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7dc7fa00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7dc82e10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7dc7d448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df82c80"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7dc99d38"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7dc7f190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7dc80840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7df81438"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7dc820b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7dc7d010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df82c80"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7dc7eb20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7df82c80"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7dc82760"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7dc82408"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dc7b510"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7df822f8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7dc5d1c0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7dc621c0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7dc5d860"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7dc602f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7dc602f8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7df0d718"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7dc5b010"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e740760"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dc5b420"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dc97500"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7dc52e70"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7dc44c88"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7dc433a0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7dc48228"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dc436d0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dc97500"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7dc24468"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7dc20450"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7dc20450"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7df0d718"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7dc04288"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e3f3248"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Equal" scoped="" ref="0x7d463dc0"/></from>
      <to><interface-ref name="Equal" scoped="" ref="0x7dbf2938"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Equal" scoped="" ref="0x7d444110"/></from>
      <to><interface-ref name="Equal" scoped="" ref="0x7dbc0678"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d430610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7d4358f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d4358f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dba7370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7dba7370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dba0b30"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7dba0b30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7dafa810"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7dba0498"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7db95ac8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7db98338"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7dae6e90"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7db95ac8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7db87cf0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7daf7840"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7db407c0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7db26770"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7db93010"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7db93010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7db46150"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7daf17d0"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7db92878"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7db92878"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7db45a08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x7db45a08"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7d424520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7db87cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7d4278b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7db46150"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7d427cf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7d423500"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e24f538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7d420290"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7e247ca0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x7d420ab8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7e24b5a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7d4131c8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7e2401c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x7db25ea8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7daf4708"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x7daa2c00"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d3c0520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x7d3c0520"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d3760c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x7daa15d8"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d3b22c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d3b22c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e3f65a8"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d3b22c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e3f6b80"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x7daa1bb8"/>
      <arguments>
        <value cst="I:48">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Packet" scoped="" ref="0x7dab2bb0"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x7daa5010"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7e877010"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7daa6100"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e884290"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7daa5330"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e877330"/></to>
    </wire>
    <wire loc="73:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="PacketWaitList" scoped="" ref="0x7daa4e08"/></from>
      <to><interface-ref name="PacketWaitList" scoped="" ref="0x7e876e08"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="PacketEngine" scoped="" ref="0x7daa5c68"/></from>
      <to><interface-ref name="PacketEngine" scoped="" ref="0x7e877c68"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7daa6a30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e884bc0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7daa79f8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7e882b98"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <from><interface-ref name="Equal" scoped="" ref="0x7da9dd70"/></from>
      <to><interface-ref name="SendQueueEqual" scoped="" ref="0x7e867390"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DataCache" scoped="" ref="0x7da9e830"/></from>
      <to><interface-ref name="DataCache" scoped="" ref="0x7d3ab5e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x7da995e0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7d3999d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x7da7e408"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7d3868d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x7da7dda8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7df0d718"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7da7a100"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7dba7370"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Equal" scoped="" ref="0x7d3aab40"/></from>
      <to><interface-ref name="Equal" scoped="" ref="0x7da9dd70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d3c0bb8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3f6ea0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d3b4310"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3f4590"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x7d3b4f08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e3f3248"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d376790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da512f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d376e28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3f4590"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7da512f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da220f8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7da22868"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e3f7c40"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7da22f10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3f4590"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7da21b08"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3f6ea0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x7da20270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x7da206a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d3b25e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3f6ea0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d3b2c78"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3f4590"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x7d9fd810"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7d9f3158"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7d9fe330"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7d9f5c48"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7d9fd258"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7d9f4b80"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7d9fec60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d9f45a8"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7d9f3e28"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7d9fc548"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7d9f27d8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7d9fcea8"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="SubIntercept" scoped="" ref="0x7d9f2dc0"/></from>
      <to><interface-ref name="SubIntercept" scoped="" ref="0x7d9fb4d0"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7d9f1188"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7daa5330"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d9f1830"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3f4590"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7d9a58c0"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7d9ff990"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d9a4010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3f4590"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x7d9fc548"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Send" scoped="" ref="0x7d339568"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d339568"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7daa6100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7eac1490"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d339c00"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7daa5330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketEngineClient" scoped="" ref="0x7daa05d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7eac1490"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PacketEngineClient" scoped="" ref="0x7d3336d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x7daa2c00"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d331e38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x7d331e38"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7d320b10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x7daa15d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d324c10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d324c10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e3f65a8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d324c10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e3f6b80"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x7daa1bb8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d99f3b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d326510"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3f6ea0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d326ba8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3f4590"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x7d325870"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e3f3248"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7d31c260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7da512f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d31c8f8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3f4590"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d324f28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e3f6ea0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d3235d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3f4590"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d7c2ae8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7daa5330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketEngineClient" scoped="" ref="0x7daa05d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7eac1490"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PacketEngineClient" scoped="" ref="0x7d30d730"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SinglePacket" scoped="" ref="0x7d996ef8"/></from>
      <to><interface-ref name="SinglePacket" scoped="" ref="0x7d9ff990"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d988230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7d9fdb30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7d9955a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3f4590"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x7d9fcea8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Receive" scoped="" ref="0x7d307040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7d307040"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7daa6a30"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7d307358"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7daa5330"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="15:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10;</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <documentation loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10;</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10;</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10;</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.8 2007/04/08 01:17:12 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UnicastCountToLedsC" loc="80:UnicastCountToLedsC.nc">
      <documentation loc="80:UnicastCountToLedsC.nc">
        <short>&#10; Implementation of the UnicastCountToLeds application.</short>
        <long>&#10; Implementation of the UnicastCountToLeds application. UnicastCountToLeds&#10; acts very similarly to the TinyOS example applicaton RadioCountToLeds, in&#10; which a 4Hz counter is maintained, and then the value is sent over the radio&#10; and displayed on LEDs of another node. However, here only node 0 sends a&#10; unicast message to node 1 with its value, rather than having each node&#10; broadcast its value in an AM packet every time it gets updated. Normally this&#10; would require nodes 0 and 1 to be within radio range of each other, but by&#10; simply using the send and receive components from the COMPASS framework, the&#10; message can be delivered across multiple hops to reach node 1 (assuming there&#10; is a path connecting node 0 and 1 in the network).&#10;&#10; @author Ryan Stinnett&#10; @author Philip Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10;</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10;</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UnicastCountToLedsAppC.AMSenderC" loc="42(UnicastCountToLedsAppC.AMSenderC):../../../tos/lib/netarch/single/SingleSenderC.nc">
      <instance number="0">
        <component-ref qname="SingleSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP" loc="40:../../../tos/lib/netarch/dsr/DsrP.nc">
      <documentation loc="40:../../../tos/lib/netarch/dsr/DsrP.nc">
        <short>&#10;&#10; Bundles the components which route and process DSR.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Bundles the components which route and process DSR.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DsrOptionsC" loc="40:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <configuration/>
    </component>
    <component qname="DsrOptionsC.TlvC" loc="45(DsrOptionsC.TlvC):../../../tos/lib/netarch/tlv/TlvPacketC.nc">
      <documentation loc="45(DsrOptionsC.TlvC):../../../tos/lib/netarch/tlv/TlvPacketC.nc">
        <short>&#10;&#10; A general Type-Length-Value (TLV) data processor within a packet.&#10;&#10;</short>
        <long>&#10;&#10; A general Type-Length-Value (TLV) data processor within a packet.&#10;&#10; This component does not assume any ordering by type among the TLV&#10;&#10; types in a block of types.  If at most one instance of a type is&#10;&#10; allowed, access the type via the TlvSingle interface.  If any number&#10;&#10; of instances are allowed, access the type via the TlvMultiple and&#10;&#10; TlvList interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TlvPacketC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrOptionsC.TlvC.TlvPacketP" loc="45(DsrOptionsC.TlvC.TlvPacketP):../../../tos/lib/netarch/tlv/TlvPacketP.nc">
      <documentation loc="45(DsrOptionsC.TlvC.TlvPacketP):../../../tos/lib/netarch/tlv/TlvPacketP.nc">
        <short>&#10;&#10; A general Type-Length-Value (TLV) data processor within a packet.&#10;&#10;</short>
        <long>&#10;&#10; A general Type-Length-Value (TLV) data processor within a packet.&#10;&#10; This component does not assume any ordering by type among the TLV&#10;&#10; types in a block of types.  If at most one instance of a type is&#10;&#10; allowed, access the type via the TlvSingle interface.  If any number&#10;&#10; of instances are allowed, access the type via the TlvMultiple and&#10;&#10; TlvList interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TlvPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="TlvP" loc="45:../../../tos/lib/netarch/tlv/TlvP.nc">
      <documentation loc="45:../../../tos/lib/netarch/tlv/TlvP.nc">
        <short>&#10;&#10; A general Type-Length-Value (TLV) data processor. </short>
        <long>&#10;&#10; A general Type-Length-Value (TLV) data processor.  This component&#10;&#10; does not assume any ordering by type among the TLV types in a&#10;&#10; block of types.  If at most one instance of a type is allowed,&#10;&#10; access the type via the TlvSingle interface.  If any number of&#10;&#10; instances are allowed, access the type via the TlvMultiple and&#10;&#10; TlvList interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketEngineP" loc="80:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <documentation loc="80:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
        <short>&#10;&#10; Queues packets sent, received, and overheard for a multihop routing&#10;&#10; protocol. </short>
        <long>&#10;&#10; Queues packets sent, received, and overheard for a multihop routing&#10;&#10; protocol.  This &#34;packet engine&#34; is intended to be flexible enough to&#10;&#10; support a wide array of possible protocols.&#10;&#10;&#10;&#10; A control component using the PacketEngine interfaces provided here&#10;&#10; is notified of and can control all of the above packets, while not&#10;&#10; having to deal with packet management issues itself.&#10;&#10;&#10;&#10; At any time after being notified of a packet's reception, the control&#10;&#10; component can modify the packet (if needed) and then instruct this engine&#10;&#10; to take one of the following actions:&#10;&#10;   - Send (pass to lower layer)&#10;&#10;   - Send with Intercept (pass to lower layer if upper layer approves)&#10;&#10;   - Receive (pass to upper layer)&#10;&#10;   - Drop (silently remove)&#10;&#10;&#10;&#10; Note that this allows for some unusual actions to take place, such as&#10;&#10; forcing a receive on a packet the upper layer has sent (which also&#10;&#10; means it won't go on the radio anymore).&#10;&#10;&#10;&#10; The control component is responsible for ensuring the packet is valid&#10;&#10; if it makes any modifications.  For example, it must update the payload&#10;&#10; length if the size of the payload changes.&#10;&#10;&#10;&#10; This component does not request acknowledgements or use any kind of&#10;&#10; automatic retry scheme.  However, the return value of the&#10;&#10; PacketEngine.sendDone event allows the control component to request&#10;&#10; a retry for any packet that failed to send.  The control component or&#10;&#10; the upper layer is certainly free to request acknowledgments on its own.&#10;&#10;&#10;&#10; When disabled, no new packets are accepted into the buffer and the&#10;&#10; packets already in the buffer are not processed but do remain in&#10;&#10; the buffer.  Processing resumes when enabled again.&#10;&#10;&#10;&#10; The AM type of packets sent from the upper layer is copied into the&#10;&#10; packet payload for storage so that multihop protocols can use AM types&#10;&#10; of their own without collisions.&#10;&#10;&#10;&#10; Based on TransceiverM by David Moss, CtpForwardingEngineP by Phil Levis,&#10;&#10; Kyle Jamieson, Omprakash Gnawali, and Rodrigo Fonseca, and&#10;&#10; ForwardingEngineM by Roamin Thouvenin.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="31:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10;</short>
        <long>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10; @author  Barbara Hohlt&#10; @author  Philip Levis&#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgP" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers. </short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;		S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DsrP.DsrControlP" loc="89(DsrP.DsrControlP):../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <instance number="0">
        <component-ref qname="DsrControlP"/>
        <arguments>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC" loc="40(DsrP.DsrRouteCacheC):../../../tos/lib/netarch/dsr/DsrRouteCacheC.nc">
      <documentation loc="40(DsrP.DsrRouteCacheC):../../../tos/lib/netarch/dsr/DsrRouteCacheC.nc">
        <short>&#10;&#10; Defines the default route cache to use with DSR.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Defines the default route cache to use with DSR.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DsrRouteCacheC"/>
        <arguments>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC" loc="42(DsrP.DsrRouteCacheC.SimpleLinkCacheC):../../../tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
      <instance number="0">
        <component-ref qname="SimpleLinkCacheC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7e7207c8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleLinkCacheP" loc="41:../../../tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <documentation loc="41:../../../tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
        <short>&#10;&#10; A simple link cache that does not automatically remove links and&#10;&#10; assigns a weight of 1 to all links.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; A simple link cache that does not automatically remove links and&#10;&#10; assigns a weight of 1 to all links.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC" loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC):../../../tos/lib/data/graph/GraphWeightedC.nc">
      <documentation loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC):../../../tos/lib/data/graph/GraphWeightedC.nc">
        <short>&#10;&#10; Builds a weighted graph as edges are added and supports finding the single&#10;&#10; source shortest path.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Builds a weighted graph as edges are added and supports finding the single&#10;&#10; source shortest path.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GraphWeightedC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7e7207c8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7e5fac00"/></typename>
          </type-int>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC" loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC):../../../tos/lib/data/graph/GraphSparseC.nc">
      <documentation loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC):../../../tos/lib/data/graph/GraphSparseC.nc">
        <short>&#10;&#10; Wires supporting modules needed by any GraphSparseP. </short>
        <long>&#10;&#10; Wires supporting modules needed by any GraphSparseP.  This should be&#10;&#10; combined with a weight module and any processing modules.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GraphSparseC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC" loc="41(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC):../../../tos/lib/data/alloc/IndexedAllocC.nc">
      <instance number="0">
        <component-ref qname="IndexedAllocC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits" loc="39(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits):../../../tos/lib/data/alloc/IndexedAllocBitsC.nc">
      <documentation loc="39(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits):../../../tos/lib/data/alloc/IndexedAllocBitsC.nc">
        <short>&#10;&#10; Packages IndexedAllocBitsP together with its dependencies to create an&#10;&#10; easily usable component.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Packages IndexedAllocBitsP together with its dependencies to create an&#10;&#10; easily usable component.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IndexedAllocBitsC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5a09f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits" loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5a09f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits" loc="42(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits):../../../tos/lib/data/alloc/IndexedAllocBitsP.nc">
      <documentation loc="42(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits):../../../tos/lib/data/alloc/IndexedAllocBitsP.nc">
        <short>&#10;&#10; A compact indexed allocation scheme using only a bit vector to track the&#10;&#10; elements. </short>
        <long>&#10;&#10; A compact indexed allocation scheme using only a bit vector to track the&#10;&#10; elements.  While this is surely slower than a pointer-based system, it uses&#10;&#10; much less memory.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IndexedAllocBitsP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5a09f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP" loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP):../../../tos/lib/data/graph/GraphSparseP.nc">
      <documentation loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP):../../../tos/lib/data/graph/GraphSparseP.nc">
        <short>&#10;&#10; A sparse graph using adjacency lists.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; A sparse graph using adjacency lists.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GraphSparseP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC" loc="38(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC):../../../tos/lib/data/graph/SourceShortestPathC.nc">
      <documentation loc="38(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC):../../../tos/lib/data/graph/SourceShortestPathC.nc">
        <short>&#10;&#10; Wires supporting modules needed by any SourceShortestPathP.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Wires supporting modules needed by any SourceShortestPathP.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SourceShortestPathC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </value>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7e5bb7f8"/></type-var>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC" loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC):../../../tos/lib/data/queue/PriorityQueueC.nc">
      <instance number="0">
        <component-ref qname="PriorityQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP" loc="44(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP):../../../tos/lib/data/queue/PriorityQueueP.nc">
      <documentation loc="44(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP):../../../tos/lib/data/queue/PriorityQueueP.nc">
        <short>&#10;&#10; Implements a priority queue sitting on top of an index heap. </short>
        <long>&#10;&#10; Implements a priority queue sitting on top of an index heap.  It be either a&#10;&#10; min or max heap depending on the implementation of the Compare.test command.&#10;&#10; Since this is an index heap, none of the priorities are actually stored here.&#10;&#10; Instead, a component needs only to answer calls of Compare.test (which would&#10;&#10; typically be based on the priorities in some array owned by that component).&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PriorityQueueP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e521270"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP" loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP):../../../tos/lib/data/graph/SourceShortestPathP.nc">
      <documentation loc="40(DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP):../../../tos/lib/data/graph/SourceShortestPathP.nc">
        <short>&#10;&#10; Uses Djikstra's algorithm with a priority queue holding fringe vertices to&#10;&#10; find the single source shortest path. </short>
        <long>&#10;&#10; Uses Djikstra's algorithm with a priority queue holding fringe vertices to&#10;&#10; find the single source shortest path.  All weights are assumed to be&#10;&#10; non-negative.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SourceShortestPathP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </value>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7e52b630"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.TrackC" loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.TrackC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.TrackC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.InitialC" loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.InitialC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="33(DsrP.DsrRouteCacheC.SimpleLinkCacheC.InitialC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="GraphEdgeUnitWeightC" loc="40:../../../tos/lib/data/graph/GraphEdgeUnitWeightC.nc">
      <documentation loc="40:../../../tos/lib/data/graph/GraphEdgeUnitWeightC.nc">
        <short>&#10;&#10; All edges are fixed at unit weight.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; All edges are fixed at unit weight.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="47:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaZ platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaZ platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio.</short>
        <long>&#10; The Active Message layer for the CC2420 radio. This configuration&#10; just layers the AM dispatch (CC2420ActiveMessageM) on top of the&#10; underlying CC2420 radio packet (CC2420CsmaCsmaCC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group). Note that snooping may not work, due to CC2420&#10; early packet rejection if acknowledgements are enabled.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @version $Revision: 1.9 $ $Date: 2007/09/14 00:15:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2007/09/13 23:10:16 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2007/09/13 23:10:16 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.3 $ $Date: 2007/11/19 15:48:54 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10;</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x7f080b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <documentation loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10;</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.4 2006/12/12 18:23:44 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.&#10;</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.5 2007/04/30 17:31:08 rincon Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.2 $ $Date: 2007/11/07 22:22:01 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/system/StateImplC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.x/tos/system/StateImplP.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/system/StateImplP.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.&#10;&#10;</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller. </short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.6 2007/02/28 17:33:59 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10;</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <documentation loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10;</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.&#10;&#10;</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @version $Revision: 1.4 $ $Date: 2007/09/13 23:10:16 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10;</short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10;</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(UniqueSendC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10;</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10;</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="61:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks. </short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10;</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10;</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(DummyLplC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10;</short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10;</short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DsrP.RouteRequestInCacheC" loc="30(DsrP.RouteRequestInCacheC):../../../tos/lib/data/cache/LruDataCacheC.nc">
      <documentation loc="30(DsrP.RouteRequestInCacheC):../../../tos/lib/data/cache/LruDataCacheC.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10;</short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10; @author Ryan Stinnett&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruDataCacheC"/>
        <arguments>
          <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7ea83578"/>
            <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7ea83898"/></typename>
          </type-tag>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.RouteRequestInCacheC.CacheP" loc="67(DsrP.RouteRequestInCacheC.CacheP):../../../tos/lib/data/cache/LruDataCacheP.nc">
      <documentation loc="67(DsrP.RouteRequestInCacheC.CacheP):../../../tos/lib/data/cache/LruDataCacheP.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;. </short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.  Inserting a data item not in the cache will replace&#10; the oldest, and inserting an element already in the cache will refresh&#10; its age.  Insert and lookup return a pointer to the cached data.  This&#10; component should be wired to an Equal interface to check for equality&#10; on the data type used.&#10;&#10; @author Ryan Stinnett&#10; @author Rodrigo Fonseca&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruDataCacheP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_cache_item_t" scoped="" ref="0x7dbf1538"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.RouteRequestOutCacheC" loc="30(DsrP.RouteRequestOutCacheC):../../../tos/lib/data/cache/LruDataCacheC.nc">
      <documentation loc="30(DsrP.RouteRequestOutCacheC):../../../tos/lib/data/cache/LruDataCacheC.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10;</short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10; @author Ryan Stinnett&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="LruDataCacheC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7ea84c28"/>
            <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7ea83010"/></typename>
          </type-tag>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.RouteRequestOutCacheC.CacheP" loc="67(DsrP.RouteRequestOutCacheC.CacheP):../../../tos/lib/data/cache/LruDataCacheP.nc">
      <documentation loc="67(DsrP.RouteRequestOutCacheC.CacheP):../../../tos/lib/data/cache/LruDataCacheP.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;. </short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.  Inserting a data item not in the cache will replace&#10; the oldest, and inserting an element already in the cache will refresh&#10; its age.  Insert and lookup return a pointer to the cached data.  This&#10; component should be wired to an Equal interface to check for equality&#10; on the data type used.&#10;&#10; @author Ryan Stinnett&#10; @author Rodrigo Fonseca&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="LruDataCacheP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_cache_item_t" scoped="" ref="0x7dbf1538"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.RouteRequestOutTimerC" loc="39(DsrP.RouteRequestOutTimerC):../../../tos/lib/data/timer/DataTimerC.nc">
      <documentation loc="39(DsrP.RouteRequestOutTimerC):../../../tos/lib/data/timer/DataTimerC.nc">
        <short>&#10;&#10; A timed series of data items. </short>
        <long>&#10;&#10; A timed series of data items.  The client is notified as each item&#10;&#10; expires.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DataTimerC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba1a28"/></typename>
          </type-int>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrP.RouteRequestOutTimerC.TimerMilliC" loc="36(DsrP.RouteRequestOutTimerC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(DsrP.RouteRequestOutTimerC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer. </short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7db86910"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.RouteRequestOutTimerC.DataTimerP" loc="44(DsrP.RouteRequestOutTimerC.DataTimerP):../../../tos/lib/data/timer/DataTimerP.nc">
      <documentation loc="44(DsrP.RouteRequestOutTimerC.DataTimerP):../../../tos/lib/data/timer/DataTimerP.nc">
        <short>&#10;&#10; A timed series of data items. </short>
        <long>&#10;&#10; A timed series of data items.  The client is notified as each item&#10;&#10; expires.  Uses the Equal interface to allow complex data types, but&#10;&#10; the default supplied works for primitive types.&#10;&#10;&#10;&#10; TODO: Change to use a &#34;first&#34;.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DataTimerP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_timer_data_t" scoped="" ref="0x7dbba6e0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.ComposeC" loc="33(DsrP.ComposeC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="33(DsrP.ComposeC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrP.SalvageC" loc="33(DsrP.SalvageC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <documentation loc="33(DsrP.SalvageC):/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrC.DsrTransceiverC" loc="42(DsrC.DsrTransceiverC):../../../tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <documentation loc="42(DsrC.DsrTransceiverC):../../../tos/lib/netarch/multihop/PacketTransceiverC.nc">
        <short>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type. </short>
        <long>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type.  The Packet&#10;&#10; interface used by this component should be provided by the protocol.&#10;&#10; Similarly, the SubPacket interface provided by this component should&#10;&#10; be used by the protocol to complete the chain of Packet interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketTransceiverC"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketEngineC" loc="40:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <documentation loc="40:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
        <short>&#10;&#10; Wires supporting modules needed by any PacketEngineP.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Wires supporting modules needed by any PacketEngineP.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketEngineC.SendQueueC" loc="30(PacketEngineC.SendQueueC):../../../tos/lib/data/cache/LruDataCacheC.nc">
      <documentation loc="30(PacketEngineC.SendQueueC):../../../tos/lib/data/cache/LruDataCacheC.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10;</short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10; @author Ryan Stinnett&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="LruDataCacheC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7eab3c88"/>
            <typename><typedef-ref name="packet_send_entry_t" ref="0x7eab3ed8"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketEngineC.SendQueueC.CacheP" loc="67(PacketEngineC.SendQueueC.CacheP):../../../tos/lib/data/cache/LruDataCacheP.nc">
      <documentation loc="67(PacketEngineC.SendQueueC.CacheP):../../../tos/lib/data/cache/LruDataCacheP.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;. </short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.  Inserting a data item not in the cache will replace&#10; the oldest, and inserting an element already in the cache will refresh&#10; its age.  Insert and lookup return a pointer to the cached data.  This&#10; component should be wired to an Equal interface to check for equality&#10; on the data type used.&#10;&#10; @author Ryan Stinnett&#10; @author Rodrigo Fonseca&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="LruDataCacheP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_cache_item_t" scoped="" ref="0x7dbf1538"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PacketEngineC.ReceivePoolC" loc="41(PacketEngineC.ReceivePoolC):/opt/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="41(PacketEngineC.ReceivePoolC):/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.&#10;&#10; </short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
            <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketEngineC.ReceivePoolC.PoolP" loc="53(PacketEngineC.ReceivePoolC.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="53(PacketEngineC.ReceivePoolC.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.&#10; </short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7da978f8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PacketEngineC.SendPoolC" loc="41(PacketEngineC.SendPoolC):/opt/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="41(PacketEngineC.SendPoolC):/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.&#10;&#10; </short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
            <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketEngineC.SendPoolC.PoolP" loc="53(PacketEngineC.SendPoolC.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="53(PacketEngineC.SendPoolC.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.&#10; </short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7da978f8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PacketEngineC.SendStateC" loc="65(PacketEngineC.SendStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(PacketEngineC.SendStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketEngineC.SendBackoffC" loc="36(PacketEngineC.SendBackoffC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(PacketEngineC.SendBackoffC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrTransceiverC.AMSenderC" loc="39(DsrC.DsrTransceiverC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="39(DsrC.DsrTransceiverC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP" loc="35(DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="35(DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.&#10;&#10;</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DsrC.DsrTransceiverC.AMSnoopingReceiverC" loc="36(DsrC.DsrTransceiverC.AMSnoopingReceiverC):/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <documentation loc="36(DsrC.DsrTransceiverC.AMSnoopingReceiverC):/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
        <short>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10;</short>
        <long>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnoopingReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.SinglePacketProcessorC" loc="39(DsrC.SinglePacketProcessorC):../../../tos/lib/netarch/multihop/PacketProcessorC.nc">
      <documentation loc="39(DsrC.SinglePacketProcessorC):../../../tos/lib/netarch/multihop/PacketProcessorC.nc">
        <short>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketProcessorC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrPacketProcessorC" loc="39(DsrC.DsrPacketProcessorC):../../../tos/lib/netarch/multihop/PacketProcessorC.nc">
      <documentation loc="39(DsrC.DsrPacketProcessorC):../../../tos/lib/netarch/multihop/PacketProcessorC.nc">
        <short>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketProcessorC"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SinglePacketC" loc="40:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <documentation loc="40:../../../tos/lib/netarch/single/SinglePacketC.nc">
        <short>&#10;&#10; Connects to SinglePacketP to supporting modules.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Connects to SinglePacketP to supporting modules.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SinglePacketP" loc="42:../../../tos/lib/netarch/single/SinglePacketP.nc">
      <documentation loc="42:../../../tos/lib/netarch/single/SinglePacketP.nc">
        <short>&#10;&#10; Access and set the properties of a multihop packet with a single&#10;&#10; node address based destination.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access and set the properties of a multihop packet with a single&#10;&#10; node address based destination.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DsrC.DsrSendC" loc="41(DsrC.DsrSendC):../../../tos/lib/netarch/single/SingleProcessorSenderC.nc">
      <documentation loc="41(DsrC.DsrSendC):../../../tos/lib/netarch/single/SingleProcessorSenderC.nc">
        <short>&#10;&#10; Modified sender for single destination multihop packets of created&#10;&#10; by a PacketEngine processor for a given link layer AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Modified sender for single destination multihop packets of created&#10;&#10; by a PacketEngine processor for a given link layer AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SingleProcessorSenderC"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrSendC.PacketSenderC" loc="39(DsrC.DsrSendC.PacketSenderC):../../../tos/lib/netarch/multihop/PacketSenderC.nc">
      <documentation loc="39(DsrC.DsrSendC.PacketSenderC):../../../tos/lib/netarch/multihop/PacketSenderC.nc">
        <short>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketSenderC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DsrC.DsrSendC.PacketSenderC.PacketEngineClientP" loc="40(DsrC.DsrSendC.PacketSenderC.PacketEngineClientP):../../../tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <documentation loc="40(DsrC.DsrSendC.PacketSenderC.PacketEngineClientP):../../../tos/lib/netarch/multihop/PacketEngineClientP.nc">
        <short>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client. </short>
        <long>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.  These values are stored statically so that no&#10;&#10; RAM is used up to hold them.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketEngineClientP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SingleProtocolC.TransceiverC" loc="42(SingleProtocolC.TransceiverC):../../../tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <documentation loc="42(SingleProtocolC.TransceiverC):../../../tos/lib/netarch/multihop/PacketTransceiverC.nc">
        <short>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type. </short>
        <long>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type.  The Packet&#10;&#10; interface used by this component should be provided by the protocol.&#10;&#10; Similarly, the SubPacket interface provided by this component should&#10;&#10; be used by the protocol to complete the chain of Packet interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketTransceiverC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SingleProtocolC.TransceiverC.AMSenderC" loc="39(SingleProtocolC.TransceiverC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="39(SingleProtocolC.TransceiverC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP" loc="35(SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="35(SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SingleProtocolC.TransceiverC.AMSnoopingReceiverC" loc="36(SingleProtocolC.TransceiverC.AMSnoopingReceiverC):/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <documentation loc="36(SingleProtocolC.TransceiverC.AMSnoopingReceiverC):/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
        <short>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10;</short>
        <long>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSnoopingReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UnicastCountToLedsAppC.AMSenderC.PacketSenderC" loc="39(UnicastCountToLedsAppC.AMSenderC.PacketSenderC):../../../tos/lib/netarch/multihop/PacketSenderC.nc">
      <documentation loc="39(UnicastCountToLedsAppC.AMSenderC.PacketSenderC):../../../tos/lib/netarch/multihop/PacketSenderC.nc">
        <short>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UnicastCountToLedsAppC.AMSenderC.PacketSenderC.PacketEngineClientP" loc="40(UnicastCountToLedsAppC.AMSenderC.PacketSenderC.PacketEngineClientP):../../../tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <documentation loc="40(UnicastCountToLedsAppC.AMSenderC.PacketSenderC.PacketEngineClientP):../../../tos/lib/netarch/multihop/PacketEngineClientP.nc">
        <short>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client. </short>
        <long>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.  These values are stored statically so that no&#10;&#10; RAM is used up to hold them.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketEngineClientP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UnicastCountToLedsAppC.AMReceiverC" loc="41(UnicastCountToLedsAppC.AMReceiverC):../../../tos/lib/netarch/single/SingleReceiverC.nc">
      <documentation loc="41(UnicastCountToLedsAppC.AMReceiverC):../../../tos/lib/netarch/single/SingleReceiverC.nc">
        <short>&#10;&#10; Receiver for single destination multihop packets of a given&#10;&#10; application layer AM type that are destined for this node.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Receiver for single destination multihop packets of a given&#10;&#10; application layer AM type that are destined for this node.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SingleReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UnicastCountToLedsAppC.AMReceiverC.PacketReceiverC" loc="39(UnicastCountToLedsAppC.AMReceiverC.PacketReceiverC):../../../tos/lib/netarch/multihop/PacketReceiverC.nc">
      <documentation loc="39(UnicastCountToLedsAppC.AMReceiverC.PacketReceiverC):../../../tos/lib/netarch/multihop/PacketReceiverC.nc">
        <short>&#10;&#10; Receiver for generic multihop packets of a given application layer&#10;&#10; AM type that are destined for this node.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Receiver for generic multihop packets of a given application layer&#10;&#10; AM type that are destined for this node.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UnicastCountToLedsAppC.TimerMilliC" loc="36(UnicastCountToLedsAppC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(UnicastCountToLedsAppC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ee63588" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ee63718" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ee638a8" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ee42988" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ee42b28" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ee42cc8" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7ee42e60" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ed40868" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ed40a08" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ed40ba8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7ed40d40" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SingleSenderC" loc="42:../../../tos/lib/netarch/single/SingleSenderC.nc" abstract="">
      <parameters>
        <constant name="upperId" ref="0x7eab1320" loc="42:../../../tos/lib/netarch/single/SingleSenderC.nc">
          <component-ref qname="SingleSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TlvPacketC" loc="45:../../../tos/lib/netarch/tlv/TlvPacketC.nc" abstract="">
      <documentation loc="45:../../../tos/lib/netarch/tlv/TlvPacketC.nc">
        <short>&#10;&#10; A general Type-Length-Value (TLV) data processor within a packet.&#10;&#10;</short>
        <long>&#10;&#10; A general Type-Length-Value (TLV) data processor within a packet.&#10;&#10; This component does not assume any ordering by type among the TLV&#10;&#10; types in a block of types.  If at most one instance of a type is&#10;&#10; allowed, access the type via the TlvSingle interface.  If any number&#10;&#10; of instances are allowed, access the type via the TlvMultiple and&#10;&#10; TlvList interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TlvPacketP" loc="45:../../../tos/lib/netarch/tlv/TlvPacketP.nc" abstract="">
      <documentation loc="45:../../../tos/lib/netarch/tlv/TlvPacketP.nc">
        <short>&#10;&#10; A general Type-Length-Value (TLV) data processor within a packet.&#10;&#10;</short>
        <long>&#10;&#10; A general Type-Length-Value (TLV) data processor within a packet.&#10;&#10; This component does not assume any ordering by type among the TLV&#10;&#10; types in a block of types.  If at most one instance of a type is&#10;&#10; allowed, access the type via the TlvSingle interface.  If any number&#10;&#10; of instances are allowed, access the type via the TlvMultiple and&#10;&#10; TlvList interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DsrControlP" loc="89:../../../tos/lib/netarch/dsr/DsrControlP.nc" abstract="">
      <parameters>
        <constant name="BUFFER_SIZE" ref="0x7e719a98" loc="89:../../../tos/lib/netarch/dsr/DsrControlP.nc">
          <component-ref qname="DsrControlP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DsrRouteCacheC" loc="40:../../../tos/lib/netarch/dsr/DsrRouteCacheC.nc" abstract="">
      <documentation loc="40:../../../tos/lib/netarch/dsr/DsrRouteCacheC.nc">
        <short>&#10;&#10; Defines the default route cache to use with DSR.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Defines the default route cache to use with DSR.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxNodes" ref="0x7e605670" loc="40:../../../tos/lib/netarch/dsr/DsrRouteCacheC.nc">
          <component-ref qname="DsrRouteCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
          </type-int>
        </constant>
        <constant name="maxLinks" ref="0x7e605820" loc="41:../../../tos/lib/netarch/dsr/DsrRouteCacheC.nc">
          <component-ref qname="DsrRouteCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_link_id_t" ref="0x7e7207c8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleLinkCacheC" loc="42:../../../tos/lib/netarch/dsr/SimpleLinkCacheC.nc" abstract="">
      <parameters>
        <constant name="maxNodes" ref="0x7e5f8010" loc="42:../../../tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
          <component-ref qname="SimpleLinkCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
          </type-int>
        </constant>
        <constant name="maxLinks" ref="0x7e5f81c0" loc="43:../../../tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
          <component-ref qname="SimpleLinkCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_link_id_t" ref="0x7e7207c8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="GraphWeightedC" loc="41:../../../tos/lib/data/graph/GraphWeightedC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/data/graph/GraphWeightedC.nc">
        <short>&#10;&#10; Builds a weighted graph as edges are added and supports finding the single&#10;&#10; source shortest path.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Builds a weighted graph as edges are added and supports finding the single&#10;&#10; source shortest path.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7e5bb1e8" loc="41:../../../tos/lib/data/graph/GraphWeightedC.nc">
          <component-ref qname="GraphWeightedC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
          </type-int>
        </constant>
        <constant name="maxEdges" ref="0x7e5bb390" loc="42:../../../tos/lib/data/graph/GraphWeightedC.nc">
          <component-ref qname="GraphWeightedC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
          </type-int>
        </constant>
        <constant name="parallelEdges" ref="0x7e5bb530" loc="43:../../../tos/lib/data/graph/GraphWeightedC.nc">
          <component-ref qname="GraphWeightedC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
        </constant>
        <typedef name="graph_edge_weight_t" ref="0x7e5bb7f8" loc="44:../../../tos/lib/data/graph/GraphWeightedC.nc">
          <component-ref qname="GraphWeightedC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7e5bb7f8"/></type-var>
        </typedef>
      </parameters>
      <configuration/>
    </component>
    <component qname="GraphSparseC" loc="41:../../../tos/lib/data/graph/GraphSparseC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/data/graph/GraphSparseC.nc">
        <short>&#10;&#10; Wires supporting modules needed by any GraphSparseP. </short>
        <long>&#10;&#10; Wires supporting modules needed by any GraphSparseP.  This should be&#10;&#10; combined with a weight module and any processing modules.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7e5a6010" loc="41:../../../tos/lib/data/graph/GraphSparseC.nc">
          <component-ref qname="GraphSparseC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
          </type-int>
        </constant>
        <constant name="maxEdges" ref="0x7e5a61b8" loc="42:../../../tos/lib/data/graph/GraphSparseC.nc">
          <component-ref qname="GraphSparseC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
          </type-int>
        </constant>
        <constant name="parallelEdges" ref="0x7e5a6358" loc="43:../../../tos/lib/data/graph/GraphSparseC.nc">
          <component-ref qname="GraphSparseC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="IndexedAllocC" loc="41:../../../tos/lib/data/alloc/IndexedAllocC.nc" abstract="">
      <parameters>
        <constant name="MAX_SIZE" ref="0x7e5a0e20" loc="41:../../../tos/lib/data/alloc/IndexedAllocC.nc">
          <component-ref qname="IndexedAllocC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5a09f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="IndexedAllocBitsC" loc="39:../../../tos/lib/data/alloc/IndexedAllocBitsC.nc" abstract="">
      <documentation loc="39:../../../tos/lib/data/alloc/IndexedAllocBitsC.nc">
        <short>&#10;&#10; Packages IndexedAllocBitsP together with its dependencies to create an&#10;&#10; easily usable component.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Packages IndexedAllocBitsP together with its dependencies to create an&#10;&#10; easily usable component.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxSize" ref="0x7e592a18" loc="39:../../../tos/lib/data/alloc/IndexedAllocBitsC.nc">
          <component-ref qname="IndexedAllocBitsC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5a09f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="BitVectorC" loc="33:/opt/tinyos-2.x/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x7e58a520" loc="33:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="IndexedAllocBitsP" loc="42:../../../tos/lib/data/alloc/IndexedAllocBitsP.nc" abstract="">
      <documentation loc="42:../../../tos/lib/data/alloc/IndexedAllocBitsP.nc">
        <short>&#10;&#10; A compact indexed allocation scheme using only a bit vector to track the&#10;&#10; elements. </short>
        <long>&#10;&#10; A compact indexed allocation scheme using only a bit vector to track the&#10;&#10; elements.  While this is surely slower than a pointer-based system, it uses&#10;&#10; much less memory.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxSize" ref="0x7e574688" loc="42:../../../tos/lib/data/alloc/IndexedAllocBitsP.nc">
          <component-ref qname="IndexedAllocBitsP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5a09f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GraphSparseP" loc="40:../../../tos/lib/data/graph/GraphSparseP.nc" abstract="">
      <documentation loc="40:../../../tos/lib/data/graph/GraphSparseP.nc">
        <short>&#10;&#10; A sparse graph using adjacency lists.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; A sparse graph using adjacency lists.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7e55c420" loc="40:../../../tos/lib/data/graph/GraphSparseP.nc">
          <component-ref qname="GraphSparseP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
          </type-int>
        </constant>
        <constant name="maxEdges" ref="0x7e55c5c8" loc="41:../../../tos/lib/data/graph/GraphSparseP.nc">
          <component-ref qname="GraphSparseP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
          </type-int>
        </constant>
        <constant name="parallelEdges" ref="0x7e55c768" loc="42:../../../tos/lib/data/graph/GraphSparseP.nc">
          <component-ref qname="GraphSparseP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SourceShortestPathC" loc="38:../../../tos/lib/data/graph/SourceShortestPathC.nc" abstract="">
      <documentation loc="38:../../../tos/lib/data/graph/SourceShortestPathC.nc">
        <short>&#10;&#10; Wires supporting modules needed by any SourceShortestPathP.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Wires supporting modules needed by any SourceShortestPathP.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7e52b368" loc="38:../../../tos/lib/data/graph/SourceShortestPathC.nc">
          <component-ref qname="SourceShortestPathC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
          </type-int>
        </constant>
        <typedef name="graph_edge_weight_t" ref="0x7e52b630" loc="39:../../../tos/lib/data/graph/SourceShortestPathC.nc">
          <component-ref qname="SourceShortestPathC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7e52b630"/></type-var>
        </typedef>
      </parameters>
      <configuration/>
    </component>
    <component qname="PriorityQueueC" loc="40:../../../tos/lib/data/queue/PriorityQueueC.nc" abstract="">
      <parameters>
        <constant name="maxSize" ref="0x7e521690" loc="40:../../../tos/lib/data/queue/PriorityQueueC.nc">
          <component-ref qname="PriorityQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7e521270"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PriorityQueueP" loc="44:../../../tos/lib/data/queue/PriorityQueueP.nc" abstract="">
      <documentation loc="44:../../../tos/lib/data/queue/PriorityQueueP.nc">
        <short>&#10;&#10; Implements a priority queue sitting on top of an index heap. </short>
        <long>&#10;&#10; Implements a priority queue sitting on top of an index heap.  It be either a&#10;&#10; min or max heap depending on the implementation of the Compare.test command.&#10;&#10; Since this is an index heap, none of the priorities are actually stored here.&#10;&#10; Instead, a component needs only to answer calls of Compare.test (which would&#10;&#10; typically be based on the priorities in some array owned by that component).&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxSize" ref="0x7e50b920" loc="44:../../../tos/lib/data/queue/PriorityQueueP.nc">
          <component-ref qname="PriorityQueueP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7e521270"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SourceShortestPathP" loc="40:../../../tos/lib/data/graph/SourceShortestPathP.nc" abstract="">
      <documentation loc="40:../../../tos/lib/data/graph/SourceShortestPathP.nc">
        <short>&#10;&#10; Uses Djikstra's algorithm with a priority queue holding fringe vertices to&#10;&#10; find the single source shortest path. </short>
        <long>&#10;&#10; Uses Djikstra's algorithm with a priority queue holding fringe vertices to&#10;&#10; find the single source shortest path.  All weights are assumed to be&#10;&#10; non-negative.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="maxVertices" ref="0x7e4e0ca8" loc="40:../../../tos/lib/data/graph/SourceShortestPathP.nc">
          <component-ref qname="SourceShortestPathP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
          </type-int>
        </constant>
        <typedef name="graph_edge_weight_t" ref="0x7e4dd010" loc="41:../../../tos/lib/data/graph/SourceShortestPathP.nc">
          <component-ref qname="SourceShortestPathP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="graph_edge_weight_t" scoped="" ref="0x7e4dd010"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="66:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7e12b580" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e12b580"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7e12b710" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7e121848" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7e121848"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7e121b08" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e121b08"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7e121c98" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7e0cc270" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7e0cc270"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7e0cc530" loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e0cc530"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="">
      <documentation loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7e0b1038" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7e0b1038"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7e0b12f8" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7e0b12f8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7e0b14c0" loc="46:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7e0b14c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7e0b1780" loc="47:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7e0b1780"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7e0b1920" loc="48:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7e0b1be8" loc="49:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7e0b1be8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="">
      <documentation loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7e0923c0" loc="41:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7e0923c0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7e092680" loc="42:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7e092680"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7e092848" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7e092848"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7e092b08" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7e092b08"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7e092ca8" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="">
      <documentation loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="">
      <documentation loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7dfe8968" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7dfe8b08" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7dfe8ca8" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7dfe8e40" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.x/tos/system/StateC.nc" abstract="">
      <documentation loc="65:/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7de331d8" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="">
      <parameters>
        <constant name="size" ref="0x7de1d450" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="">
      <documentation loc="49:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="LruDataCacheC" loc="30:../../../tos/lib/data/cache/LruDataCacheC.nc" abstract="">
      <documentation loc="30:../../../tos/lib/data/cache/LruDataCacheC.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10;</short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.&#10;&#10; @author Ryan Stinnett&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_cache_item_t" ref="0x7dbf1538" loc="30:../../../tos/lib/data/cache/LruDataCacheC.nc">
          <component-ref qname="LruDataCacheC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_cache_item_t" scoped="" ref="0x7dbf1538"/></type-var>
        </typedef>
        <constant name="size" ref="0x7dbf16c0" loc="30:../../../tos/lib/data/cache/LruDataCacheC.nc">
          <component-ref qname="LruDataCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruDataCacheP" loc="67:../../../tos/lib/data/cache/LruDataCacheP.nc" abstract="">
      <documentation loc="67:../../../tos/lib/data/cache/LruDataCacheP.nc">
        <short>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;. </short>
        <long>&#10; A LRU data cache that stores data items, where an insert operation&#10; indicates &#34;use&#34;.  Inserting a data item not in the cache will replace&#10; the oldest, and inserting an element already in the cache will refresh&#10; its age.  Insert and lookup return a pointer to the cached data.  This&#10; component should be wired to an Equal interface to check for equality&#10; on the data type used.&#10;&#10; @author Ryan Stinnett&#10; @author Rodrigo Fonseca&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_cache_item_t" ref="0x7dbe6b40" loc="67:../../../tos/lib/data/cache/LruDataCacheP.nc">
          <component-ref qname="LruDataCacheP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_cache_item_t" scoped="" ref="0x7dbe6b40"/></type-var>
        </typedef>
        <constant name="size" ref="0x7dbe6cc8" loc="67:../../../tos/lib/data/cache/LruDataCacheP.nc">
          <component-ref qname="LruDataCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DataTimerC" loc="39:../../../tos/lib/data/timer/DataTimerC.nc" abstract="">
      <documentation loc="39:../../../tos/lib/data/timer/DataTimerC.nc">
        <short>&#10;&#10; A timed series of data items. </short>
        <long>&#10;&#10; A timed series of data items.  The client is notified as each item&#10;&#10; expires.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_timer_data_t" ref="0x7dbba6e0" loc="39:../../../tos/lib/data/timer/DataTimerC.nc">
          <component-ref qname="DataTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_timer_data_t" scoped="" ref="0x7dbba6e0"/></type-var>
        </typedef>
        <constant name="maxSize" ref="0x7dbba868" loc="39:../../../tos/lib/data/timer/DataTimerC.nc">
          <component-ref qname="DataTimerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7db86910" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7db86910"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7db86a90" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7db80b38" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7db80b38"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7db80cb8" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7db3f090" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7db3f090"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7db1f928" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7db1f928"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7db1fab0" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7daea630" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7daea630"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="DataTimerP" loc="44:../../../tos/lib/data/timer/DataTimerP.nc" abstract="">
      <documentation loc="44:../../../tos/lib/data/timer/DataTimerP.nc">
        <short>&#10;&#10; A timed series of data items. </short>
        <long>&#10;&#10; A timed series of data items.  The client is notified as each item&#10;&#10; expires.  Uses the Equal interface to allow complex data types, but&#10;&#10; the default supplied works for primitive types.&#10;&#10;&#10;&#10; TODO: Change to use a &#34;first&#34;.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_timer_data_t" ref="0x7dade010" loc="44:../../../tos/lib/data/timer/DataTimerP.nc">
          <component-ref qname="DataTimerP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_timer_data_t" scoped="" ref="0x7dade010"/></type-var>
        </typedef>
        <constant name="maxSize" ref="0x7dade198" loc="44:../../../tos/lib/data/timer/DataTimerP.nc">
          <component-ref qname="DataTimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PacketTransceiverC" loc="42:../../../tos/lib/netarch/multihop/PacketTransceiverC.nc" abstract="">
      <documentation loc="42:../../../tos/lib/netarch/multihop/PacketTransceiverC.nc">
        <short>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type. </short>
        <long>&#10;&#10; Multihop protocols instantiate this component to connect the packet&#10;&#10; engine to the AM layer for a given link layer AM type.  The Packet&#10;&#10; interface used by this component should be provided by the protocol.&#10;&#10; Similarly, the SubPacket interface provided by this component should&#10;&#10; be used by the protocol to complete the chain of Packet interfaces.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="lowerId" ref="0x7dab0408" loc="42:../../../tos/lib/netarch/multihop/PacketTransceiverC.nc">
          <component-ref qname="PacketTransceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.&#10;&#10; </short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7da978f8" loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7da978f8"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x7da97a88" loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc" abstract="">
      <documentation loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.&#10; </short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7da90118" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7da90118"/></type-var>
        </typedef>
        <constant name="size" ref="0x7da902a0" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7da66e00" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7da5f270" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="">
      <documentation loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7da48390" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSnoopingReceiverC" loc="36:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc" abstract="">
      <documentation loc="36:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
        <short>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10;</short>
        <long>&#10; The virtualized abstraction to hearing all packets of a given AM type,&#10; whether destined for this node or not.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7da179c8" loc="36:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
          <component-ref qname="AMSnoopingReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketProcessorC" loc="39:../../../tos/lib/netarch/multihop/PacketProcessorC.nc" abstract="">
      <documentation loc="39:../../../tos/lib/netarch/multihop/PacketProcessorC.nc">
        <short>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Connects a component that processes packets of a given AM type to the&#10;&#10; packet engine.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="lowerId" ref="0x7da0a088" loc="39:../../../tos/lib/netarch/multihop/PacketProcessorC.nc">
          <component-ref qname="PacketProcessorC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SingleProcessorSenderC" loc="41:../../../tos/lib/netarch/single/SingleProcessorSenderC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/netarch/single/SingleProcessorSenderC.nc">
        <short>&#10;&#10; Modified sender for single destination multihop packets of created&#10;&#10; by a PacketEngine processor for a given link layer AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Modified sender for single destination multihop packets of created&#10;&#10; by a PacketEngine processor for a given link layer AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="lowerId" ref="0x7d9b9068" loc="41:../../../tos/lib/netarch/single/SingleProcessorSenderC.nc">
          <component-ref qname="SingleProcessorSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketSenderC" loc="39:../../../tos/lib/netarch/multihop/PacketSenderC.nc" abstract="">
      <documentation loc="39:../../../tos/lib/netarch/multihop/PacketSenderC.nc">
        <short>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Sender for generic multihop packets of a given application layer&#10;&#10; AM type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="upperId" ref="0x7d9b2088" loc="39:../../../tos/lib/netarch/multihop/PacketSenderC.nc">
          <component-ref qname="PacketSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </constant>
        <constant name="defLowerId" ref="0x7d9b2218" loc="39:../../../tos/lib/netarch/multihop/PacketSenderC.nc">
          <component-ref qname="PacketSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </constant>
        <constant name="clientId" ref="0x7d9b23c8" loc="40:../../../tos/lib/netarch/multihop/PacketSenderC.nc">
          <component-ref qname="PacketSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_client_id_t" ref="0x7eac1490"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketEngineClientP" loc="40:../../../tos/lib/netarch/multihop/PacketEngineClientP.nc" abstract="">
      <documentation loc="40:../../../tos/lib/netarch/multihop/PacketEngineClientP.nc">
        <short>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client. </short>
        <long>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.  These values are stored statically so that no&#10;&#10; RAM is used up to hold them.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="upper" ref="0x7d9aa900" loc="40:../../../tos/lib/netarch/multihop/PacketEngineClientP.nc">
          <component-ref qname="PacketEngineClientP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </constant>
        <constant name="defLower" ref="0x7d9aaa90" loc="40:../../../tos/lib/netarch/multihop/PacketEngineClientP.nc">
          <component-ref qname="PacketEngineClientP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SingleReceiverC" loc="41:../../../tos/lib/netarch/single/SingleReceiverC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/netarch/single/SingleReceiverC.nc">
        <short>&#10;&#10; Receiver for single destination multihop packets of a given&#10;&#10; application layer AM type that are destined for this node.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Receiver for single destination multihop packets of a given&#10;&#10; application layer AM type that are destined for this node.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="upperId" ref="0x7d9948d0" loc="41:../../../tos/lib/netarch/single/SingleReceiverC.nc">
          <component-ref qname="SingleReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketReceiverC" loc="39:../../../tos/lib/netarch/multihop/PacketReceiverC.nc" abstract="">
      <documentation loc="39:../../../tos/lib/netarch/multihop/PacketReceiverC.nc">
        <short>&#10;&#10; Receiver for generic multihop packets of a given application layer&#10;&#10; AM type that are destined for this node.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Receiver for generic multihop packets of a given application layer&#10;&#10; AM type that are destined for this node.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="upperId" ref="0x7d990e80" loc="39:../../../tos/lib/netarch/multihop/PacketReceiverC.nc">
          <component-ref qname="PacketReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7ef83490" loc="47:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7ef83490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef83668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7ef92cf8" loc="46:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7ef92cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ef92ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7ef61ad8" loc="43:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7ef61ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef61cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ef808d0" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ef808d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef80aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7ef613e0" loc="41:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ef613e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7ef615b8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7ef61698"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7ef61778"/>
        <function-ref name="actualMicro" scoped="" ref="0x7ef61858"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7ef61938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7ef52c40" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7ef52c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef52e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ef528d0" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ef528d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef52aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7ef51010" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7ef51010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef511e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7ef40978" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7ef40978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef40b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7ef40610" loc="17:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7ef40610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef407e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7ef12c80" loc="22:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7ef12c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef12e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7ef122f8" loc="21:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7ef122f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef124d0"/>
        <function-ref name="isInput" scoped="" ref="0x7ef125b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ef12690"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef12770"/>
        <function-ref name="get" scoped="" ref="0x7ef12850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ef12930"/>
        <function-ref name="set" scoped="" ref="0x7ef12a10"/>
        <function-ref name="clr" scoped="" ref="0x7ef12af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7ef32af0" loc="20:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7ef32af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef32cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7ee90808" loc="91:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7ee90808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee90be0"/>
        <function-ref name="isInput" scoped="" ref="0x7ee90cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7ee90da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee90e80"/>
        <function-ref name="get" scoped="" ref="0x7ee83010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee830f0"/>
        <function-ref name="set" scoped="" ref="0x7ee831d0"/>
        <function-ref name="clr" scoped="" ref="0x7ee832b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7eec2858" loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7eec2858"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eec2a30"/>
        <function-ref name="isInput" scoped="" ref="0x7eec2b10"/>
        <function-ref name="toggle" scoped="" ref="0x7eec2bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec2cd0"/>
        <function-ref name="get" scoped="" ref="0x7eec2db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec2e90"/>
        <function-ref name="set" scoped="" ref="0x7eec1010"/>
        <function-ref name="clr" scoped="" ref="0x7eec10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7eeb09d8" loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7eeb09d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb0bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb0c90"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb0e50"/>
        <function-ref name="get" scoped="" ref="0x7eea3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea30f0"/>
        <function-ref name="set" scoped="" ref="0x7eea31d0"/>
        <function-ref name="clr" scoped="" ref="0x7eea32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7ee93808" loc="85:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7ee93808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee939e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ee93ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7ee93ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee93c80"/>
        <function-ref name="get" scoped="" ref="0x7ee93d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee93e40"/>
        <function-ref name="set" scoped="" ref="0x7ee93f20"/>
        <function-ref name="clr" scoped="" ref="0x7ee92018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7eef3e78" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7eef3e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef2070"/>
        <function-ref name="isInput" scoped="" ref="0x7eef2150"/>
        <function-ref name="toggle" scoped="" ref="0x7eef2230"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef2310"/>
        <function-ref name="get" scoped="" ref="0x7eef23f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef24d0"/>
        <function-ref name="set" scoped="" ref="0x7eef25b0"/>
        <function-ref name="clr" scoped="" ref="0x7eef2690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7eea0508" loc="83:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7eea0508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eea06e0"/>
        <function-ref name="isInput" scoped="" ref="0x7eea07c0"/>
        <function-ref name="toggle" scoped="" ref="0x7eea08a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea0980"/>
        <function-ref name="get" scoped="" ref="0x7eea0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea0b40"/>
        <function-ref name="set" scoped="" ref="0x7eea0c20"/>
        <function-ref name="clr" scoped="" ref="0x7eea0d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7eef1190" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7eef1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef1368"/>
        <function-ref name="isInput" scoped="" ref="0x7eef1448"/>
        <function-ref name="toggle" scoped="" ref="0x7eef1528"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef1608"/>
        <function-ref name="get" scoped="" ref="0x7eef16e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef17c8"/>
        <function-ref name="set" scoped="" ref="0x7eef18a8"/>
        <function-ref name="clr" scoped="" ref="0x7eef1988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7eed2348" loc="57:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7eed2348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eed2520"/>
        <function-ref name="isInput" scoped="" ref="0x7eed2600"/>
        <function-ref name="toggle" scoped="" ref="0x7eed26e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eed27c0"/>
        <function-ref name="get" scoped="" ref="0x7eed28a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eed2980"/>
        <function-ref name="set" scoped="" ref="0x7eed2a60"/>
        <function-ref name="clr" scoped="" ref="0x7eed2b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7eec05e8" loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7eec05e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eec07c0"/>
        <function-ref name="isInput" scoped="" ref="0x7eec08a0"/>
        <function-ref name="toggle" scoped="" ref="0x7eec0980"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec0a60"/>
        <function-ref name="get" scoped="" ref="0x7eec0b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec0c20"/>
        <function-ref name="set" scoped="" ref="0x7eec0d00"/>
        <function-ref name="clr" scoped="" ref="0x7eec0de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7eea27a8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7eea27a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eea2980"/>
        <function-ref name="isInput" scoped="" ref="0x7eea2a60"/>
        <function-ref name="toggle" scoped="" ref="0x7eea2b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea2c20"/>
        <function-ref name="get" scoped="" ref="0x7eea2d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea2de0"/>
        <function-ref name="set" scoped="" ref="0x7eea2ec0"/>
        <function-ref name="clr" scoped="" ref="0x7eea1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7ef02e18" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7ef02e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef01010"/>
        <function-ref name="isInput" scoped="" ref="0x7ef010f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ef011d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef012b0"/>
        <function-ref name="get" scoped="" ref="0x7ef01390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ef01470"/>
        <function-ref name="set" scoped="" ref="0x7ef01550"/>
        <function-ref name="clr" scoped="" ref="0x7ef01630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7eef0e78" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7eef0e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eee3070"/>
        <function-ref name="isInput" scoped="" ref="0x7eee3150"/>
        <function-ref name="toggle" scoped="" ref="0x7eee3230"/>
        <function-ref name="isOutput" scoped="" ref="0x7eee3310"/>
        <function-ref name="get" scoped="" ref="0x7eee33f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eee34d0"/>
        <function-ref name="set" scoped="" ref="0x7eee35b0"/>
        <function-ref name="clr" scoped="" ref="0x7eee3690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7eed0068" loc="60:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7eed0068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eed0240"/>
        <function-ref name="isInput" scoped="" ref="0x7eed0320"/>
        <function-ref name="toggle" scoped="" ref="0x7eed0400"/>
        <function-ref name="isOutput" scoped="" ref="0x7eed04e0"/>
        <function-ref name="get" scoped="" ref="0x7eed05c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eed06a0"/>
        <function-ref name="set" scoped="" ref="0x7eed0780"/>
        <function-ref name="clr" scoped="" ref="0x7eed0860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7eeb2348" loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7eeb2348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb2520"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb2600"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb26e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb27c0"/>
        <function-ref name="get" scoped="" ref="0x7eeb28a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eeb2980"/>
        <function-ref name="set" scoped="" ref="0x7eeb2a60"/>
        <function-ref name="clr" scoped="" ref="0x7eeb2b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7ee91508" loc="88:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7ee91508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee916e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ee917c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ee918a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee91980"/>
        <function-ref name="get" scoped="" ref="0x7ee91a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee91b40"/>
        <function-ref name="set" scoped="" ref="0x7ee91c20"/>
        <function-ref name="clr" scoped="" ref="0x7ee91d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7ee827a8" loc="94:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7ee827a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee82980"/>
        <function-ref name="isInput" scoped="" ref="0x7ee82a60"/>
        <function-ref name="toggle" scoped="" ref="0x7ee82b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee82c20"/>
        <function-ref name="get" scoped="" ref="0x7ee82d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee82de0"/>
        <function-ref name="set" scoped="" ref="0x7ee82ec0"/>
        <function-ref name="clr" scoped="" ref="0x7ee80010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7eeb16c8" loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7eeb16c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb18a0"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb1980"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb1a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb1b40"/>
        <function-ref name="get" scoped="" ref="0x7eeb1c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eeb1d00"/>
        <function-ref name="set" scoped="" ref="0x7eeb1de0"/>
        <function-ref name="clr" scoped="" ref="0x7eeb1ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7ef00af8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7ef00af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef00cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7ef00db0"/>
        <function-ref name="toggle" scoped="" ref="0x7ef00e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef3010"/>
        <function-ref name="get" scoped="" ref="0x7eef30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef31d0"/>
        <function-ref name="set" scoped="" ref="0x7eef32b0"/>
        <function-ref name="clr" scoped="" ref="0x7eef3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7eee2bd8" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7eee2bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eee2db0"/>
        <function-ref name="isInput" scoped="" ref="0x7eee2e90"/>
        <function-ref name="toggle" scoped="" ref="0x7eee1010"/>
        <function-ref name="isOutput" scoped="" ref="0x7eee10f0"/>
        <function-ref name="get" scoped="" ref="0x7eee11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eee12b0"/>
        <function-ref name="set" scoped="" ref="0x7eee1390"/>
        <function-ref name="clr" scoped="" ref="0x7eee1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7ee83428" loc="92:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7ee83428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee83600"/>
        <function-ref name="isInput" scoped="" ref="0x7ee836e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ee837c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee838a0"/>
        <function-ref name="get" scoped="" ref="0x7ee83980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee83a60"/>
        <function-ref name="set" scoped="" ref="0x7ee83b40"/>
        <function-ref name="clr" scoped="" ref="0x7ee83c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7eed3010" loc="55:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7eed3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eed31e8"/>
        <function-ref name="isInput" scoped="" ref="0x7eed32c8"/>
        <function-ref name="toggle" scoped="" ref="0x7eed33a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eed3488"/>
        <function-ref name="get" scoped="" ref="0x7eed3568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eed3648"/>
        <function-ref name="set" scoped="" ref="0x7eed3728"/>
        <function-ref name="clr" scoped="" ref="0x7eed3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7eec1268" loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7eec1268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eec1440"/>
        <function-ref name="isInput" scoped="" ref="0x7eec1520"/>
        <function-ref name="toggle" scoped="" ref="0x7eec1600"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec16e0"/>
        <function-ref name="get" scoped="" ref="0x7eec17c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec18a0"/>
        <function-ref name="set" scoped="" ref="0x7eec1980"/>
        <function-ref name="clr" scoped="" ref="0x7eec1a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7eea3428" loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7eea3428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eea3600"/>
        <function-ref name="isInput" scoped="" ref="0x7eea36e0"/>
        <function-ref name="toggle" scoped="" ref="0x7eea37c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea38a0"/>
        <function-ref name="get" scoped="" ref="0x7eea3980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea3a60"/>
        <function-ref name="set" scoped="" ref="0x7eea3b40"/>
        <function-ref name="clr" scoped="" ref="0x7eea3c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7ee92190" loc="86:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7ee92190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee92368"/>
        <function-ref name="isInput" scoped="" ref="0x7ee92448"/>
        <function-ref name="toggle" scoped="" ref="0x7ee92528"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee92608"/>
        <function-ref name="get" scoped="" ref="0x7ee926e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee927c8"/>
        <function-ref name="set" scoped="" ref="0x7ee928a8"/>
        <function-ref name="clr" scoped="" ref="0x7ee92988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7eef2808" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7eef2808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef29e0"/>
        <function-ref name="isInput" scoped="" ref="0x7eef2ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7eef2ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef2c80"/>
        <function-ref name="get" scoped="" ref="0x7eef2d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef2e40"/>
        <function-ref name="set" scoped="" ref="0x7eef2f20"/>
        <function-ref name="clr" scoped="" ref="0x7eef1018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7eef1b00" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7eef1b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef1cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7eef1db8"/>
        <function-ref name="toggle" scoped="" ref="0x7eef1e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef0010"/>
        <function-ref name="get" scoped="" ref="0x7eef00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef01d0"/>
        <function-ref name="set" scoped="" ref="0x7eef02b0"/>
        <function-ref name="clr" scoped="" ref="0x7eef0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7eed2cb8" loc="58:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7eed2cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eed2e90"/>
        <function-ref name="isInput" scoped="" ref="0x7eed1010"/>
        <function-ref name="toggle" scoped="" ref="0x7eed10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eed11d0"/>
        <function-ref name="get" scoped="" ref="0x7eed12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eed1390"/>
        <function-ref name="set" scoped="" ref="0x7eed1470"/>
        <function-ref name="clr" scoped="" ref="0x7eed1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7eeb3010" loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7eeb3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb31e8"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb32c8"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb33a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb3488"/>
        <function-ref name="get" scoped="" ref="0x7eeb3568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eeb3648"/>
        <function-ref name="set" scoped="" ref="0x7eeb3728"/>
        <function-ref name="clr" scoped="" ref="0x7eeb3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7eea1188" loc="80:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7eea1188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eea1360"/>
        <function-ref name="isInput" scoped="" ref="0x7eea1440"/>
        <function-ref name="toggle" scoped="" ref="0x7eea1520"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea1600"/>
        <function-ref name="get" scoped="" ref="0x7eea16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea17c0"/>
        <function-ref name="set" scoped="" ref="0x7eea18a0"/>
        <function-ref name="clr" scoped="" ref="0x7eea1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7ef017a8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7ef017a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef01980"/>
        <function-ref name="isInput" scoped="" ref="0x7ef01a60"/>
        <function-ref name="toggle" scoped="" ref="0x7ef01b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef01c20"/>
        <function-ref name="get" scoped="" ref="0x7ef01d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ef01de0"/>
        <function-ref name="set" scoped="" ref="0x7ef01ec0"/>
        <function-ref name="clr" scoped="" ref="0x7ef00010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7eee3808" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7eee3808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eee3a60"/>
        <function-ref name="isInput" scoped="" ref="0x7eee3b40"/>
        <function-ref name="toggle" scoped="" ref="0x7eee3c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7eee3d00"/>
        <function-ref name="get" scoped="" ref="0x7eee3de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eee3ec0"/>
        <function-ref name="set" scoped="" ref="0x7eee2010"/>
        <function-ref name="clr" scoped="" ref="0x7eee20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7eed09d8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7eed09d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eed0bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7eed0c90"/>
        <function-ref name="toggle" scoped="" ref="0x7eed0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7eed0e50"/>
        <function-ref name="get" scoped="" ref="0x7eec3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec30f0"/>
        <function-ref name="set" scoped="" ref="0x7eec31d0"/>
        <function-ref name="clr" scoped="" ref="0x7eec32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7ee91e78" loc="89:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7ee91e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee90070"/>
        <function-ref name="isInput" scoped="" ref="0x7ee90150"/>
        <function-ref name="toggle" scoped="" ref="0x7ee90230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee90310"/>
        <function-ref name="get" scoped="" ref="0x7ee903f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee904d0"/>
        <function-ref name="set" scoped="" ref="0x7ee905b0"/>
        <function-ref name="clr" scoped="" ref="0x7ee90690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7eec3d98" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7eec3d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eec20c0"/>
        <function-ref name="isInput" scoped="" ref="0x7eec21a0"/>
        <function-ref name="toggle" scoped="" ref="0x7eec2280"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec2360"/>
        <function-ref name="get" scoped="" ref="0x7eec2440"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec2520"/>
        <function-ref name="set" scoped="" ref="0x7eec2600"/>
        <function-ref name="clr" scoped="" ref="0x7eec26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7eeb0068" loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7eeb0068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb0240"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb0320"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb0400"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb04e0"/>
        <function-ref name="get" scoped="" ref="0x7eeb05c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eeb06a0"/>
        <function-ref name="set" scoped="" ref="0x7eeb0780"/>
        <function-ref name="clr" scoped="" ref="0x7eeb0860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7eea0e78" loc="84:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7eea0e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee93070"/>
        <function-ref name="isInput" scoped="" ref="0x7ee93150"/>
        <function-ref name="toggle" scoped="" ref="0x7ee93230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee93310"/>
        <function-ref name="get" scoped="" ref="0x7ee933f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee934d0"/>
        <function-ref name="set" scoped="" ref="0x7ee935b0"/>
        <function-ref name="clr" scoped="" ref="0x7ee93690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7ee80188" loc="95:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7ee80188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee80360"/>
        <function-ref name="isInput" scoped="" ref="0x7ee80440"/>
        <function-ref name="toggle" scoped="" ref="0x7ee80520"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee80600"/>
        <function-ref name="get" scoped="" ref="0x7ee806e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee807c0"/>
        <function-ref name="set" scoped="" ref="0x7ee808a0"/>
        <function-ref name="clr" scoped="" ref="0x7ee80980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7eef3508" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7eef3508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef36e0"/>
        <function-ref name="isInput" scoped="" ref="0x7eef37c0"/>
        <function-ref name="toggle" scoped="" ref="0x7eef38a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef3980"/>
        <function-ref name="get" scoped="" ref="0x7eef3a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef3b40"/>
        <function-ref name="set" scoped="" ref="0x7eef3c20"/>
        <function-ref name="clr" scoped="" ref="0x7eef3d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7eee15e8" loc="53:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7eee15e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eee17c0"/>
        <function-ref name="isInput" scoped="" ref="0x7eee18a0"/>
        <function-ref name="toggle" scoped="" ref="0x7eee1980"/>
        <function-ref name="isOutput" scoped="" ref="0x7eee1a60"/>
        <function-ref name="get" scoped="" ref="0x7eee1b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eee1c20"/>
        <function-ref name="set" scoped="" ref="0x7eee1d00"/>
        <function-ref name="clr" scoped="" ref="0x7eee1de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7eea1af8" loc="82:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7eea1af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eea1cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7eea1db0"/>
        <function-ref name="toggle" scoped="" ref="0x7eea1e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea0010"/>
        <function-ref name="get" scoped="" ref="0x7eea00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea01d0"/>
        <function-ref name="set" scoped="" ref="0x7eea02b0"/>
        <function-ref name="clr" scoped="" ref="0x7eea0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7eed3980" loc="56:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7eed3980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eed3b58"/>
        <function-ref name="isInput" scoped="" ref="0x7eed3c38"/>
        <function-ref name="toggle" scoped="" ref="0x7eed3d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7eed3df8"/>
        <function-ref name="get" scoped="" ref="0x7eed3ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eed2010"/>
        <function-ref name="set" scoped="" ref="0x7eed20f0"/>
        <function-ref name="clr" scoped="" ref="0x7eed21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7eec1bd8" loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7eec1bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eec1db0"/>
        <function-ref name="isInput" scoped="" ref="0x7eec1e90"/>
        <function-ref name="toggle" scoped="" ref="0x7eec0010"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec00f0"/>
        <function-ref name="get" scoped="" ref="0x7eec01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec02b0"/>
        <function-ref name="set" scoped="" ref="0x7eec0390"/>
        <function-ref name="clr" scoped="" ref="0x7eec0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7eea3d98" loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7eea3d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eea2010"/>
        <function-ref name="isInput" scoped="" ref="0x7eea20f0"/>
        <function-ref name="toggle" scoped="" ref="0x7eea21d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eea22b0"/>
        <function-ref name="get" scoped="" ref="0x7eea2390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eea2470"/>
        <function-ref name="set" scoped="" ref="0x7eea2550"/>
        <function-ref name="clr" scoped="" ref="0x7eea2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7ee92b00" loc="87:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7ee92b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee92cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7ee92db8"/>
        <function-ref name="toggle" scoped="" ref="0x7ee92e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee91010"/>
        <function-ref name="get" scoped="" ref="0x7ee910f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee911d0"/>
        <function-ref name="set" scoped="" ref="0x7ee912b0"/>
        <function-ref name="clr" scoped="" ref="0x7ee91390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7ef024a8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7ef024a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef02680"/>
        <function-ref name="isInput" scoped="" ref="0x7ef02760"/>
        <function-ref name="toggle" scoped="" ref="0x7ef02840"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef02920"/>
        <function-ref name="get" scoped="" ref="0x7ef02a00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ef02ae0"/>
        <function-ref name="set" scoped="" ref="0x7ef02bc0"/>
        <function-ref name="clr" scoped="" ref="0x7ef02ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7eef0508" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7eef0508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eef06e0"/>
        <function-ref name="isInput" scoped="" ref="0x7eef07c0"/>
        <function-ref name="toggle" scoped="" ref="0x7eef08a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eef0980"/>
        <function-ref name="get" scoped="" ref="0x7eef0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eef0b40"/>
        <function-ref name="set" scoped="" ref="0x7eef0c20"/>
        <function-ref name="clr" scoped="" ref="0x7eef0d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7eed16c8" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7eed16c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eed18a0"/>
        <function-ref name="isInput" scoped="" ref="0x7eed1980"/>
        <function-ref name="toggle" scoped="" ref="0x7eed1a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7eed1b40"/>
        <function-ref name="get" scoped="" ref="0x7eed1c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eed1d00"/>
        <function-ref name="set" scoped="" ref="0x7eed1de0"/>
        <function-ref name="clr" scoped="" ref="0x7eed1ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7eeb3980" loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7eeb3980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb3b58"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb3c38"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb3d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb3df8"/>
        <function-ref name="get" scoped="" ref="0x7eeb3ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eeb2010"/>
        <function-ref name="set" scoped="" ref="0x7eeb20f0"/>
        <function-ref name="clr" scoped="" ref="0x7eeb21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7ee83d98" loc="93:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7ee83d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ee82010"/>
        <function-ref name="isInput" scoped="" ref="0x7ee820f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ee821d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ee822b0"/>
        <function-ref name="get" scoped="" ref="0x7ee82390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ee82470"/>
        <function-ref name="set" scoped="" ref="0x7ee82550"/>
        <function-ref name="clr" scoped="" ref="0x7ee82630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7eeb2cb8" loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7eeb2cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eeb2e90"/>
        <function-ref name="isInput" scoped="" ref="0x7eeb1010"/>
        <function-ref name="toggle" scoped="" ref="0x7eeb10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eeb11d0"/>
        <function-ref name="get" scoped="" ref="0x7eeb12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eeb1390"/>
        <function-ref name="set" scoped="" ref="0x7eeb1470"/>
        <function-ref name="clr" scoped="" ref="0x7eeb1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7eec3428" loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7eec3428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eec3600"/>
        <function-ref name="isInput" scoped="" ref="0x7eec36e0"/>
        <function-ref name="toggle" scoped="" ref="0x7eec37c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eec38a0"/>
        <function-ref name="get" scoped="" ref="0x7eec3980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eec3a60"/>
        <function-ref name="set" scoped="" ref="0x7eec3b40"/>
        <function-ref name="clr" scoped="" ref="0x7eec3c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7ef00188" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7ef00188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ef00360"/>
        <function-ref name="isInput" scoped="" ref="0x7ef00440"/>
        <function-ref name="toggle" scoped="" ref="0x7ef00520"/>
        <function-ref name="isOutput" scoped="" ref="0x7ef00600"/>
        <function-ref name="get" scoped="" ref="0x7ef006e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ef007c0"/>
        <function-ref name="set" scoped="" ref="0x7ef008a0"/>
        <function-ref name="clr" scoped="" ref="0x7ef00980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7eee2268" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7eee2268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eee2440"/>
        <function-ref name="isInput" scoped="" ref="0x7eee2520"/>
        <function-ref name="toggle" scoped="" ref="0x7eee2600"/>
        <function-ref name="isOutput" scoped="" ref="0x7eee26e0"/>
        <function-ref name="get" scoped="" ref="0x7eee27c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eee28a0"/>
        <function-ref name="set" scoped="" ref="0x7eee2980"/>
        <function-ref name="clr" scoped="" ref="0x7eee2a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ede1030" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ede1030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede1208"/>
        <function-ref name="isInput" scoped="" ref="0x7ede12e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ede13c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede14a8"/>
        <function-ref name="get" scoped="" ref="0x7ede1588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede1668"/>
        <function-ref name="set" scoped="" ref="0x7ede1748"/>
        <function-ref name="clr" scoped="" ref="0x7ede1828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7edd4c88" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7edd4c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd4e60"/>
        <function-ref name="isInput" scoped="" ref="0x7edd3010"/>
        <function-ref name="toggle" scoped="" ref="0x7edd30f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd31d0"/>
        <function-ref name="get" scoped="" ref="0x7edd32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd3390"/>
        <function-ref name="set" scoped="" ref="0x7edd3470"/>
        <function-ref name="clr" scoped="" ref="0x7edd3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ede3d18" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ede3d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede3ef0"/>
        <function-ref name="isInput" scoped="" ref="0x7ede2010"/>
        <function-ref name="toggle" scoped="" ref="0x7ede20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede21d0"/>
        <function-ref name="get" scoped="" ref="0x7ede22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede2390"/>
        <function-ref name="set" scoped="" ref="0x7ede2470"/>
        <function-ref name="clr" scoped="" ref="0x7ede2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ede1988" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ede1988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede1b60"/>
        <function-ref name="isInput" scoped="" ref="0x7ede1c40"/>
        <function-ref name="toggle" scoped="" ref="0x7ede1d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede1e00"/>
        <function-ref name="get" scoped="" ref="0x7ede1ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd4010"/>
        <function-ref name="set" scoped="" ref="0x7edd40f0"/>
        <function-ref name="clr" scoped="" ref="0x7edd41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7edd36b0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7edd36b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd3888"/>
        <function-ref name="isInput" scoped="" ref="0x7edd3968"/>
        <function-ref name="toggle" scoped="" ref="0x7edd3a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd3b28"/>
        <function-ref name="get" scoped="" ref="0x7edd3c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd3ce8"/>
        <function-ref name="set" scoped="" ref="0x7edd3dc8"/>
        <function-ref name="clr" scoped="" ref="0x7edd3ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ede26b0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ede26b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ede2888"/>
        <function-ref name="isInput" scoped="" ref="0x7ede2968"/>
        <function-ref name="toggle" scoped="" ref="0x7ede2a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7ede2b28"/>
        <function-ref name="get" scoped="" ref="0x7ede2c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ede2ce8"/>
        <function-ref name="set" scoped="" ref="0x7ede2dc8"/>
        <function-ref name="clr" scoped="" ref="0x7ede2ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7edd4330" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7edd4330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd4508"/>
        <function-ref name="isInput" scoped="" ref="0x7edd45e8"/>
        <function-ref name="toggle" scoped="" ref="0x7edd46c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd47a8"/>
        <function-ref name="get" scoped="" ref="0x7edd4888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd4968"/>
        <function-ref name="set" scoped="" ref="0x7edd4a48"/>
        <function-ref name="clr" scoped="" ref="0x7edd4b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7edd2030" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7edd2030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edd2208"/>
        <function-ref name="isInput" scoped="" ref="0x7edd22e8"/>
        <function-ref name="toggle" scoped="" ref="0x7edd23c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7edd24a8"/>
        <function-ref name="get" scoped="" ref="0x7edd2588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edd2668"/>
        <function-ref name="set" scoped="" ref="0x7edd2748"/>
        <function-ref name="clr" scoped="" ref="0x7edd2828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d94be18" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d94be18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d946010"/>
        <function-ref name="isInput" scoped="" ref="0x7d9460f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d9461d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9462b0"/>
        <function-ref name="get" scoped="" ref="0x7d946390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d946470"/>
        <function-ref name="set" scoped="" ref="0x7d946550"/>
        <function-ref name="clr" scoped="" ref="0x7d946630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9457f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9457f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9459d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d945ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7d945b90"/>
        <function-ref name="isOutput" scoped="" ref="0x7d945c70"/>
        <function-ref name="get" scoped="" ref="0x7d945d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d945e30"/>
        <function-ref name="set" scoped="" ref="0x7d945f10"/>
        <function-ref name="clr" scoped="" ref="0x7d944010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d943228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d943228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d943400"/>
        <function-ref name="isInput" scoped="" ref="0x7d9434e0"/>
        <function-ref name="toggle" scoped="" ref="0x7d9435c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9436a0"/>
        <function-ref name="get" scoped="" ref="0x7d943780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d943860"/>
        <function-ref name="set" scoped="" ref="0x7d943940"/>
        <function-ref name="clr" scoped="" ref="0x7d943a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d942c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d942c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d942de0"/>
        <function-ref name="isInput" scoped="" ref="0x7d942ec0"/>
        <function-ref name="toggle" scoped="" ref="0x7d941010"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9410f0"/>
        <function-ref name="get" scoped="" ref="0x7d9411d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9412b0"/>
        <function-ref name="set" scoped="" ref="0x7d941390"/>
        <function-ref name="clr" scoped="" ref="0x7d941470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9406c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9406c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d940898"/>
        <function-ref name="isInput" scoped="" ref="0x7d940978"/>
        <function-ref name="toggle" scoped="" ref="0x7d940a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7d940b38"/>
        <function-ref name="get" scoped="" ref="0x7d940c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d940cf8"/>
        <function-ref name="set" scoped="" ref="0x7d940dd8"/>
        <function-ref name="clr" scoped="" ref="0x7d940eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d93e0b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d93e0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d93e288"/>
        <function-ref name="isInput" scoped="" ref="0x7d93e368"/>
        <function-ref name="toggle" scoped="" ref="0x7d93e448"/>
        <function-ref name="isOutput" scoped="" ref="0x7d93e528"/>
        <function-ref name="get" scoped="" ref="0x7d93e608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d93e6e8"/>
        <function-ref name="set" scoped="" ref="0x7d93e7c8"/>
        <function-ref name="clr" scoped="" ref="0x7d93e8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d93da88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d93da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d93dc60"/>
        <function-ref name="isInput" scoped="" ref="0x7d93dd40"/>
        <function-ref name="toggle" scoped="" ref="0x7d93de20"/>
        <function-ref name="isOutput" scoped="" ref="0x7d93df00"/>
        <function-ref name="get" scoped="" ref="0x7d93c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d93c0f0"/>
        <function-ref name="set" scoped="" ref="0x7d93c1d0"/>
        <function-ref name="clr" scoped="" ref="0x7d93c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d93b538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d93b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d93b710"/>
        <function-ref name="isInput" scoped="" ref="0x7d93b7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d93b8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d93b9b0"/>
        <function-ref name="get" scoped="" ref="0x7d93ba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d93bb70"/>
        <function-ref name="set" scoped="" ref="0x7d93bc50"/>
        <function-ref name="clr" scoped="" ref="0x7d93bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7edc36b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7edc36b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc3888"/>
        <function-ref name="isInput" scoped="" ref="0x7edc3968"/>
        <function-ref name="toggle" scoped="" ref="0x7edc3a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc3b28"/>
        <function-ref name="get" scoped="" ref="0x7edc3c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc3ce8"/>
        <function-ref name="set" scoped="" ref="0x7edc3dc8"/>
        <function-ref name="clr" scoped="" ref="0x7edc3ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7edc1330" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7edc1330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc1508"/>
        <function-ref name="isInput" scoped="" ref="0x7edc15e8"/>
        <function-ref name="toggle" scoped="" ref="0x7edc16c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc17a8"/>
        <function-ref name="get" scoped="" ref="0x7edc1888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc1968"/>
        <function-ref name="set" scoped="" ref="0x7edc1a48"/>
        <function-ref name="clr" scoped="" ref="0x7edc1b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7edc43a0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7edc43a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc4578"/>
        <function-ref name="isInput" scoped="" ref="0x7edc4658"/>
        <function-ref name="toggle" scoped="" ref="0x7edc4738"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc4818"/>
        <function-ref name="get" scoped="" ref="0x7edc48f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc49d8"/>
        <function-ref name="set" scoped="" ref="0x7edc4ab8"/>
        <function-ref name="clr" scoped="" ref="0x7edc4b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7edc2030" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7edc2030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc2208"/>
        <function-ref name="isInput" scoped="" ref="0x7edc22e8"/>
        <function-ref name="toggle" scoped="" ref="0x7edc23c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc24a8"/>
        <function-ref name="get" scoped="" ref="0x7edc2588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc2668"/>
        <function-ref name="set" scoped="" ref="0x7edc2748"/>
        <function-ref name="clr" scoped="" ref="0x7edc2828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7edc1c88" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7edc1c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc1e60"/>
        <function-ref name="isInput" scoped="" ref="0x7edb4010"/>
        <function-ref name="toggle" scoped="" ref="0x7edb40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb41d0"/>
        <function-ref name="get" scoped="" ref="0x7edb42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb4390"/>
        <function-ref name="set" scoped="" ref="0x7edb4470"/>
        <function-ref name="clr" scoped="" ref="0x7edb4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7edc4cf8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7edc4cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc4ed0"/>
        <function-ref name="isInput" scoped="" ref="0x7edc3010"/>
        <function-ref name="toggle" scoped="" ref="0x7edc30f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc31d0"/>
        <function-ref name="get" scoped="" ref="0x7edc32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc3390"/>
        <function-ref name="set" scoped="" ref="0x7edc3470"/>
        <function-ref name="clr" scoped="" ref="0x7edc3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7edc2988" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7edc2988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edc2b60"/>
        <function-ref name="isInput" scoped="" ref="0x7edc2c40"/>
        <function-ref name="toggle" scoped="" ref="0x7edc2d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7edc2e00"/>
        <function-ref name="get" scoped="" ref="0x7edc2ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edc1010"/>
        <function-ref name="set" scoped="" ref="0x7edc10f0"/>
        <function-ref name="clr" scoped="" ref="0x7edc11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7edb46b0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7edb46b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb4888"/>
        <function-ref name="isInput" scoped="" ref="0x7edb4968"/>
        <function-ref name="toggle" scoped="" ref="0x7edb4a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb4b28"/>
        <function-ref name="get" scoped="" ref="0x7edb4c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb4ce8"/>
        <function-ref name="set" scoped="" ref="0x7edb4dc8"/>
        <function-ref name="clr" scoped="" ref="0x7edb4ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9112b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9112b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d911488"/>
        <function-ref name="isInput" scoped="" ref="0x7d911568"/>
        <function-ref name="toggle" scoped="" ref="0x7d911648"/>
        <function-ref name="isOutput" scoped="" ref="0x7d911728"/>
        <function-ref name="get" scoped="" ref="0x7d911808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9118e8"/>
        <function-ref name="set" scoped="" ref="0x7d9119c8"/>
        <function-ref name="clr" scoped="" ref="0x7d911aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d910c78" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d910c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d910e50"/>
        <function-ref name="isInput" scoped="" ref="0x7d90d010"/>
        <function-ref name="toggle" scoped="" ref="0x7d90d0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d90d1d0"/>
        <function-ref name="get" scoped="" ref="0x7d90d2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d90d390"/>
        <function-ref name="set" scoped="" ref="0x7d90d470"/>
        <function-ref name="clr" scoped="" ref="0x7d90d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d90c718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d90c718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d90c8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7d90c9d0"/>
        <function-ref name="toggle" scoped="" ref="0x7d90cab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d90cb90"/>
        <function-ref name="get" scoped="" ref="0x7d90cc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d90cd50"/>
        <function-ref name="set" scoped="" ref="0x7d90ce30"/>
        <function-ref name="clr" scoped="" ref="0x7d90cf10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d90a0f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d90a0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d90a2d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d90a3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7d90a490"/>
        <function-ref name="isOutput" scoped="" ref="0x7d90a570"/>
        <function-ref name="get" scoped="" ref="0x7d90a650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d90a730"/>
        <function-ref name="set" scoped="" ref="0x7d90a810"/>
        <function-ref name="clr" scoped="" ref="0x7d90a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d908ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d908ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d908ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7d908d80"/>
        <function-ref name="toggle" scoped="" ref="0x7d908e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7d907010"/>
        <function-ref name="get" scoped="" ref="0x7d9070f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9071d0"/>
        <function-ref name="set" scoped="" ref="0x7d9072b0"/>
        <function-ref name="clr" scoped="" ref="0x7d907390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d906570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d906570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d906748"/>
        <function-ref name="isInput" scoped="" ref="0x7d906828"/>
        <function-ref name="toggle" scoped="" ref="0x7d906908"/>
        <function-ref name="isOutput" scoped="" ref="0x7d9069e8"/>
        <function-ref name="get" scoped="" ref="0x7d906ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d906ba8"/>
        <function-ref name="set" scoped="" ref="0x7d906c88"/>
        <function-ref name="clr" scoped="" ref="0x7d906d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d904010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d904010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d9041e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d9042c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d9043a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d904488"/>
        <function-ref name="get" scoped="" ref="0x7d904568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d904648"/>
        <function-ref name="set" scoped="" ref="0x7d904728"/>
        <function-ref name="clr" scoped="" ref="0x7d904808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d9039e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d9039e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d903bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7d903ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7d903d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7d903e60"/>
        <function-ref name="get" scoped="" ref="0x7d902010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d9020f0"/>
        <function-ref name="set" scoped="" ref="0x7d9021d0"/>
        <function-ref name="clr" scoped="" ref="0x7d9022b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7edb0f28" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7edb0f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda4110"/>
        <function-ref name="isInput" scoped="" ref="0x7eda41f0"/>
        <function-ref name="toggle" scoped="" ref="0x7eda42d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda43b0"/>
        <function-ref name="get" scoped="" ref="0x7eda4490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda4570"/>
        <function-ref name="set" scoped="" ref="0x7eda4650"/>
        <function-ref name="clr" scoped="" ref="0x7eda4730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7eda3ba8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7eda3ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda3d80"/>
        <function-ref name="isInput" scoped="" ref="0x7eda3e60"/>
        <function-ref name="toggle" scoped="" ref="0x7eda2010"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda20f0"/>
        <function-ref name="get" scoped="" ref="0x7eda21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda22b0"/>
        <function-ref name="set" scoped="" ref="0x7eda2390"/>
        <function-ref name="clr" scoped="" ref="0x7eda2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7edb1bc0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7edb1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb1d98"/>
        <function-ref name="isInput" scoped="" ref="0x7edb1e78"/>
        <function-ref name="toggle" scoped="" ref="0x7edb0010"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb00f0"/>
        <function-ref name="get" scoped="" ref="0x7edb01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb02b0"/>
        <function-ref name="set" scoped="" ref="0x7edb0390"/>
        <function-ref name="clr" scoped="" ref="0x7edb0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7eda4890" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7eda4890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda4a68"/>
        <function-ref name="isInput" scoped="" ref="0x7eda4b48"/>
        <function-ref name="toggle" scoped="" ref="0x7eda4c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda4d08"/>
        <function-ref name="get" scoped="" ref="0x7eda4de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda4ec8"/>
        <function-ref name="set" scoped="" ref="0x7eda3010"/>
        <function-ref name="clr" scoped="" ref="0x7eda30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7eda25d0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7eda25d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda27a8"/>
        <function-ref name="isInput" scoped="" ref="0x7eda2888"/>
        <function-ref name="toggle" scoped="" ref="0x7eda2968"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda2a48"/>
        <function-ref name="get" scoped="" ref="0x7eda2b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda2c08"/>
        <function-ref name="set" scoped="" ref="0x7eda2ce8"/>
        <function-ref name="clr" scoped="" ref="0x7eda2dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7edb05d0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7edb05d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7edb07a8"/>
        <function-ref name="isInput" scoped="" ref="0x7edb0888"/>
        <function-ref name="toggle" scoped="" ref="0x7edb0968"/>
        <function-ref name="isOutput" scoped="" ref="0x7edb0a48"/>
        <function-ref name="get" scoped="" ref="0x7edb0b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7edb0c08"/>
        <function-ref name="set" scoped="" ref="0x7edb0ce8"/>
        <function-ref name="clr" scoped="" ref="0x7edb0dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7eda3250" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7eda3250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda3428"/>
        <function-ref name="isInput" scoped="" ref="0x7eda3508"/>
        <function-ref name="toggle" scoped="" ref="0x7eda35e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda36c8"/>
        <function-ref name="get" scoped="" ref="0x7eda37a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda3888"/>
        <function-ref name="set" scoped="" ref="0x7eda3968"/>
        <function-ref name="clr" scoped="" ref="0x7eda3a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7eda2f28" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7eda2f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eda1110"/>
        <function-ref name="isInput" scoped="" ref="0x7eda11f0"/>
        <function-ref name="toggle" scoped="" ref="0x7eda12d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eda13b0"/>
        <function-ref name="get" scoped="" ref="0x7eda1490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eda1570"/>
        <function-ref name="set" scoped="" ref="0x7eda1650"/>
        <function-ref name="clr" scoped="" ref="0x7eda1730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8da7f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8da7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8da9d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d8daab0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8dab90"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8dac70"/>
        <function-ref name="get" scoped="" ref="0x7d8dad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8dae30"/>
        <function-ref name="set" scoped="" ref="0x7d8daf10"/>
        <function-ref name="clr" scoped="" ref="0x7d8d9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8d8228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8d8228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8d8400"/>
        <function-ref name="isInput" scoped="" ref="0x7d8d84e0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8d85c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8d86a0"/>
        <function-ref name="get" scoped="" ref="0x7d8d8780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8d8860"/>
        <function-ref name="set" scoped="" ref="0x7d8d8940"/>
        <function-ref name="clr" scoped="" ref="0x7d8d8a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8d7c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8d7c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8d7de0"/>
        <function-ref name="isInput" scoped="" ref="0x7d8d7ec0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8d6010"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8d60f0"/>
        <function-ref name="get" scoped="" ref="0x7d8d61d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8d62b0"/>
        <function-ref name="set" scoped="" ref="0x7d8d6390"/>
        <function-ref name="clr" scoped="" ref="0x7d8d6470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8d56c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8d56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8d5898"/>
        <function-ref name="isInput" scoped="" ref="0x7d8d5978"/>
        <function-ref name="toggle" scoped="" ref="0x7d8d5a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8d5b38"/>
        <function-ref name="get" scoped="" ref="0x7d8d5c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8d5cf8"/>
        <function-ref name="set" scoped="" ref="0x7d8d5dd8"/>
        <function-ref name="clr" scoped="" ref="0x7d8d5eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8d30b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8d30b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8d3288"/>
        <function-ref name="isInput" scoped="" ref="0x7d8d3368"/>
        <function-ref name="toggle" scoped="" ref="0x7d8d3448"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8d3528"/>
        <function-ref name="get" scoped="" ref="0x7d8d3608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8d36e8"/>
        <function-ref name="set" scoped="" ref="0x7d8d37c8"/>
        <function-ref name="clr" scoped="" ref="0x7d8d38a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8d2a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8d2a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8d2c60"/>
        <function-ref name="isInput" scoped="" ref="0x7d8d2d40"/>
        <function-ref name="toggle" scoped="" ref="0x7d8d2e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8d2f00"/>
        <function-ref name="get" scoped="" ref="0x7d8d1010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8d10f0"/>
        <function-ref name="set" scoped="" ref="0x7d8d11d0"/>
        <function-ref name="clr" scoped="" ref="0x7d8d12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8d0538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8d0538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8d0710"/>
        <function-ref name="isInput" scoped="" ref="0x7d8d07f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8d08d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8d09b0"/>
        <function-ref name="get" scoped="" ref="0x7d8d0a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8d0b70"/>
        <function-ref name="set" scoped="" ref="0x7d8d0c50"/>
        <function-ref name="clr" scoped="" ref="0x7d8d0d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8cd010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8cd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8cd1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d8cd2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d8cd3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8cd488"/>
        <function-ref name="get" scoped="" ref="0x7d8cd568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8cd648"/>
        <function-ref name="set" scoped="" ref="0x7d8cd728"/>
        <function-ref name="clr" scoped="" ref="0x7d8cd808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ed915d0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ed915d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed917a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ed91888"/>
        <function-ref name="toggle" scoped="" ref="0x7ed91968"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed91a48"/>
        <function-ref name="get" scoped="" ref="0x7ed91b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed91c08"/>
        <function-ref name="set" scoped="" ref="0x7ed91ce8"/>
        <function-ref name="clr" scoped="" ref="0x7ed91dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ed84250" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ed84250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed84428"/>
        <function-ref name="isInput" scoped="" ref="0x7ed84508"/>
        <function-ref name="toggle" scoped="" ref="0x7ed845e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed846c8"/>
        <function-ref name="get" scoped="" ref="0x7ed847a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed84888"/>
        <function-ref name="set" scoped="" ref="0x7ed84968"/>
        <function-ref name="clr" scoped="" ref="0x7ed84a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ed922a0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ed922a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed92478"/>
        <function-ref name="isInput" scoped="" ref="0x7ed92558"/>
        <function-ref name="toggle" scoped="" ref="0x7ed92638"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed92718"/>
        <function-ref name="get" scoped="" ref="0x7ed927f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed928d8"/>
        <function-ref name="set" scoped="" ref="0x7ed929b8"/>
        <function-ref name="clr" scoped="" ref="0x7ed92a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ed91f28" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ed91f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed90110"/>
        <function-ref name="isInput" scoped="" ref="0x7ed901f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed902d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed903b0"/>
        <function-ref name="get" scoped="" ref="0x7ed90490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed90570"/>
        <function-ref name="set" scoped="" ref="0x7ed90650"/>
        <function-ref name="clr" scoped="" ref="0x7ed90730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ed84ba8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ed84ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed84d80"/>
        <function-ref name="isInput" scoped="" ref="0x7ed84e60"/>
        <function-ref name="toggle" scoped="" ref="0x7ed83010"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed830f0"/>
        <function-ref name="get" scoped="" ref="0x7ed831d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed832b0"/>
        <function-ref name="set" scoped="" ref="0x7ed83390"/>
        <function-ref name="clr" scoped="" ref="0x7ed83470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ed92bf8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ed92bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed92dd0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed92eb0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed91010"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed910f0"/>
        <function-ref name="get" scoped="" ref="0x7ed911d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed912b0"/>
        <function-ref name="set" scoped="" ref="0x7ed91390"/>
        <function-ref name="clr" scoped="" ref="0x7ed91470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ed90890" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ed90890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed90a68"/>
        <function-ref name="isInput" scoped="" ref="0x7ed90b48"/>
        <function-ref name="toggle" scoped="" ref="0x7ed90c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed90d08"/>
        <function-ref name="get" scoped="" ref="0x7ed90de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed90ec8"/>
        <function-ref name="set" scoped="" ref="0x7ed84010"/>
        <function-ref name="clr" scoped="" ref="0x7ed840f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ed835d0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ed835d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed837a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ed83888"/>
        <function-ref name="toggle" scoped="" ref="0x7ed83968"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed83a48"/>
        <function-ref name="get" scoped="" ref="0x7ed83b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed83c08"/>
        <function-ref name="set" scoped="" ref="0x7ed83ce8"/>
        <function-ref name="clr" scoped="" ref="0x7ed83dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8a6d08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8a6d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8a6ee0"/>
        <function-ref name="isInput" scoped="" ref="0x7d8a3010"/>
        <function-ref name="toggle" scoped="" ref="0x7d8a30f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8a31d0"/>
        <function-ref name="get" scoped="" ref="0x7d8a32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8a3390"/>
        <function-ref name="set" scoped="" ref="0x7d8a3470"/>
        <function-ref name="clr" scoped="" ref="0x7d8a3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8a2718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8a2718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8a28f0"/>
        <function-ref name="isInput" scoped="" ref="0x7d8a29d0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8a2ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8a2b90"/>
        <function-ref name="get" scoped="" ref="0x7d8a2c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8a2d50"/>
        <function-ref name="set" scoped="" ref="0x7d8a2e30"/>
        <function-ref name="clr" scoped="" ref="0x7d8a2f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8a00f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8a00f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8a02d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d8a03b0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8a0490"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8a0570"/>
        <function-ref name="get" scoped="" ref="0x7d8a0650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8a0730"/>
        <function-ref name="set" scoped="" ref="0x7d8a0810"/>
        <function-ref name="clr" scoped="" ref="0x7d8a08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d89fac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d89fac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d89fca0"/>
        <function-ref name="isInput" scoped="" ref="0x7d89fd80"/>
        <function-ref name="toggle" scoped="" ref="0x7d89fe60"/>
        <function-ref name="isOutput" scoped="" ref="0x7d89e010"/>
        <function-ref name="get" scoped="" ref="0x7d89e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d89e1d0"/>
        <function-ref name="set" scoped="" ref="0x7d89e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7d89e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d89d570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d89d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d89d748"/>
        <function-ref name="isInput" scoped="" ref="0x7d89d828"/>
        <function-ref name="toggle" scoped="" ref="0x7d89d908"/>
        <function-ref name="isOutput" scoped="" ref="0x7d89d9e8"/>
        <function-ref name="get" scoped="" ref="0x7d89dac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d89dba8"/>
        <function-ref name="set" scoped="" ref="0x7d89dc88"/>
        <function-ref name="clr" scoped="" ref="0x7d89dd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d89b010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d89b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d89b1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d89b2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d89b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d89b488"/>
        <function-ref name="get" scoped="" ref="0x7d89b568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d89b648"/>
        <function-ref name="set" scoped="" ref="0x7d89b728"/>
        <function-ref name="clr" scoped="" ref="0x7d89b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d89a9e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d89a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d89abc0"/>
        <function-ref name="isInput" scoped="" ref="0x7d89aca0"/>
        <function-ref name="toggle" scoped="" ref="0x7d89ad80"/>
        <function-ref name="isOutput" scoped="" ref="0x7d89ae60"/>
        <function-ref name="get" scoped="" ref="0x7d899010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8990f0"/>
        <function-ref name="set" scoped="" ref="0x7d8991d0"/>
        <function-ref name="clr" scoped="" ref="0x7d8992b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d898538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d898538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d898710"/>
        <function-ref name="isInput" scoped="" ref="0x7d8987f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8988d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8989b0"/>
        <function-ref name="get" scoped="" ref="0x7d898a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d898b70"/>
        <function-ref name="set" scoped="" ref="0x7d898c50"/>
        <function-ref name="clr" scoped="" ref="0x7d898d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ed73c88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ed73c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed73e60"/>
        <function-ref name="isInput" scoped="" ref="0x7ed72010"/>
        <function-ref name="toggle" scoped="" ref="0x7ed720f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed721d0"/>
        <function-ref name="get" scoped="" ref="0x7ed722b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed72390"/>
        <function-ref name="set" scoped="" ref="0x7ed72470"/>
        <function-ref name="clr" scoped="" ref="0x7ed72550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ed71988" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ed71988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed71b60"/>
        <function-ref name="isInput" scoped="" ref="0x7ed71c40"/>
        <function-ref name="toggle" scoped="" ref="0x7ed71d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed71e00"/>
        <function-ref name="get" scoped="" ref="0x7ed71ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed70010"/>
        <function-ref name="set" scoped="" ref="0x7ed700f0"/>
        <function-ref name="clr" scoped="" ref="0x7ed701d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ed749c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ed749c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed74b98"/>
        <function-ref name="isInput" scoped="" ref="0x7ed74c78"/>
        <function-ref name="toggle" scoped="" ref="0x7ed74d58"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed74e38"/>
        <function-ref name="get" scoped="" ref="0x7ed74f18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed73010"/>
        <function-ref name="set" scoped="" ref="0x7ed730f0"/>
        <function-ref name="clr" scoped="" ref="0x7ed731d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ed726b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ed726b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed72888"/>
        <function-ref name="isInput" scoped="" ref="0x7ed72968"/>
        <function-ref name="toggle" scoped="" ref="0x7ed72a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed72b28"/>
        <function-ref name="get" scoped="" ref="0x7ed72c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed72ce8"/>
        <function-ref name="set" scoped="" ref="0x7ed72dc8"/>
        <function-ref name="clr" scoped="" ref="0x7ed72ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ed70330" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ed70330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed70508"/>
        <function-ref name="isInput" scoped="" ref="0x7ed705e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed706c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed707a8"/>
        <function-ref name="get" scoped="" ref="0x7ed70888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed70968"/>
        <function-ref name="set" scoped="" ref="0x7ed70a48"/>
        <function-ref name="clr" scoped="" ref="0x7ed70b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ed73330" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ed73330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed73508"/>
        <function-ref name="isInput" scoped="" ref="0x7ed735e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed736c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed737a8"/>
        <function-ref name="get" scoped="" ref="0x7ed73888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed73968"/>
        <function-ref name="set" scoped="" ref="0x7ed73a48"/>
        <function-ref name="clr" scoped="" ref="0x7ed73b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ed71030" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ed71030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed71208"/>
        <function-ref name="isInput" scoped="" ref="0x7ed712e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed713c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed714a8"/>
        <function-ref name="get" scoped="" ref="0x7ed71588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed71668"/>
        <function-ref name="set" scoped="" ref="0x7ed71748"/>
        <function-ref name="clr" scoped="" ref="0x7ed71828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ed70c88" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ed70c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed70e60"/>
        <function-ref name="isInput" scoped="" ref="0x7ed64010"/>
        <function-ref name="toggle" scoped="" ref="0x7ed640f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed641d0"/>
        <function-ref name="get" scoped="" ref="0x7ed642b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed64390"/>
        <function-ref name="set" scoped="" ref="0x7ed64470"/>
        <function-ref name="clr" scoped="" ref="0x7ed64550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d86f2b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d86f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d86f488"/>
        <function-ref name="isInput" scoped="" ref="0x7d86f568"/>
        <function-ref name="toggle" scoped="" ref="0x7d86f648"/>
        <function-ref name="isOutput" scoped="" ref="0x7d86f728"/>
        <function-ref name="get" scoped="" ref="0x7d86f808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d86f8e8"/>
        <function-ref name="set" scoped="" ref="0x7d86f9c8"/>
        <function-ref name="clr" scoped="" ref="0x7d86faa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d86ec78" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d86ec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d86ee50"/>
        <function-ref name="isInput" scoped="" ref="0x7d86d010"/>
        <function-ref name="toggle" scoped="" ref="0x7d86d0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d86d1d0"/>
        <function-ref name="get" scoped="" ref="0x7d86d2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d86d390"/>
        <function-ref name="set" scoped="" ref="0x7d86d470"/>
        <function-ref name="clr" scoped="" ref="0x7d86d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d86c718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d86c718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d86c8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7d86c9d0"/>
        <function-ref name="toggle" scoped="" ref="0x7d86cab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d86cb90"/>
        <function-ref name="get" scoped="" ref="0x7d86cc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d86cd50"/>
        <function-ref name="set" scoped="" ref="0x7d86ce30"/>
        <function-ref name="clr" scoped="" ref="0x7d86cf10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d86a0f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d86a0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d86a2d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d86a3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7d86a490"/>
        <function-ref name="isOutput" scoped="" ref="0x7d86a570"/>
        <function-ref name="get" scoped="" ref="0x7d86a650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d86a730"/>
        <function-ref name="set" scoped="" ref="0x7d86a810"/>
        <function-ref name="clr" scoped="" ref="0x7d86a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d868ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d868ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d868ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7d868d80"/>
        <function-ref name="toggle" scoped="" ref="0x7d868e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7d867010"/>
        <function-ref name="get" scoped="" ref="0x7d8670f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8671d0"/>
        <function-ref name="set" scoped="" ref="0x7d8672b0"/>
        <function-ref name="clr" scoped="" ref="0x7d867390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d866570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d866570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d866748"/>
        <function-ref name="isInput" scoped="" ref="0x7d866828"/>
        <function-ref name="toggle" scoped="" ref="0x7d866908"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8669e8"/>
        <function-ref name="get" scoped="" ref="0x7d866ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d866ba8"/>
        <function-ref name="set" scoped="" ref="0x7d866c88"/>
        <function-ref name="clr" scoped="" ref="0x7d866d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d864010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d864010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d8641e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d8642c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d8643a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d864488"/>
        <function-ref name="get" scoped="" ref="0x7d864568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d864648"/>
        <function-ref name="set" scoped="" ref="0x7d864728"/>
        <function-ref name="clr" scoped="" ref="0x7d864808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8639e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8639e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d863bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7d863ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7d863d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7d863e60"/>
        <function-ref name="get" scoped="" ref="0x7d862010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8620f0"/>
        <function-ref name="set" scoped="" ref="0x7d8621d0"/>
        <function-ref name="clr" scoped="" ref="0x7d8622b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ed54250" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ed54250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed54428"/>
        <function-ref name="isInput" scoped="" ref="0x7ed54508"/>
        <function-ref name="toggle" scoped="" ref="0x7ed545e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed546c8"/>
        <function-ref name="get" scoped="" ref="0x7ed547a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed54888"/>
        <function-ref name="set" scoped="" ref="0x7ed54968"/>
        <function-ref name="clr" scoped="" ref="0x7ed54a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ed53f28" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ed53f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed52110"/>
        <function-ref name="isInput" scoped="" ref="0x7ed521f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed522d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed523b0"/>
        <function-ref name="get" scoped="" ref="0x7ed52490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed52570"/>
        <function-ref name="set" scoped="" ref="0x7ed52650"/>
        <function-ref name="clr" scoped="" ref="0x7ed52730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ed62eb0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ed62eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed610c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed611a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed61280"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed61360"/>
        <function-ref name="get" scoped="" ref="0x7ed61440"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed61520"/>
        <function-ref name="set" scoped="" ref="0x7ed61600"/>
        <function-ref name="clr" scoped="" ref="0x7ed616e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ed54ba8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ed54ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed54d80"/>
        <function-ref name="isInput" scoped="" ref="0x7ed54e60"/>
        <function-ref name="toggle" scoped="" ref="0x7ed53010"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed530f0"/>
        <function-ref name="get" scoped="" ref="0x7ed531d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed532b0"/>
        <function-ref name="set" scoped="" ref="0x7ed53390"/>
        <function-ref name="clr" scoped="" ref="0x7ed53470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ed52890" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ed52890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed52a68"/>
        <function-ref name="isInput" scoped="" ref="0x7ed52b48"/>
        <function-ref name="toggle" scoped="" ref="0x7ed52c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed52d08"/>
        <function-ref name="get" scoped="" ref="0x7ed52de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed52ec8"/>
        <function-ref name="set" scoped="" ref="0x7ed51010"/>
        <function-ref name="clr" scoped="" ref="0x7ed510f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ed61840" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ed61840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed61a18"/>
        <function-ref name="isInput" scoped="" ref="0x7ed61af8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed61bd8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed61cb8"/>
        <function-ref name="get" scoped="" ref="0x7ed61d98"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed61e78"/>
        <function-ref name="set" scoped="" ref="0x7ed54010"/>
        <function-ref name="clr" scoped="" ref="0x7ed540f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ed535d0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ed535d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed537a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ed53888"/>
        <function-ref name="toggle" scoped="" ref="0x7ed53968"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed53a48"/>
        <function-ref name="get" scoped="" ref="0x7ed53b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed53c08"/>
        <function-ref name="set" scoped="" ref="0x7ed53ce8"/>
        <function-ref name="clr" scoped="" ref="0x7ed53dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ed51250" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ed51250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed51428"/>
        <function-ref name="isInput" scoped="" ref="0x7ed51508"/>
        <function-ref name="toggle" scoped="" ref="0x7ed515e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed516c8"/>
        <function-ref name="get" scoped="" ref="0x7ed517a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed51888"/>
        <function-ref name="set" scoped="" ref="0x7ed51968"/>
        <function-ref name="clr" scoped="" ref="0x7ed51a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d83b7f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d83b7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d83b9d0"/>
        <function-ref name="isInput" scoped="" ref="0x7d83bab0"/>
        <function-ref name="toggle" scoped="" ref="0x7d83bb90"/>
        <function-ref name="isOutput" scoped="" ref="0x7d83bc70"/>
        <function-ref name="get" scoped="" ref="0x7d83bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d83be30"/>
        <function-ref name="set" scoped="" ref="0x7d83bf10"/>
        <function-ref name="clr" scoped="" ref="0x7d83a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d839228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d839228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d839400"/>
        <function-ref name="isInput" scoped="" ref="0x7d8394e0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8395c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8396a0"/>
        <function-ref name="get" scoped="" ref="0x7d839780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d839860"/>
        <function-ref name="set" scoped="" ref="0x7d839940"/>
        <function-ref name="clr" scoped="" ref="0x7d839a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d838c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d838c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d838de0"/>
        <function-ref name="isInput" scoped="" ref="0x7d838ec0"/>
        <function-ref name="toggle" scoped="" ref="0x7d837010"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8370f0"/>
        <function-ref name="get" scoped="" ref="0x7d8371d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8372b0"/>
        <function-ref name="set" scoped="" ref="0x7d837390"/>
        <function-ref name="clr" scoped="" ref="0x7d837470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8366c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8366c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d836898"/>
        <function-ref name="isInput" scoped="" ref="0x7d836978"/>
        <function-ref name="toggle" scoped="" ref="0x7d836a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7d836b38"/>
        <function-ref name="get" scoped="" ref="0x7d836c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d836cf8"/>
        <function-ref name="set" scoped="" ref="0x7d836dd8"/>
        <function-ref name="clr" scoped="" ref="0x7d836eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d8340b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d8340b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d834288"/>
        <function-ref name="isInput" scoped="" ref="0x7d834368"/>
        <function-ref name="toggle" scoped="" ref="0x7d834448"/>
        <function-ref name="isOutput" scoped="" ref="0x7d834528"/>
        <function-ref name="get" scoped="" ref="0x7d834608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8346e8"/>
        <function-ref name="set" scoped="" ref="0x7d8347c8"/>
        <function-ref name="clr" scoped="" ref="0x7d8348a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d833a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d833a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d833c60"/>
        <function-ref name="isInput" scoped="" ref="0x7d833d40"/>
        <function-ref name="toggle" scoped="" ref="0x7d833e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7d833f00"/>
        <function-ref name="get" scoped="" ref="0x7d832010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d8320f0"/>
        <function-ref name="set" scoped="" ref="0x7d8321d0"/>
        <function-ref name="clr" scoped="" ref="0x7d8322b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d831538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d831538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d831710"/>
        <function-ref name="isInput" scoped="" ref="0x7d8317f0"/>
        <function-ref name="toggle" scoped="" ref="0x7d8318d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7d8319b0"/>
        <function-ref name="get" scoped="" ref="0x7d831a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d831b70"/>
        <function-ref name="set" scoped="" ref="0x7d831c50"/>
        <function-ref name="clr" scoped="" ref="0x7d831d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7d82f010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7d82f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7d82f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7d82f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7d82f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7d82f488"/>
        <function-ref name="get" scoped="" ref="0x7d82f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7d82f648"/>
        <function-ref name="set" scoped="" ref="0x7d82f728"/>
        <function-ref name="clr" scoped="" ref="0x7d82f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ed428f0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ed428f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed42ac8"/>
        <function-ref name="isInput" scoped="" ref="0x7ed42ba8"/>
        <function-ref name="toggle" scoped="" ref="0x7ed42c88"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed42d68"/>
        <function-ref name="get" scoped="" ref="0x7ed42e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed42f28"/>
        <function-ref name="set" scoped="" ref="0x7ed41018"/>
        <function-ref name="clr" scoped="" ref="0x7ed410f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ed14cb8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ed14cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed14e90"/>
        <function-ref name="isInput" scoped="" ref="0x7ed13010"/>
        <function-ref name="toggle" scoped="" ref="0x7ed130f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed131d0"/>
        <function-ref name="get" scoped="" ref="0x7ed132b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed13390"/>
        <function-ref name="set" scoped="" ref="0x7ed13470"/>
        <function-ref name="clr" scoped="" ref="0x7ed13550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ed10148" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ed10148"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed10320"/>
        <function-ref name="isInput" scoped="" ref="0x7ed10400"/>
        <function-ref name="toggle" scoped="" ref="0x7ed104e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed105c0"/>
        <function-ref name="get" scoped="" ref="0x7ed106a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed10780"/>
        <function-ref name="set" scoped="" ref="0x7ed10860"/>
        <function-ref name="clr" scoped="" ref="0x7ed10940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ed03538" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ed03538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed03710"/>
        <function-ref name="isInput" scoped="" ref="0x7ed037f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed038d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed039b0"/>
        <function-ref name="get" scoped="" ref="0x7ed03a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed03b70"/>
        <function-ref name="set" scoped="" ref="0x7ed03c50"/>
        <function-ref name="clr" scoped="" ref="0x7ed03d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ed01978" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ed01978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed01b50"/>
        <function-ref name="isInput" scoped="" ref="0x7ed01c30"/>
        <function-ref name="toggle" scoped="" ref="0x7ed01d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed01df0"/>
        <function-ref name="get" scoped="" ref="0x7ed01ed0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed00010"/>
        <function-ref name="set" scoped="" ref="0x7ed000f0"/>
        <function-ref name="clr" scoped="" ref="0x7ed001d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ecf3d70" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ecf3d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecf2010"/>
        <function-ref name="isInput" scoped="" ref="0x7ecf20f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ecf21d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecf22b0"/>
        <function-ref name="get" scoped="" ref="0x7ecf2390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecf2470"/>
        <function-ref name="set" scoped="" ref="0x7ecf2550"/>
        <function-ref name="clr" scoped="" ref="0x7ecf2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ecf02b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ecf02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecf0488"/>
        <function-ref name="isInput" scoped="" ref="0x7ecf0568"/>
        <function-ref name="toggle" scoped="" ref="0x7ecf0648"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecf0728"/>
        <function-ref name="get" scoped="" ref="0x7ecf0808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecf08e8"/>
        <function-ref name="set" scoped="" ref="0x7ecf09c8"/>
        <function-ref name="clr" scoped="" ref="0x7ecf0aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ece26c0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ece26c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ece2898"/>
        <function-ref name="isInput" scoped="" ref="0x7ece2978"/>
        <function-ref name="toggle" scoped="" ref="0x7ece2a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7ece2b38"/>
        <function-ref name="get" scoped="" ref="0x7ece2c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ece2cf8"/>
        <function-ref name="set" scoped="" ref="0x7ece2dd8"/>
        <function-ref name="clr" scoped="" ref="0x7ece2eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ece0998" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ece0998"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ece0b70"/>
        <function-ref name="isInput" scoped="" ref="0x7ece0c50"/>
        <function-ref name="toggle" scoped="" ref="0x7ece0d30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ece0e10"/>
        <function-ref name="get" scoped="" ref="0x7ece0ef0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecd4010"/>
        <function-ref name="set" scoped="" ref="0x7ecd40f0"/>
        <function-ref name="clr" scoped="" ref="0x7ecd41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ecd3cb8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ecd3cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecd3e90"/>
        <function-ref name="isInput" scoped="" ref="0x7ecd1010"/>
        <function-ref name="toggle" scoped="" ref="0x7ecd10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecd11d0"/>
        <function-ref name="get" scoped="" ref="0x7ecd12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecd1390"/>
        <function-ref name="set" scoped="" ref="0x7ecd1470"/>
        <function-ref name="clr" scoped="" ref="0x7ecd1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ecc4050" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ecc4050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecc4228"/>
        <function-ref name="isInput" scoped="" ref="0x7ecc4308"/>
        <function-ref name="toggle" scoped="" ref="0x7ecc43e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecc44c8"/>
        <function-ref name="get" scoped="" ref="0x7ecc45a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecc4688"/>
        <function-ref name="set" scoped="" ref="0x7ecc4768"/>
        <function-ref name="clr" scoped="" ref="0x7ecc4848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ecc23b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ecc23b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecc2588"/>
        <function-ref name="isInput" scoped="" ref="0x7ecc2668"/>
        <function-ref name="toggle" scoped="" ref="0x7ecc2748"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecc2828"/>
        <function-ref name="get" scoped="" ref="0x7ecc2908"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecc29e8"/>
        <function-ref name="set" scoped="" ref="0x7ecc2ac8"/>
        <function-ref name="clr" scoped="" ref="0x7ecc2ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ecb46c0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ecb46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecb4898"/>
        <function-ref name="isInput" scoped="" ref="0x7ecb4978"/>
        <function-ref name="toggle" scoped="" ref="0x7ecb4a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecb4b38"/>
        <function-ref name="get" scoped="" ref="0x7ecb4c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecb4cf8"/>
        <function-ref name="set" scoped="" ref="0x7ecb4dd8"/>
        <function-ref name="clr" scoped="" ref="0x7ecb4eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ec44d58" loc="27:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ec44d58"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f252238"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f252238"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ec43010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7ec43160" loc="28:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ec43160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7ec43338"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7ec43418"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7ec434f8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7ec435d8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7ec436b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7ec14ee8" loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7ec14ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ec120e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7ec14300" loc="46:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7ec14300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ec144d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7ec14b78" loc="48:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7ec14b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ec14d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7ec14648" loc="47:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7ec14648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ec14820"/>
        <function-ref name="taskLoop" scoped="" ref="0x7ec14900"/>
        <function-ref name="runNextTask" scoped="" ref="0x7ec149e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f230218" loc="37:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f230218"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2303f0"/>
        <function-ref name="runTask" scoped="" ref="0x7f2304d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f232c50" loc="36:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f232c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f232e28"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f232f08"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f241010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f071d30" loc="45:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f071d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f071f08"/>
        <function-ref name="runTask" scoped="" ref="0x7f070010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f052188" loc="46:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f052188"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f052360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f071598" loc="44:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f071598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f071770"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f071850"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f071930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7efe3e38" loc="46:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7efe3e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7eff1050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f0108c0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f0108c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f010a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7eff2d38" loc="43:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7eff2d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7eff2f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7eb52af0" loc="87:UnicastCountToLedsC.nc">
      <component-ref qname="UnicastCountToLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x7eb52af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7eb52cc8"/>
        <function-ref name="stopDone" scoped="" ref="0x7eb52da8"/>
        <function-ref name="start" scoped="" ref="0x7eb52e88"/>
        <function-ref name="stop" scoped="" ref="0x7eb60010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7ec00010" loc="83:UnicastCountToLedsC.nc">
      <component-ref qname="UnicastCountToLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7ec00010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ec001e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7eb73310" loc="85:UnicastCountToLedsC.nc">
      <component-ref qname="UnicastCountToLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7eb73310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7eb734e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7eb735c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7eb736a8"/>
        <function-ref name="cancel" scoped="" ref="0x7eb73788"/>
        <function-ref name="sendDone" scoped="" ref="0x7eb73868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7eb42538" loc="88:UnicastCountToLedsC.nc">
      <component-ref qname="UnicastCountToLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7eb42538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7eb42710"/>
        <function-ref name="payloadLength" scoped="" ref="0x7eb427f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7eb428d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7eb429b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7eb42a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7ebe4010" loc="84:UnicastCountToLedsC.nc">
      <component-ref qname="UnicastCountToLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7ebe4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ebe41e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0x7eb62538" loc="86:UnicastCountToLedsC.nc">
      <component-ref qname="UnicastCountToLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MilliTimer" scoped="" ref="0x7eb62538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7eb82e48"/>
        <function-ref name="fired" scoped="" ref="0x7eb82268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7eb82808"/>
        <function-ref name="isOneShot" scoped="" ref="0x7eb82628"/>
        <function-ref name="getdt" scoped="" ref="0x7eb72228"/>
        <function-ref name="gett0" scoped="" ref="0x7eb72048"/>
        <function-ref name="isRunning" scoped="" ref="0x7eb82448"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7eb62b60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7eb82b28"/>
        <function-ref name="startOneShot" scoped="" ref="0x7eb62de0"/>
        <function-ref name="stop" scoped="" ref="0x7eb82088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ebe53e0" loc="82:UnicastCountToLedsC.nc">
      <component-ref qname="UnicastCountToLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7ebe53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ebe55b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ebe5698"/>
        <function-ref name="led1On" scoped="" ref="0x7ebe5778"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ebe5858"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ebe5938"/>
        <function-ref name="get" scoped="" ref="0x7ebe5a18"/>
        <function-ref name="led1Off" scoped="" ref="0x7ebe5af8"/>
        <function-ref name="led2Off" scoped="" ref="0x7ebe5e78"/>
        <function-ref name="set" scoped="" ref="0x7ebe5bd8"/>
        <function-ref name="led0On" scoped="" ref="0x7ebe5cb8"/>
        <function-ref name="led2On" scoped="" ref="0x7ebe5d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7eb30b98" loc="89:UnicastCountToLedsC.nc">
      <component-ref qname="UnicastCountToLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7eb30b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7eb30d70"/>
        <function-ref name="source" scoped="" ref="0x7eb30e50"/>
        <function-ref name="address" scoped="" ref="0x7eb50010"/>
        <function-ref name="destination" scoped="" ref="0x7eb500f0"/>
        <function-ref name="setSource" scoped="" ref="0x7eb501d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7eb502b0"/>
        <function-ref name="type" scoped="" ref="0x7eb50390"/>
        <function-ref name="setType" scoped="" ref="0x7eb50470"/>
        <function-ref name="isForMe" scoped="" ref="0x7eb50550"/>
        <function-ref name="setGroup" scoped="" ref="0x7eb50630"/>
        <function-ref name="localGroup" scoped="" ref="0x7eb50710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7eb10520" loc="35:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7eb10520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7eb106f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7eb107d8"/>
        <function-ref name="led1On" scoped="" ref="0x7eb108b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7eb10998"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7eb10a78"/>
        <function-ref name="get" scoped="" ref="0x7eb10b58"/>
        <function-ref name="led1Off" scoped="" ref="0x7eb10c38"/>
        <function-ref name="led2Off" scoped="" ref="0x7eb05010"/>
        <function-ref name="set" scoped="" ref="0x7eb10d18"/>
        <function-ref name="led0On" scoped="" ref="0x7eb10df8"/>
        <function-ref name="led2On" scoped="" ref="0x7eb10ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7eb01e58" loc="39:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7eb01e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb00050"/>
        <function-ref name="isInput" scoped="" ref="0x7eb00130"/>
        <function-ref name="toggle" scoped="" ref="0x7eb00210"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb002f0"/>
        <function-ref name="get" scoped="" ref="0x7eb003d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb004b0"/>
        <function-ref name="set" scoped="" ref="0x7eb00590"/>
        <function-ref name="clr" scoped="" ref="0x7eb00670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7eb05ea0" loc="35:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7eb05ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eb010c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7eb007e8" loc="40:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7eb007e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb009c0"/>
        <function-ref name="isInput" scoped="" ref="0x7eb00aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7eb00b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb00c60"/>
        <function-ref name="get" scoped="" ref="0x7eb00d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb00e20"/>
        <function-ref name="set" scoped="" ref="0x7eb00f00"/>
        <function-ref name="clr" scoped="" ref="0x7eaf5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7eb01208" loc="36:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7eb01208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7eb013e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7eb014c0"/>
        <function-ref name="led1On" scoped="" ref="0x7eb015a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7eb01680"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7eb01760"/>
        <function-ref name="get" scoped="" ref="0x7eb01840"/>
        <function-ref name="led1Off" scoped="" ref="0x7eb01920"/>
        <function-ref name="led2Off" scoped="" ref="0x7eb01ca0"/>
        <function-ref name="set" scoped="" ref="0x7eb01a00"/>
        <function-ref name="led0On" scoped="" ref="0x7eb01ae0"/>
        <function-ref name="led2On" scoped="" ref="0x7eb01bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7eaf5188" loc="41:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7eaf5188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eaf5360"/>
        <function-ref name="isInput" scoped="" ref="0x7eaf5440"/>
        <function-ref name="toggle" scoped="" ref="0x7eaf5520"/>
        <function-ref name="isOutput" scoped="" ref="0x7eaf5600"/>
        <function-ref name="get" scoped="" ref="0x7eaf56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eaf57c0"/>
        <function-ref name="set" scoped="" ref="0x7eaf58a0"/>
        <function-ref name="clr" scoped="" ref="0x7eaf5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7ead3b18" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7ead3b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ead3cf0"/>
        <function-ref name="isInput" scoped="" ref="0x7ead3dd0"/>
        <function-ref name="toggle" scoped="" ref="0x7ead3eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ead2010"/>
        <function-ref name="get" scoped="" ref="0x7ead20f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ead21d0"/>
        <function-ref name="set" scoped="" ref="0x7ead22b0"/>
        <function-ref name="clr" scoped="" ref="0x7ead2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7ead2528" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7ead2528"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ead2700"/>
        <function-ref name="isInput" scoped="" ref="0x7ead27e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ead28c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ead29a0"/>
        <function-ref name="get" scoped="" ref="0x7ead2a80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ead2b60"/>
        <function-ref name="set" scoped="" ref="0x7ead2c40"/>
        <function-ref name="clr" scoped="" ref="0x7ead2d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7ead1848" loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ead1848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ead1a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7ead2eb8" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7ead2eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ead10c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ead11a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ead1280"/>
        <function-ref name="isOutput" scoped="" ref="0x7ead1360"/>
        <function-ref name="get" scoped="" ref="0x7ead1440"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ead1520"/>
        <function-ref name="set" scoped="" ref="0x7ead1600"/>
        <function-ref name="clr" scoped="" ref="0x7ead16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7d99b010" loc="45:../../../tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="UnicastCountToLedsAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7d99b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d99b1e8"/>
        <function-ref name="destination" scoped="" ref="0x7d99b2c8"/>
        <function-ref name="setSource" scoped="" ref="0x7d99b3a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7d99b488"/>
        <function-ref name="isForMe" scoped="" ref="0x7d99b568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d99a310" loc="47:../../../tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="UnicastCountToLedsAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d99a310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d99a4e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d99a5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d99a6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d99a788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d99a868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d99c900" loc="44:../../../tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="UnicastCountToLedsAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d99c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d99cad8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d99cbb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d99cc98"/>
        <function-ref name="cancel" scoped="" ref="0x7d99cd78"/>
        <function-ref name="sendDone" scoped="" ref="0x7d99ce58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d99b6a8" loc="46:../../../tos/lib/netarch/single/SingleSenderC.nc">
      <component-ref qname="UnicastCountToLedsAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d99b6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d99b880"/>
        <function-ref name="source" scoped="" ref="0x7d99b960"/>
        <function-ref name="address" scoped="" ref="0x7d99ba40"/>
        <function-ref name="destination" scoped="" ref="0x7d99bb20"/>
        <function-ref name="setSource" scoped="" ref="0x7d99bc00"/>
        <function-ref name="setDestination" scoped="" ref="0x7d99bce0"/>
        <function-ref name="type" scoped="" ref="0x7d99bdc0"/>
        <function-ref name="setType" scoped="" ref="0x7d99bea0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d99a010"/>
        <function-ref name="setGroup" scoped="" ref="0x7d99a0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7d99a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleDsrPacketWaitList" ref="0x7ea44d48" loc="48:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7ea44d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7ea52640"/>
        <function-ref name="next" scoped="" ref="0x7ea523c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacket" ref="0x7ea34880" loc="53:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7ea34880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7ea34a58"/>
        <function-ref name="destination" scoped="" ref="0x7ea34b38"/>
        <function-ref name="setSource" scoped="" ref="0x7ea34c18"/>
        <function-ref name="setDestination" scoped="" ref="0x7ea34cf8"/>
        <function-ref name="isForMe" scoped="" ref="0x7ea34dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ea740c8" loc="42:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7ea740c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ea742a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ea74380"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea74460"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ea74540"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ea74620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleDsrPacketEngine" ref="0x7ea556f8" loc="45:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7ea556f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7ea558d0"/>
        <function-ref name="send" scoped="" ref="0x7ea559b0"/>
        <function-ref name="receive" scoped="" ref="0x7ea55a90"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7ea55b70"/>
        <function-ref name="sendAdded" scoped="" ref="0x7ea55c50"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7ea55d30"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7ea55e10"/>
        <function-ref name="packet" scoped="" ref="0x7ea55ef0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ea72010"/>
        <function-ref name="drop" scoped="" ref="0x7ea720f0"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7ea721d0"/>
        <function-ref name="waitList" scoped="" ref="0x7ea722b0"/>
        <function-ref name="setUpperType" scoped="" ref="0x7ea72390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacketEngine" ref="0x7ea72598" loc="46:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacketEngine" scoped="" ref="0x7ea72598"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7ea72770"/>
        <function-ref name="send" scoped="" ref="0x7ea72850"/>
        <function-ref name="receive" scoped="" ref="0x7ea72930"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7ea72a10"/>
        <function-ref name="sendAdded" scoped="" ref="0x7ea72af0"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7ea72bd0"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7ea72cb0"/>
        <function-ref name="packet" scoped="" ref="0x7ea72d90"/>
        <function-ref name="sendDone" scoped="" ref="0x7ea72e70"/>
        <function-ref name="drop" scoped="" ref="0x7ea71010"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7ea710f0"/>
        <function-ref name="waitList" scoped="" ref="0x7ea711d0"/>
        <function-ref name="setUpperType" scoped="" ref="0x7ea712b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7ea36930" loc="58:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7ea36930"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ea36b88"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea36c68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ea36d48"/>
        <function-ref name="cancel" scoped="" ref="0x7ea36e28"/>
        <function-ref name="sendDone" scoped="" ref="0x7ea36f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ComposePacket" ref="0x7ea40b48" loc="55:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ComposePacket" scoped="" ref="0x7ea40b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ea40d20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ea40e00"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea40ee0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ea36010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ea360f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7ea36268" loc="56:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7ea36268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ea36440"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ea36520"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea36600"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ea366e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ea367c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DsrPacketEngine" ref="0x7ea714b0" loc="47:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrPacketEngine" scoped="" ref="0x7ea714b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7ea71688"/>
        <function-ref name="send" scoped="" ref="0x7ea71768"/>
        <function-ref name="receive" scoped="" ref="0x7ea71848"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7ea71928"/>
        <function-ref name="sendAdded" scoped="" ref="0x7ea71a08"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7ea71ae8"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7ea71bc8"/>
        <function-ref name="packet" scoped="" ref="0x7ea71ca8"/>
        <function-ref name="sendDone" scoped="" ref="0x7ea71d88"/>
        <function-ref name="drop" scoped="" ref="0x7ea71e68"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7ea54010"/>
        <function-ref name="waitList" scoped="" ref="0x7ea540f0"/>
        <function-ref name="setUpperType" scoped="" ref="0x7ea541d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacketWaitList" ref="0x7ea52960" loc="49:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7ea52960"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7ea43290"/>
        <function-ref name="next" scoped="" ref="0x7ea43010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DsrPacketWaitList" ref="0x7ea435b0" loc="50:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7ea435b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7ea43e58"/>
        <function-ref name="next" scoped="" ref="0x7ea43bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7ea34f28" loc="54:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7ea34f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ea40110"/>
        <function-ref name="source" scoped="" ref="0x7ea401f0"/>
        <function-ref name="address" scoped="" ref="0x7ea402d0"/>
        <function-ref name="destination" scoped="" ref="0x7ea403b0"/>
        <function-ref name="setSource" scoped="" ref="0x7ea40490"/>
        <function-ref name="setDestination" scoped="" ref="0x7ea40570"/>
        <function-ref name="type" scoped="" ref="0x7ea40650"/>
        <function-ref name="setType" scoped="" ref="0x7ea40730"/>
        <function-ref name="isForMe" scoped="" ref="0x7ea40810"/>
        <function-ref name="setGroup" scoped="" ref="0x7ea408f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7ea409d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Acks" ref="0x7ea34398" loc="52:../../../tos/lib/netarch/dsr/DsrP.nc">
      <component-ref qname="DsrP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7ea34398"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ea34570"/>
        <function-ref name="noAck" scoped="" ref="0x7ea34650"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ea34730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteErrorList" ref="0x7e9e4a10" loc="47:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteErrorList" scoped="" ref="0x7e9e4a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
            <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e9e0520"/>
        <function-ref name="next" scoped="" ref="0x7e9e01e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AckList" ref="0x7e9d6908" loc="50:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckList" scoped="" ref="0x7e9d6908"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
            <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e9d5388"/>
        <function-ref name="next" scoped="" ref="0x7e9d5048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteRequest" ref="0x7ea00698" loc="43:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequest" scoped="" ref="0x7ea00698"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7ea00870"/>
        <function-ref name="remove" scoped="" ref="0x7ea00950"/>
        <function-ref name="length" scoped="" ref="0x7ea00a30"/>
        <function-ref name="setLength" scoped="" ref="0x7ea00b10"/>
        <function-ref name="add" scoped="" ref="0x7ea00bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteReplyList" ref="0x7e9e1330" loc="45:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteReplyList" scoped="" ref="0x7e9e1330"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
            <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e9e1da0"/>
        <function-ref name="next" scoped="" ref="0x7e9e1a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e9d5d60" loc="53:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e9d5d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e9d3010"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e9d30f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e9d31d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e9d32b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e9d3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DsrHeader" ref="0x7ea14080" loc="42:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrHeader" scoped="" ref="0x7ea14080"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlockPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7ea14258"/>
        <function-ref name="length" scoped="" ref="0x7ea14338"/>
        <function-ref name="add" scoped="" ref="0x7ea14418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SourceRoute" ref="0x7e9d56c0" loc="51:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceRoute" scoped="" ref="0x7e9d56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e9d5898"/>
        <function-ref name="remove" scoped="" ref="0x7e9d5978"/>
        <function-ref name="length" scoped="" ref="0x7e9d5a58"/>
        <function-ref name="setLength" scoped="" ref="0x7e9d5b38"/>
        <function-ref name="add" scoped="" ref="0x7e9d5c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteError" ref="0x7e9e4110" loc="46:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteError" scoped="" ref="0x7e9e4110"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiplePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e9e42e8"/>
        <function-ref name="list" scoped="" ref="0x7e9e43c8"/>
        <function-ref name="remove" scoped="" ref="0x7e9e44a8"/>
        <function-ref name="length" scoped="" ref="0x7e9e4588"/>
        <function-ref name="setLength" scoped="" ref="0x7e9e4668"/>
        <function-ref name="add" scoped="" ref="0x7e9e4748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AckRequest" ref="0x7e9e0858" loc="48:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckRequest" scoped="" ref="0x7e9e0858"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e9e0a30"/>
        <function-ref name="remove" scoped="" ref="0x7e9e0b10"/>
        <function-ref name="length" scoped="" ref="0x7e9e0bf0"/>
        <function-ref name="setLength" scoped="" ref="0x7e9e0cd0"/>
        <function-ref name="add" scoped="" ref="0x7e9e0db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteReply" ref="0x7e9f5010" loc="44:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteReply" scoped="" ref="0x7e9f5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiplePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e9f51e8"/>
        <function-ref name="list" scoped="" ref="0x7e9f52c8"/>
        <function-ref name="remove" scoped="" ref="0x7e9f53a8"/>
        <function-ref name="length" scoped="" ref="0x7e9f5488"/>
        <function-ref name="setLength" scoped="" ref="0x7e9f5568"/>
        <function-ref name="add" scoped="" ref="0x7e9f5648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ack" ref="0x7e9d6010" loc="49:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ack" scoped="" ref="0x7e9d6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiplePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e9d61e8"/>
        <function-ref name="list" scoped="" ref="0x7e9d62c8"/>
        <function-ref name="remove" scoped="" ref="0x7e9d63a8"/>
        <function-ref name="length" scoped="" ref="0x7e9d6488"/>
        <function-ref name="setLength" scoped="" ref="0x7e9d6568"/>
        <function-ref name="add" scoped="" ref="0x7e9d6648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7e9d3538" loc="55:../../../tos/lib/netarch/dsr/DsrOptionsC.nc">
      <component-ref qname="DsrOptionsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7e9d3538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e9d3710"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e9d37f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e9d38d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e9d39b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e9d3a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvListPacket" ref="0x7e898970" loc="50:../../../tos/lib/netarch/tlv/TlvPacketC.nc">
      <component-ref qname="DsrOptionsC.TlvC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvListPacket" scoped="" ref="0x7e898970"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
            <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e897428"/>
        <function-ref name="next" scoped="" ref="0x7e8970d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e897730" loc="51:../../../tos/lib/netarch/tlv/TlvPacketC.nc">
      <component-ref qname="DsrOptionsC.TlvC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e897730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e897908"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e8979e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e897ac8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e897ba8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e897c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvMultiplePacket" ref="0x7e898010" loc="49:../../../tos/lib/netarch/tlv/TlvPacketC.nc">
      <component-ref qname="DsrOptionsC.TlvC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvMultiplePacket" scoped="" ref="0x7e898010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiplePacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e8981f8"/>
        <function-ref name="list" scoped="" ref="0x7e8982d8"/>
        <function-ref name="remove" scoped="" ref="0x7e8983b8"/>
        <function-ref name="length" scoped="" ref="0x7e898498"/>
        <function-ref name="setLength" scoped="" ref="0x7e898578"/>
        <function-ref name="add" scoped="" ref="0x7e898658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7e897e18" loc="54:../../../tos/lib/netarch/tlv/TlvPacketC.nc">
      <component-ref qname="DsrOptionsC.TlvC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7e897e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e895010"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e8950f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e8951d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e8952b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e895390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvBlockPacket" ref="0x7e8a0338" loc="47:../../../tos/lib/netarch/tlv/TlvPacketC.nc">
      <component-ref qname="DsrOptionsC.TlvC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlockPacket" scoped="" ref="0x7e8a0338"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlockPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7e8a0510"/>
        <function-ref name="length" scoped="" ref="0x7e8a05f0"/>
        <function-ref name="add" scoped="" ref="0x7e8a06d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvSinglePacket" ref="0x7e8a08a8" loc="48:../../../tos/lib/netarch/tlv/TlvPacketC.nc">
      <component-ref qname="DsrOptionsC.TlvC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvSinglePacket" scoped="" ref="0x7e8a08a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSinglePacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e8a0a90"/>
        <function-ref name="remove" scoped="" ref="0x7e8a0b70"/>
        <function-ref name="length" scoped="" ref="0x7e8a0c50"/>
        <function-ref name="setLength" scoped="" ref="0x7e8a0d30"/>
        <function-ref name="add" scoped="" ref="0x7e8a0e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvListPacket" ref="0x7d7a0d08" loc="50:../../../tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvListPacket" scoped="" ref="0x7d7a0d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
            <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d79e7a8"/>
        <function-ref name="next" scoped="" ref="0x7d79e458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d79eab0" loc="51:../../../tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d79eab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d79ec88"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d79ed68"/>
        <function-ref name="getPayload" scoped="" ref="0x7d79ee48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d79ef28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d79d018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TlvMultiple" ref="0x7d79de38" loc="56:../../../tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvMultiple" scoped="" ref="0x7d79de38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiple"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7d79c050"/>
        <function-ref name="list" scoped="" ref="0x7d79c130"/>
        <function-ref name="remove" scoped="" ref="0x7d79c210"/>
        <function-ref name="length" scoped="" ref="0x7d79c2f0"/>
        <function-ref name="setLength" scoped="" ref="0x7d79c3d0"/>
        <function-ref name="add" scoped="" ref="0x7d79c4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TlvList" ref="0x7d79c738" loc="57:../../../tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvList" scoped="" ref="0x7d79c738"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticVoidIndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d79b0d8"/>
        <function-ref name="next" scoped="" ref="0x7d79cd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvMultiplePacket" ref="0x7d7a03a8" loc="49:../../../tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvMultiplePacket" scoped="" ref="0x7d7a03a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiplePacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7d7a0590"/>
        <function-ref name="list" scoped="" ref="0x7d7a0670"/>
        <function-ref name="remove" scoped="" ref="0x7d7a0750"/>
        <function-ref name="length" scoped="" ref="0x7d7a0830"/>
        <function-ref name="setLength" scoped="" ref="0x7d7a0910"/>
        <function-ref name="add" scoped="" ref="0x7d7a09f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7d79b400" loc="58:../../../tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7d79b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d79b5d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d79b6b8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d79b798"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d79b878"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d79b958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvBlockPacket" ref="0x7d7a1648" loc="47:../../../tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlockPacket" scoped="" ref="0x7d7a1648"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlockPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7d7a1820"/>
        <function-ref name="length" scoped="" ref="0x7d7a1900"/>
        <function-ref name="add" scoped="" ref="0x7d7a19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvSinglePacket" ref="0x7d7a1bb8" loc="48:../../../tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvSinglePacket" scoped="" ref="0x7d7a1bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSinglePacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7d7a1da0"/>
        <function-ref name="remove" scoped="" ref="0x7d7a1e80"/>
        <function-ref name="length" scoped="" ref="0x7d7a0010"/>
        <function-ref name="setLength" scoped="" ref="0x7d7a00f0"/>
        <function-ref name="add" scoped="" ref="0x7d7a01d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TlvBlock" ref="0x7d79d188" loc="54:../../../tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlock" scoped="" ref="0x7d79d188"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7d79d360"/>
        <function-ref name="length" scoped="" ref="0x7d79d440"/>
        <function-ref name="add" scoped="" ref="0x7d79d520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TlvSingle" ref="0x7d79d6f8" loc="55:../../../tos/lib/netarch/tlv/TlvPacketP.nc">
      <component-ref qname="DsrOptionsC.TlvC.TlvPacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvSingle" scoped="" ref="0x7d79d6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSingle"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7d79d8e0"/>
        <function-ref name="remove" scoped="" ref="0x7d79d9c0"/>
        <function-ref name="length" scoped="" ref="0x7d79daa0"/>
        <function-ref name="setLength" scoped="" ref="0x7d79db80"/>
        <function-ref name="add" scoped="" ref="0x7d79dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvMultiple" ref="0x7e900d28" loc="49:../../../tos/lib/netarch/tlv/TlvP.nc">
      <component-ref qname="TlvP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvMultiple" scoped="" ref="0x7e900d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiple"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e900f00"/>
        <function-ref name="list" scoped="" ref="0x7e8f6010"/>
        <function-ref name="remove" scoped="" ref="0x7e8f60f0"/>
        <function-ref name="length" scoped="" ref="0x7e8f61d0"/>
        <function-ref name="setLength" scoped="" ref="0x7e8f62b0"/>
        <function-ref name="add" scoped="" ref="0x7e8f6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvList" ref="0x7e8f6848" loc="50:../../../tos/lib/netarch/tlv/TlvP.nc">
      <component-ref qname="TlvP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvList" scoped="" ref="0x7e8f6848"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticVoidIndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e8f51c8"/>
        <function-ref name="next" scoped="" ref="0x7e8f6e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvBlock" ref="0x7e901c08" loc="47:../../../tos/lib/netarch/tlv/TlvP.nc">
      <component-ref qname="TlvP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvBlock" scoped="" ref="0x7e901c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7e901de0"/>
        <function-ref name="length" scoped="" ref="0x7e901ec0"/>
        <function-ref name="add" scoped="" ref="0x7e900010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TlvSingle" ref="0x7e9003f0" loc="48:../../../tos/lib/netarch/tlv/TlvP.nc">
      <component-ref qname="TlvP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TlvSingle" scoped="" ref="0x7e9003f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSingle"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e9005c8"/>
        <function-ref name="remove" scoped="" ref="0x7e9006a8"/>
        <function-ref name="length" scoped="" ref="0x7e900788"/>
        <function-ref name="setLength" scoped="" ref="0x7e900868"/>
        <function-ref name="add" scoped="" ref="0x7e900948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7e870010" loc="95:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7e870010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e8701e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7e8715d0" loc="94:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7e8715d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e8717a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e871888"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e871968"/>
        <function-ref name="cancel" scoped="" ref="0x7e871a48"/>
        <function-ref name="sendDone" scoped="" ref="0x7e871b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendPool" ref="0x7e847c00" loc="101:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendPool" scoped="" ref="0x7e847c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
            <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e851a98"/>
        <function-ref name="maxSize" scoped="" ref="0x7e851618"/>
        <function-ref name="empty" scoped="" ref="0x7e851258"/>
        <function-ref name="put" scoped="" ref="0x7e8517f8"/>
        <function-ref name="size" scoped="" ref="0x7e851438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketEngineClient" ref="0x7e8632f8" loc="98:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngineClient" scoped="" ref="0x7e8632f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngineClient"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eac1490"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7e8634d0"/>
        <function-ref name="defaultLowerType" scoped="" ref="0x7e8635b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceivePool" ref="0x7e851d28" loc="102:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceivePool" scoped="" ref="0x7e851d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
            <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e846bb0"/>
        <function-ref name="maxSize" scoped="" ref="0x7e846730"/>
        <function-ref name="empty" scoped="" ref="0x7e846370"/>
        <function-ref name="put" scoped="" ref="0x7e846910"/>
        <function-ref name="size" scoped="" ref="0x7e846550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7e877010" loc="86:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7e877010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7e8771e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e877330" loc="87:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e877330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e877508"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e8775e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e8776c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e8777a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e877888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7e836e00" loc="104:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e836e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e842010"/>
        <function-ref name="rand32" scoped="" ref="0x7e8420f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e884290" loc="84:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e884290"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eac1490"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e884468"/>
        <function-ref name="getPayload" scoped="" ref="0x7e884548"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e884628"/>
        <function-ref name="cancel" scoped="" ref="0x7e884708"/>
        <function-ref name="sendDone" scoped="" ref="0x7e8847e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7e867d10" loc="93:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7e867d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e867ee8"/>
        <function-ref name="stopDone" scoped="" ref="0x7e871010"/>
        <function-ref name="start" scoped="" ref="0x7e8710f0"/>
        <function-ref name="stop" scoped="" ref="0x7e8711d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x7e838318" loc="103:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x7e838318"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7e8384f0"/>
        <function-ref name="toIdle" scoped="" ref="0x7e8385d0"/>
        <function-ref name="isState" scoped="" ref="0x7e8386b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7e838790"/>
        <function-ref name="requestState" scoped="" ref="0x7e838870"/>
        <function-ref name="forceState" scoped="" ref="0x7e838950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketWaitList" ref="0x7e876e08" loc="89:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketWaitList" scoped="" ref="0x7e876e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e8746c8"/>
        <function-ref name="next" scoped="" ref="0x7e874448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7e853138" loc="100:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x7e853138"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7eab3c88"/>
            <typename><typedef-ref name="packet_send_entry_t" ref="0x7eab3ed8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7e858190"/>
        <function-ref name="evicted" scoped="" ref="0x7e853c00"/>
        <function-ref name="insert" scoped="" ref="0x7e853940"/>
        <function-ref name="flush" scoped="" ref="0x7e858430"/>
        <function-ref name="lookup" scoped="" ref="0x7e853ea0"/>
        <function-ref name="size" scoped="" ref="0x7e853760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7e8705f0" loc="96:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7e8705f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e870848"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e870928"/>
        <function-ref name="getPayload" scoped="" ref="0x7e870a08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e870ae8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e870bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e886078" loc="82:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e886078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e886250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngine" ref="0x7e877c68" loc="88:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngine" scoped="" ref="0x7e877c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7e877e40"/>
        <function-ref name="send" scoped="" ref="0x7e877f20"/>
        <function-ref name="receive" scoped="" ref="0x7e876018"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7e8760f8"/>
        <function-ref name="sendAdded" scoped="" ref="0x7e8761d8"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7e8762b8"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7e876398"/>
        <function-ref name="packet" scoped="" ref="0x7e876478"/>
        <function-ref name="sendDone" scoped="" ref="0x7e876558"/>
        <function-ref name="drop" scoped="" ref="0x7e876638"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7e876718"/>
        <function-ref name="waitList" scoped="" ref="0x7e8767f8"/>
        <function-ref name="setUpperType" scoped="" ref="0x7e8768d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="msgAction" ref="0x7e823ea8" loc="195:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="msgAction" scoped="" ref="0x7e823ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e8220c0"/>
        <function-ref name="runTask" scoped="" ref="0x7e8221a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e884bc0" loc="85:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e884bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e884d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="msgAdded" ref="0x7e823778" loc="194:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="msgAdded" scoped="" ref="0x7e823778"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e823950"/>
        <function-ref name="runTask" scoped="" ref="0x7e823a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendQueueEqual" ref="0x7e867390" loc="90:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueueEqual" scoped="" ref="0x7e867390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7eab3c88"/>
              <typename><typedef-ref name="packet_send_entry_t" ref="0x7eab3ed8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e8679b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBackoff" ref="0x7e842300" loc="105:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBackoff" scoped="" ref="0x7e842300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e837c28"/>
        <function-ref name="fired" scoped="" ref="0x7e837048"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8375e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e837408"/>
        <function-ref name="getdt" scoped="" ref="0x7e834010"/>
        <function-ref name="gett0" scoped="" ref="0x7e837e08"/>
        <function-ref name="isRunning" scoped="" ref="0x7e837228"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e842928"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e837908"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e842ba8"/>
        <function-ref name="stop" scoped="" ref="0x7e842e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSendPacket" ref="0x7e870d40" loc="97:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSendPacket" scoped="" ref="0x7e870d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e870f18"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e865010"/>
        <function-ref name="getPayload" scoped="" ref="0x7e8650f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e8651d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e8652b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e863700" loc="99:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e863700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e8638d8"/>
        <function-ref name="source" scoped="" ref="0x7e8639b8"/>
        <function-ref name="address" scoped="" ref="0x7e863a98"/>
        <function-ref name="destination" scoped="" ref="0x7e863b78"/>
        <function-ref name="setSource" scoped="" ref="0x7e863c58"/>
        <function-ref name="setDestination" scoped="" ref="0x7e863d38"/>
        <function-ref name="type" scoped="" ref="0x7e863e18"/>
        <function-ref name="setType" scoped="" ref="0x7e863ef8"/>
        <function-ref name="isForMe" scoped="" ref="0x7e862010"/>
        <function-ref name="setGroup" scoped="" ref="0x7e8620f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7e8621d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7e882b98" loc="83:../../../tos/lib/netarch/multihop/PacketEngineP.nc">
      <component-ref qname="PacketEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7e882b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e882d70"/>
        <function-ref name="stop" scoped="" ref="0x7e882e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7e740760" loc="35:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e740760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e740938"/>
        <function-ref name="rand32" scoped="" ref="0x7e740a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7e738e88" loc="34:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7e738e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e7404d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e7421f0" loc="33:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e7421f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e7423c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7e733648" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e733648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e733820"/>
        <function-ref name="rand32" scoped="" ref="0x7e733900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7e736d78" loc="33:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7e736d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e7333c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e736960" loc="32:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e736960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e736b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7e7285d8" loc="37:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e7285d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e7287b0"/>
        <function-ref name="rand32" scoped="" ref="0x7e728890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7e729d18" loc="36:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7e729d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e728350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e729900" loc="35:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e729900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e729ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteRequestOutCache" ref="0x7e619980" loc="114:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestOutCache" scoped="" ref="0x7e619980"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7ea84c28"/>
            <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7ea83010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7e617a10"/>
        <function-ref name="evicted" scoped="" ref="0x7e6174b0"/>
        <function-ref name="insert" scoped="" ref="0x7e6171f0"/>
        <function-ref name="flush" scoped="" ref="0x7e617cb0"/>
        <function-ref name="lookup" scoped="" ref="0x7e617750"/>
        <function-ref name="size" scoped="" ref="0x7e617010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteRequestOutTimer" ref="0x7e617ef8" loc="115:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestOutTimer" scoped="" ref="0x7e617ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataTimer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba1a28"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="expired" scoped="" ref="0x7e615af8"/>
        <function-ref name="start" scoped="" ref="0x7e615558"/>
        <function-ref name="stop" scoped="" ref="0x7e615878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteRequestInEqual" ref="0x7e62ba20" loc="91:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestInEqual" scoped="" ref="0x7e62ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7ea83578"/>
              <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7ea83898"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e62a068"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteErrorList" ref="0x7e627530" loc="100:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteErrorList" scoped="" ref="0x7e627530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
            <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e626010"/>
        <function-ref name="next" scoped="" ref="0x7e627c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleDsrPacketWaitList" ref="0x7e6236e0" loc="106:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SingleDsrPacketWaitList" scoped="" ref="0x7e6236e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e621010"/>
        <function-ref name="next" scoped="" ref="0x7e623d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacket" ref="0x7e614238" loc="118:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7e614238"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e614410"/>
        <function-ref name="destination" scoped="" ref="0x7e6144f0"/>
        <function-ref name="setSource" scoped="" ref="0x7e6145d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7e6146b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7e614790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7e62ad40" loc="95:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7e62ad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7e62af18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleDsrPacketEngine" ref="0x7e6269e0" loc="103:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SingleDsrPacketEngine" scoped="" ref="0x7e6269e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7e626bb8"/>
        <function-ref name="send" scoped="" ref="0x7e626c98"/>
        <function-ref name="receive" scoped="" ref="0x7e626d78"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7e626e58"/>
        <function-ref name="sendAdded" scoped="" ref="0x7e625010"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7e6250f0"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7e6251d0"/>
        <function-ref name="packet" scoped="" ref="0x7e6252b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e625390"/>
        <function-ref name="drop" scoped="" ref="0x7e625470"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7e625550"/>
        <function-ref name="waitList" scoped="" ref="0x7e625630"/>
        <function-ref name="setUpperType" scoped="" ref="0x7e625710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteRequestInCache" ref="0x7e61a458" loc="113:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestInCache" scoped="" ref="0x7e61a458"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7ea83578"/>
            <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7ea83898"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7e619498"/>
        <function-ref name="evicted" scoped="" ref="0x7e61af20"/>
        <function-ref name="insert" scoped="" ref="0x7e61ac60"/>
        <function-ref name="flush" scoped="" ref="0x7e619738"/>
        <function-ref name="lookup" scoped="" ref="0x7e6191d8"/>
        <function-ref name="size" scoped="" ref="0x7e61aa80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacketEngine" ref="0x7e6258f0" loc="104:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacketEngine" scoped="" ref="0x7e6258f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7e625ac8"/>
        <function-ref name="send" scoped="" ref="0x7e625ba8"/>
        <function-ref name="receive" scoped="" ref="0x7e625c88"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7e625d68"/>
        <function-ref name="sendAdded" scoped="" ref="0x7e625e48"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7e625f28"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7e624018"/>
        <function-ref name="packet" scoped="" ref="0x7e6240f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7e6241d8"/>
        <function-ref name="drop" scoped="" ref="0x7e6242b8"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7e624398"/>
        <function-ref name="waitList" scoped="" ref="0x7e624478"/>
        <function-ref name="setUpperType" scoped="" ref="0x7e624558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7e6116c8" loc="126:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e6116c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e6118a0"/>
        <function-ref name="rand32" scoped="" ref="0x7e611980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteRequest" ref="0x7e628588" loc="98:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequest" scoped="" ref="0x7e628588"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e628760"/>
        <function-ref name="remove" scoped="" ref="0x7e628840"/>
        <function-ref name="length" scoped="" ref="0x7e628920"/>
        <function-ref name="setLength" scoped="" ref="0x7e628a00"/>
        <function-ref name="add" scoped="" ref="0x7e628ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7e611030" loc="124:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e611030"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e611208"/>
        <function-ref name="getPayload" scoped="" ref="0x7e6112e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e6113c8"/>
        <function-ref name="cancel" scoped="" ref="0x7e6114a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7e611588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="composePkt" ref="0x7e611b00" loc="151:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="composePkt" scoped="" ref="0x7e611b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e611cd8"/>
        <function-ref name="runTask" scoped="" ref="0x7e611db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ComposePacket" ref="0x7e6134f0" loc="120:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ComposePacket" scoped="" ref="0x7e6134f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e6136c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e6137a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e613888"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e613968"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e613a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DsrHeader" ref="0x7e628090" loc="97:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrHeader" scoped="" ref="0x7e628090"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvBlockPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7e628268"/>
        <function-ref name="length" scoped="" ref="0x7e628348"/>
        <function-ref name="add" scoped="" ref="0x7e628428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SourceRoute" ref="0x7e626328" loc="101:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceRoute" scoped="" ref="0x7e626328"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvSinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e626500"/>
        <function-ref name="remove" scoped="" ref="0x7e6265e0"/>
        <function-ref name="length" scoped="" ref="0x7e6266c0"/>
        <function-ref name="setLength" scoped="" ref="0x7e6267a0"/>
        <function-ref name="add" scoped="" ref="0x7e626880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DsrPacketEngine" ref="0x7e624738" loc="105:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrPacketEngine" scoped="" ref="0x7e624738"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7e624910"/>
        <function-ref name="send" scoped="" ref="0x7e6249f0"/>
        <function-ref name="receive" scoped="" ref="0x7e624ad0"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7e624bb0"/>
        <function-ref name="sendAdded" scoped="" ref="0x7e624c90"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7e624d70"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7e624e50"/>
        <function-ref name="packet" scoped="" ref="0x7e623010"/>
        <function-ref name="sendDone" scoped="" ref="0x7e6230f0"/>
        <function-ref name="drop" scoped="" ref="0x7e6231d0"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7e6232b0"/>
        <function-ref name="waitList" scoped="" ref="0x7e623390"/>
        <function-ref name="setUpperType" scoped="" ref="0x7e623470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SinglePacketWaitList" ref="0x7e6212f8" loc="107:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacketWaitList" scoped="" ref="0x7e6212f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e621c20"/>
        <function-ref name="next" scoped="" ref="0x7e6219a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SalvageRouteCache" ref="0x7e61b170" loc="111:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SalvageRouteCache" scoped="" ref="0x7e61b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteCache"/>
      </instance>
      <interface-functions>
        <function-ref name="removeLink" scoped="" ref="0x7e61b348"/>
        <function-ref name="routeUpdate" scoped="" ref="0x7e61b428"/>
        <function-ref name="addPath" scoped="" ref="0x7e61b508"/>
        <function-ref name="trackRoute" scoped="" ref="0x7e61b5e8"/>
        <function-ref name="checkRoute" scoped="" ref="0x7e61b6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compose" ref="0x7e613ba8" loc="122:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compose" scoped="" ref="0x7e613ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7e613e80"/>
        <function-ref name="clear" scoped="" ref="0x7e612010"/>
        <function-ref name="toggle" scoped="" ref="0x7e6120f0"/>
        <function-ref name="get" scoped="" ref="0x7e6121d0"/>
        <function-ref name="assign" scoped="" ref="0x7e6122b0"/>
        <function-ref name="setAll" scoped="" ref="0x7e612390"/>
        <function-ref name="set" scoped="" ref="0x7e612470"/>
        <function-ref name="size" scoped="" ref="0x7e612550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteError" ref="0x7e628c40" loc="99:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteError" scoped="" ref="0x7e628c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TlvMultiplePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="value" scoped="" ref="0x7e628e18"/>
        <function-ref name="list" scoped="" ref="0x7e628ef8"/>
        <function-ref name="remove" scoped="" ref="0x7e627010"/>
        <function-ref name="length" scoped="" ref="0x7e6270f0"/>
        <function-ref name="setLength" scoped="" ref="0x7e6271d0"/>
        <function-ref name="add" scoped="" ref="0x7e6272b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteNodeList" ref="0x7e61b8b8" loc="112:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteNodeList" scoped="" ref="0x7e61b8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e61a170"/>
        <function-ref name="next" scoped="" ref="0x7e61bee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteCache" ref="0x7e620a10" loc="110:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteCache" scoped="" ref="0x7e620a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteCache"/>
      </instance>
      <interface-functions>
        <function-ref name="removeLink" scoped="" ref="0x7e620be8"/>
        <function-ref name="routeUpdate" scoped="" ref="0x7e620cc8"/>
        <function-ref name="addPath" scoped="" ref="0x7e620da8"/>
        <function-ref name="trackRoute" scoped="" ref="0x7e620e88"/>
        <function-ref name="checkRoute" scoped="" ref="0x7e61b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DsrPacketWaitList" ref="0x7e621f08" loc="108:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DsrPacketWaitList" scoped="" ref="0x7e621f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7e6207d8"/>
        <function-ref name="next" scoped="" ref="0x7e620558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Salvage" ref="0x7e6126b0" loc="123:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Salvage" scoped="" ref="0x7e6126b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7e612888"/>
        <function-ref name="clear" scoped="" ref="0x7e612968"/>
        <function-ref name="toggle" scoped="" ref="0x7e612a48"/>
        <function-ref name="get" scoped="" ref="0x7e612b28"/>
        <function-ref name="assign" scoped="" ref="0x7e612c08"/>
        <function-ref name="setAll" scoped="" ref="0x7e612ce8"/>
        <function-ref name="set" scoped="" ref="0x7e612dc8"/>
        <function-ref name="size" scoped="" ref="0x7e612ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteRequestOutEqual" ref="0x7e62a410" loc="92:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteRequestOutEqual" scoped="" ref="0x7e62a410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7ea84c28"/>
              <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7ea83010"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e62aa38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e6148d0" loc="119:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e6148d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e614aa8"/>
        <function-ref name="source" scoped="" ref="0x7e614b88"/>
        <function-ref name="address" scoped="" ref="0x7e614c68"/>
        <function-ref name="destination" scoped="" ref="0x7e614d48"/>
        <function-ref name="setSource" scoped="" ref="0x7e614e28"/>
        <function-ref name="setDestination" scoped="" ref="0x7e614f08"/>
        <function-ref name="type" scoped="" ref="0x7e613010"/>
        <function-ref name="setType" scoped="" ref="0x7e6130f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7e6131d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7e6132b0"/>
        <function-ref name="localGroup" scoped="" ref="0x7e613390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Acks" ref="0x7e615d50" loc="117:../../../tos/lib/netarch/dsr/DsrControlP.nc">
      <component-ref qname="DsrP.DsrControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7e615d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7e615f28"/>
        <function-ref name="noAck" scoped="" ref="0x7e614018"/>
        <function-ref name="wasAcked" scoped="" ref="0x7e6140f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteCache" ref="0x7e606010" loc="43:../../../tos/lib/netarch/dsr/DsrRouteCacheC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteCache" scoped="" ref="0x7e606010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteCache"/>
      </instance>
      <interface-functions>
        <function-ref name="removeLink" scoped="" ref="0x7e6061e8"/>
        <function-ref name="routeUpdate" scoped="" ref="0x7e6062c8"/>
        <function-ref name="addPath" scoped="" ref="0x7e6063a8"/>
        <function-ref name="trackRoute" scoped="" ref="0x7e606488"/>
        <function-ref name="checkRoute" scoped="" ref="0x7e606568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteNodeList" ref="0x7e606758" loc="44:../../../tos/lib/netarch/dsr/DsrRouteCacheC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteNodeList" scoped="" ref="0x7e606758"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7dbf5010"/>
        <function-ref name="next" scoped="" ref="0x7e606d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteCache" ref="0x7d673298" loc="45:../../../tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteCache" scoped="" ref="0x7d673298"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteCache"/>
      </instance>
      <interface-functions>
        <function-ref name="removeLink" scoped="" ref="0x7d673470"/>
        <function-ref name="routeUpdate" scoped="" ref="0x7d673550"/>
        <function-ref name="addPath" scoped="" ref="0x7d673630"/>
        <function-ref name="trackRoute" scoped="" ref="0x7d673710"/>
        <function-ref name="checkRoute" scoped="" ref="0x7d6737f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteNodeList" ref="0x7d6739e0" loc="46:../../../tos/lib/netarch/dsr/SimpleLinkCacheC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteNodeList" scoped="" ref="0x7d6739e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d6722c8"/>
        <function-ref name="next" scoped="" ref="0x7d672048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Initial" ref="0x7e5f0188" loc="46:../../../tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Initial" scoped="" ref="0x7e5f0188"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7e5f0360"/>
        <function-ref name="clear" scoped="" ref="0x7e5f0440"/>
        <function-ref name="toggle" scoped="" ref="0x7e5f0520"/>
        <function-ref name="get" scoped="" ref="0x7e5f0600"/>
        <function-ref name="assign" scoped="" ref="0x7e5f06e0"/>
        <function-ref name="setAll" scoped="" ref="0x7e5f07c0"/>
        <function-ref name="set" scoped="" ref="0x7e5f08a0"/>
        <function-ref name="size" scoped="" ref="0x7e5f0980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7e5f1428" loc="44:../../../tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7e5f1428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7e5f1600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Graph" ref="0x7e5e0188" loc="48:../../../tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7e5e0188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7e5e0360"/>
        <function-ref name="removed" scoped="" ref="0x7e5e0440"/>
        <function-ref name="remove" scoped="" ref="0x7e5e0520"/>
        <function-ref name="edge" scoped="" ref="0x7e5e0600"/>
        <function-ref name="directed" scoped="" ref="0x7e5e06e0"/>
        <function-ref name="vertices" scoped="" ref="0x7e5e07c0"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7e5e08a0"/>
        <function-ref name="maxVertices" scoped="" ref="0x7e5e0980"/>
        <function-ref name="insert" scoped="" ref="0x7e5e0a60"/>
        <function-ref name="inserted" scoped="" ref="0x7e5e0b40"/>
        <function-ref name="edgeList" scoped="" ref="0x7e5e0c20"/>
        <function-ref name="edges" scoped="" ref="0x7e5e0d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SourceShortestPath" ref="0x7e5d55e0" loc="49:../../../tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceShortestPath" scoped="" ref="0x7e5d55e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SourceShortestPath"/>
      </instance>
      <interface-functions>
        <function-ref name="rebuildNeeded" scoped="" ref="0x7e5d57b8"/>
        <function-ref name="buildTree" scoped="" ref="0x7e5d5898"/>
        <function-ref name="builtTree" scoped="" ref="0x7e5d5978"/>
        <function-ref name="buildingTree" scoped="" ref="0x7e5d5a58"/>
        <function-ref name="edgeCount" scoped="" ref="0x7e5d5b38"/>
        <function-ref name="buildTreeTo" scoped="" ref="0x7e5d5c18"/>
        <function-ref name="builtTreeTo" scoped="" ref="0x7e5d5cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteCache" ref="0x7e5f2cd8" loc="42:../../../tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteCache" scoped="" ref="0x7e5f2cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteCache"/>
      </instance>
      <interface-functions>
        <function-ref name="removeLink" scoped="" ref="0x7e5f2eb0"/>
        <function-ref name="routeUpdate" scoped="" ref="0x7e5f1010"/>
        <function-ref name="addPath" scoped="" ref="0x7e5f10f0"/>
        <function-ref name="trackRoute" scoped="" ref="0x7e5f11d0"/>
        <function-ref name="checkRoute" scoped="" ref="0x7e5f12b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Track" ref="0x7e5f1778" loc="45:../../../tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Track" scoped="" ref="0x7e5f1778"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7e5f1950"/>
        <function-ref name="clear" scoped="" ref="0x7e5f1a30"/>
        <function-ref name="toggle" scoped="" ref="0x7e5f1b10"/>
        <function-ref name="get" scoped="" ref="0x7e5f1bf0"/>
        <function-ref name="assign" scoped="" ref="0x7e5f1cd0"/>
        <function-ref name="setAll" scoped="" ref="0x7e5f1db0"/>
        <function-ref name="set" scoped="" ref="0x7e5f1e90"/>
        <function-ref name="size" scoped="" ref="0x7e5f0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e5f0ad0" loc="47:../../../tos/lib/netarch/dsr/SimpleLinkCacheP.nc">
      <component-ref qname="SimpleLinkCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e5f0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e5f0ca8"/>
        <function-ref name="source" scoped="" ref="0x7e5f0d88"/>
        <function-ref name="address" scoped="" ref="0x7e5f0e68"/>
        <function-ref name="destination" scoped="" ref="0x7e5eb010"/>
        <function-ref name="setSource" scoped="" ref="0x7e5eb0f0"/>
        <function-ref name="setDestination" scoped="" ref="0x7e5eb1d0"/>
        <function-ref name="type" scoped="" ref="0x7e5eb2b0"/>
        <function-ref name="setType" scoped="" ref="0x7e5eb390"/>
        <function-ref name="isForMe" scoped="" ref="0x7e5eb470"/>
        <function-ref name="setGroup" scoped="" ref="0x7e5eb550"/>
        <function-ref name="localGroup" scoped="" ref="0x7e5eb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Graph" ref="0x7d671e28" loc="46:../../../tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7d671e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7d66f050"/>
        <function-ref name="removed" scoped="" ref="0x7d66f130"/>
        <function-ref name="remove" scoped="" ref="0x7d66f210"/>
        <function-ref name="edge" scoped="" ref="0x7d66f2f0"/>
        <function-ref name="directed" scoped="" ref="0x7d66f3d0"/>
        <function-ref name="vertices" scoped="" ref="0x7d66f4b0"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7d66f590"/>
        <function-ref name="maxVertices" scoped="" ref="0x7d66f670"/>
        <function-ref name="insert" scoped="" ref="0x7d66f750"/>
        <function-ref name="inserted" scoped="" ref="0x7d66f830"/>
        <function-ref name="edgeList" scoped="" ref="0x7d66f910"/>
        <function-ref name="edges" scoped="" ref="0x7d66f9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PathEdgeList" ref="0x7d66d4a0" loc="50:../../../tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PathEdgeList" scoped="" ref="0x7d66d4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d66dd48"/>
        <function-ref name="next" scoped="" ref="0x7d66dac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SourceShortestPath" ref="0x7d66eaf0" loc="49:../../../tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceShortestPath" scoped="" ref="0x7d66eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SourceShortestPath"/>
      </instance>
      <interface-functions>
        <function-ref name="rebuildNeeded" scoped="" ref="0x7d66ecc8"/>
        <function-ref name="buildTree" scoped="" ref="0x7d66eda8"/>
        <function-ref name="builtTree" scoped="" ref="0x7d66ee88"/>
        <function-ref name="buildingTree" scoped="" ref="0x7d66d010"/>
        <function-ref name="edgeCount" scoped="" ref="0x7d66d0f0"/>
        <function-ref name="buildTreeTo" scoped="" ref="0x7d66d1d0"/>
        <function-ref name="builtTreeTo" scoped="" ref="0x7d66d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdge" ref="0x7d66fb30" loc="47:../../../tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7d66fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7d66fd08"/>
        <function-ref name="dest" scoped="" ref="0x7d66fde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdgeList" ref="0x7d66e010" loc="48:../../../tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7d66e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d66e8b8"/>
        <function-ref name="next" scoped="" ref="0x7d66e638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeWeight" ref="0x7d66c058" loc="52:../../../tos/lib/data/graph/GraphWeightedC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d66c058"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7e5fac00"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="canChangeWeights" scoped="" ref="0x7d66c680"/>
        <function-ref name="weightChanged" scoped="" ref="0x7d66ce00"/>
        <function-ref name="setWeight" scoped="" ref="0x7d66cae0"/>
        <function-ref name="weight" scoped="" ref="0x7d66c860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Graph" ref="0x7d6607d0" loc="45:../../../tos/lib/data/graph/GraphSparseC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7d6607d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7d6609a8"/>
        <function-ref name="removed" scoped="" ref="0x7d660a88"/>
        <function-ref name="remove" scoped="" ref="0x7d660b68"/>
        <function-ref name="edge" scoped="" ref="0x7d660c48"/>
        <function-ref name="directed" scoped="" ref="0x7d660d28"/>
        <function-ref name="vertices" scoped="" ref="0x7d660e08"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7d660ee8"/>
        <function-ref name="maxVertices" scoped="" ref="0x7d652010"/>
        <function-ref name="insert" scoped="" ref="0x7d6520f0"/>
        <function-ref name="inserted" scoped="" ref="0x7d6521d0"/>
        <function-ref name="edgeList" scoped="" ref="0x7d6522b0"/>
        <function-ref name="edges" scoped="" ref="0x7d652390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdge" ref="0x7d6524d0" loc="46:../../../tos/lib/data/graph/GraphSparseC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7d6524d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7d6526a8"/>
        <function-ref name="dest" scoped="" ref="0x7d652788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdgeList" ref="0x7d652978" loc="47:../../../tos/lib/data/graph/GraphSparseC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7d652978"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d651290"/>
        <function-ref name="next" scoped="" ref="0x7d651010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IndexedAlloc" ref="0x7d646820" loc="42:../../../tos/lib/data/alloc/IndexedAllocC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IndexedAlloc" scoped="" ref="0x7d646820"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedAlloc"/>
      </instance>
      <interface-functions>
        <function-ref name="all" scoped="" ref="0x7d645010"/>
        <function-ref name="allocated" scoped="" ref="0x7d646ad8"/>
        <function-ref name="maxSize" scoped="" ref="0x7d646bb8"/>
        <function-ref name="alloc" scoped="" ref="0x7d646c98"/>
        <function-ref name="none" scoped="" ref="0x7d646d78"/>
        <function-ref name="free" scoped="" ref="0x7d646e58"/>
        <function-ref name="size" scoped="" ref="0x7d6469f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IndexedAlloc" ref="0x7d63e440" loc="40:../../../tos/lib/data/alloc/IndexedAllocBitsC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IndexedAlloc" scoped="" ref="0x7d63e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedAlloc"/>
      </instance>
      <interface-functions>
        <function-ref name="all" scoped="" ref="0x7d63eb58"/>
        <function-ref name="allocated" scoped="" ref="0x7d63e6f8"/>
        <function-ref name="maxSize" scoped="" ref="0x7d63e7d8"/>
        <function-ref name="alloc" scoped="" ref="0x7d63e8b8"/>
        <function-ref name="none" scoped="" ref="0x7d63e998"/>
        <function-ref name="free" scoped="" ref="0x7d63ea78"/>
        <function-ref name="size" scoped="" ref="0x7d63e618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d63b010" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d63b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d63b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7d63b348" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.Bits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7d63b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7d63b520"/>
        <function-ref name="clear" scoped="" ref="0x7d63b600"/>
        <function-ref name="toggle" scoped="" ref="0x7d63b6e0"/>
        <function-ref name="get" scoped="" ref="0x7d63b7c0"/>
        <function-ref name="assign" scoped="" ref="0x7d63b8a0"/>
        <function-ref name="setAll" scoped="" ref="0x7d63b980"/>
        <function-ref name="set" scoped="" ref="0x7d63ba60"/>
        <function-ref name="size" scoped="" ref="0x7d63bb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7d639070" loc="45:../../../tos/lib/data/alloc/IndexedAllocBitsP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7d639070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7d639248"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IndexedAlloc" ref="0x7d63a7b0" loc="43:../../../tos/lib/data/alloc/IndexedAllocBitsP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IndexedAlloc" scoped="" ref="0x7d63a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedAlloc"/>
      </instance>
      <interface-functions>
        <function-ref name="all" scoped="" ref="0x7d63aec8"/>
        <function-ref name="allocated" scoped="" ref="0x7d63aa68"/>
        <function-ref name="maxSize" scoped="" ref="0x7d63ab48"/>
        <function-ref name="alloc" scoped="" ref="0x7d63ac28"/>
        <function-ref name="none" scoped="" ref="0x7d63ad08"/>
        <function-ref name="free" scoped="" ref="0x7d63ade8"/>
        <function-ref name="size" scoped="" ref="0x7d63a988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BitVector" ref="0x7d639388" loc="46:../../../tos/lib/data/alloc/IndexedAllocBitsP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.IndexedAllocC.IndexedBits.IndexedBits"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7d639388"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7d639560"/>
        <function-ref name="clear" scoped="" ref="0x7d639640"/>
        <function-ref name="toggle" scoped="" ref="0x7d639720"/>
        <function-ref name="get" scoped="" ref="0x7d639800"/>
        <function-ref name="assign" scoped="" ref="0x7d6398e0"/>
        <function-ref name="setAll" scoped="" ref="0x7d6399c0"/>
        <function-ref name="set" scoped="" ref="0x7d639aa0"/>
        <function-ref name="size" scoped="" ref="0x7d639b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Graph" ref="0x7d644200" loc="45:../../../tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7d644200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7d6443d8"/>
        <function-ref name="removed" scoped="" ref="0x7d6444b8"/>
        <function-ref name="remove" scoped="" ref="0x7d644598"/>
        <function-ref name="edge" scoped="" ref="0x7d644678"/>
        <function-ref name="directed" scoped="" ref="0x7d644758"/>
        <function-ref name="vertices" scoped="" ref="0x7d644838"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7d644918"/>
        <function-ref name="maxVertices" scoped="" ref="0x7d6449f8"/>
        <function-ref name="insert" scoped="" ref="0x7d644ad8"/>
        <function-ref name="inserted" scoped="" ref="0x7d644bb8"/>
        <function-ref name="edgeList" scoped="" ref="0x7d644c98"/>
        <function-ref name="edges" scoped="" ref="0x7d644d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d645ed0" loc="44:../../../tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d645ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d6440c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IndexedAlloc" ref="0x7d642e90" loc="49:../../../tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IndexedAlloc" scoped="" ref="0x7d642e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedAlloc"/>
      </instance>
      <interface-functions>
        <function-ref name="all" scoped="" ref="0x7d6415c0"/>
        <function-ref name="allocated" scoped="" ref="0x7d641160"/>
        <function-ref name="maxSize" scoped="" ref="0x7d641240"/>
        <function-ref name="alloc" scoped="" ref="0x7d641320"/>
        <function-ref name="none" scoped="" ref="0x7d641400"/>
        <function-ref name="free" scoped="" ref="0x7d6414e0"/>
        <function-ref name="size" scoped="" ref="0x7d641080"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdge" ref="0x7d644eb8" loc="46:../../../tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7d644eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7d6420c0"/>
        <function-ref name="dest" scoped="" ref="0x7d6421a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdgeList" ref="0x7d642390" loc="47:../../../tos/lib/data/graph/GraphSparseP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.GraphSparseC.GraphSparseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7d642390"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d642c38"/>
        <function-ref name="next" scoped="" ref="0x7d6429b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Graph" ref="0x7d64e7b0" loc="45:../../../tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7d64e7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7d64e988"/>
        <function-ref name="removed" scoped="" ref="0x7d64ea68"/>
        <function-ref name="remove" scoped="" ref="0x7d64eb48"/>
        <function-ref name="edge" scoped="" ref="0x7d64ec28"/>
        <function-ref name="directed" scoped="" ref="0x7d64ed08"/>
        <function-ref name="vertices" scoped="" ref="0x7d64ede8"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7d64eec8"/>
        <function-ref name="maxVertices" scoped="" ref="0x7d64d010"/>
        <function-ref name="insert" scoped="" ref="0x7d64d0f0"/>
        <function-ref name="inserted" scoped="" ref="0x7d64d1d0"/>
        <function-ref name="edgeList" scoped="" ref="0x7d64d2b0"/>
        <function-ref name="edges" scoped="" ref="0x7d64d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PathEdgeList" ref="0x7d650c88" loc="42:../../../tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PathEdgeList" scoped="" ref="0x7d650c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d64e548"/>
        <function-ref name="next" scoped="" ref="0x7d64e2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SourceShortestPath" ref="0x7d650380" loc="41:../../../tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceShortestPath" scoped="" ref="0x7d650380"/></type-interface>
      <instance>
        <interfacedef-ref qname="SourceShortestPath"/>
      </instance>
      <interface-functions>
        <function-ref name="rebuildNeeded" scoped="" ref="0x7d650558"/>
        <function-ref name="buildTree" scoped="" ref="0x7d650638"/>
        <function-ref name="builtTree" scoped="" ref="0x7d650718"/>
        <function-ref name="buildingTree" scoped="" ref="0x7d6507f8"/>
        <function-ref name="edgeCount" scoped="" ref="0x7d6508d8"/>
        <function-ref name="buildTreeTo" scoped="" ref="0x7d6509b8"/>
        <function-ref name="builtTreeTo" scoped="" ref="0x7d650a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdge" ref="0x7d64d4d0" loc="46:../../../tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7d64d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7d64d6a8"/>
        <function-ref name="dest" scoped="" ref="0x7d64d788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeWeight" ref="0x7d64d958" loc="47:../../../tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d64d958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7e5fac00"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="canChangeWeights" scoped="" ref="0x7d64c010"/>
        <function-ref name="weightChanged" scoped="" ref="0x7d64c790"/>
        <function-ref name="setWeight" scoped="" ref="0x7d64c470"/>
        <function-ref name="weight" scoped="" ref="0x7d64c1f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeList" ref="0x7d64ca78" loc="48:../../../tos/lib/data/graph/SourceShortestPathC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7d64ca78"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d64b338"/>
        <function-ref name="next" scoped="" ref="0x7d64b0b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PriorityQueue" ref="0x7d601ba0" loc="41:../../../tos/lib/data/queue/PriorityQueueC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PriorityQueue" scoped="" ref="0x7d601ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PriorityQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d601d78"/>
        <function-ref name="findBest" scoped="" ref="0x7d601e58"/>
        <function-ref name="maxSize" scoped="" ref="0x7d5fe010"/>
        <function-ref name="insert" scoped="" ref="0x7d5fe0f0"/>
        <function-ref name="moveUp" scoped="" ref="0x7d5fe1d0"/>
        <function-ref name="move" scoped="" ref="0x7d5fe2b0"/>
        <function-ref name="inserted" scoped="" ref="0x7d5fe390"/>
        <function-ref name="moveDown" scoped="" ref="0x7d5fe470"/>
        <function-ref name="empty" scoped="" ref="0x7d5fe550"/>
        <function-ref name="removeBest" scoped="" ref="0x7d5fe630"/>
        <function-ref name="size" scoped="" ref="0x7d5fe710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7d5fe900" loc="42:../../../tos/lib/data/queue/PriorityQueueC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7d5fe900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7e521270"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d5fef28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d5f0760" loc="46:../../../tos/lib/data/queue/PriorityQueueP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d5f0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d5f0938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PriorityQueue" ref="0x7d5f0a78" loc="47:../../../tos/lib/data/queue/PriorityQueueP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PriorityQueue" scoped="" ref="0x7d5f0a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PriorityQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d5f0c50"/>
        <function-ref name="findBest" scoped="" ref="0x7d5f0d30"/>
        <function-ref name="maxSize" scoped="" ref="0x7d5f0e10"/>
        <function-ref name="insert" scoped="" ref="0x7d5f0ef0"/>
        <function-ref name="moveUp" scoped="" ref="0x7d5e2010"/>
        <function-ref name="move" scoped="" ref="0x7d5e20f0"/>
        <function-ref name="inserted" scoped="" ref="0x7d5e21d0"/>
        <function-ref name="moveDown" scoped="" ref="0x7d5e22b0"/>
        <function-ref name="empty" scoped="" ref="0x7d5e2390"/>
        <function-ref name="removeBest" scoped="" ref="0x7d5e2470"/>
        <function-ref name="size" scoped="" ref="0x7d5e2550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7d5e2740" loc="49:../../../tos/lib/data/queue/PriorityQueueP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.PriorityQueueC.PriorityQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7d5e2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7e521270"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d5e2d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeList" ref="0x7d5f7e58" loc="53:../../../tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeList" scoped="" ref="0x7d5f7e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d5f6738"/>
        <function-ref name="next" scoped="" ref="0x7d5f64b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="buildTreeTask" ref="0x7d5f69b0" loc="84:../../../tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="buildTreeTask" scoped="" ref="0x7d5f69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d5f6b88"/>
        <function-ref name="runTask" scoped="" ref="0x7d5f6c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Graph" ref="0x7d5fac48" loc="50:../../../tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Graph" scoped="" ref="0x7d5fac48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Graph"/>
      </instance>
      <interface-functions>
        <function-ref name="maxEdges" scoped="" ref="0x7d5fae20"/>
        <function-ref name="removed" scoped="" ref="0x7d5faf00"/>
        <function-ref name="remove" scoped="" ref="0x7d5f9010"/>
        <function-ref name="edge" scoped="" ref="0x7d5f90f0"/>
        <function-ref name="directed" scoped="" ref="0x7d5f91d0"/>
        <function-ref name="vertices" scoped="" ref="0x7d5f92b0"/>
        <function-ref name="parallelEdges" scoped="" ref="0x7d5f9390"/>
        <function-ref name="maxVertices" scoped="" ref="0x7d5f9470"/>
        <function-ref name="insert" scoped="" ref="0x7d5f9550"/>
        <function-ref name="inserted" scoped="" ref="0x7d5f9630"/>
        <function-ref name="edgeList" scoped="" ref="0x7d5f9710"/>
        <function-ref name="edges" scoped="" ref="0x7d5f97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PathEdgeList" ref="0x7d5fcb28" loc="45:../../../tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PathEdgeList" scoped="" ref="0x7d5fcb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7d5fb460"/>
        <function-ref name="next" scoped="" ref="0x7d5fb1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d5fdef0" loc="43:../../../tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d5fdef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d5fc0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SourceShortestPath" ref="0x7d5fc220" loc="44:../../../tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SourceShortestPath" scoped="" ref="0x7d5fc220"/></type-interface>
      <instance>
        <interfacedef-ref qname="SourceShortestPath"/>
      </instance>
      <interface-functions>
        <function-ref name="rebuildNeeded" scoped="" ref="0x7d5fc3f8"/>
        <function-ref name="buildTree" scoped="" ref="0x7d5fc4d8"/>
        <function-ref name="builtTree" scoped="" ref="0x7d5fc5b8"/>
        <function-ref name="buildingTree" scoped="" ref="0x7d5fc698"/>
        <function-ref name="edgeCount" scoped="" ref="0x7d5fc778"/>
        <function-ref name="buildTreeTo" scoped="" ref="0x7d5fc858"/>
        <function-ref name="builtTreeTo" scoped="" ref="0x7d5fc938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdge" ref="0x7d5f9930" loc="51:../../../tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdge" scoped="" ref="0x7d5f9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdge"/>
      </instance>
      <interface-functions>
        <function-ref name="src" scoped="" ref="0x7d5f9b08"/>
        <function-ref name="dest" scoped="" ref="0x7d5f9be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PriorityQueue" ref="0x7d5fa070" loc="49:../../../tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PriorityQueue" scoped="" ref="0x7d5fa070"/></type-interface>
      <instance>
        <interfacedef-ref qname="PriorityQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d5fa248"/>
        <function-ref name="findBest" scoped="" ref="0x7d5fa328"/>
        <function-ref name="maxSize" scoped="" ref="0x7d5fa408"/>
        <function-ref name="insert" scoped="" ref="0x7d5fa4e8"/>
        <function-ref name="moveUp" scoped="" ref="0x7d5fa5c8"/>
        <function-ref name="move" scoped="" ref="0x7d5fa6a8"/>
        <function-ref name="inserted" scoped="" ref="0x7d5fa788"/>
        <function-ref name="moveDown" scoped="" ref="0x7d5fa868"/>
        <function-ref name="empty" scoped="" ref="0x7d5fa948"/>
        <function-ref name="removeBest" scoped="" ref="0x7d5faa28"/>
        <function-ref name="size" scoped="" ref="0x7d5fab08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7d5fb728" loc="46:../../../tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7d5fb728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d5fbd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GraphEdgeWeight" ref="0x7d5f9db8" loc="52:../../../tos/lib/data/graph/SourceShortestPathP.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.GraphWeightedC.SourceShortestPathC.SourceShortestPathP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7d5f9db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7e5fac00"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="canChangeWeights" scoped="" ref="0x7d5f73f0"/>
        <function-ref name="weightChanged" scoped="" ref="0x7d5f7b70"/>
        <function-ref name="setWeight" scoped="" ref="0x7d5f7850"/>
        <function-ref name="weight" scoped="" ref="0x7d5f75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d66a1e8" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.TrackC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d66a1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d66a3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7d66a520" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.TrackC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7d66a520"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7d66a6f8"/>
        <function-ref name="clear" scoped="" ref="0x7d66a7d8"/>
        <function-ref name="toggle" scoped="" ref="0x7d66a8b8"/>
        <function-ref name="get" scoped="" ref="0x7d66a998"/>
        <function-ref name="assign" scoped="" ref="0x7d66aa78"/>
        <function-ref name="setAll" scoped="" ref="0x7d66ab58"/>
        <function-ref name="set" scoped="" ref="0x7d66ac38"/>
        <function-ref name="size" scoped="" ref="0x7d66ad18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d6699f8" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.InitialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d6699f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d669bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7d669d30" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.DsrRouteCacheC.SimpleLinkCacheC.InitialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7d669d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7d669f08"/>
        <function-ref name="clear" scoped="" ref="0x7d667010"/>
        <function-ref name="toggle" scoped="" ref="0x7d6670f0"/>
        <function-ref name="get" scoped="" ref="0x7d6671d0"/>
        <function-ref name="assign" scoped="" ref="0x7d6672b0"/>
        <function-ref name="setAll" scoped="" ref="0x7d667390"/>
        <function-ref name="set" scoped="" ref="0x7d667470"/>
        <function-ref name="size" scoped="" ref="0x7d667550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GraphEdgeWeight" ref="0x7e400b58" loc="41:../../../tos/lib/data/graph/GraphEdgeUnitWeightC.nc">
      <component-ref qname="GraphEdgeUnitWeightC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GraphEdgeWeight" scoped="" ref="0x7e400b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_unit_weight_t" ref="0x7e5fac00"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="canChangeWeights" scoped="" ref="0x7e3fd1e0"/>
        <function-ref name="weightChanged" scoped="" ref="0x7e3fd960"/>
        <function-ref name="setWeight" scoped="" ref="0x7e3fd640"/>
        <function-ref name="weight" scoped="" ref="0x7e3fd3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e3f73f0" loc="49:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e3f73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e3f75c8"/>
        <function-ref name="stopDone" scoped="" ref="0x7e3f76a8"/>
        <function-ref name="start" scoped="" ref="0x7e3f7788"/>
        <function-ref name="stop" scoped="" ref="0x7e3f7868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e3f7c40" loc="51:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e3f7c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e3f7e18"/>
        <function-ref name="getPayload" scoped="" ref="0x7e3f7ef8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e3f6010"/>
        <function-ref name="cancel" scoped="" ref="0x7e3f60f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e3f61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7e3f6b80" loc="53:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7e3f6b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e3f6d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e3f6ea0" loc="55:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e3f6ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e3f40c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e3f41a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e3f4280"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e3f4360"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e3f4440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e3f65a8" loc="52:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e3f65a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e3f6780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7e3f3248" loc="57:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e3f3248"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7e3f3420"/>
        <function-ref name="noAck" scoped="" ref="0x7e3f3500"/>
        <function-ref name="wasAcked" scoped="" ref="0x7e3f35e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e3f4590" loc="56:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e3f4590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e3f4768"/>
        <function-ref name="source" scoped="" ref="0x7e3f4848"/>
        <function-ref name="address" scoped="" ref="0x7e3f4928"/>
        <function-ref name="destination" scoped="" ref="0x7e3f4a08"/>
        <function-ref name="setSource" scoped="" ref="0x7e3f4ae8"/>
        <function-ref name="setDestination" scoped="" ref="0x7e3f4bc8"/>
        <function-ref name="type" scoped="" ref="0x7e3f4ca8"/>
        <function-ref name="setType" scoped="" ref="0x7e3f4d88"/>
        <function-ref name="isForMe" scoped="" ref="0x7e3f4e68"/>
        <function-ref name="setGroup" scoped="" ref="0x7e3f3010"/>
        <function-ref name="localGroup" scoped="" ref="0x7e3f30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e3ed010" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e3ed010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e3ed1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x7e3ed2c8"/>
        <function-ref name="start" scoped="" ref="0x7e3ed3a8"/>
        <function-ref name="stop" scoped="" ref="0x7e3ed488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7e3e0298" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7e3e0298"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7e3e0470"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7e3e0550"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7e3e0630"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7e3e0710"/>
        <function-ref name="setCca" scoped="" ref="0x7e3e07f0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7e3e08d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e3ed860" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e3ed860"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e3eda38"/>
        <function-ref name="getPayload" scoped="" ref="0x7e3edb18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e3edbf8"/>
        <function-ref name="cancel" scoped="" ref="0x7e3edcd8"/>
        <function-ref name="sendDone" scoped="" ref="0x7e3eddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7e3ec780" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7e3ec780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e3ec958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e3eb6a0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e3eb6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e3eb878"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e3eb958"/>
        <function-ref name="getPayload" scoped="" ref="0x7e3eba38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e3ebb18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e3ebbf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7e3e4bd8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7e3e4bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7e3e4db0"/>
        <function-ref name="getRssi" scoped="" ref="0x7e3e4e90"/>
        <function-ref name="getPower" scoped="" ref="0x7e3e8010"/>
        <function-ref name="getLqi" scoped="" ref="0x7e3e80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7e3d3610" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7e3d3610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x7e3d37e8"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x7e3d38c8"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x7e3d39a8"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x7e3d3a88"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x7e3d3b68"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x7e3d3c48"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x7e3d3d28"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x7e3d3e08"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x7e3d3ee8"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x7e3da010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e3ec1a8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e3ec1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e3ec380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7e3e8248" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e3e8248"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7e3e8420"/>
        <function-ref name="noAck" scoped="" ref="0x7e3e8500"/>
        <function-ref name="wasAcked" scoped="" ref="0x7e3e85e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7e3cda78" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7e3cda78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7e3cdc50"/>
        <function-ref name="setRetries" scoped="" ref="0x7e3cdd30"/>
        <function-ref name="getRetries" scoped="" ref="0x7e3cde10"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7e3cdef0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7e3d2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e3ecaa8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e3ecaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e3ecc80"/>
        <function-ref name="source" scoped="" ref="0x7e3ecd60"/>
        <function-ref name="address" scoped="" ref="0x7e3ece40"/>
        <function-ref name="destination" scoped="" ref="0x7e3ecf20"/>
        <function-ref name="setSource" scoped="" ref="0x7e3eb018"/>
        <function-ref name="setDestination" scoped="" ref="0x7e3eb0f8"/>
        <function-ref name="type" scoped="" ref="0x7e3eb1d8"/>
        <function-ref name="setType" scoped="" ref="0x7e3eb2b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7e3eb398"/>
        <function-ref name="setGroup" scoped="" ref="0x7e3eb478"/>
        <function-ref name="localGroup" scoped="" ref="0x7e3eb558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7e3e1a50" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7e3e1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7e3e1c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7e3c08a8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7e3c08a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e3c0a80"/>
        <function-ref name="getPayload" scoped="" ref="0x7e3c0b60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e3c0c40"/>
        <function-ref name="cancel" scoped="" ref="0x7e3c0d20"/>
        <function-ref name="sendDone" scoped="" ref="0x7e3c0e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7e3c4010" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7e3c4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e3c41e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7e3b4a60" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e3b4a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7e3b4c38"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7e3b4d18"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7e3b4df8"/>
        <function-ref name="syncDone" scoped="" ref="0x7e3b4ed8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e3bd010"/>
        <function-ref name="setChannel" scoped="" ref="0x7e3bd0f0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7e3bd1d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e3bd2b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7e3bd390"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e3bd470"/>
        <function-ref name="sync" scoped="" ref="0x7e3bd550"/>
        <function-ref name="getChannel" scoped="" ref="0x7e3bd630"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e3bd710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e3ca7a8" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e3ca7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e3ca980"/>
        <function-ref name="getPayload" scoped="" ref="0x7e3caa60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e3cab40"/>
        <function-ref name="cancel" scoped="" ref="0x7e3cac20"/>
        <function-ref name="sendDone" scoped="" ref="0x7e3cad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7e3c96d8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7e3c96d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e3c98b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e3c8698" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e3c8698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e3c8870"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e3c8950"/>
        <function-ref name="getPayload" scoped="" ref="0x7e3c8a30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e3c8b10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e3c8bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7e3c4338" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7e3c4338"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7e3c4510"/>
        <function-ref name="getRssi" scoped="" ref="0x7e3c45f0"/>
        <function-ref name="getPower" scoped="" ref="0x7e3c46d0"/>
        <function-ref name="getLqi" scoped="" ref="0x7e3c47b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7e3ba078" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e3ba078"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7e3ba250"/>
        <function-ref name="getMetadata" scoped="" ref="0x7e3ba330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e3c9100" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e3c9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e3c92d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7e3b0a68" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e3b0a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7e3b0c40"/>
        <function-ref name="changed" scoped="" ref="0x7e3b0d20"/>
        <function-ref name="amGroup" scoped="" ref="0x7e3b0e00"/>
        <function-ref name="setAddress" scoped="" ref="0x7e3b0ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e3c9a00" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e3c9a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e3c9bd8"/>
        <function-ref name="source" scoped="" ref="0x7e3c9cb8"/>
        <function-ref name="address" scoped="" ref="0x7e3c9d98"/>
        <function-ref name="destination" scoped="" ref="0x7e3c9e78"/>
        <function-ref name="setSource" scoped="" ref="0x7e3c8010"/>
        <function-ref name="setDestination" scoped="" ref="0x7e3c80f0"/>
        <function-ref name="type" scoped="" ref="0x7e3c81d0"/>
        <function-ref name="setType" scoped="" ref="0x7e3c82b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7e3c8390"/>
        <function-ref name="setGroup" scoped="" ref="0x7e3c8470"/>
        <function-ref name="localGroup" scoped="" ref="0x7e3c8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e385de0" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e385de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e384010"/>
        <function-ref name="stopDone" scoped="" ref="0x7e3840f0"/>
        <function-ref name="start" scoped="" ref="0x7e3841d0"/>
        <function-ref name="stop" scoped="" ref="0x7e3842b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7e383100" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7e383100"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7e3832d8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7e3833b8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7e383498"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7e383578"/>
        <function-ref name="setCca" scoped="" ref="0x7e383658"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7e383738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e384418" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e384418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e3845f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e3846d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e3847b0"/>
        <function-ref name="cancel" scoped="" ref="0x7e384890"/>
        <function-ref name="sendDone" scoped="" ref="0x7e384970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e384ad8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e384ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e384cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e37e658" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e37e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e37e830"/>
        <function-ref name="stopDone" scoped="" ref="0x7e37e910"/>
        <function-ref name="start" scoped="" ref="0x7e37e9f0"/>
        <function-ref name="stop" scoped="" ref="0x7e37ead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7e37d5d0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7e37d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7e37d7a8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7e37d888"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7e37d968"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7e37da48"/>
        <function-ref name="setCca" scoped="" ref="0x7e37db28"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7e37dc08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7e36ab50" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7e36ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7e36ad28"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7e36ae08"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7e36aee8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7e370010"/>
        <function-ref name="setCca" scoped="" ref="0x7e3700f0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7e3701d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7e369040" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7e369040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7e369218"/>
        <function-ref name="getRssi" scoped="" ref="0x7e3692f8"/>
        <function-ref name="getPower" scoped="" ref="0x7e3693d8"/>
        <function-ref name="getLqi" scoped="" ref="0x7e3694b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7e36a458" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7e36a458"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e36a630"/>
        <function-ref name="cancel" scoped="" ref="0x7e36a710"/>
        <function-ref name="modify" scoped="" ref="0x7e36a7f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e36a8d0"/>
        <function-ref name="resend" scoped="" ref="0x7e36a9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e37ec38" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e37ec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e37ee10"/>
        <function-ref name="getPayload" scoped="" ref="0x7e37eef0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e37d010"/>
        <function-ref name="cancel" scoped="" ref="0x7e37d0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e37d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7e370338" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e370338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e370510"/>
        <function-ref name="rand32" scoped="" ref="0x7e3705f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7e371d20" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7e371d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e371ef8"/>
        <function-ref name="stop" scoped="" ref="0x7e378010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7e369630" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7e369630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7e369888"/>
        <function-ref name="getMetadata" scoped="" ref="0x7e369968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7e371388" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e371388"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e371560"/>
        <function-ref name="rfOff" scoped="" ref="0x7e371640"/>
        <function-ref name="rxOn" scoped="" ref="0x7e371720"/>
        <function-ref name="startVReg" scoped="" ref="0x7e371800"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e3718e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e3719c0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e371aa0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e371b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e36e418" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e36e418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e36e5f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e36e6d0"/>
        <function-ref name="led1On" scoped="" ref="0x7e36e7b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e36e890"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e36e970"/>
        <function-ref name="get" scoped="" ref="0x7e36ea50"/>
        <function-ref name="led1Off" scoped="" ref="0x7e36eb30"/>
        <function-ref name="led2Off" scoped="" ref="0x7e36eeb0"/>
        <function-ref name="set" scoped="" ref="0x7e36ec10"/>
        <function-ref name="led0On" scoped="" ref="0x7e36ecf0"/>
        <function-ref name="led2On" scoped="" ref="0x7e36edd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7e376188" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e376188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e376360"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e376440"/>
        <function-ref name="request" scoped="" ref="0x7e376520"/>
        <function-ref name="granted" scoped="" ref="0x7e376600"/>
        <function-ref name="isOwner" scoped="" ref="0x7e3766e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7e369b08" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x7e369b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7e369ce0"/>
        <function-ref name="toIdle" scoped="" ref="0x7e369dc0"/>
        <function-ref name="isState" scoped="" ref="0x7e369ea0"/>
        <function-ref name="isIdle" scoped="" ref="0x7e368010"/>
        <function-ref name="requestState" scoped="" ref="0x7e3680f0"/>
        <function-ref name="forceState" scoped="" ref="0x7e3681d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e370760" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e370760"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e370938"/>
        <function-ref name="source" scoped="" ref="0x7e370a18"/>
        <function-ref name="address" scoped="" ref="0x7e370af8"/>
        <function-ref name="destination" scoped="" ref="0x7e370bd8"/>
        <function-ref name="setSource" scoped="" ref="0x7e370cb8"/>
        <function-ref name="setDestination" scoped="" ref="0x7e370d98"/>
        <function-ref name="type" scoped="" ref="0x7e370e78"/>
        <function-ref name="setType" scoped="" ref="0x7e36e010"/>
        <function-ref name="isForMe" scoped="" ref="0x7e36e0f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7e36e1d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7e36e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7e366660" loc="78:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x7e366660"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e366838"/>
        <function-ref name="runTask" scoped="" ref="0x7e366918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7e367f10" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x7e367f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e366108"/>
        <function-ref name="runTask" scoped="" ref="0x7e3661e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7e3675c0" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x7e3675c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e367798"/>
        <function-ref name="runTask" scoped="" ref="0x7e367878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7e33a010" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e33a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7e33a1e8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7e33a2c8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7e33a3a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7e33a488"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e33a568"/>
        <function-ref name="setChannel" scoped="" ref="0x7e33a648"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7e33a728"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e33a808"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7e33a8e8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e33a9c8"/>
        <function-ref name="sync" scoped="" ref="0x7e33aaa8"/>
        <function-ref name="getChannel" scoped="" ref="0x7e33ab88"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e33ac68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7e334348" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7e334348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e334970"/>
        <function-ref name="readDone" scoped="" ref="0x7e334b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7e33ae58" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e33ae58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e339050"/>
        <function-ref name="rfOff" scoped="" ref="0x7e339130"/>
        <function-ref name="rxOn" scoped="" ref="0x7e339210"/>
        <function-ref name="startVReg" scoped="" ref="0x7e3392f0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e3393d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e3394b0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e339590"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e339670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e33b8b0" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e33b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e33ba88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e33bb68"/>
        <function-ref name="request" scoped="" ref="0x7e33bc48"/>
        <function-ref name="granted" scoped="" ref="0x7e33bd28"/>
        <function-ref name="isOwner" scoped="" ref="0x7e33be08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7e331b38" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e331b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7e331d10"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7e331df0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7e331ed0"/>
        <function-ref name="syncDone" scoped="" ref="0x7e330010"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e3300f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7e3301d0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7e3302b0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e330390"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7e330470"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e330550"/>
        <function-ref name="sync" scoped="" ref="0x7e330630"/>
        <function-ref name="getChannel" scoped="" ref="0x7e330710"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e3307f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7e319288" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7e319288"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e319460"/>
        <function-ref name="write" scoped="" ref="0x7e319540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7e3279d0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x7e3279d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e32bde0"/>
        <function-ref name="fired" scoped="" ref="0x7e32b6a0"/>
        <function-ref name="startAt" scoped="" ref="0x7e32baa0"/>
        <function-ref name="isRunning" scoped="" ref="0x7e32b8a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e326010"/>
        <function-ref name="start" scoped="" ref="0x7e32b200"/>
        <function-ref name="stop" scoped="" ref="0x7e32b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7e31a950" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7e31a950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e31ab28"/>
        <function-ref name="write" scoped="" ref="0x7e31ac08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7e326b90" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7e326b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e326d68"/>
        <function-ref name="isInput" scoped="" ref="0x7e326e48"/>
        <function-ref name="toggle" scoped="" ref="0x7e326f28"/>
        <function-ref name="isOutput" scoped="" ref="0x7e325018"/>
        <function-ref name="get" scoped="" ref="0x7e3250f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3251d8"/>
        <function-ref name="set" scoped="" ref="0x7e3252b8"/>
        <function-ref name="clr" scoped="" ref="0x7e325398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7e32f4e8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7e32f4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e32fb10"/>
        <function-ref name="readDone" scoped="" ref="0x7e32fcf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7e30ed28" loc="113:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x7e30ed28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e30ef00"/>
        <function-ref name="runTask" scoped="" ref="0x7e30d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7e3196d8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7e3196d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3198b0"/>
        <function-ref name="write" scoped="" ref="0x7e319990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7e31a0a8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7e31a0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e31a280"/>
        <function-ref name="write" scoped="" ref="0x7e31a360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7e322010" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7e322010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7e3221e8"/>
        <function-ref name="changed" scoped="" ref="0x7e3222c8"/>
        <function-ref name="amGroup" scoped="" ref="0x7e3223a8"/>
        <function-ref name="setAddress" scoped="" ref="0x7e322488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7e326200" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7e326200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3263d8"/>
        <function-ref name="isInput" scoped="" ref="0x7e3264b8"/>
        <function-ref name="toggle" scoped="" ref="0x7e326598"/>
        <function-ref name="isOutput" scoped="" ref="0x7e326678"/>
        <function-ref name="get" scoped="" ref="0x7e326758"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e326838"/>
        <function-ref name="set" scoped="" ref="0x7e326918"/>
        <function-ref name="clr" scoped="" ref="0x7e3269f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7e3138a8" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7e3138a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e313a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7e325530" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7e325530"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e325708"/>
        <function-ref name="isInput" scoped="" ref="0x7e3257e8"/>
        <function-ref name="toggle" scoped="" ref="0x7e3258c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3259a8"/>
        <function-ref name="get" scoped="" ref="0x7e325a88"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e325b68"/>
        <function-ref name="set" scoped="" ref="0x7e325c48"/>
        <function-ref name="clr" scoped="" ref="0x7e325d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e331128" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e331128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e331300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7e31ada8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e31ada8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e319010"/>
        <function-ref name="write" scoped="" ref="0x7e3190f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7e313c18" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7e313c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e313df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7e316c48" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7e316c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e316f20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e315018"/>
        <function-ref name="request" scoped="" ref="0x7e3150f8"/>
        <function-ref name="granted" scoped="" ref="0x7e3151d8"/>
        <function-ref name="isOwner" scoped="" ref="0x7e3152b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7e315b50" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x7e315b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e315d28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e315e08"/>
        <function-ref name="request" scoped="" ref="0x7e315ee8"/>
        <function-ref name="granted" scoped="" ref="0x7e311010"/>
        <function-ref name="isOwner" scoped="" ref="0x7e3110f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7e3309e0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e3309e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e330bb8"/>
        <function-ref name="rfOff" scoped="" ref="0x7e330c98"/>
        <function-ref name="rxOn" scoped="" ref="0x7e330d78"/>
        <function-ref name="startVReg" scoped="" ref="0x7e330e58"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e32f010"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e32f0f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e32f1d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e32f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7e31a4f8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7e31a4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e31a6d0"/>
        <function-ref name="write" scoped="" ref="0x7e31a7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7e318bb8" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7e318bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e318e10"/>
        <function-ref name="write" scoped="" ref="0x7e318ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7e3131c0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7e3131c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e313398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e311258" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e311258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e311430"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e311510"/>
        <function-ref name="led1On" scoped="" ref="0x7e3115f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e3116d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e3117b0"/>
        <function-ref name="get" scoped="" ref="0x7e311890"/>
        <function-ref name="led1Off" scoped="" ref="0x7e311970"/>
        <function-ref name="led2Off" scoped="" ref="0x7e311cf0"/>
        <function-ref name="set" scoped="" ref="0x7e311a50"/>
        <function-ref name="led0On" scoped="" ref="0x7e311b30"/>
        <function-ref name="led2On" scoped="" ref="0x7e311c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7e30e5f8" loc="112:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x7e30e5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e30e7d0"/>
        <function-ref name="runTask" scoped="" ref="0x7e30e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e331470" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e331470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e331648"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e331728"/>
        <function-ref name="request" scoped="" ref="0x7e331808"/>
        <function-ref name="granted" scoped="" ref="0x7e3318e8"/>
        <function-ref name="isOwner" scoped="" ref="0x7e3319c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7e31b9c0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7e31b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e31bb98"/>
        <function-ref name="write" scoped="" ref="0x7e31bc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7e3209b0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7e3209b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e320b88"/>
        <function-ref name="disable" scoped="" ref="0x7e320c68"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e320d48"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e320e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e316010" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e316010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7e3161e8"/>
        <function-ref name="source" scoped="" ref="0x7e3162c8"/>
        <function-ref name="address" scoped="" ref="0x7e3163a8"/>
        <function-ref name="destination" scoped="" ref="0x7e316488"/>
        <function-ref name="setSource" scoped="" ref="0x7e316568"/>
        <function-ref name="setDestination" scoped="" ref="0x7e316648"/>
        <function-ref name="type" scoped="" ref="0x7e316728"/>
        <function-ref name="setType" scoped="" ref="0x7e316808"/>
        <function-ref name="isForMe" scoped="" ref="0x7e3168e8"/>
        <function-ref name="setGroup" scoped="" ref="0x7e3169c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7e316aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7e315458" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x7e315458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e315630"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e315710"/>
        <function-ref name="request" scoped="" ref="0x7e3157f0"/>
        <function-ref name="granted" scoped="" ref="0x7e3158d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7e3159b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7e313530" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7e313530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e313708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e2c74c8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e2c74c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e2c76a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7e2c7970" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x7e2c7970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e2c6cb8"/>
        <function-ref name="fired" scoped="" ref="0x7e2c6578"/>
        <function-ref name="startAt" scoped="" ref="0x7e2c6978"/>
        <function-ref name="isRunning" scoped="" ref="0x7e2c6778"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e2c6eb8"/>
        <function-ref name="start" scoped="" ref="0x7e2c60d8"/>
        <function-ref name="stop" scoped="" ref="0x7e2c6378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7e2c2c90" loc="67:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7e2c2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e066010"/>
        <function-ref name="fired" scoped="" ref="0x7e2c1890"/>
        <function-ref name="startAt" scoped="" ref="0x7e2c1c90"/>
        <function-ref name="isRunning" scoped="" ref="0x7e2c1a90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e066210"/>
        <function-ref name="start" scoped="" ref="0x7e2c13f0"/>
        <function-ref name="stop" scoped="" ref="0x7e2c1690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e0663c8" loc="68:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e0663c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e0665a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d5964c0" loc="28:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d5964c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d594818"/>
        <function-ref name="fired" scoped="" ref="0x7d5940d8"/>
        <function-ref name="startAt" scoped="" ref="0x7d5944d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7d5942d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d594a18"/>
        <function-ref name="start" scoped="" ref="0x7d596c10"/>
        <function-ref name="stop" scoped="" ref="0x7d596eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d592010" loc="30:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d592010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d591350"/>
        <function-ref name="fired" scoped="" ref="0x7d592c00"/>
        <function-ref name="startAt" scoped="" ref="0x7d591010"/>
        <function-ref name="isRunning" scoped="" ref="0x7d592e00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d591550"/>
        <function-ref name="start" scoped="" ref="0x7d592760"/>
        <function-ref name="stop" scoped="" ref="0x7d592a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e285010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e285010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e2851e8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7e2852c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e2853a8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7e285488"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e285568"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e285648"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7e285728"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7e285808"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7e2858e8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7e2859c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7e270010" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7e270010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7e26a810"/>
        <function-ref name="test" scoped="" ref="0x7e26a410"/>
        <function-ref name="get" scoped="" ref="0x7e270658"/>
        <function-ref name="captured" scoped="" ref="0x7e270af8"/>
        <function-ref name="reset" scoped="" ref="0x7e270d98"/>
        <function-ref name="isOn" scoped="" ref="0x7e26a610"/>
        <function-ref name="set" scoped="" ref="0x7e270858"/>
        <function-ref name="start" scoped="" ref="0x7e26a010"/>
        <function-ref name="stop" scoped="" ref="0x7e26a210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7e2639b8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7e2639b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e268cb0"/>
        <function-ref name="fired" scoped="" ref="0x7e2684b0"/>
        <function-ref name="get" scoped="" ref="0x7e268010"/>
        <function-ref name="reset" scoped="" ref="0x7e2686b0"/>
        <function-ref name="isOn" scoped="" ref="0x7e268eb0"/>
        <function-ref name="set" scoped="" ref="0x7e268210"/>
        <function-ref name="start" scoped="" ref="0x7e2688b0"/>
        <function-ref name="stop" scoped="" ref="0x7e268ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e2877d0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e2877d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e28dee8"/>
        <function-ref name="test" scoped="" ref="0x7e28dae8"/>
        <function-ref name="get" scoped="" ref="0x7e287e18"/>
        <function-ref name="setScale" scoped="" ref="0x7e28c0f8"/>
        <function-ref name="getScale" scoped="" ref="0x7e28c398"/>
        <function-ref name="reset" scoped="" ref="0x7e28d4e8"/>
        <function-ref name="overflow" scoped="" ref="0x7e28d2e8"/>
        <function-ref name="isOn" scoped="" ref="0x7e28dce8"/>
        <function-ref name="set" scoped="" ref="0x7e28d048"/>
        <function-ref name="start" scoped="" ref="0x7e28d6e8"/>
        <function-ref name="stop" scoped="" ref="0x7e28d8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e247ca0" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e247ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7e247e78"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e24b010"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e24b0f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e24b1d0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e24b2b0"/>
        <function-ref name="setControl" scoped="" ref="0x7e24b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7e2401c8" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7e2401c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7e2403a0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7e240480"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7e240560"/>
        <function-ref name="countBusy" scoped="" ref="0x7e240640"/>
        <function-ref name="getAssr" scoped="" ref="0x7e240720"/>
        <function-ref name="setAssr" scoped="" ref="0x7e240800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7e24b5a8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7e24b5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e24a8a8"/>
        <function-ref name="fired" scoped="" ref="0x7e24a0a8"/>
        <function-ref name="get" scoped="" ref="0x7e24bbf0"/>
        <function-ref name="reset" scoped="" ref="0x7e24a2a8"/>
        <function-ref name="isOn" scoped="" ref="0x7e24aaa8"/>
        <function-ref name="set" scoped="" ref="0x7e24bdf0"/>
        <function-ref name="start" scoped="" ref="0x7e24a4a8"/>
        <function-ref name="stop" scoped="" ref="0x7e24a6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e24f538" loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e24f538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e24ec48"/>
        <function-ref name="test" scoped="" ref="0x7e24e848"/>
        <function-ref name="get" scoped="" ref="0x7e24fb80"/>
        <function-ref name="setScale" scoped="" ref="0x7e24ee48"/>
        <function-ref name="getScale" scoped="" ref="0x7e24d0f8"/>
        <function-ref name="reset" scoped="" ref="0x7e24e248"/>
        <function-ref name="overflow" scoped="" ref="0x7e24e048"/>
        <function-ref name="isOn" scoped="" ref="0x7e24ea48"/>
        <function-ref name="set" scoped="" ref="0x7e24fd80"/>
        <function-ref name="start" scoped="" ref="0x7e24e448"/>
        <function-ref name="stop" scoped="" ref="0x7e24e648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e22dc90" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e22dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7e22de68"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e22b010"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e22b0f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e22b1d0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e22b2b0"/>
        <function-ref name="setControl" scoped="" ref="0x7e22b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7e22ac58" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7e22ac58"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7e22ae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7e229010" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7e229010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7e2291e8"/>
        <function-ref name="compareBusy" scoped="" ref="0x7e2292c8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7e2293a8"/>
        <function-ref name="countBusy" scoped="" ref="0x7e229488"/>
        <function-ref name="getAssr" scoped="" ref="0x7e229568"/>
        <function-ref name="setAssr" scoped="" ref="0x7e229648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7e22b5a8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7e22b5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e22a8a8"/>
        <function-ref name="fired" scoped="" ref="0x7e22a0a8"/>
        <function-ref name="get" scoped="" ref="0x7e22bbf0"/>
        <function-ref name="reset" scoped="" ref="0x7e22a2a8"/>
        <function-ref name="isOn" scoped="" ref="0x7e22aaa8"/>
        <function-ref name="set" scoped="" ref="0x7e22bdf0"/>
        <function-ref name="start" scoped="" ref="0x7e22a4a8"/>
        <function-ref name="stop" scoped="" ref="0x7e22a6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e22fe50" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e22fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e22d610"/>
        <function-ref name="test" scoped="" ref="0x7e22d210"/>
        <function-ref name="get" scoped="" ref="0x7e22e4d8"/>
        <function-ref name="setScale" scoped="" ref="0x7e22d810"/>
        <function-ref name="getScale" scoped="" ref="0x7e22dab0"/>
        <function-ref name="reset" scoped="" ref="0x7e22eb78"/>
        <function-ref name="overflow" scoped="" ref="0x7e22e978"/>
        <function-ref name="isOn" scoped="" ref="0x7e22d410"/>
        <function-ref name="set" scoped="" ref="0x7e22e6d8"/>
        <function-ref name="start" scoped="" ref="0x7e22ed78"/>
        <function-ref name="stop" scoped="" ref="0x7e22d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e1ca558" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e1ca558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e1ca730"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7e1ca810"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e1ca8f0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7e1ca9d0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e1caab0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e1cab90"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7e1cac70"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7e1cad50"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7e1cae30"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7e1caf10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x7e1c12c8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x7e1c12c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7e1c14a0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e1c1580"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e1c1660"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e1c1740"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e1c1820"/>
        <function-ref name="setControl" scoped="" ref="0x7e1c1900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7e1c8c18" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7e1c8c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e1c6f18"/>
        <function-ref name="fired" scoped="" ref="0x7e1c6718"/>
        <function-ref name="get" scoped="" ref="0x7e1c6278"/>
        <function-ref name="reset" scoped="" ref="0x7e1c6918"/>
        <function-ref name="isOn" scoped="" ref="0x7e1c5130"/>
        <function-ref name="set" scoped="" ref="0x7e1c6478"/>
        <function-ref name="start" scoped="" ref="0x7e1c6b18"/>
        <function-ref name="stop" scoped="" ref="0x7e1c6d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7e1c9150" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7e1c9150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7e1c88f8"/>
        <function-ref name="test" scoped="" ref="0x7e1c84f8"/>
        <function-ref name="get" scoped="" ref="0x7e1c9798"/>
        <function-ref name="captured" scoped="" ref="0x7e1c9c38"/>
        <function-ref name="reset" scoped="" ref="0x7e1c9ed8"/>
        <function-ref name="isOn" scoped="" ref="0x7e1c86f8"/>
        <function-ref name="set" scoped="" ref="0x7e1c9998"/>
        <function-ref name="start" scoped="" ref="0x7e1c80f8"/>
        <function-ref name="stop" scoped="" ref="0x7e1c82f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7e1c53b0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7e1c53b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e1c46b8"/>
        <function-ref name="fired" scoped="" ref="0x7e1c5e98"/>
        <function-ref name="get" scoped="" ref="0x7e1c59f8"/>
        <function-ref name="reset" scoped="" ref="0x7e1c40b8"/>
        <function-ref name="isOn" scoped="" ref="0x7e1c48b8"/>
        <function-ref name="set" scoped="" ref="0x7e1c5bf8"/>
        <function-ref name="start" scoped="" ref="0x7e1c42b8"/>
        <function-ref name="stop" scoped="" ref="0x7e1c44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7e1c4b38" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7e1c4b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e1c2ea0"/>
        <function-ref name="fired" scoped="" ref="0x7e1c26a0"/>
        <function-ref name="get" scoped="" ref="0x7e1c2200"/>
        <function-ref name="reset" scoped="" ref="0x7e1c28a0"/>
        <function-ref name="isOn" scoped="" ref="0x7e1c10b8"/>
        <function-ref name="set" scoped="" ref="0x7e1c2400"/>
        <function-ref name="start" scoped="" ref="0x7e1c2aa0"/>
        <function-ref name="stop" scoped="" ref="0x7e1c2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e1cd6f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e1cd6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e1cceb0"/>
        <function-ref name="test" scoped="" ref="0x7e1ccab0"/>
        <function-ref name="get" scoped="" ref="0x7e1cdd40"/>
        <function-ref name="setScale" scoped="" ref="0x7e1ca0d8"/>
        <function-ref name="getScale" scoped="" ref="0x7e1ca378"/>
        <function-ref name="reset" scoped="" ref="0x7e1cc4b0"/>
        <function-ref name="overflow" scoped="" ref="0x7e1cc2b0"/>
        <function-ref name="isOn" scoped="" ref="0x7e1cccb0"/>
        <function-ref name="set" scoped="" ref="0x7e1cc010"/>
        <function-ref name="start" scoped="" ref="0x7e1cc6b0"/>
        <function-ref name="stop" scoped="" ref="0x7e1cc8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e12d1e0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e12d1e0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f252010"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f252010"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e12d3b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e12d5c8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e12d5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e12ccd8"/>
        <function-ref name="test" scoped="" ref="0x7e12c8d8"/>
        <function-ref name="get" scoped="" ref="0x7e12dc10"/>
        <function-ref name="setScale" scoped="" ref="0x7e12ced8"/>
        <function-ref name="getScale" scoped="" ref="0x7e124190"/>
        <function-ref name="reset" scoped="" ref="0x7e12c2d8"/>
        <function-ref name="overflow" scoped="" ref="0x7e12c0d8"/>
        <function-ref name="isOn" scoped="" ref="0x7e12cad8"/>
        <function-ref name="set" scoped="" ref="0x7e12de10"/>
        <function-ref name="start" scoped="" ref="0x7e12c4d8"/>
        <function-ref name="stop" scoped="" ref="0x7e12c6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d57b490" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d57b490"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f260dc0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f260dc0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d57a7e8"/>
        <function-ref name="fired" scoped="" ref="0x7d57a0a8"/>
        <function-ref name="startAt" scoped="" ref="0x7d57a4a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7d57a2a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d57a9e8"/>
        <function-ref name="start" scoped="" ref="0x7d57bbe0"/>
        <function-ref name="stop" scoped="" ref="0x7d57be80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7d577af8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7d577af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d576ea0"/>
        <function-ref name="fired" scoped="" ref="0x7d5766a0"/>
        <function-ref name="get" scoped="" ref="0x7d576200"/>
        <function-ref name="reset" scoped="" ref="0x7d5768a0"/>
        <function-ref name="isOn" scoped="" ref="0x7d5740b8"/>
        <function-ref name="set" scoped="" ref="0x7d576400"/>
        <function-ref name="start" scoped="" ref="0x7d576aa0"/>
        <function-ref name="stop" scoped="" ref="0x7d576ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7d57ac30" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7d57ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7d577410"/>
        <function-ref name="test" scoped="" ref="0x7d577010"/>
        <function-ref name="get" scoped="" ref="0x7d578298"/>
        <function-ref name="setScale" scoped="" ref="0x7d577610"/>
        <function-ref name="getScale" scoped="" ref="0x7d5778b0"/>
        <function-ref name="reset" scoped="" ref="0x7d578938"/>
        <function-ref name="overflow" scoped="" ref="0x7d578738"/>
        <function-ref name="isOn" scoped="" ref="0x7d577210"/>
        <function-ref name="set" scoped="" ref="0x7d578498"/>
        <function-ref name="start" scoped="" ref="0x7d578b38"/>
        <function-ref name="stop" scoped="" ref="0x7d578d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e0e3af0" loc="24:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e0e3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e0e7308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e0e7708"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e0e7508"/>
        <function-ref name="overflow" scoped="" ref="0x7e0e7908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e0d2010" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e0d2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e0d2760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e0d2b60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e0d2960"/>
        <function-ref name="overflow" scoped="" ref="0x7e0d2d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e0ce990" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e0ce990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e0cd0f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e0cd4f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e0cd2f8"/>
        <function-ref name="overflow" scoped="" ref="0x7e0cd6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e0cd960" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e0cd960"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e0c20d8"/>
        <function-ref name="test" scoped="" ref="0x7e0c4cb0"/>
        <function-ref name="get" scoped="" ref="0x7e0c4010"/>
        <function-ref name="setScale" scoped="" ref="0x7e0c22d8"/>
        <function-ref name="getScale" scoped="" ref="0x7e0c2578"/>
        <function-ref name="reset" scoped="" ref="0x7e0c46b0"/>
        <function-ref name="overflow" scoped="" ref="0x7e0c44b0"/>
        <function-ref name="isOn" scoped="" ref="0x7e0c4eb0"/>
        <function-ref name="set" scoped="" ref="0x7e0c4210"/>
        <function-ref name="start" scoped="" ref="0x7e0c48b0"/>
        <function-ref name="stop" scoped="" ref="0x7e0c4ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7e0a4150" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7e0a4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e0a48a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e0a4ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e0a4aa0"/>
        <function-ref name="overflow" scoped="" ref="0x7e0a4ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e0a50c0" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e0a50c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e0a5810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e0a5c10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e0a5a10"/>
        <function-ref name="overflow" scoped="" ref="0x7e0a5e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d5837d0" loc="50:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d5837d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d582b18"/>
        <function-ref name="fired" scoped="" ref="0x7d5823d8"/>
        <function-ref name="startAt" scoped="" ref="0x7d5827d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7d5825d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d582d18"/>
        <function-ref name="start" scoped="" ref="0x7d583f20"/>
        <function-ref name="stop" scoped="" ref="0x7d5821d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7d580078" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7d580078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="TOne" ref="0x7f0807f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d57e3c8"/>
        <function-ref name="fired" scoped="" ref="0x7d580c68"/>
        <function-ref name="startAt" scoped="" ref="0x7d57e088"/>
        <function-ref name="isRunning" scoped="" ref="0x7d580e68"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d57e5c8"/>
        <function-ref name="start" scoped="" ref="0x7d5807c8"/>
        <function-ref name="stop" scoped="" ref="0x7d580a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7d581010" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7d581010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d581760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7d581b60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7d581960"/>
        <function-ref name="overflow" scoped="" ref="0x7d581d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e069b80" loc="18:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e069b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e069d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7e061af8" loc="68:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7e061af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e061cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7e061db0"/>
        <function-ref name="toggle" scoped="" ref="0x7e061e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7e060010"/>
        <function-ref name="get" scoped="" ref="0x7e0600f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e0601d0"/>
        <function-ref name="set" scoped="" ref="0x7e0602b0"/>
        <function-ref name="clr" scoped="" ref="0x7e060390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7e060508" loc="69:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7e060508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e0606e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e0607c0"/>
        <function-ref name="toggle" scoped="" ref="0x7e0608a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e060980"/>
        <function-ref name="get" scoped="" ref="0x7e060a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e060b40"/>
        <function-ref name="set" scoped="" ref="0x7e060c20"/>
        <function-ref name="clr" scoped="" ref="0x7e060d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7e060e78" loc="70:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7e060e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e052070"/>
        <function-ref name="isInput" scoped="" ref="0x7e052150"/>
        <function-ref name="toggle" scoped="" ref="0x7e052230"/>
        <function-ref name="isOutput" scoped="" ref="0x7e052310"/>
        <function-ref name="get" scoped="" ref="0x7e0523f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e0524d0"/>
        <function-ref name="set" scoped="" ref="0x7e0525b0"/>
        <function-ref name="clr" scoped="" ref="0x7e052690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7e061188" loc="67:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7e061188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e061360"/>
        <function-ref name="isInput" scoped="" ref="0x7e061440"/>
        <function-ref name="toggle" scoped="" ref="0x7e061520"/>
        <function-ref name="isOutput" scoped="" ref="0x7e061600"/>
        <function-ref name="get" scoped="" ref="0x7e0616e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e0617c0"/>
        <function-ref name="set" scoped="" ref="0x7e0618a0"/>
        <function-ref name="clr" scoped="" ref="0x7e061980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7e051190" loc="72:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7e051190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e051368"/>
        <function-ref name="isInput" scoped="" ref="0x7e051448"/>
        <function-ref name="toggle" scoped="" ref="0x7e051528"/>
        <function-ref name="isOutput" scoped="" ref="0x7e051608"/>
        <function-ref name="get" scoped="" ref="0x7e0516e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e0517c8"/>
        <function-ref name="set" scoped="" ref="0x7e0518a8"/>
        <function-ref name="clr" scoped="" ref="0x7e051988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7e062760" loc="66:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7e062760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e062938"/>
        <function-ref name="isInput" scoped="" ref="0x7e062a18"/>
        <function-ref name="toggle" scoped="" ref="0x7e062af8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e062bd8"/>
        <function-ref name="get" scoped="" ref="0x7e062cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e062d98"/>
        <function-ref name="set" scoped="" ref="0x7e062e78"/>
        <function-ref name="clr" scoped="" ref="0x7e061010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7e052808" loc="71:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7e052808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e0529e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e052ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7e052ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e052c80"/>
        <function-ref name="get" scoped="" ref="0x7e052d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e052e40"/>
        <function-ref name="set" scoped="" ref="0x7e052f20"/>
        <function-ref name="clr" scoped="" ref="0x7e051018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7e0464f8" loc="39:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7e0464f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7e0466d0"/>
        <function-ref name="disable" scoped="" ref="0x7e0467b0"/>
        <function-ref name="captured" scoped="" ref="0x7e046890"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7e046970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7e046b10" loc="40:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7e046b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e046ce8"/>
        <function-ref name="disable" scoped="" ref="0x7e046dc8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e046ea8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e049010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7e0491b0" loc="41:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7e0491b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e049388"/>
        <function-ref name="disable" scoped="" ref="0x7e049468"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e049548"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e049628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7e02fc60" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7e02fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7e02fe38"/>
        <function-ref name="disable" scoped="" ref="0x7e02ff18"/>
        <function-ref name="captured" scoped="" ref="0x7e043010"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7e0430f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x7e043300" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x7e043300"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7e02eaa8"/>
        <function-ref name="test" scoped="" ref="0x7e02e6a8"/>
        <function-ref name="get" scoped="" ref="0x7e043948"/>
        <function-ref name="captured" scoped="" ref="0x7e043de8"/>
        <function-ref name="reset" scoped="" ref="0x7e02e0a8"/>
        <function-ref name="isOn" scoped="" ref="0x7e02e8a8"/>
        <function-ref name="set" scoped="" ref="0x7e043b48"/>
        <function-ref name="start" scoped="" ref="0x7e02e2a8"/>
        <function-ref name="stop" scoped="" ref="0x7e02e4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7e02bd18" loc="9:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7e02bd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e02bef0"/>
        <function-ref name="fired" scoped="" ref="0x7e02a010"/>
        <function-ref name="disable" scoped="" ref="0x7e02a0f0"/>
        <function-ref name="edge" scoped="" ref="0x7e02a1d0"/>
        <function-ref name="enable" scoped="" ref="0x7e02a2b0"/>
        <function-ref name="getValue" scoped="" ref="0x7e02a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7e02b720" loc="8:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7e02b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e02b8f8"/>
        <function-ref name="disable" scoped="" ref="0x7e02b9d8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e02bab8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e02bb98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7e00dbe8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7e00dbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e00ddc0"/>
        <function-ref name="fired" scoped="" ref="0x7e00dea0"/>
        <function-ref name="disable" scoped="" ref="0x7e00c010"/>
        <function-ref name="edge" scoped="" ref="0x7e00c0f0"/>
        <function-ref name="enable" scoped="" ref="0x7e00c1d0"/>
        <function-ref name="getValue" scoped="" ref="0x7e00c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7e00f430" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7e00f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e00f608"/>
        <function-ref name="fired" scoped="" ref="0x7e00f6e8"/>
        <function-ref name="disable" scoped="" ref="0x7e00f7c8"/>
        <function-ref name="edge" scoped="" ref="0x7e00f8a8"/>
        <function-ref name="enable" scoped="" ref="0x7e00f988"/>
        <function-ref name="getValue" scoped="" ref="0x7e00fa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7e00ebe8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7e00ebe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e00edc0"/>
        <function-ref name="fired" scoped="" ref="0x7e00eea0"/>
        <function-ref name="disable" scoped="" ref="0x7e00d010"/>
        <function-ref name="edge" scoped="" ref="0x7e00d0f0"/>
        <function-ref name="enable" scoped="" ref="0x7e00d1d0"/>
        <function-ref name="getValue" scoped="" ref="0x7e00d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7e00c430" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7e00c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e00c608"/>
        <function-ref name="fired" scoped="" ref="0x7e00c6e8"/>
        <function-ref name="disable" scoped="" ref="0x7e00c7c8"/>
        <function-ref name="edge" scoped="" ref="0x7e00c8a8"/>
        <function-ref name="enable" scoped="" ref="0x7e00c988"/>
        <function-ref name="getValue" scoped="" ref="0x7e00ca68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7e00fbe8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7e00fbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e00fdc0"/>
        <function-ref name="fired" scoped="" ref="0x7e00fea0"/>
        <function-ref name="disable" scoped="" ref="0x7e00e010"/>
        <function-ref name="edge" scoped="" ref="0x7e00e0f0"/>
        <function-ref name="enable" scoped="" ref="0x7e00e1d0"/>
        <function-ref name="getValue" scoped="" ref="0x7e00e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7e00d430" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7e00d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e00d608"/>
        <function-ref name="fired" scoped="" ref="0x7e00d6e8"/>
        <function-ref name="disable" scoped="" ref="0x7e00d7c8"/>
        <function-ref name="edge" scoped="" ref="0x7e00d8a8"/>
        <function-ref name="enable" scoped="" ref="0x7e00d988"/>
        <function-ref name="getValue" scoped="" ref="0x7e00da68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7e010c50" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7e010c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e010e28"/>
        <function-ref name="fired" scoped="" ref="0x7e010f08"/>
        <function-ref name="disable" scoped="" ref="0x7e00f010"/>
        <function-ref name="edge" scoped="" ref="0x7e00f0f0"/>
        <function-ref name="enable" scoped="" ref="0x7e00f1d0"/>
        <function-ref name="getValue" scoped="" ref="0x7e00f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7e00e430" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7e00e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e00e608"/>
        <function-ref name="fired" scoped="" ref="0x7e00e6e8"/>
        <function-ref name="disable" scoped="" ref="0x7e00e7c8"/>
        <function-ref name="edge" scoped="" ref="0x7e00e8a8"/>
        <function-ref name="enable" scoped="" ref="0x7e00e988"/>
        <function-ref name="getValue" scoped="" ref="0x7e00ea68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7e0031b0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7e0031b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e003388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7e006010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7e006010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e0061e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7e006a78" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7e006a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e006c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7e003528" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7e003528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e003700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7e006388" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7e006388"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e006560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7e006df0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7e006df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e003010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7e004c48" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7e004c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e004e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7e006700" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7e006700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e0068d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e0086c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e0086c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e008898"/>
        <function-ref name="fired" scoped="" ref="0x7e008978"/>
        <function-ref name="disable" scoped="" ref="0x7e008a58"/>
        <function-ref name="edge" scoped="" ref="0x7e008b38"/>
        <function-ref name="enable" scoped="" ref="0x7e008c18"/>
        <function-ref name="getValue" scoped="" ref="0x7e008cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e008e78" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e008e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dfd2070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7dfd16c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7dfd16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dfd1898"/>
        <function-ref name="fired" scoped="" ref="0x7dfd1978"/>
        <function-ref name="disable" scoped="" ref="0x7dfd1a58"/>
        <function-ref name="edge" scoped="" ref="0x7dfd1b38"/>
        <function-ref name="enable" scoped="" ref="0x7dfd1c18"/>
        <function-ref name="getValue" scoped="" ref="0x7dfd1cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7dfd1e78" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7dfd1e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dfd0070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7dfcf6c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7dfcf6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dfcf898"/>
        <function-ref name="fired" scoped="" ref="0x7dfcf978"/>
        <function-ref name="disable" scoped="" ref="0x7dfcfa58"/>
        <function-ref name="edge" scoped="" ref="0x7dfcfb38"/>
        <function-ref name="enable" scoped="" ref="0x7dfcfc18"/>
        <function-ref name="getValue" scoped="" ref="0x7dfcfcf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7dfcfe78" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7dfcfe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dfce070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7dfcd6c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7dfcd6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dfcd898"/>
        <function-ref name="fired" scoped="" ref="0x7dfcd978"/>
        <function-ref name="disable" scoped="" ref="0x7dfcda58"/>
        <function-ref name="edge" scoped="" ref="0x7dfcdb38"/>
        <function-ref name="enable" scoped="" ref="0x7dfcdc18"/>
        <function-ref name="getValue" scoped="" ref="0x7dfcdcf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7dfcde78" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7dfcde78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dfcc070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7dfcb788" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7dfcb788"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dfcb960"/>
        <function-ref name="fired" scoped="" ref="0x7dfcba40"/>
        <function-ref name="disable" scoped="" ref="0x7dfcbb20"/>
        <function-ref name="edge" scoped="" ref="0x7dfcbc00"/>
        <function-ref name="enable" scoped="" ref="0x7dfcbce0"/>
        <function-ref name="getValue" scoped="" ref="0x7dfcbdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7dfc9010" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7dfc9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dfc91e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7dfc88f0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7dfc88f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dfc8ac8"/>
        <function-ref name="fired" scoped="" ref="0x7dfc8ba8"/>
        <function-ref name="disable" scoped="" ref="0x7dfc8c88"/>
        <function-ref name="edge" scoped="" ref="0x7dfc8d68"/>
        <function-ref name="enable" scoped="" ref="0x7dfc8e48"/>
        <function-ref name="getValue" scoped="" ref="0x7dfc8f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7dfc70b8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7dfc70b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dfc7290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7dfc6978" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7dfc6978"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dfc6b50"/>
        <function-ref name="fired" scoped="" ref="0x7dfc6c30"/>
        <function-ref name="disable" scoped="" ref="0x7dfc6d10"/>
        <function-ref name="edge" scoped="" ref="0x7dfc6df0"/>
        <function-ref name="enable" scoped="" ref="0x7dfc6ed0"/>
        <function-ref name="getValue" scoped="" ref="0x7dfc5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7dfc5190" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7dfc5190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dfc5368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7dfc4a88" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7dfc4a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dfc4c60"/>
        <function-ref name="fired" scoped="" ref="0x7dfc4d40"/>
        <function-ref name="disable" scoped="" ref="0x7dfc4e20"/>
        <function-ref name="edge" scoped="" ref="0x7dfc4f00"/>
        <function-ref name="enable" scoped="" ref="0x7dfc3010"/>
        <function-ref name="getValue" scoped="" ref="0x7dfc30f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7dfc3270" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7dfc3270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dfc3448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x7dfb08c8" loc="51:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x7dfb08c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dfb0aa0"/>
        <function-ref name="isInput" scoped="" ref="0x7dfb0b80"/>
        <function-ref name="toggle" scoped="" ref="0x7dfb0c60"/>
        <function-ref name="isOutput" scoped="" ref="0x7dfb0d40"/>
        <function-ref name="get" scoped="" ref="0x7dfb0e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dfb0f00"/>
        <function-ref name="set" scoped="" ref="0x7dfaf010"/>
        <function-ref name="clr" scoped="" ref="0x7dfaf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7dfb0298" loc="47:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7dfb0298"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dfb0470"/>
        <function-ref name="disable" scoped="" ref="0x7dfb0550"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7dfb0630"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7dfb0710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x7dfafdf8" loc="69:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x7dfafdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7dfad010"/>
        <function-ref name="runTask" scoped="" ref="0x7dfad0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7ddc5010" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7ddc5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddc51e8"/>
        <function-ref name="write" scoped="" ref="0x7ddc52c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ddc6320" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ddc6320"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddc64f8"/>
        <function-ref name="write" scoped="" ref="0x7ddc65d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ddd2840" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7ddd2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddd2a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ddc45c8" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ddc45c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddc47a0"/>
        <function-ref name="write" scoped="" ref="0x7ddc4880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ddc6b90" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7ddc6b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddc6d68"/>
        <function-ref name="write" scoped="" ref="0x7ddc6e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7ddc5448" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7ddc5448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddc5620"/>
        <function-ref name="write" scoped="" ref="0x7ddc5700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ddd0a70" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7ddd0a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddd0c48"/>
        <function-ref name="write" scoped="" ref="0x7ddd0d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ddd4eb0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ddd4eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ddd30c0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ddd31a0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ddd3280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ddd3758" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ddd3758"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddd3930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ddd0260" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7ddd0260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddd0438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ddd2ef0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ddd2ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddd00e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ddc6758" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ddc6758"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddc6930"/>
        <function-ref name="write" scoped="" ref="0x7ddc6a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ddd2b98" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7ddd2b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddd2d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ddc4190" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7ddc4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddc4368"/>
        <function-ref name="write" scoped="" ref="0x7ddc4448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ddc4a00" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7ddc4a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ddc4cd8"/>
        <function-ref name="writeDone" scoped="" ref="0x7ddc4db8"/>
        <function-ref name="write" scoped="" ref="0x7ddc4e98"/>
        <function-ref name="beginRead" scoped="" ref="0x7ddc3010"/>
        <function-ref name="readDone" scoped="" ref="0x7ddc30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ddd3ab0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7ddd3ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddd3c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ddd0ea8" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7ddd0ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddc60c0"/>
        <function-ref name="write" scoped="" ref="0x7ddc61a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ddd05b8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7ddd05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddd0810"/>
        <function-ref name="write" scoped="" ref="0x7ddd08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ddd3e08" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7ddd3e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddd2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ddd47f8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7ddd47f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ddd49d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ddd4ab0"/>
        <function-ref name="request" scoped="" ref="0x7ddd4b90"/>
        <function-ref name="granted" scoped="" ref="0x7ddd4c70"/>
        <function-ref name="isOwner" scoped="" ref="0x7ddd4d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ddc5cb8" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7ddc5cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddc5e90"/>
        <function-ref name="write" scoped="" ref="0x7ddc4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ddc5880" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7ddc5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddc5a58"/>
        <function-ref name="write" scoped="" ref="0x7ddc5b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ddd3400" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ddd3400"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddd35d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ddd24e8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7ddd24e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddd26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ddd2190" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7ddd2190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddd2368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ddc3270" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7ddc3270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ddc3448"/>
        <function-ref name="writeDone" scoped="" ref="0x7ddc3528"/>
        <function-ref name="write" scoped="" ref="0x7ddc3608"/>
        <function-ref name="beginRead" scoped="" ref="0x7ddc36e8"/>
        <function-ref name="readDone" scoped="" ref="0x7ddc37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7df822f8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7df822f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7df824d0"/>
        <function-ref name="writeDone" scoped="" ref="0x7df825b0"/>
        <function-ref name="write" scoped="" ref="0x7df82690"/>
        <function-ref name="beginRead" scoped="" ref="0x7df82770"/>
        <function-ref name="readDone" scoped="" ref="0x7df82850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7df83b18" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7df83b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7df83cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7df83dd0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7df83eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7df82c80" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7df82c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7df82e58"/>
        <function-ref name="write" scoped="" ref="0x7df81010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7df81438" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7df81438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7df81610"/>
        <function-ref name="write" scoped="" ref="0x7df816f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7df83450" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7df83450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7df83628"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7df83708"/>
        <function-ref name="request" scoped="" ref="0x7df837e8"/>
        <function-ref name="granted" scoped="" ref="0x7df838c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7df839a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7df81b18" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7df81b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7df81cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7df659a8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7df659a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7df65b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7df65c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7df70e30" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7df70e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7df6f050"/>
        <function-ref name="writeDone" scoped="" ref="0x7df6f130"/>
        <function-ref name="write" scoped="" ref="0x7df6f210"/>
        <function-ref name="beginRead" scoped="" ref="0x7df6f2f0"/>
        <function-ref name="readDone" scoped="" ref="0x7df6f3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7df80c88" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7df80c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7df80e60"/>
        <function-ref name="abortRelease" scoped="" ref="0x7df70010"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7df700f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7df68188" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7df68188"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7df68360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7df65dd8" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x7df65dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7df69010"/>
        <function-ref name="toIdle" scoped="" ref="0x7df690f0"/>
        <function-ref name="isState" scoped="" ref="0x7df691d0"/>
        <function-ref name="isIdle" scoped="" ref="0x7df692b0"/>
        <function-ref name="requestState" scoped="" ref="0x7df69390"/>
        <function-ref name="forceState" scoped="" ref="0x7df69470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7df6d940" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7df6d940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7df6db18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7df6dbf8"/>
        <function-ref name="request" scoped="" ref="0x7df6dcd8"/>
        <function-ref name="granted" scoped="" ref="0x7df6ddb8"/>
        <function-ref name="isOwner" scoped="" ref="0x7df6de98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7df6f7e0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7df6f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7df6f9b8"/>
        <function-ref name="write" scoped="" ref="0x7df6fa98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7df6fea0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7df6fea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7df6d0c0"/>
        <function-ref name="write" scoped="" ref="0x7df6d1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7df695b8" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7df695b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7df69790"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7df69870"/>
        <function-ref name="led1On" scoped="" ref="0x7df69950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7df69a30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7df69b10"/>
        <function-ref name="get" scoped="" ref="0x7df69bf0"/>
        <function-ref name="led1Off" scoped="" ref="0x7df69cd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7df670f0"/>
        <function-ref name="set" scoped="" ref="0x7df69db0"/>
        <function-ref name="led0On" scoped="" ref="0x7df69e90"/>
        <function-ref name="led2On" scoped="" ref="0x7df67010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7df704d0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7df704d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7df706a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7df70788"/>
        <function-ref name="request" scoped="" ref="0x7df70868"/>
        <function-ref name="granted" scoped="" ref="0x7df70948"/>
        <function-ref name="isOwner" scoped="" ref="0x7df70a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7df63e90" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x7df63e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7df62080"/>
        <function-ref name="runTask" scoped="" ref="0x7df62160"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7df6d5a8" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7df6d5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7df6d780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7df14a38" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7df14a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7df14c10"/>
        <function-ref name="toIdle" scoped="" ref="0x7df14cf0"/>
        <function-ref name="isState" scoped="" ref="0x7df14dd0"/>
        <function-ref name="isIdle" scoped="" ref="0x7df14eb0"/>
        <function-ref name="requestState" scoped="" ref="0x7df13010"/>
        <function-ref name="forceState" scoped="" ref="0x7df130f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7df0d718" loc="66:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7df0d718"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7df0d8f0"/>
        <function-ref name="toIdle" scoped="" ref="0x7df0d9d0"/>
        <function-ref name="isState" scoped="" ref="0x7df0dab0"/>
        <function-ref name="isIdle" scoped="" ref="0x7df0db90"/>
        <function-ref name="requestState" scoped="" ref="0x7df0dc70"/>
        <function-ref name="forceState" scoped="" ref="0x7df0dd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7df072f0" loc="66:/opt/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7df072f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7df074c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7df078a0" loc="67:/opt/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7df078a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7df07a78"/>
        <function-ref name="toIdle" scoped="" ref="0x7df07b58"/>
        <function-ref name="isState" scoped="" ref="0x7df07c38"/>
        <function-ref name="isIdle" scoped="" ref="0x7df07d18"/>
        <function-ref name="requestState" scoped="" ref="0x7df07df8"/>
        <function-ref name="forceState" scoped="" ref="0x7df07ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7df08828" loc="43:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7df08828"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7df08a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7df08ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7df084f0" loc="42:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7df084f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7df086c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7df09a70" loc="39:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7df09a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7df09c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7df09da8" loc="40:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7df09da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7df08010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7df080f0"/>
        <function-ref name="request" scoped="" ref="0x7df081d0"/>
        <function-ref name="granted" scoped="" ref="0x7df082b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7df08390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7deeac30" loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7deeac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7deeae08"/>
        <function-ref name="sendDone" scoped="" ref="0x7deeaee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7deea8e8" loc="67:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7deea8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7deeaac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7deea5a8" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7deea5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7deea780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dee9300" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dee9300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dee94d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dee95b8"/>
        <function-ref name="request" scoped="" ref="0x7dee9698"/>
        <function-ref name="granted" scoped="" ref="0x7dee9778"/>
        <function-ref name="isOwner" scoped="" ref="0x7dee9858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7de9d1e0" loc="207:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7de9d1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7de9d3b8"/>
        <function-ref name="runTask" scoped="" ref="0x7de9d498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7dee4080" loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7dee4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dee4258"/>
        <function-ref name="sendDone" scoped="" ref="0x7dee4338"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7ded4a40" loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7ded4a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ded4c18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ded4cf8"/>
        <function-ref name="request" scoped="" ref="0x7ded4dd8"/>
        <function-ref name="granted" scoped="" ref="0x7ded4eb8"/>
        <function-ref name="isOwner" scoped="" ref="0x7dec7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7dee5d38" loc="78:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7dee5d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7dee5f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dee5a18" loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dee5a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dee5bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7dec9e98" loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7dec9e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7dee00c0"/>
        <function-ref name="sleep" scoped="" ref="0x7ded4550"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7dee0280"/>
        <function-ref name="dataReady" scoped="" ref="0x7ded4630"/>
        <function-ref name="initMaster" scoped="" ref="0x7dee0440"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7dee0520"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7dee0600"/>
        <function-ref name="read" scoped="" ref="0x7dee06e0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7dee07c0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7dee08a0"/>
        <function-ref name="setClock" scoped="" ref="0x7dee0980"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7dee0a60"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7dee0b40"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7dee0ca0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7dee0d80"/>
        <function-ref name="write" scoped="" ref="0x7dee0e60"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ded4010"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7ded40f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7ded41d0"/>
        <function-ref name="getClock" scoped="" ref="0x7ded42b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7ded4390"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7dee01a0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7dee0360"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7ded4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dee4718" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dee4718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dee48f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dee49d0"/>
        <function-ref name="request" scoped="" ref="0x7dee4ab0"/>
        <function-ref name="granted" scoped="" ref="0x7dee4b90"/>
        <function-ref name="isOwner" scoped="" ref="0x7dee4c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7dec3bb8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7dec3bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7dec3d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7dec37b0" loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7dec37b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7dec3988"/>
        <function-ref name="userId" scoped="" ref="0x7dec3a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7de7c300" loc="59:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7de7c300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7de7c4d8"/>
        <function-ref name="sleep" scoped="" ref="0x7de7b950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7de7c698"/>
        <function-ref name="dataReady" scoped="" ref="0x7de7ba30"/>
        <function-ref name="initMaster" scoped="" ref="0x7de7c858"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7de7c938"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7de7ca18"/>
        <function-ref name="read" scoped="" ref="0x7de7caf8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7de7cbd8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7de7ccb8"/>
        <function-ref name="setClock" scoped="" ref="0x7de7cd98"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7de7ce78"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7de7b010"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7de7b170"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7de7b250"/>
        <function-ref name="write" scoped="" ref="0x7de7b330"/>
        <function-ref name="enableSpi" scoped="" ref="0x7de7b410"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7de7b4f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7de7b5d0"/>
        <function-ref name="getClock" scoped="" ref="0x7de7b6b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7de7b790"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7de7c5b8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7de7c778"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7de7b870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7de70188" loc="64:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7de70188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de70360"/>
        <function-ref name="isInput" scoped="" ref="0x7de70440"/>
        <function-ref name="toggle" scoped="" ref="0x7de70520"/>
        <function-ref name="isOutput" scoped="" ref="0x7de70600"/>
        <function-ref name="get" scoped="" ref="0x7de706e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de707c0"/>
        <function-ref name="set" scoped="" ref="0x7de708a0"/>
        <function-ref name="clr" scoped="" ref="0x7de70980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7de73de0" loc="62:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7de73de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de72010"/>
        <function-ref name="isInput" scoped="" ref="0x7de720f0"/>
        <function-ref name="toggle" scoped="" ref="0x7de721d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7de722b0"/>
        <function-ref name="get" scoped="" ref="0x7de72390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de72470"/>
        <function-ref name="set" scoped="" ref="0x7de72550"/>
        <function-ref name="clr" scoped="" ref="0x7de72630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7de73470" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7de73470"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de73648"/>
        <function-ref name="isInput" scoped="" ref="0x7de73728"/>
        <function-ref name="toggle" scoped="" ref="0x7de73808"/>
        <function-ref name="isOutput" scoped="" ref="0x7de738e8"/>
        <function-ref name="get" scoped="" ref="0x7de739c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de73aa8"/>
        <function-ref name="set" scoped="" ref="0x7de73b88"/>
        <function-ref name="clr" scoped="" ref="0x7de73c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7de73010" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7de73010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7de731e8"/>
        <function-ref name="stop" scoped="" ref="0x7de732c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7de70af8" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7de70af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7de70cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7de76010" loc="57:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7de76010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7de761e8"/>
        <function-ref name="sleep" scoped="" ref="0x7de75630"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7de763a8"/>
        <function-ref name="dataReady" scoped="" ref="0x7de75710"/>
        <function-ref name="initMaster" scoped="" ref="0x7de76568"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7de76648"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7de76728"/>
        <function-ref name="read" scoped="" ref="0x7de76808"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7de768e8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7de769c8"/>
        <function-ref name="setClock" scoped="" ref="0x7de76aa8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7de76b88"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7de76c68"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7de76dc8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7de76ea8"/>
        <function-ref name="write" scoped="" ref="0x7de75010"/>
        <function-ref name="enableSpi" scoped="" ref="0x7de750f0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7de751d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7de752b0"/>
        <function-ref name="getClock" scoped="" ref="0x7de75390"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7de75470"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7de762c8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7de76488"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7de75550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7de727a8" loc="63:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7de727a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de72980"/>
        <function-ref name="isInput" scoped="" ref="0x7de72a60"/>
        <function-ref name="toggle" scoped="" ref="0x7de72b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7de72c20"/>
        <function-ref name="get" scoped="" ref="0x7de72d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de72de0"/>
        <function-ref name="set" scoped="" ref="0x7de72ec0"/>
        <function-ref name="clr" scoped="" ref="0x7de70010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7de34488" loc="76:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7de34488"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7de34670"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7de34750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7de34d40" loc="79:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7de34d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7de34f28"/>
        <function-ref name="configure" scoped="" ref="0x7ddde018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7de35d10" loc="75:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7de35d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7de35ef8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7de34010"/>
        <function-ref name="request" scoped="" ref="0x7de340f0"/>
        <function-ref name="granted" scoped="" ref="0x7de341d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7de342b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7de34890" loc="77:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7de34890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7de34a68"/>
        <function-ref name="userId" scoped="" ref="0x7de34b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d4e0608" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d4e0608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d4e07e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7d4e0940" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7d4e0940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7d4e0b18"/>
        <function-ref name="isEmpty" scoped="" ref="0x7d4e0bf8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7d4e0cd8"/>
        <function-ref name="dequeue" scoped="" ref="0x7d4e0db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7d4dd0a8" loc="52:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7d4dd0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7d4dd290"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7d4dd370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7d4dd970" loc="56:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7d4dd970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7d4ddb58"/>
        <function-ref name="configure" scoped="" ref="0x7d4ddc38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7d4ddd98" loc="57:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7d4ddd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7d4dc010"/>
        <function-ref name="isEmpty" scoped="" ref="0x7d4dc0f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7d4dc1d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7d4dc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7d4df938" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7d4df938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7d4dfb20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7d4dfc00"/>
        <function-ref name="request" scoped="" ref="0x7d4dfce0"/>
        <function-ref name="granted" scoped="" ref="0x7d4dfdc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7d4dfea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7d4dd4b0" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7d4dd4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7d4dd688"/>
        <function-ref name="userId" scoped="" ref="0x7d4dd768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7d4dc430" loc="69:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7d4dc430"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7d4dc608"/>
        <function-ref name="runTask" scoped="" ref="0x7d4dc6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7ddba2b0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7ddba2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddba488"/>
        <function-ref name="write" scoped="" ref="0x7ddba568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ddbb5c8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ddbb5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddbb7a0"/>
        <function-ref name="write" scoped="" ref="0x7ddbb880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ddbda18" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7ddbda18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddbdbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ddb8880" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ddb8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddb8a58"/>
        <function-ref name="write" scoped="" ref="0x7ddb8b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ddbbe38" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7ddbbe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddba050"/>
        <function-ref name="write" scoped="" ref="0x7ddba130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7ddba6e8" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7ddba6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddba8c0"/>
        <function-ref name="write" scoped="" ref="0x7ddba9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ddbccf8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7ddbccf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddbced0"/>
        <function-ref name="write" scoped="" ref="0x7ddbb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ddbf010" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ddbf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ddbf1e8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ddbf2c8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ddbf3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ddbf880" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ddbf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddbfa58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ddbc4e8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7ddbc4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddbc6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ddbc190" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ddbc190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddbc368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ddbba00" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ddbba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddbbbd8"/>
        <function-ref name="write" scoped="" ref="0x7ddbbcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ddbdd70" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7ddbdd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddbc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ddb8448" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7ddb8448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddb8620"/>
        <function-ref name="write" scoped="" ref="0x7ddb8700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ddb8cb8" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7ddb8cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ddb7010"/>
        <function-ref name="writeDone" scoped="" ref="0x7ddb70f0"/>
        <function-ref name="write" scoped="" ref="0x7ddb71d0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ddb72b0"/>
        <function-ref name="readDone" scoped="" ref="0x7ddb7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ddbfbd8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7ddbfbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddbfdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ddbb190" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7ddbb190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddbb368"/>
        <function-ref name="write" scoped="" ref="0x7ddbb448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ddbc840" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7ddbc840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddbca98"/>
        <function-ref name="write" scoped="" ref="0x7ddbcb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ddbd010" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7ddbd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddbd1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ddc0908" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7ddc0908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ddc0ae0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ddc0bc0"/>
        <function-ref name="request" scoped="" ref="0x7ddc0ca0"/>
        <function-ref name="granted" scoped="" ref="0x7ddc0d80"/>
        <function-ref name="isOwner" scoped="" ref="0x7ddc0e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ddb8010" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7ddb8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddb81e8"/>
        <function-ref name="write" scoped="" ref="0x7ddb82c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ddbab20" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7ddbab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddbacf8"/>
        <function-ref name="write" scoped="" ref="0x7ddbadd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ddbf528" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ddbf528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddbf700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ddbd6c0" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7ddbd6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddbd898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ddbd368" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7ddbd368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddbd540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ddb7510" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7ddb7510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ddb76e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7ddb77c8"/>
        <function-ref name="write" scoped="" ref="0x7ddb78a8"/>
        <function-ref name="beginRead" scoped="" ref="0x7ddb7988"/>
        <function-ref name="readDone" scoped="" ref="0x7ddb7a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7dda62b0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7dda62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dda6488"/>
        <function-ref name="write" scoped="" ref="0x7dda6568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ddb05c8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ddb05c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddb07a0"/>
        <function-ref name="write" scoped="" ref="0x7ddb0880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ddb3ab8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7ddb3ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddb3c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7dda5880" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dda5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dda5a58"/>
        <function-ref name="write" scoped="" ref="0x7dda5b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ddb0e38" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7ddb0e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dda6050"/>
        <function-ref name="write" scoped="" ref="0x7dda6130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7dda66e8" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7dda66e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dda68c0"/>
        <function-ref name="write" scoped="" ref="0x7dda69a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ddb2cf8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7ddb2cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddb2ed0"/>
        <function-ref name="write" scoped="" ref="0x7ddb0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ddb4170" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ddb4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ddb4348"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ddb4428"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ddb4508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ddb49e0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ddb49e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddb4bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ddb24e8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7ddb24e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddb26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ddb2190" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ddb2190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddb2368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ddb0a00" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ddb0a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddb0bd8"/>
        <function-ref name="write" scoped="" ref="0x7ddb0cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ddb3e10" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7ddb3e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddb2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7dda5448" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7dda5448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dda5620"/>
        <function-ref name="write" scoped="" ref="0x7dda5700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7dda5cb8" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7dda5cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dda4010"/>
        <function-ref name="writeDone" scoped="" ref="0x7dda40f0"/>
        <function-ref name="write" scoped="" ref="0x7dda41d0"/>
        <function-ref name="beginRead" scoped="" ref="0x7dda42b0"/>
        <function-ref name="readDone" scoped="" ref="0x7dda4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ddb4d38" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7ddb4d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddb4f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ddb0190" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7ddb0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddb0368"/>
        <function-ref name="write" scoped="" ref="0x7ddb0448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ddb2840" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7ddb2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ddb2a98"/>
        <function-ref name="write" scoped="" ref="0x7ddb2b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ddb30b0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7ddb30b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddb3288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ddb59f0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7ddb59f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ddb5bc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ddb5ca8"/>
        <function-ref name="request" scoped="" ref="0x7ddb5d88"/>
        <function-ref name="granted" scoped="" ref="0x7ddb5e68"/>
        <function-ref name="isOwner" scoped="" ref="0x7ddb4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7dda5010" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7dda5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dda51e8"/>
        <function-ref name="write" scoped="" ref="0x7dda52c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7dda6b20" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7dda6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dda6cf8"/>
        <function-ref name="write" scoped="" ref="0x7dda6dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ddb4688" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ddb4688"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddb4860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ddb3760" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7ddb3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddb3938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ddb3408" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7ddb3408"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ddb35e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7dda4510" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dda4510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dda46e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7dda47c8"/>
        <function-ref name="write" scoped="" ref="0x7dda48a8"/>
        <function-ref name="beginRead" scoped="" ref="0x7dda4988"/>
        <function-ref name="readDone" scoped="" ref="0x7dda4a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7dd9e160" loc="43:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7dd9e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7dd9e338"/>
        <function-ref name="changed" scoped="" ref="0x7dd9e418"/>
        <function-ref name="amGroup" scoped="" ref="0x7dd9e4f8"/>
        <function-ref name="setAddress" scoped="" ref="0x7dd9e5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7dd7f198" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7dd7f198"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7dd7f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7dd856b8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7dd856b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7dd85890"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7dd85970"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7dd85a50"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7dd85b30"/>
        <function-ref name="setCca" scoped="" ref="0x7dd85c10"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7dd85cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7dd81d68" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7dd81d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7dd7f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7dd85010" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7dd85010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dd851e8"/>
        <function-ref name="cancel" scoped="" ref="0x7dd852c8"/>
        <function-ref name="modify" scoped="" ref="0x7dd853a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7dd85488"/>
        <function-ref name="resend" scoped="" ref="0x7dd85568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7dd86b98" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7dd86b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7dd86d70"/>
        <function-ref name="stop" scoped="" ref="0x7dd86e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTimeStamping" ref="0x7dd808e0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioTimeStamping" scoped="" ref="0x7dd808e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x7dd80ab8"/>
        <function-ref name="receivedSFD" scoped="" ref="0x7dd80b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7dd5f5e0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7dd5f5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7dd5f7b8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7dd5f898"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7dd5f978"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7dd5fa58"/>
        <function-ref name="setCca" scoped="" ref="0x7dd5fb38"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7dd5fc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7dd5e298" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7dd5e298"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7dd5e470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7dd56400" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7dd56400"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd565d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7dd5cc58" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7dd5cc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7dd5ce30"/>
        <function-ref name="disable" scoped="" ref="0x7dd5cf10"/>
        <function-ref name="captured" scoped="" ref="0x7dd5a010"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7dd5a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7dd5eac0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x7dd5eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120570"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dd5de08"/>
        <function-ref name="fired" scoped="" ref="0x7dd5d6c8"/>
        <function-ref name="startAt" scoped="" ref="0x7dd5dac8"/>
        <function-ref name="isRunning" scoped="" ref="0x7dd5d8c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7dd5c048"/>
        <function-ref name="start" scoped="" ref="0x7dd5d228"/>
        <function-ref name="stop" scoped="" ref="0x7dd5d4c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7dd5c210" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7dd5c210"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7dd5c3e8"/>
        <function-ref name="getRssi" scoped="" ref="0x7dd5c4c8"/>
        <function-ref name="getPower" scoped="" ref="0x7dd5c5a8"/>
        <function-ref name="getLqi" scoped="" ref="0x7dd5c688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7dd57450" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dd57450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd57628"/>
        <function-ref name="write" scoped="" ref="0x7dd57708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7dd578a0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7dd578a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd57a78"/>
        <function-ref name="write" scoped="" ref="0x7dd57b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7dd51c58" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7dd51c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dd53010"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7dd530f0"/>
        <function-ref name="sfd" scoped="" ref="0x7dd531d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7dd60f08" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dd60f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dd5f0f0"/>
        <function-ref name="cancel" scoped="" ref="0x7dd5f1d0"/>
        <function-ref name="modify" scoped="" ref="0x7dd5f2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7dd5f390"/>
        <function-ref name="resend" scoped="" ref="0x7dd5f470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7dd58758" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7dd58758"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7dd58930"/>
        <function-ref name="abortRelease" scoped="" ref="0x7dd58a10"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7dd58af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7dd56778" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7dd56778"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd56950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7dd5ac18" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7dd5ac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd5ae70"/>
        <function-ref name="isInput" scoped="" ref="0x7dd59010"/>
        <function-ref name="toggle" scoped="" ref="0x7dd590f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd591d0"/>
        <function-ref name="get" scoped="" ref="0x7dd592b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd59390"/>
        <function-ref name="set" scoped="" ref="0x7dd59470"/>
        <function-ref name="clr" scoped="" ref="0x7dd59550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dd60770" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dd60770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dd60948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7dd5c800" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dd5c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7dd5c9d8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7dd5cab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7dd56af0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7dd56af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dd56cc8"/>
        <function-ref name="write" scoped="" ref="0x7dd56da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7dd58090" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7dd58090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dd58268"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dd58348"/>
        <function-ref name="request" scoped="" ref="0x7dd58428"/>
        <function-ref name="granted" scoped="" ref="0x7dd58508"/>
        <function-ref name="isOwner" scoped="" ref="0x7dd585e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7dd5a288" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7dd5a288"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd5a460"/>
        <function-ref name="isInput" scoped="" ref="0x7dd5a540"/>
        <function-ref name="toggle" scoped="" ref="0x7dd5a620"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd5a700"/>
        <function-ref name="get" scoped="" ref="0x7dd5a7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd5a8c0"/>
        <function-ref name="set" scoped="" ref="0x7dd5a9a0"/>
        <function-ref name="clr" scoped="" ref="0x7dd5aa80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7dd57cf0" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7dd57cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd57ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7dd596e8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7dd596e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd598c0"/>
        <function-ref name="isInput" scoped="" ref="0x7dd599a0"/>
        <function-ref name="toggle" scoped="" ref="0x7dd59a80"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd59b60"/>
        <function-ref name="get" scoped="" ref="0x7dd59c40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd59d20"/>
        <function-ref name="set" scoped="" ref="0x7dd59e00"/>
        <function-ref name="clr" scoped="" ref="0x7dd59ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7dd53338" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7dd53338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7dd53510"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7dd535f0"/>
        <function-ref name="led1On" scoped="" ref="0x7dd536d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7dd537b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7dd53890"/>
        <function-ref name="get" scoped="" ref="0x7dd53970"/>
        <function-ref name="led1Off" scoped="" ref="0x7dd53a50"/>
        <function-ref name="led2Off" scoped="" ref="0x7dd53dd0"/>
        <function-ref name="set" scoped="" ref="0x7dd53b30"/>
        <function-ref name="led0On" scoped="" ref="0x7dd53c10"/>
        <function-ref name="led2On" scoped="" ref="0x7dd53cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeStamp" ref="0x7dd5fdc0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStamp" scoped="" ref="0x7dd5fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x7dd5e010"/>
        <function-ref name="receivedSFD" scoped="" ref="0x7dd5e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7dd60ab8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7dd60ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7dd60c90"/>
        <function-ref name="stop" scoped="" ref="0x7dd60d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7dd58c88" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dd58c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dd58e60"/>
        <function-ref name="writeDone" scoped="" ref="0x7dd57010"/>
        <function-ref name="write" scoped="" ref="0x7dd570f0"/>
        <function-ref name="beginRead" scoped="" ref="0x7dd571d0"/>
        <function-ref name="readDone" scoped="" ref="0x7dd572b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7dd56088" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7dd56088"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dd56260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7dd5e618" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7dd5e618"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7dd5e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7dcf2d58" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7dcf2d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dcf1010"/>
        <function-ref name="write" scoped="" ref="0x7dcf10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7dcf20b0" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7dcf20b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dcf2288"/>
        <function-ref name="write" scoped="" ref="0x7dcf2368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7dcf55b8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7dcf55b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcf5790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7dcf0368" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dcf0368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dcf0540"/>
        <function-ref name="write" scoped="" ref="0x7dcf0620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7dcf2920" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7dcf2920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dcf2af8"/>
        <function-ref name="write" scoped="" ref="0x7dcf2bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7dcf1270" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7dcf1270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dcf1448"/>
        <function-ref name="write" scoped="" ref="0x7dcf1528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7dcf3820" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7dcf3820"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dcf39f8"/>
        <function-ref name="write" scoped="" ref="0x7dcf3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7dcf7bd0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7dcf7bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7dcf7da8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7dcf7e88"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7dcf6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7dcf64e8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7dcf64e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcf66c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7dcf3010" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7dcf3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcf31e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7dcf5c68" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7dcf5c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcf5e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7dcf24e8" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7dcf24e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dcf26c0"/>
        <function-ref name="write" scoped="" ref="0x7dcf27a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7dcf5910" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7dcf5910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcf5ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7dcf1f18" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7dcf1f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dcf0108"/>
        <function-ref name="write" scoped="" ref="0x7dcf01e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7dcf07a0" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7dcf07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dcf0a78"/>
        <function-ref name="writeDone" scoped="" ref="0x7dcf0b58"/>
        <function-ref name="write" scoped="" ref="0x7dcf0c38"/>
        <function-ref name="beginRead" scoped="" ref="0x7dcf0d18"/>
        <function-ref name="readDone" scoped="" ref="0x7dcf0df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7dcf6840" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7dcf6840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcf6a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7dcf3c58" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7dcf3c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dcf3e30"/>
        <function-ref name="write" scoped="" ref="0x7dcf3f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7dcf3368" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7dcf3368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dcf35c0"/>
        <function-ref name="write" scoped="" ref="0x7dcf36a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7dcf6b98" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7dcf6b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcf6d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dcf7518" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dcf7518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dcf76f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dcf77d0"/>
        <function-ref name="request" scoped="" ref="0x7dcf78b0"/>
        <function-ref name="granted" scoped="" ref="0x7dcf7990"/>
        <function-ref name="isOwner" scoped="" ref="0x7dcf7a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7dcf1ae0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7dcf1ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dcf1cb8"/>
        <function-ref name="write" scoped="" ref="0x7dcf1d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7dcf16a8" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7dcf16a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dcf1880"/>
        <function-ref name="write" scoped="" ref="0x7dcf1960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7dcf6190" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7dcf6190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcf6368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7dcf5260" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7dcf5260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcf5438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7dcf6ef0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7dcf6ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcf50e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7dce7010" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dce7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dce71e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7dce72c8"/>
        <function-ref name="write" scoped="" ref="0x7dce73a8"/>
        <function-ref name="beginRead" scoped="" ref="0x7dce7488"/>
        <function-ref name="readDone" scoped="" ref="0x7dce7568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7dce1d68" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7dce1d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dce0010"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7dce00f0"/>
        <function-ref name="sfd" scoped="" ref="0x7dce01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7dce0338" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7dce0338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dce0510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7dce06b8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7dce06b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7dce0890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7dce1940" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7dce1940"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7dce1b18"/>
        <function-ref name="stop" scoped="" ref="0x7dce1bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7dcd97c8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7dcd97c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcd99a0"/>
        <function-ref name="isInput" scoped="" ref="0x7dcd9a80"/>
        <function-ref name="toggle" scoped="" ref="0x7dcd9b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcd9c40"/>
        <function-ref name="get" scoped="" ref="0x7dcd9d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcd9e00"/>
        <function-ref name="set" scoped="" ref="0x7dcd9ee0"/>
        <function-ref name="clr" scoped="" ref="0x7dcd8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7dcd5180" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7dcd5180"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7dcd5358"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7dcd5438"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7dcd5518"/>
        <function-ref name="syncDone" scoped="" ref="0x7dcd55f8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7dcd56d8"/>
        <function-ref name="setChannel" scoped="" ref="0x7dcd57b8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7dcd5898"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7dcd5978"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7dcd5a58"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7dcd5b38"/>
        <function-ref name="sync" scoped="" ref="0x7dcd5c18"/>
        <function-ref name="getChannel" scoped="" ref="0x7dcd5cf8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7dcd5dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7dcc73f0" loc="109:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x7dcc73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7dcc75c8"/>
        <function-ref name="runTask" scoped="" ref="0x7dcc76a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7dcd81a8" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7dcd81a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcd8380"/>
        <function-ref name="isInput" scoped="" ref="0x7dcd8460"/>
        <function-ref name="toggle" scoped="" ref="0x7dcd8540"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcd8620"/>
        <function-ref name="get" scoped="" ref="0x7dcd8700"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcd87e0"/>
        <function-ref name="set" scoped="" ref="0x7dcd88c0"/>
        <function-ref name="clr" scoped="" ref="0x7dcd89a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7dcd6750" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7dcd6750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7dcd6928"/>
        <function-ref name="getRssi" scoped="" ref="0x7dcd6a08"/>
        <function-ref name="getPower" scoped="" ref="0x7dcd6ae8"/>
        <function-ref name="getLqi" scoped="" ref="0x7dcd6bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7dcda180" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7dcda180"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dcda358"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7dcda438"/>
        <function-ref name="sfd" scoped="" ref="0x7dcda518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7dcd6010" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7dcd6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcd61e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7dcdad70" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7dcdad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcd9010"/>
        <function-ref name="isInput" scoped="" ref="0x7dcd90f0"/>
        <function-ref name="toggle" scoped="" ref="0x7dcd91d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcd92b0"/>
        <function-ref name="get" scoped="" ref="0x7dcd9390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcd9470"/>
        <function-ref name="set" scoped="" ref="0x7dcd9550"/>
        <function-ref name="clr" scoped="" ref="0x7dcd9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dcdd938" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dcdd938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dcddb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7dcd6d40" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dcd6d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7dcd6f18"/>
        <function-ref name="getMetadata" scoped="" ref="0x7dcd5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7dcda680" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7dcda680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dcda858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7dcd71b0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7dcd71b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dcd7388"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dcd7468"/>
        <function-ref name="request" scoped="" ref="0x7dcd7548"/>
        <function-ref name="granted" scoped="" ref="0x7dcd7628"/>
        <function-ref name="isOwner" scoped="" ref="0x7dcd7708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7dcd78a0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7dcd78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dcd7a78"/>
        <function-ref name="writeDone" scoped="" ref="0x7dcd7b58"/>
        <function-ref name="write" scoped="" ref="0x7dcd7c38"/>
        <function-ref name="beginRead" scoped="" ref="0x7dcd7d18"/>
        <function-ref name="readDone" scoped="" ref="0x7dcd7df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7dcdaa00" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7dcdaa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7dcdabd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7dcd4010" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7dcd4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7dcd41e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7dcd42c8"/>
        <function-ref name="led1On" scoped="" ref="0x7dcd43a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7dcd4488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7dcd4568"/>
        <function-ref name="get" scoped="" ref="0x7dcd4648"/>
        <function-ref name="led1Off" scoped="" ref="0x7dcd4728"/>
        <function-ref name="led2Off" scoped="" ref="0x7dcd4aa8"/>
        <function-ref name="set" scoped="" ref="0x7dcd4808"/>
        <function-ref name="led0On" scoped="" ref="0x7dcd48e8"/>
        <function-ref name="led2On" scoped="" ref="0x7dcd49c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7dcd8b40" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7dcd8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7dcd8d18"/>
        <function-ref name="disable" scoped="" ref="0x7dcd8df8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7dcd8ed8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7dcd7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7dcd6388" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7dcd6388"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dcd65e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7dcddc80" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7dcddc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7dcdde58"/>
        <function-ref name="stop" scoped="" ref="0x7dcda010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7dc97910" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7dc97910"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7dc97ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7dc98988" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7dc98988"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7dc98b60"/>
        <function-ref name="getRssi" scoped="" ref="0x7dc98c40"/>
        <function-ref name="getPower" scoped="" ref="0x7dc98d20"/>
        <function-ref name="getLqi" scoped="" ref="0x7dc98e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7dc97500" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dc97500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7dc976d8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7dc977b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7dc97010" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7dc97010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7dc971e8"/>
        <function-ref name="noAck" scoped="" ref="0x7dc972c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7dc973a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7dc7e2b0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7dc7e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc7e488"/>
        <function-ref name="write" scoped="" ref="0x7dc7e568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7dc7f5c8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7dc7f5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc7f7a0"/>
        <function-ref name="write" scoped="" ref="0x7dc7f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7dc82ab8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7dc82ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc82c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7dc7d880" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dc7d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc7da58"/>
        <function-ref name="write" scoped="" ref="0x7dc7db38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7dc7fe38" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7dc7fe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc7e050"/>
        <function-ref name="write" scoped="" ref="0x7dc7e130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7dc7e6e8" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7dc7e6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc7e8c0"/>
        <function-ref name="write" scoped="" ref="0x7dc7e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7dc80cf8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7dc80cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc80ed0"/>
        <function-ref name="write" scoped="" ref="0x7dc7f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7dc99170" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7dc99170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7dc99348"/>
        <function-ref name="abortRelease" scoped="" ref="0x7dc99428"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7dc99508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7dc999e0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7dc999e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc99bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7dc804e8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7dc804e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc806c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7dc80190" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7dc80190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc80368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7dc7fa00" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7dc7fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc7fbd8"/>
        <function-ref name="write" scoped="" ref="0x7dc7fcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7dc82e10" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7dc82e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc80010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7dc7d448" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7dc7d448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc7d620"/>
        <function-ref name="write" scoped="" ref="0x7dc7d700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7dc7dcb8" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7dc7dcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dc7b010"/>
        <function-ref name="writeDone" scoped="" ref="0x7dc7b0f0"/>
        <function-ref name="write" scoped="" ref="0x7dc7b1d0"/>
        <function-ref name="beginRead" scoped="" ref="0x7dc7b2b0"/>
        <function-ref name="readDone" scoped="" ref="0x7dc7b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7dc99d38" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7dc99d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc99f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7dc7f190" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7dc7f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc7f368"/>
        <function-ref name="write" scoped="" ref="0x7dc7f448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7dc80840" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7dc80840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc80a98"/>
        <function-ref name="write" scoped="" ref="0x7dc80b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7dc820b0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7dc820b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc82288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dc9aaa0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dc9aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dc9ac78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dc9ad58"/>
        <function-ref name="request" scoped="" ref="0x7dc9ae38"/>
        <function-ref name="granted" scoped="" ref="0x7dc9af18"/>
        <function-ref name="isOwner" scoped="" ref="0x7dc99010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7dc7d010" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7dc7d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc7d1e8"/>
        <function-ref name="write" scoped="" ref="0x7dc7d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7dc7eb20" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7dc7eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dc7ecf8"/>
        <function-ref name="write" scoped="" ref="0x7dc7edd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7dc99688" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7dc99688"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc99860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7dc82760" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7dc82760"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc82938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7dc82408" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7dc82408"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dc825e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7dc7b510" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dc7b510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dc7b6e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7dc7b7c8"/>
        <function-ref name="write" scoped="" ref="0x7dc7b8a8"/>
        <function-ref name="beginRead" scoped="" ref="0x7dc7b988"/>
        <function-ref name="readDone" scoped="" ref="0x7dc7ba68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7dc70010" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7dc70010"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7dc701e8"/>
        <function-ref name="toIdle" scoped="" ref="0x7dc702c8"/>
        <function-ref name="isState" scoped="" ref="0x7dc703a8"/>
        <function-ref name="isIdle" scoped="" ref="0x7dc70488"/>
        <function-ref name="requestState" scoped="" ref="0x7dc70568"/>
        <function-ref name="forceState" scoped="" ref="0x7dc70648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7dc621c0" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7dc621c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dc62398"/>
        <function-ref name="getPayload" scoped="" ref="0x7dc62478"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dc62558"/>
        <function-ref name="cancel" scoped="" ref="0x7dc62638"/>
        <function-ref name="sendDone" scoped="" ref="0x7dc62718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7dc65a78" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dc65a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dc65c50"/>
        <function-ref name="getPayload" scoped="" ref="0x7dc65d30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dc65e10"/>
        <function-ref name="cancel" scoped="" ref="0x7dc65ef0"/>
        <function-ref name="sendDone" scoped="" ref="0x7dc62010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7dc5d1c0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7dc5d1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dc5d398"/>
        <function-ref name="getPayload" scoped="" ref="0x7dc5d478"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dc5d558"/>
        <function-ref name="cancel" scoped="" ref="0x7dc5d638"/>
        <function-ref name="sendDone" scoped="" ref="0x7dc5d718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7dc5e6e8" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dc5e6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dc5e8c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7dc5e9a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dc5ea80"/>
        <function-ref name="cancel" scoped="" ref="0x7dc5eb60"/>
        <function-ref name="sendDone" scoped="" ref="0x7dc5ec40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7dc5b010" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7dc5b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7dc5b1e8"/>
        <function-ref name="rand32" scoped="" ref="0x7dc5b2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dc5ed88" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dc5ed88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc5d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7dc5b420" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dc5b420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7dc5b5f8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7dc5b6d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7dc5d860" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7dc5d860"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7dc5da38"/>
        <function-ref name="toIdle" scoped="" ref="0x7dc5db18"/>
        <function-ref name="isState" scoped="" ref="0x7dc5dbf8"/>
        <function-ref name="isIdle" scoped="" ref="0x7dc5dcd8"/>
        <function-ref name="requestState" scoped="" ref="0x7dc5ddb8"/>
        <function-ref name="forceState" scoped="" ref="0x7dc5de98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7dc602f8" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7dc602f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7dc604d0"/>
        <function-ref name="toIdle" scoped="" ref="0x7dc605b0"/>
        <function-ref name="isState" scoped="" ref="0x7dc60690"/>
        <function-ref name="isIdle" scoped="" ref="0x7dc60770"/>
        <function-ref name="requestState" scoped="" ref="0x7dc60850"/>
        <function-ref name="forceState" scoped="" ref="0x7dc60930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7dc48228" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7dc48228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dc48400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7dc52b18" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7dc52b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dc52cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7dc52e70" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7dc52e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dc48070"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7dc433a0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7dc433a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dc43578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dc43010" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dc43010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc431e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7dc44930" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7dc44930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dc44b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7dc436d0" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7dc436d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x7dc438a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7dc43988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7dc44c88" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7dc44c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dc44e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7dc31868" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7dc31868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dc31a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7dc31bb0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7dc31bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dc31d88"/>
        <function-ref name="getPayload" scoped="" ref="0x7dc31e68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dc30010"/>
        <function-ref name="cancel" scoped="" ref="0x7dc300f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7dc301d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7dc32db8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dc32db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dc31010"/>
        <function-ref name="getPayload" scoped="" ref="0x7dc310f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dc311d0"/>
        <function-ref name="cancel" scoped="" ref="0x7dc312b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7dc31390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7dc314d8" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7dc314d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dc316b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7dc25e48" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7dc25e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7dc24050"/>
        <function-ref name="stopDone" scoped="" ref="0x7dc24130"/>
        <function-ref name="start" scoped="" ref="0x7dc24210"/>
        <function-ref name="stop" scoped="" ref="0x7dc242f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7dc24c50" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7dc24c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dc24e28"/>
        <function-ref name="getPayload" scoped="" ref="0x7dc24f08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dc23010"/>
        <function-ref name="cancel" scoped="" ref="0x7dc230f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7dc231d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7dc23348" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7dc23348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dc23520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7dc26918" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dc26918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dc26af0"/>
        <function-ref name="getPayload" scoped="" ref="0x7dc26bd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dc26cb0"/>
        <function-ref name="cancel" scoped="" ref="0x7dc26d90"/>
        <function-ref name="sendDone" scoped="" ref="0x7dc26e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7dc25340" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7dc25340"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x7dc25518"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x7dc255f8"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x7dc256d8"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x7dc257b8"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x7dc25898"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x7dc25978"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x7dc25a58"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x7dc25b38"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x7dc25c18"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x7dc25cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7dc24468" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x7dc24468"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7dc24640"/>
        <function-ref name="toIdle" scoped="" ref="0x7dc24720"/>
        <function-ref name="isState" scoped="" ref="0x7dc24800"/>
        <function-ref name="isIdle" scoped="" ref="0x7dc248e0"/>
        <function-ref name="requestState" scoped="" ref="0x7dc249c0"/>
        <function-ref name="forceState" scoped="" ref="0x7dc24aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7dc236a0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7dc236a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7dc23878"/>
        <function-ref name="stopDone" scoped="" ref="0x7dc23958"/>
        <function-ref name="start" scoped="" ref="0x7dc23a38"/>
        <function-ref name="stop" scoped="" ref="0x7dc23b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7dc25010" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7dc25010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dc251e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7dc21ae8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7dc21ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x7dc21cc0"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x7dc21da0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x7dc21e80"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x7dc1e010"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x7dc1e0f0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x7dc1e1d0"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x7dc1e2b0"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x7dc1e390"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x7dc1e470"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x7dc1e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7dc20450" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7dc20450"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7dc20628"/>
        <function-ref name="toIdle" scoped="" ref="0x7dc20708"/>
        <function-ref name="isState" scoped="" ref="0x7dc207e8"/>
        <function-ref name="isIdle" scoped="" ref="0x7dc208c8"/>
        <function-ref name="requestState" scoped="" ref="0x7dc209a8"/>
        <function-ref name="forceState" scoped="" ref="0x7dc20a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7dc10620" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7dc10620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dc107f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7dc108d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dc109b8"/>
        <function-ref name="cancel" scoped="" ref="0x7dc10a98"/>
        <function-ref name="sendDone" scoped="" ref="0x7dc10b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7dc11860" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dc11860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dc11a38"/>
        <function-ref name="getPayload" scoped="" ref="0x7dc11b18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dc11bf8"/>
        <function-ref name="cancel" scoped="" ref="0x7dc11cd8"/>
        <function-ref name="sendDone" scoped="" ref="0x7dc11db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7dc11f08" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7dc11f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7dc100f0"/>
        <function-ref name="setRetries" scoped="" ref="0x7dc101d0"/>
        <function-ref name="getRetries" scoped="" ref="0x7dc102b0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7dc10390"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7dc10470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7dc04288" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7dc04288"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7dc04460"/>
        <function-ref name="noAck" scoped="" ref="0x7dc04540"/>
        <function-ref name="wasAcked" scoped="" ref="0x7dc04620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7dc07ad8" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7dc07ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7dc07cb0"/>
        <function-ref name="setRetries" scoped="" ref="0x7dc07d90"/>
        <function-ref name="getRetries" scoped="" ref="0x7dc07e70"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7dc04010"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7dc040f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7dbf2938" loc="32:../../../tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7dbf2938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7ea83578"/>
              <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7ea83898"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dbc3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7dbf33d8" loc="31:../../../tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7dbf33d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7ea83578"/>
            <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7ea83898"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7dbf2430"/>
        <function-ref name="evicted" scoped="" ref="0x7dbf3ea0"/>
        <function-ref name="insert" scoped="" ref="0x7dbf3be0"/>
        <function-ref name="flush" scoped="" ref="0x7dbf26d0"/>
        <function-ref name="lookup" scoped="" ref="0x7dbf2170"/>
        <function-ref name="size" scoped="" ref="0x7dbf3a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d4644c8" loc="69:../../../tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d4644c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d4646a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7d463dc0" loc="72:../../../tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7d463dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7ea83578"/>
              <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7ea83898"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d461408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7d464870" loc="70:../../../tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestInCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7d464870"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:15" alignment="I:1"><struct-ref ref="0x7ea83578"/>
            <typename><typedef-ref name="dsr_route_request_in_t" ref="0x7ea83898"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7d4638b8"/>
        <function-ref name="evicted" scoped="" ref="0x7d463358"/>
        <function-ref name="insert" scoped="" ref="0x7d463098"/>
        <function-ref name="flush" scoped="" ref="0x7d463b58"/>
        <function-ref name="lookup" scoped="" ref="0x7d4635f8"/>
        <function-ref name="size" scoped="" ref="0x7d464e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7dbc0678" loc="32:../../../tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7dbc0678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7ea84c28"/>
              <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7ea83010"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dbc0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7dbc2120" loc="31:../../../tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7dbc2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7ea84c28"/>
            <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7ea83010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7dbc0170"/>
        <function-ref name="evicted" scoped="" ref="0x7dbc2be8"/>
        <function-ref name="insert" scoped="" ref="0x7dbc2928"/>
        <function-ref name="flush" scoped="" ref="0x7dbc0410"/>
        <function-ref name="lookup" scoped="" ref="0x7dbc2e88"/>
        <function-ref name="size" scoped="" ref="0x7dbc2748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d4517f8" loc="69:../../../tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d4517f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d4519d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7d444110" loc="72:../../../tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7d444110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7ea84c28"/>
              <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7ea83010"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d444738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7d451ba0" loc="70:../../../tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="DsrP.RouteRequestOutCacheC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7d451ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7ea84c28"/>
            <typename><typedef-ref name="dsr_route_request_out_t" ref="0x7ea83010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7d450be0"/>
        <function-ref name="evicted" scoped="" ref="0x7d450680"/>
        <function-ref name="insert" scoped="" ref="0x7d4503c0"/>
        <function-ref name="flush" scoped="" ref="0x7d450e80"/>
        <function-ref name="lookup" scoped="" ref="0x7d450920"/>
        <function-ref name="size" scoped="" ref="0x7d4501e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataTimer" ref="0x7dbbcd78" loc="40:../../../tos/lib/data/timer/DataTimerC.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataTimer" scoped="" ref="0x7dbbcd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataTimer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba1a28"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="expired" scoped="" ref="0x7dbbb960"/>
        <function-ref name="start" scoped="" ref="0x7dbbb3c0"/>
        <function-ref name="stop" scoped="" ref="0x7dbbb6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d4358f0" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d4358f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d432208"/>
        <function-ref name="fired" scoped="" ref="0x7d434610"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d434bb0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d4349d0"/>
        <function-ref name="getdt" scoped="" ref="0x7d4325c8"/>
        <function-ref name="gett0" scoped="" ref="0x7d4323e8"/>
        <function-ref name="isRunning" scoped="" ref="0x7d4347f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d435f18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d434ed0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d4341b0"/>
        <function-ref name="stop" scoped="" ref="0x7d434430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7dba7370" loc="38:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7dba7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dba6c78"/>
        <function-ref name="fired" scoped="" ref="0x7dba6098"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7dba6638"/>
        <function-ref name="isOneShot" scoped="" ref="0x7dba6458"/>
        <function-ref name="getdt" scoped="" ref="0x7dba4048"/>
        <function-ref name="gett0" scoped="" ref="0x7dba6e58"/>
        <function-ref name="isRunning" scoped="" ref="0x7dba6278"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7dba7998"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7dba6958"/>
        <function-ref name="startOneShot" scoped="" ref="0x7dba7c18"/>
        <function-ref name="stop" scoped="" ref="0x7dba7e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7dba0b30" loc="35:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7dba0b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7db9d4c8"/>
        <function-ref name="fired" scoped="" ref="0x7db9f8c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7db9fe60"/>
        <function-ref name="isOneShot" scoped="" ref="0x7db9fc80"/>
        <function-ref name="getdt" scoped="" ref="0x7db9d888"/>
        <function-ref name="gett0" scoped="" ref="0x7db9d6a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7db9faa0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7db9f1e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7db9d1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7db9f460"/>
        <function-ref name="stop" scoped="" ref="0x7db9f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7db98338" loc="36:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7db98338"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7db98980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dba0498" loc="34:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dba0498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dba0670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7db92878" loc="29:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7db92878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7db91010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7db91410"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7db91210"/>
        <function-ref name="overflow" scoped="" ref="0x7db91610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7db95ac8" loc="27:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7db95ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7db95ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7db93010" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7db93010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7db92350"/>
        <function-ref name="fired" scoped="" ref="0x7db93c00"/>
        <function-ref name="startAt" scoped="" ref="0x7db92010"/>
        <function-ref name="isRunning" scoped="" ref="0x7db93e00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7db92550"/>
        <function-ref name="start" scoped="" ref="0x7db93760"/>
        <function-ref name="stop" scoped="" ref="0x7db93a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7db46150" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7db46150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7db45550"/>
        <function-ref name="fired" scoped="" ref="0x7db46d40"/>
        <function-ref name="startAt" scoped="" ref="0x7db45210"/>
        <function-ref name="isRunning" scoped="" ref="0x7db45010"/>
        <function-ref name="getAlarm" scoped="" ref="0x7db45750"/>
        <function-ref name="start" scoped="" ref="0x7db468a0"/>
        <function-ref name="stop" scoped="" ref="0x7db46b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7db87cf0" loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7db87cf0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f252010"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f252010"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7db87ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7db45a08" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7db45a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7db43200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7db43600"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7db43400"/>
        <function-ref name="overflow" scoped="" ref="0x7db43800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7d420290" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7d420290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7d420468"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7d420548"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7d420628"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7d420708"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7d4207e8"/>
        <function-ref name="setControl" scoped="" ref="0x7d4208c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7d427cf0" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7d427cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d424068"/>
        <function-ref name="fired" scoped="" ref="0x7d425918"/>
        <function-ref name="startAt" scoped="" ref="0x7d425d18"/>
        <function-ref name="isRunning" scoped="" ref="0x7d425b18"/>
        <function-ref name="getAlarm" scoped="" ref="0x7d424268"/>
        <function-ref name="start" scoped="" ref="0x7d425478"/>
        <function-ref name="stop" scoped="" ref="0x7d425718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d4278b8" loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d4278b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d427a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7d424520" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7d424520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d424c70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7d423088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7d424e70"/>
        <function-ref name="overflow" scoped="" ref="0x7d423288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7d4131c8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7d4131c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7d4133a0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7d413480"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7d413560"/>
        <function-ref name="countBusy" scoped="" ref="0x7d413640"/>
        <function-ref name="getAssr" scoped="" ref="0x7d413720"/>
        <function-ref name="setAssr" scoped="" ref="0x7d413800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7d420ab8" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7d420ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d415dc0"/>
        <function-ref name="fired" scoped="" ref="0x7d4155c0"/>
        <function-ref name="get" scoped="" ref="0x7d415120"/>
        <function-ref name="reset" scoped="" ref="0x7d4157c0"/>
        <function-ref name="isOn" scoped="" ref="0x7d413010"/>
        <function-ref name="set" scoped="" ref="0x7d415320"/>
        <function-ref name="start" scoped="" ref="0x7d4159c0"/>
        <function-ref name="stop" scoped="" ref="0x7d415bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7d423500" loc="30:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d423500"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7d421c10"/>
        <function-ref name="test" scoped="" ref="0x7d421810"/>
        <function-ref name="get" scoped="" ref="0x7d423b48"/>
        <function-ref name="setScale" scoped="" ref="0x7d421e10"/>
        <function-ref name="getScale" scoped="" ref="0x7d4200d8"/>
        <function-ref name="reset" scoped="" ref="0x7d421210"/>
        <function-ref name="overflow" scoped="" ref="0x7d421010"/>
        <function-ref name="isOn" scoped="" ref="0x7d421a10"/>
        <function-ref name="set" scoped="" ref="0x7d423d48"/>
        <function-ref name="start" scoped="" ref="0x7d421410"/>
        <function-ref name="stop" scoped="" ref="0x7d421610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7db25ea8" loc="63:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7db25ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7db230c0"/>
        <function-ref name="runTask" scoped="" ref="0x7db231a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7db26770" loc="38:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7db26770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7db25ad0"/>
        <function-ref name="fired" scoped="" ref="0x7db25390"/>
        <function-ref name="startAt" scoped="" ref="0x7db25790"/>
        <function-ref name="isRunning" scoped="" ref="0x7db25590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7db25cd0"/>
        <function-ref name="start" scoped="" ref="0x7db26ec0"/>
        <function-ref name="stop" scoped="" ref="0x7db25190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7db407c0" loc="37:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7db407c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7db260d8"/>
        <function-ref name="fired" scoped="" ref="0x7db284e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7db28a88"/>
        <function-ref name="isOneShot" scoped="" ref="0x7db288a8"/>
        <function-ref name="getdt" scoped="" ref="0x7db26498"/>
        <function-ref name="gett0" scoped="" ref="0x7db262b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7db286c8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7db40de8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7db28da8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7db28088"/>
        <function-ref name="stop" scoped="" ref="0x7db28308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7daf4708" loc="60:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7daf4708"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7daf48e0"/>
        <function-ref name="runTask" scoped="" ref="0x7daf49c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7daf7840" loc="38:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7daf7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7daf4170"/>
        <function-ref name="fired" scoped="" ref="0x7daf6570"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7daf6b10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7daf6930"/>
        <function-ref name="getdt" scoped="" ref="0x7daf4530"/>
        <function-ref name="gett0" scoped="" ref="0x7daf4350"/>
        <function-ref name="isRunning" scoped="" ref="0x7daf6750"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7daf7e68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7daf6e30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7daf6110"/>
        <function-ref name="stop" scoped="" ref="0x7daf6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7dafa810" loc="37:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7dafa810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7daf71e8"/>
        <function-ref name="fired" scoped="" ref="0x7daf9590"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7daf9b60"/>
        <function-ref name="isOneShot" scoped="" ref="0x7daf9970"/>
        <function-ref name="getdt" scoped="" ref="0x7daf75c8"/>
        <function-ref name="gett0" scoped="" ref="0x7daf73d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7daf9780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7dafae48"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7daf9e90"/>
        <function-ref name="startOneShot" scoped="" ref="0x7daf9110"/>
        <function-ref name="stop" scoped="" ref="0x7daf93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7dae6e90" loc="37:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7dae6e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7daf14f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7daf17d0" loc="38:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7daf17d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7daf1f20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7daf0338"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7daf0138"/>
        <function-ref name="overflow" scoped="" ref="0x7daf0538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataTimer" ref="0x7d431730" loc="47:../../../tos/lib/data/timer/DataTimerP.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC.DataTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataTimer" scoped="" ref="0x7d431730"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataTimer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba1a28"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="expired" scoped="" ref="0x7d430318"/>
        <function-ref name="start" scoped="" ref="0x7d431d58"/>
        <function-ref name="stop" scoped="" ref="0x7d430098"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d431388" loc="46:../../../tos/lib/data/timer/DataTimerP.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC.DataTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d431388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d431560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7d430610" loc="50:../../../tos/lib/data/timer/DataTimerP.nc">
      <component-ref qname="DsrP.RouteRequestOutTimerC.DataTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d430610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d42ff10"/>
        <function-ref name="fired" scoped="" ref="0x7d42f330"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d42f8d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d42f6f0"/>
        <function-ref name="getdt" scoped="" ref="0x7d42d2e8"/>
        <function-ref name="gett0" scoped="" ref="0x7d42d108"/>
        <function-ref name="isRunning" scoped="" ref="0x7d42f510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d430c38"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d42fbf0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d430eb8"/>
        <function-ref name="stop" scoped="" ref="0x7d42f150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dac0730" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.ComposeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dac0730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dac0908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7dac0a68" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.ComposeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7dac0a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7dac0c40"/>
        <function-ref name="clear" scoped="" ref="0x7dac0d20"/>
        <function-ref name="toggle" scoped="" ref="0x7dac0e00"/>
        <function-ref name="get" scoped="" ref="0x7dac0ee0"/>
        <function-ref name="assign" scoped="" ref="0x7dabf010"/>
        <function-ref name="setAll" scoped="" ref="0x7dabf0f0"/>
        <function-ref name="set" scoped="" ref="0x7dabf1d0"/>
        <function-ref name="size" scoped="" ref="0x7dabf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dabe090" loc="35:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.SalvageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dabe090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dabe268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7dabe3c8" loc="36:/opt/tinyos-2.x/tos/system/BitVectorC.nc">
      <component-ref qname="DsrP.SalvageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7dabe3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7dabe5a0"/>
        <function-ref name="clear" scoped="" ref="0x7dabe680"/>
        <function-ref name="toggle" scoped="" ref="0x7dabe760"/>
        <function-ref name="get" scoped="" ref="0x7dabe840"/>
        <function-ref name="assign" scoped="" ref="0x7dabe920"/>
        <function-ref name="setAll" scoped="" ref="0x7dabea00"/>
        <function-ref name="set" scoped="" ref="0x7dabeae0"/>
        <function-ref name="size" scoped="" ref="0x7dabebc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7dab2bb0" loc="43:../../../tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7dab2bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dab2d88"/>
        <function-ref name="payloadLength" scoped="" ref="0x7dab2e68"/>
        <function-ref name="getPayload" scoped="" ref="0x7dab1010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dab10f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7dab11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SubPacket" ref="0x7dab1350" loc="44:../../../tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7dab1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7dab1528"/>
        <function-ref name="payloadLength" scoped="" ref="0x7dab1608"/>
        <function-ref name="getPayload" scoped="" ref="0x7dab16e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dab17c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7dab18a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7daa2c00" loc="51:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7daa2c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7daa2dd8"/>
        <function-ref name="getPayload" scoped="" ref="0x7daa2eb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7daa1010"/>
        <function-ref name="cancel" scoped="" ref="0x7daa10f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7daa11d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7daa15d8" loc="52:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7daa15d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7daa17b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketEngineClient" ref="0x7daa05d0" loc="54:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngineClient" scoped="" ref="0x7daa05d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngineClient"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eac1490"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7daa07a8"/>
        <function-ref name="defaultLowerType" scoped="" ref="0x7daa0888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7daa5010" loc="45:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7daa5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7daa51e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7daa6100" loc="43:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7daa6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eac1490"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7daa62d8"/>
        <function-ref name="getPayload" scoped="" ref="0x7daa63b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7daa6498"/>
        <function-ref name="cancel" scoped="" ref="0x7daa6578"/>
        <function-ref name="sendDone" scoped="" ref="0x7daa6658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7daa5330" loc="46:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7daa5330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7daa5508"/>
        <function-ref name="payloadLength" scoped="" ref="0x7daa55e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7daa56c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7daa57a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7daa5888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketWaitList" ref="0x7daa4e08" loc="48:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketWaitList" scoped="" ref="0x7daa4e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7daa26c8"/>
        <function-ref name="next" scoped="" ref="0x7daa2448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngine" ref="0x7daa5c68" loc="47:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngine" scoped="" ref="0x7daa5c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7daa5e40"/>
        <function-ref name="send" scoped="" ref="0x7daa5f20"/>
        <function-ref name="receive" scoped="" ref="0x7daa4018"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7daa40f8"/>
        <function-ref name="sendAdded" scoped="" ref="0x7daa41d8"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7daa42b8"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7daa4398"/>
        <function-ref name="packet" scoped="" ref="0x7daa4478"/>
        <function-ref name="sendDone" scoped="" ref="0x7daa4558"/>
        <function-ref name="drop" scoped="" ref="0x7daa4638"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7daa4718"/>
        <function-ref name="waitList" scoped="" ref="0x7daa47f8"/>
        <function-ref name="setUpperType" scoped="" ref="0x7daa48d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7daa6a30" loc="44:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7daa6a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7daa6c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7daa1bb8" loc="53:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7daa1bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7daa1d90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7daa1e70"/>
        <function-ref name="getPayload" scoped="" ref="0x7daa0010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7daa00f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7daa01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7daa79f8" loc="42:../../../tos/lib/netarch/multihop/PacketEngineC.nc">
      <component-ref qname="PacketEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7daa79f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7daa7bd0"/>
        <function-ref name="stop" scoped="" ref="0x7daa7cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7da9dd70" loc="32:../../../tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="PacketEngineC.SendQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7da9dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7eab3c88"/>
              <typename><typedef-ref name="packet_send_entry_t" ref="0x7eab3ed8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7da9b3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7da9e830" loc="31:../../../tos/lib/data/cache/LruDataCacheC.nc">
      <component-ref qname="PacketEngineC.SendQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7da9e830"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7eab3c88"/>
            <typename><typedef-ref name="packet_send_entry_t" ref="0x7eab3ed8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7da9d868"/>
        <function-ref name="evicted" scoped="" ref="0x7da9d308"/>
        <function-ref name="insert" scoped="" ref="0x7da9d048"/>
        <function-ref name="flush" scoped="" ref="0x7da9db08"/>
        <function-ref name="lookup" scoped="" ref="0x7da9d5a8"/>
        <function-ref name="size" scoped="" ref="0x7da9ee58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d3ab238" loc="69:../../../tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="PacketEngineC.SendQueueC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d3ab238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d3ab410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Equal" ref="0x7d3aab40" loc="72:../../../tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="PacketEngineC.SendQueueC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Equal" scoped="" ref="0x7d3aab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Equal"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7eab3c88"/>
              <typename><typedef-ref name="packet_send_entry_t" ref="0x7eab3ed8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7d3a81e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataCache" ref="0x7d3ab5e0" loc="70:../../../tos/lib/data/cache/LruDataCacheP.nc">
      <component-ref qname="PacketEngineC.SendQueueC.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataCache" scoped="" ref="0x7d3ab5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataCache"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7eab3c88"/>
            <typename><typedef-ref name="packet_send_entry_t" ref="0x7eab3ed8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="remove" scoped="" ref="0x7d3aa638"/>
        <function-ref name="evicted" scoped="" ref="0x7d3aa0d8"/>
        <function-ref name="insert" scoped="" ref="0x7d3abde8"/>
        <function-ref name="flush" scoped="" ref="0x7d3aa8d8"/>
        <function-ref name="lookup" scoped="" ref="0x7d3aa378"/>
        <function-ref name="size" scoped="" ref="0x7d3abc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7da995e0" loc="42:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="PacketEngineC.ReceivePoolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7da995e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
            <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7da7f490"/>
        <function-ref name="maxSize" scoped="" ref="0x7da7f010"/>
        <function-ref name="empty" scoped="" ref="0x7da99c08"/>
        <function-ref name="put" scoped="" ref="0x7da7f1f0"/>
        <function-ref name="size" scoped="" ref="0x7da99de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7d3999d0" loc="56:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="PacketEngineC.ReceivePoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7d3999d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
            <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d398850"/>
        <function-ref name="maxSize" scoped="" ref="0x7d3983d0"/>
        <function-ref name="empty" scoped="" ref="0x7d398010"/>
        <function-ref name="put" scoped="" ref="0x7d3985b0"/>
        <function-ref name="size" scoped="" ref="0x7d3981f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d399628" loc="55:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="PacketEngineC.ReceivePoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d399628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d399800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7da7e408" loc="42:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="PacketEngineC.SendPoolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7da7e408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
            <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7da7d2b0"/>
        <function-ref name="maxSize" scoped="" ref="0x7da7edf0"/>
        <function-ref name="empty" scoped="" ref="0x7da7ea30"/>
        <function-ref name="put" scoped="" ref="0x7da7d010"/>
        <function-ref name="size" scoped="" ref="0x7da7ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7d3868d8" loc="56:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="PacketEngineC.SendPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7d3868d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
            <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7d385768"/>
        <function-ref name="maxSize" scoped="" ref="0x7d3852e8"/>
        <function-ref name="empty" scoped="" ref="0x7d386f00"/>
        <function-ref name="put" scoped="" ref="0x7d3854c8"/>
        <function-ref name="size" scoped="" ref="0x7d385108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7d386530" loc="55:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="PacketEngineC.SendPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7d386530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7d386708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7da7dda8" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="PacketEngineC.SendStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7da7dda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7da7b010"/>
        <function-ref name="toIdle" scoped="" ref="0x7da7b0f0"/>
        <function-ref name="isState" scoped="" ref="0x7da7b1d0"/>
        <function-ref name="isIdle" scoped="" ref="0x7da7b2b0"/>
        <function-ref name="requestState" scoped="" ref="0x7da7b390"/>
        <function-ref name="forceState" scoped="" ref="0x7da7b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7da7a100" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="PacketEngineC.SendBackoffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7da7a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7da79a10"/>
        <function-ref name="fired" scoped="" ref="0x7da7ae08"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7da793d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7da791f0"/>
        <function-ref name="getdt" scoped="" ref="0x7da79dd0"/>
        <function-ref name="gett0" scoped="" ref="0x7da79bf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7da79010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7da7a728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7da796f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7da7a9a8"/>
        <function-ref name="stop" scoped="" ref="0x7da7ac28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d3c0520" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d3c0520"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d3c06f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d3c07d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d3c08b8"/>
        <function-ref name="cancel" scoped="" ref="0x7d3c0998"/>
        <function-ref name="sendDone" scoped="" ref="0x7d3c0a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d3c0bb8" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d3c0bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d3c0d90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d3c0e70"/>
        <function-ref name="getPayload" scoped="" ref="0x7d3b4010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d3b40f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d3b41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d3b4310" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d3b4310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d3b44e8"/>
        <function-ref name="source" scoped="" ref="0x7d3b45c8"/>
        <function-ref name="address" scoped="" ref="0x7d3b46a8"/>
        <function-ref name="destination" scoped="" ref="0x7d3b4788"/>
        <function-ref name="setSource" scoped="" ref="0x7d3b4868"/>
        <function-ref name="setDestination" scoped="" ref="0x7d3b4948"/>
        <function-ref name="type" scoped="" ref="0x7d3b4a28"/>
        <function-ref name="setType" scoped="" ref="0x7d3b4b08"/>
        <function-ref name="isForMe" scoped="" ref="0x7d3b4be8"/>
        <function-ref name="setGroup" scoped="" ref="0x7d3b4cc8"/>
        <function-ref name="localGroup" scoped="" ref="0x7d3b4da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7d3b4f08" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7d3b4f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7d3b30f0"/>
        <function-ref name="noAck" scoped="" ref="0x7d3b31d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7d3b32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d3760c8" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d3760c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d3762a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d376380"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d376460"/>
        <function-ref name="cancel" scoped="" ref="0x7d376540"/>
        <function-ref name="sendDone" scoped="" ref="0x7d376620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7d376790" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d376790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d376968"/>
        <function-ref name="getPayload" scoped="" ref="0x7d376a48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d376b28"/>
        <function-ref name="cancel" scoped="" ref="0x7d376c08"/>
        <function-ref name="sendDone" scoped="" ref="0x7d376ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7d376e28" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d376e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d375050"/>
        <function-ref name="source" scoped="" ref="0x7d375130"/>
        <function-ref name="address" scoped="" ref="0x7d375210"/>
        <function-ref name="destination" scoped="" ref="0x7d3752f0"/>
        <function-ref name="setSource" scoped="" ref="0x7d3753d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7d3754b0"/>
        <function-ref name="type" scoped="" ref="0x7d375590"/>
        <function-ref name="setType" scoped="" ref="0x7d375670"/>
        <function-ref name="isForMe" scoped="" ref="0x7d375750"/>
        <function-ref name="setGroup" scoped="" ref="0x7d375830"/>
        <function-ref name="localGroup" scoped="" ref="0x7d375910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7da512f0" loc="35:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7da512f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7da514c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7da515a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da51688"/>
        <function-ref name="cancel" scoped="" ref="0x7da51768"/>
        <function-ref name="sendDone" scoped="" ref="0x7da51848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7da22868" loc="40:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7da22868"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7da22a50"/>
        <function-ref name="getPayload" scoped="" ref="0x7da22b30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da22c10"/>
        <function-ref name="cancel" scoped="" ref="0x7da22cf0"/>
        <function-ref name="sendDone" scoped="" ref="0x7da22dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7da220f8" loc="38:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7da220f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7da222e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7da223c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da224a0"/>
        <function-ref name="cancel" scoped="" ref="0x7da22580"/>
        <function-ref name="sendDone" scoped="" ref="0x7da22660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7da21b08" loc="42:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7da21b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7da21ce0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7da21dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7da21ea0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da20010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7da200f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7da20270" loc="161:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7da20270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7da20448"/>
        <function-ref name="runTask" scoped="" ref="0x7da20528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7da206a8" loc="118:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7da206a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7da20880"/>
        <function-ref name="runTask" scoped="" ref="0x7da20960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7da22f10" loc="41:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7da22f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7da21108"/>
        <function-ref name="source" scoped="" ref="0x7da211e8"/>
        <function-ref name="address" scoped="" ref="0x7da212c8"/>
        <function-ref name="destination" scoped="" ref="0x7da213a8"/>
        <function-ref name="setSource" scoped="" ref="0x7da21488"/>
        <function-ref name="setDestination" scoped="" ref="0x7da21568"/>
        <function-ref name="type" scoped="" ref="0x7da21648"/>
        <function-ref name="setType" scoped="" ref="0x7da21728"/>
        <function-ref name="isForMe" scoped="" ref="0x7da21808"/>
        <function-ref name="setGroup" scoped="" ref="0x7da218e8"/>
        <function-ref name="localGroup" scoped="" ref="0x7da219c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d3b25e0" loc="39:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d3b25e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d3b27b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d3b2898"/>
        <function-ref name="getPayload" scoped="" ref="0x7d3b2978"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d3b2a58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d3b2b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d3b22c8" loc="38:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d3b22c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d3b24a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d3b2c78" loc="40:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="DsrC.DsrTransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d3b2c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d3b2e50"/>
        <function-ref name="source" scoped="" ref="0x7d3b1010"/>
        <function-ref name="address" scoped="" ref="0x7d3b10f0"/>
        <function-ref name="destination" scoped="" ref="0x7d3b11d0"/>
        <function-ref name="setSource" scoped="" ref="0x7d3b12b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7d3b1390"/>
        <function-ref name="type" scoped="" ref="0x7d3b1470"/>
        <function-ref name="setType" scoped="" ref="0x7d3b1550"/>
        <function-ref name="isForMe" scoped="" ref="0x7d3b1630"/>
        <function-ref name="setGroup" scoped="" ref="0x7d3b1710"/>
        <function-ref name="localGroup" scoped="" ref="0x7d3b17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketWaitList" ref="0x7da0ba60" loc="42:../../../tos/lib/netarch/multihop/PacketProcessorC.nc">
      <component-ref qname="DsrC.SinglePacketProcessorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketWaitList" scoped="" ref="0x7da0ba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7da07338"/>
        <function-ref name="next" scoped="" ref="0x7da070b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngine" ref="0x7da0cb20" loc="41:../../../tos/lib/netarch/multihop/PacketProcessorC.nc">
      <component-ref qname="DsrC.SinglePacketProcessorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngine" scoped="" ref="0x7da0cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7da0ccf8"/>
        <function-ref name="send" scoped="" ref="0x7da0cdd8"/>
        <function-ref name="receive" scoped="" ref="0x7da0ceb8"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7da0b010"/>
        <function-ref name="sendAdded" scoped="" ref="0x7da0b0f0"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7da0b1d0"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7da0b2b0"/>
        <function-ref name="packet" scoped="" ref="0x7da0b390"/>
        <function-ref name="sendDone" scoped="" ref="0x7da0b470"/>
        <function-ref name="drop" scoped="" ref="0x7da0b550"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7da0b630"/>
        <function-ref name="waitList" scoped="" ref="0x7da0b710"/>
        <function-ref name="setUpperType" scoped="" ref="0x7da0b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketWaitList" ref="0x7da04280" loc="42:../../../tos/lib/netarch/multihop/PacketProcessorC.nc">
      <component-ref qname="DsrC.DsrPacketProcessorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketWaitList" scoped="" ref="0x7da04280"/></type-interface>
      <instance>
        <interfacedef-ref qname="IndexedIterator"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="end" scoped="" ref="0x7da04b28"/>
        <function-ref name="next" scoped="" ref="0x7da048a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngine" ref="0x7da06338" loc="41:../../../tos/lib/netarch/multihop/PacketProcessorC.nc">
      <component-ref qname="DsrC.DsrPacketProcessorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngine" scoped="" ref="0x7da06338"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7da06510"/>
        <function-ref name="send" scoped="" ref="0x7da065f0"/>
        <function-ref name="receive" scoped="" ref="0x7da066d0"/>
        <function-ref name="sendIntercept" scoped="" ref="0x7da067b0"/>
        <function-ref name="sendAdded" scoped="" ref="0x7da06890"/>
        <function-ref name="receiveAdded" scoped="" ref="0x7da06970"/>
        <function-ref name="snoopAdded" scoped="" ref="0x7da06a50"/>
        <function-ref name="packet" scoped="" ref="0x7da06b30"/>
        <function-ref name="sendDone" scoped="" ref="0x7da06c10"/>
        <function-ref name="drop" scoped="" ref="0x7da06cf0"/>
        <function-ref name="upperSendDone" scoped="" ref="0x7da06dd0"/>
        <function-ref name="waitList" scoped="" ref="0x7da06eb0"/>
        <function-ref name="setUpperType" scoped="" ref="0x7da04010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7d9fc548" loc="50:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7d9fc548"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eac1490"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d9fc720"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9fc800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9fc8e0"/>
        <function-ref name="cancel" scoped="" ref="0x7d9fc9c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d9fcaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7d9ff990" loc="42:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7d9ff990"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d9ffb68"/>
        <function-ref name="destination" scoped="" ref="0x7d9ffc48"/>
        <function-ref name="setSource" scoped="" ref="0x7d9ffd28"/>
        <function-ref name="setDestination" scoped="" ref="0x7d9ffe08"/>
        <function-ref name="isForMe" scoped="" ref="0x7d9ffee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7d9fcea8" loc="51:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7d9fcea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d9fb0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7d9fd810" loc="46:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7d9fd810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7d9fd9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d9fe330" loc="43:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d9fe330"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eac1490"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d9fe508"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9fe5e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9fe6c8"/>
        <function-ref name="cancel" scoped="" ref="0x7d9fe7a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7d9fe888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7d9fd258" loc="45:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7d9fd258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d9fd430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d9fdb30" loc="47:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d9fdb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d9fdd08"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d9fdde8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9fdec8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9fc010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d9fc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubIntercept" ref="0x7d9fb4d0" loc="52:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubIntercept" scoped="" ref="0x7d9fb4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7d9fb6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d9fec60" loc="44:../../../tos/lib/netarch/single/SinglePacketC.nc">
      <component-ref qname="SinglePacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d9fec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d9fee38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7d9f3e28" loc="52:../../../tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7d9f3e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eac1490"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d9f2050"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9f2130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9f2210"/>
        <function-ref name="cancel" scoped="" ref="0x7d9f22f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d9f23d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7d9f52d8" loc="44:../../../tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7d9f52d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d9f54b0"/>
        <function-ref name="destination" scoped="" ref="0x7d9f5590"/>
        <function-ref name="setSource" scoped="" ref="0x7d9f5670"/>
        <function-ref name="setDestination" scoped="" ref="0x7d9f5750"/>
        <function-ref name="isForMe" scoped="" ref="0x7d9f5830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7d9f27d8" loc="53:../../../tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7d9f27d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d9f29b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7d9f3158" loc="48:../../../tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7d9f3158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7d9f3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d9f5c48" loc="45:../../../tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d9f5c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="packet_client_id_t" ref="0x7eac1490"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d9f5e20"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9f5f00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9f4010"/>
        <function-ref name="cancel" scoped="" ref="0x7d9f40f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d9f41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7d9f4b80" loc="47:../../../tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7d9f4b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d9f4d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d9f3478" loc="49:../../../tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d9f3478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d9f3650"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d9f3730"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9f3810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9f38f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d9f39d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubIntercept" ref="0x7d9f2dc0" loc="54:../../../tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubIntercept" scoped="" ref="0x7d9f2dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7d9f1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d9f45a8" loc="46:../../../tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d9f45a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d9f4780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7d9f1188" loc="55:../../../tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7d9f1188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d9f1360"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d9f1440"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9f1520"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9f1600"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d9f16e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7d9f1830" loc="56:../../../tos/lib/netarch/single/SinglePacketP.nc">
      <component-ref qname="SinglePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d9f1830"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d9f1a08"/>
        <function-ref name="source" scoped="" ref="0x7d9f1ae8"/>
        <function-ref name="address" scoped="" ref="0x7d9f1bc8"/>
        <function-ref name="destination" scoped="" ref="0x7d9f1ca8"/>
        <function-ref name="setSource" scoped="" ref="0x7d9f1d88"/>
        <function-ref name="setDestination" scoped="" ref="0x7d9f1e68"/>
        <function-ref name="type" scoped="" ref="0x7d9f0010"/>
        <function-ref name="setType" scoped="" ref="0x7d9f00f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d9f01d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7d9f02b0"/>
        <function-ref name="localGroup" scoped="" ref="0x7d9f0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7d9a58c0" loc="44:../../../tos/lib/netarch/single/SingleProcessorSenderC.nc">
      <component-ref qname="DsrC.DsrSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7d9a58c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d9a5a98"/>
        <function-ref name="destination" scoped="" ref="0x7d9a5b78"/>
        <function-ref name="setSource" scoped="" ref="0x7d9a5c58"/>
        <function-ref name="setDestination" scoped="" ref="0x7d9a5d38"/>
        <function-ref name="isForMe" scoped="" ref="0x7d9a5e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d9a4be8" loc="46:../../../tos/lib/netarch/single/SingleProcessorSenderC.nc">
      <component-ref qname="DsrC.DsrSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d9a4be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d9a4dc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d9a4ea0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9a3010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9a30f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d9a31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d9a5228" loc="43:../../../tos/lib/netarch/single/SingleProcessorSenderC.nc">
      <component-ref qname="DsrC.DsrSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d9a5228"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d9a5400"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9a54e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9a55c0"/>
        <function-ref name="cancel" scoped="" ref="0x7d9a56a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d9a5780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d9a4010" loc="45:../../../tos/lib/netarch/single/SingleProcessorSenderC.nc">
      <component-ref qname="DsrC.DsrSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d9a4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d9a41e8"/>
        <function-ref name="source" scoped="" ref="0x7d9a42c8"/>
        <function-ref name="address" scoped="" ref="0x7d9a43a8"/>
        <function-ref name="destination" scoped="" ref="0x7d9a4488"/>
        <function-ref name="setSource" scoped="" ref="0x7d9a4568"/>
        <function-ref name="setDestination" scoped="" ref="0x7d9a4648"/>
        <function-ref name="type" scoped="" ref="0x7d9a4728"/>
        <function-ref name="setType" scoped="" ref="0x7d9a4808"/>
        <function-ref name="isForMe" scoped="" ref="0x7d9a48e8"/>
        <function-ref name="setGroup" scoped="" ref="0x7d9a49c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7d9a4aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d339c00" loc="43:../../../tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="DsrC.DsrSendC.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d339c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d339dd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d339eb8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d337010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d3370f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d3371d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d339568" loc="42:../../../tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="DsrC.DsrSendC.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d339568"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d339740"/>
        <function-ref name="getPayload" scoped="" ref="0x7d339820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d339900"/>
        <function-ref name="cancel" scoped="" ref="0x7d3399e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d339ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngineClient" ref="0x7d3336d8" loc="41:../../../tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <component-ref qname="DsrC.DsrSendC.PacketSenderC.PacketEngineClientP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngineClient" scoped="" ref="0x7d3336d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngineClient"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7d3338b0"/>
        <function-ref name="defaultLowerType" scoped="" ref="0x7d333990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7d99f3b0" loc="43:../../../tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d99f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d99f588"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d99f668"/>
        <function-ref name="getPayload" scoped="" ref="0x7d99f748"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d99f828"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d99f908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SubPacket" ref="0x7d99fa88" loc="44:../../../tos/lib/netarch/multihop/PacketTransceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7d99fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d99fc60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d99fd40"/>
        <function-ref name="getPayload" scoped="" ref="0x7d99fe20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d99ff00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d99e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d331e38" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d331e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d326050"/>
        <function-ref name="getPayload" scoped="" ref="0x7d326130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d326210"/>
        <function-ref name="cancel" scoped="" ref="0x7d3262f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7d3263d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d326510" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d326510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d3266e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d3267c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d3268a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d326988"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d326a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d326ba8" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d326ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d326d80"/>
        <function-ref name="source" scoped="" ref="0x7d326e60"/>
        <function-ref name="address" scoped="" ref="0x7d325010"/>
        <function-ref name="destination" scoped="" ref="0x7d3250f0"/>
        <function-ref name="setSource" scoped="" ref="0x7d3251d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7d3252b0"/>
        <function-ref name="type" scoped="" ref="0x7d325390"/>
        <function-ref name="setType" scoped="" ref="0x7d325470"/>
        <function-ref name="isForMe" scoped="" ref="0x7d325550"/>
        <function-ref name="setGroup" scoped="" ref="0x7d325630"/>
        <function-ref name="localGroup" scoped="" ref="0x7d325710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7d325870" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7d325870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7d325a48"/>
        <function-ref name="noAck" scoped="" ref="0x7d325b28"/>
        <function-ref name="wasAcked" scoped="" ref="0x7d325c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7d320b10" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7d320b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d320ce8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d320dc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d320ea8"/>
        <function-ref name="cancel" scoped="" ref="0x7d31c010"/>
        <function-ref name="sendDone" scoped="" ref="0x7d31c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7d31c260" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d31c260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d31c438"/>
        <function-ref name="getPayload" scoped="" ref="0x7d31c518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d31c5f8"/>
        <function-ref name="cancel" scoped="" ref="0x7d31c6d8"/>
        <function-ref name="sendDone" scoped="" ref="0x7d31c7b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7d31c8f8" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d31c8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d31cad0"/>
        <function-ref name="source" scoped="" ref="0x7d31cbb0"/>
        <function-ref name="address" scoped="" ref="0x7d31cc90"/>
        <function-ref name="destination" scoped="" ref="0x7d31cd70"/>
        <function-ref name="setSource" scoped="" ref="0x7d31ce50"/>
        <function-ref name="setDestination" scoped="" ref="0x7d31b010"/>
        <function-ref name="type" scoped="" ref="0x7d31b0f0"/>
        <function-ref name="setType" scoped="" ref="0x7d31b1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7d31b2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7d31b390"/>
        <function-ref name="localGroup" scoped="" ref="0x7d31b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d324f28" loc="39:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d324f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d323110"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d3231f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d3232d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d3233b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d323490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d324c10" loc="38:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d324c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d324de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d3235d0" loc="40:/opt/tinyos-2.x/tos/system/AMSnoopingReceiverC.nc">
      <component-ref qname="SingleProtocolC.TransceiverC.AMSnoopingReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d3235d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d3237a8"/>
        <function-ref name="source" scoped="" ref="0x7d323888"/>
        <function-ref name="address" scoped="" ref="0x7d323968"/>
        <function-ref name="destination" scoped="" ref="0x7d323a48"/>
        <function-ref name="setSource" scoped="" ref="0x7d323b28"/>
        <function-ref name="setDestination" scoped="" ref="0x7d323c08"/>
        <function-ref name="type" scoped="" ref="0x7d323ce8"/>
        <function-ref name="setType" scoped="" ref="0x7d323dc8"/>
        <function-ref name="isForMe" scoped="" ref="0x7d323ea8"/>
        <function-ref name="setGroup" scoped="" ref="0x7d322010"/>
        <function-ref name="localGroup" scoped="" ref="0x7d3220f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d7c2ae8" loc="43:../../../tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="UnicastCountToLedsAppC.AMSenderC.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d7c2ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d7c2cc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d7c2da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7d7c2e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d7c0010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d7c00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7d7c2450" loc="42:../../../tos/lib/netarch/multihop/PacketSenderC.nc">
      <component-ref qname="UnicastCountToLedsAppC.AMSenderC.PacketSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7d7c2450"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7d7c2628"/>
        <function-ref name="getPayload" scoped="" ref="0x7d7c2708"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d7c27e8"/>
        <function-ref name="cancel" scoped="" ref="0x7d7c28c8"/>
        <function-ref name="sendDone" scoped="" ref="0x7d7c29a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketEngineClient" ref="0x7d30d730" loc="41:../../../tos/lib/netarch/multihop/PacketEngineClientP.nc">
      <component-ref qname="UnicastCountToLedsAppC.AMSenderC.PacketSenderC.PacketEngineClientP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketEngineClient" scoped="" ref="0x7d30d730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketEngineClient"/>
      </instance>
      <interface-functions>
        <function-ref name="upperType" scoped="" ref="0x7d30d908"/>
        <function-ref name="defaultLowerType" scoped="" ref="0x7d30d9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SinglePacket" ref="0x7d996ef8" loc="44:../../../tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="UnicastCountToLedsAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SinglePacket" scoped="" ref="0x7d996ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SinglePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7d9950e0"/>
        <function-ref name="destination" scoped="" ref="0x7d9951c0"/>
        <function-ref name="setSource" scoped="" ref="0x7d9952a0"/>
        <function-ref name="setDestination" scoped="" ref="0x7d995380"/>
        <function-ref name="isForMe" scoped="" ref="0x7d995460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d988230" loc="46:../../../tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="UnicastCountToLedsAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d988230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d988408"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d9884e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7d9885c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d9886a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d988788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d996be0" loc="43:../../../tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="UnicastCountToLedsAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d996be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d996db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7d9955a0" loc="45:../../../tos/lib/netarch/single/SingleReceiverC.nc">
      <component-ref qname="UnicastCountToLedsAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7d9955a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7d995778"/>
        <function-ref name="source" scoped="" ref="0x7d995858"/>
        <function-ref name="address" scoped="" ref="0x7d995938"/>
        <function-ref name="destination" scoped="" ref="0x7d995a18"/>
        <function-ref name="setSource" scoped="" ref="0x7d995af8"/>
        <function-ref name="setDestination" scoped="" ref="0x7d995bd8"/>
        <function-ref name="type" scoped="" ref="0x7d995cb8"/>
        <function-ref name="setType" scoped="" ref="0x7d995d98"/>
        <function-ref name="isForMe" scoped="" ref="0x7d995e78"/>
        <function-ref name="setGroup" scoped="" ref="0x7d988010"/>
        <function-ref name="localGroup" scoped="" ref="0x7d9880f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7d307358" loc="42:../../../tos/lib/netarch/multihop/PacketReceiverC.nc">
      <component-ref qname="UnicastCountToLedsAppC.AMReceiverC.PacketReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7d307358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7d307530"/>
        <function-ref name="payloadLength" scoped="" ref="0x7d307610"/>
        <function-ref name="getPayload" scoped="" ref="0x7d3076f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7d3077d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7d3078b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7d307040" loc="41:../../../tos/lib/netarch/multihop/PacketReceiverC.nc">
      <component-ref qname="UnicastCountToLedsAppC.AMReceiverC.PacketReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7d307040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7d307218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7d9876d0" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="UnicastCountToLedsAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7d9876d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f120188"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120370"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7d984068"/>
        <function-ref name="fired" scoped="" ref="0x7d986470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7d986a10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7d986830"/>
        <function-ref name="getdt" scoped="" ref="0x7d984428"/>
        <function-ref name="gett0" scoped="" ref="0x7d984248"/>
        <function-ref name="isRunning" scoped="" ref="0x7d986650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7d987cf8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7d986d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7d986010"/>
        <function-ref name="stop" scoped="" ref="0x7d986290"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.6 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7ef832d8" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10;</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7ef92b80" loc="49:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7ef61268" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7ef61010" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7ef70c98" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.&#10;</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7ef63288" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10;</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7ef63010" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7ef63860" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10;</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7ef635e0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7ef63c48" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10;</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10;</short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7ef137e0" loc="33:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7ef13af8" loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7ef131b0" loc="31:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7ef12140" loc="36:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7ef134c8" loc="32:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7ef13e10" loc="35:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7ef22b80" loc="29:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clr" ref="0x7ef22e90" loc="30:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.&#10;&#10;</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f2322f0" loc="46:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f232ad8" loc="61:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f232708" loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10;</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f2129e8" loc="56:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f212df0" loc="64:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f052010" loc="59:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep. </short>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7efe3cc0" loc="54:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f160920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7eff2bc0" loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7eb54d90" loc="92:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10;</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7eb54af0" loc="92:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7eb52938" loc="117:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.&#10;&#10;</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7eb526e8" loc="117:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7eb547d0" loc="83:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents. </short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7eb523c8" loc="109:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents. </short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.6 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7eb80600" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba1a28"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7eb81d30" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba1a28"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7eb81ee0" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eb80088" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7eb73198" loc="124:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb75ce0" loc="124:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eb75e68" loc="124:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7eb75998" loc="112:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7eb80d30" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb80948" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7eb75548" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb750a8" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7eb75230" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7eb455e8" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet. </short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  msg    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb45398" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7eb45c58" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  msg    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb45938" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7eb423c0" loc="115:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param msg   the packet &#10; @param len   the length of payload required&#10; @return      a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb44d60" loc="115:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eb44ee8" loc="115:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7eb44a18" loc="95:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7eb44540" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param msg   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb44010" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eb44198" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <function event="" provided="0" name="receive" ref="0x7eb84e58" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  msg      the receied packet&#10; @param  payload  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return          a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
              <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eb845c8" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7eb84768" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7eb848f0" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7eb71b48" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7eb71b48"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7eb64ab8" loc="125:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7eb70ec8" loc="72:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7eb65ef0" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7eb65960" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7eb65af0" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7eb65638" loc="87:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.&#10;</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7eb622e8" loc="140:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7eb64ef8" loc="133:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7eb652a8" loc="81:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7eb702b8" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7eb70010" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7eb64760" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7eb64238" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7eb643c8" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7eb70888" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7eb705e0" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7eb70b90" loc="67:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <short>&#10; Constants for manipulating LEDs.&#10;&#10;</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7ebf3c68" loc="50:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7ebf2070" loc="56:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7ebf23e0" loc="61:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7ebf2b28" loc="72:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7ebf1608" loc="89:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7ebf1b50" loc="106:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7ebf2750" loc="66:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7ebe5268" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask. </short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7ebf1e88" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7ebf38f8" loc="45:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7ebf2e98" loc="78:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7ebf1230" loc="83:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7eb31ee8" loc="166:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param amsg the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7eba1850"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb31ba0" loc="166:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7eb34148" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba1a28"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb35e68" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7eb35530" loc="57:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.&#10;</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba1a28"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="destination" ref="0x7eb35b18" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba1a28"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb35888" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7eb33328" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet. </short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba1a28"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb34d20" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7eb34eb0" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba1a28"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7eb349d8" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet. </short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba1a28"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb34490" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7eb34620" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba1a28"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7eb31010" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.&#10;</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb33da0" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7eb31850" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet. </short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  amsg    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb31350" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7eb314d8" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7eb33a58" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb33670" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7eb30670" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param amsg the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7eba1850"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7eb30248" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7eb303d8" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7eba1850"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7eb30a20" loc="184:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.&#10;&#10;</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7eba1850"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SinglePacket" loc="39:../../../tos/lib/netarch/single/SinglePacket.nc">
      <documentation loc="39:../../../tos/lib/netarch/single/SinglePacket.nc">
        <short>&#10;&#10; Access and set the properties of a multihop packet with a single&#10;&#10; node address based destination.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access and set the properties of a multihop packet with a single&#10;&#10; node address based destination.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="source" ref="0x7eaa3258" loc="47:../../../tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="41:../../../tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; Returns the address of the source of the multihop packet.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns the address of the source of the multihop packet.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @return The source node of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba1a28"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eaa3010" loc="47:../../../tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7eaa1398" loc="67:../../../tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="61:../../../tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; Returns the address of the destination of the multihop packet.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns the address of the destination of the multihop packet.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @return The destination node of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba1a28"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eaa1140" loc="67:../../../tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7eaa3c10" loc="59:../../../tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="49:../../../tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; Sets the address of the source of the multihop packet. </short>
          <long>&#10;&#10; Sets the address of the source of the multihop packet.  As with&#10;&#10; the AM layer, this is set by the multihop layer, and should not&#10;&#10; need to be used when sending a packet.  However, buffers or other&#10;&#10; storage components may wish to use it to store the address for&#10;&#10; later retrieval.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @param src The source node of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba1a28"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eaa3750" loc="59:../../../tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="src" ref="0x7eaa38e0" loc="59:../../../tos/lib/netarch/single/SinglePacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba1a28"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7eaa1d58" loc="79:../../../tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="69:../../../tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; Sets the address of the destination of the multihop packet. </short>
          <long>&#10;&#10; Sets the address of the destination of the multihop packet.  As&#10;&#10; with the AM layer, this is set by the multihop layer, and should not&#10;&#10; need to be used when sending a packet.  However, buffers or other&#10;&#10; storage components may wish to use it to store the address for&#10;&#10; later retrieval.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @param dest The destination node of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba1a28"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eaa1890" loc="79:../../../tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dest" ref="0x7eaa1a20" loc="79:../../../tos/lib/netarch/single/SinglePacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba1a28"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7eaa05c8" loc="89:../../../tos/lib/netarch/single/SinglePacket.nc">
        <documentation loc="81:../../../tos/lib/netarch/single/SinglePacket.nc">
          <short>&#10;&#10; As with the AM layer, returns whether this node is the destination&#10;&#10; for the packet, but can also include special processing for broadcast&#10;&#10; addresses or similar values.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; As with the AM layer, returns whether this node is the destination&#10;&#10; for the packet, but can also include special processing for broadcast&#10;&#10; addresses or similar values.&#10;&#10;&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @return Whether this node is the destination of the multihop packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7eaa0288" loc="89:../../../tos/lib/netarch/single/SinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IndexedIterator" loc="40:../../../tos/interfaces/IndexedIterator.nc">
      <parameters>
        <typedef name="iterator_item_t" ref="0x7ea45c00" loc="40:../../../tos/interfaces/IndexedIterator.nc">
          <interfacedef-ref qname="IndexedIterator"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7ea45c00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="end" ref="0x7ea44ae8" loc="56:../../../tos/interfaces/IndexedIterator.nc">
        <documentation loc="50:../../../tos/interfaces/IndexedIterator.nc">
          <short>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10; @param m Current item's index.&#10;&#10; @return TRUE if the current item is the end, FALSE otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="iterator_end_t" ref="0x7ea50b50"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7ea45c00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7ea448a8" loc="56:../../../tos/interfaces/IndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7ea45c00"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="next" ref="0x7ea443d8" loc="48:../../../tos/interfaces/IndexedIterator.nc">
        <documentation loc="42:../../../tos/interfaces/IndexedIterator.nc">
          <short>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10; @param m Current item's index.&#10;&#10; @return The next item's index.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7ea45c00"/></type-var>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7ea45c00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7ea441d8" loc="48:../../../tos/interfaces/IndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7ea45c00"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketEngine" loc="46:../../../tos/lib/netarch/multihop/PacketEngine.nc">
      <documentation loc="46:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <short>&#10;&#10; The PacketEngine interface connects the packet engine to any data&#10;&#10; control components. </short>
        <long>&#10;&#10; The PacketEngine interface connects the packet engine to any data&#10;&#10; control components.  Data control components can implement any number&#10;&#10; of functions on set of packets.  In fact, an entire routing Allow a data control component to manage its packets in the data&#10;&#10; engine.  Packet IDs are passed to the control component to simplify&#10;&#10; management of any additional data structures for each packet in the&#10;&#10; buffer.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperType" ref="0x7ea56bd0" loc="179:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="173:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Returns the upper layer AM type of a given packet.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns the upper layer AM type of a given packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @return The upper layer AM type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_am_id_t" ref="0x7eac0258"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ea569a8" loc="179:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="send" ref="0x7ea64e58" loc="98:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="89:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Marks this packet as next in line to be sent. </short>
          <long>&#10;&#10; Marks this packet as next in line to be sent.  The packet must be one&#10;&#10; that was signaled via the added event and cannot be the ID of any&#10;&#10; arbitrary packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @return SUCCESS if the action takes place, FAIL if not, EINVAL if the&#10;&#10;         packet is not found in the buffer or is not a waiting packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ea64b60" loc="98:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7ea61b80" loc="135:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="126:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Passes this packet to upper layer as a received packet immediately. </short>
          <long>&#10;&#10; Passes this packet to upper layer as a received packet immediately.  The&#10;&#10; packet must be one that was signaled via the added event and cannot be&#10;&#10; the ID of any arbitrary packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @return SUCCESS if the action takes place, FAIL if not, EINVAL if the&#10;&#10;         packet is not found in the buffer or is not a waiting packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ea61860" loc="135:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendIntercept" ref="0x7ea61378" loc="124:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="115:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Marks this packet as next in line to be sent, but allows the upper layer&#10;&#10; to intercept the packet first. </short>
          <long>&#10;&#10; Marks this packet as next in line to be sent, but allows the upper layer&#10;&#10; to intercept the packet first.  The packet must be one that was signaled&#10;&#10; via the added event and cannot be the ID of any arbitrary packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @return SUCCESS if the action takes place, FAIL if not, EINVAL if the&#10;&#10;         packet is not found in the buffer or is not a waiting packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ea61010" loc="124:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendAdded" ref="0x7ea66ad8" loc="57:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="48:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; A packet to be sent was added to the packet engine by an upper layer.&#10;&#10;</short>
          <long>&#10;&#10; A packet to be sent was added to the packet engine by an upper layer.&#10;&#10; Unlike the Receive interface, this event does not allow swapping packet&#10;&#10; buffers because ownership of the packet does not leave the packet&#10;&#10; engine.&#10;&#10;&#10;&#10; @param pid Packet ID within the packet engine.&#10;&#10; @param msg Pointer to the packet that was added.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ea66618" loc="57:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7ea667c8" loc="57:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveAdded" ref="0x7ea654c8" loc="68:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="59:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; A received packet was added to the packet engine from a lower layer.&#10;&#10;</short>
          <long>&#10;&#10; A received packet was added to the packet engine from a lower layer.&#10;&#10; Unlike the Receive interface, this event does not allow swapping packet&#10;&#10; buffers because ownership of the packet does not leave the packet&#10;&#10; engine.&#10;&#10;&#10;&#10; @param pid Packet ID within the packet engine.&#10;&#10; @param msg Pointer to the packet that was added.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ea65010" loc="68:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7ea651c0" loc="68:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="snoopAdded" ref="0x7ea65ec8" loc="79:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="70:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; An overheard packet (this node is not the intended destination) was&#10;&#10; added to the packet engine from a lower layer. </short>
          <long>&#10;&#10; An overheard packet (this node is not the intended destination) was&#10;&#10; added to the packet engine from a lower layer.  Unlike the Receive&#10;&#10; interface, this event does not allow swapping packet buffers because&#10;&#10; ownership of the packet does not leave the packet engine.&#10;&#10;&#10;&#10; @param pid Packet ID within the packet engine.&#10;&#10; @param msg Pointer to the packet that was added.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ea659b0" loc="79:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7ea65b60" loc="79:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="packet" ref="0x7ea64678" loc="87:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="81:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Gets the packet associated with a given ID in the packet engine.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Gets the packet associated with a given ID in the packet engine.&#10;&#10;&#10;&#10; @param pid ID of packet to access.&#10;&#10; @return Pointer to the packet, NULL if the ID is not in use or too large.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
              <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ea643e8" loc="87:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ea63ac8" loc="113:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="100:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Signals the completion of a send event to the lower layer. </short>
          <long>&#10;&#10; Signals the completion of a send event to the lower layer.  The return&#10;&#10; value indicates what should be done next with the packet.&#10;&#10;&#10;&#10; @param pid Packet ID within the packet engine.&#10;&#10; @param msg Pointer to the packet.&#10;&#10; @param result SUCCESS if it was transmitted successfully, FAIL if&#10;&#10;               it was not, ECANCEL if it was cancelled by the upper&#10;&#10;               layer.&#10;&#10; @return If the packet is no longer needed, return PKT_SEND_DONE. If the&#10;&#10;         packet should be resent, return PKT_SEND_RETRY.  If the packet&#10;&#10;         should move back to the wait state, return PKT_SEND_WAIT.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_send_action_t" ref="0x7eac0960"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ea63380" loc="113:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7ea63530" loc="113:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="result" ref="0x7ea636b8" loc="113:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drop" ref="0x7ea60380" loc="146:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="137:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Drops the packet from the buffer immediately. </short>
          <long>&#10;&#10; Drops the packet from the buffer immediately.  The packet must be one&#10;&#10; that was signaled via the added event and cannot be the ID of any&#10;&#10; arbitrary packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @return SUCCESS if the action takes place, FAIL if not, EINVAL if the&#10;&#10;         packet is not found in the buffer or is not a waiting packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ea60088" loc="146:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="upperSendDone" ref="0x7ea60d68" loc="158:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="148:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Manually signals the upper layer sendDone event with the given result&#10;&#10; for the given packet. </short>
          <long>&#10;&#10; Manually signals the upper layer sendDone event with the given result&#10;&#10; for the given packet.  This should be used carefully to avoid signally&#10;&#10; sendDone multiple times for the same packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @param result Send result.&#10;&#10; @return SUCCESS if the action takes place, FAIL if not, EINVAL if the&#10;&#10;         packet is not found in the buffer or is not a waiting packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ea60870" loc="158:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
            </type-int>
          </variable>
          <variable name="result" ref="0x7ea609f8" loc="158:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="waitList" ref="0x7ea564b0" loc="171:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="160:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Access a list of all packets still waiting for a control descision. </short>
          <long>&#10;&#10; Access a list of all packets still waiting for a control descision.  For&#10;&#10; example, if a routing path is found to destination B, this could be used&#10;&#10; to check if any other packets were also waiting for that same path since&#10;&#10; they can now be sent.  This command gives the index of the first packet&#10;&#10; in a list of waiting packets.  Traverse the rest of the list with the&#10;&#10; PacketWaitList interface provided by the engine.&#10;&#10;&#10;&#10; @return The ID for the first waiting packet, bufferSize if there aren't&#10;&#10;         any waiting packets.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setUpperType" ref="0x7ea554b8" loc="187:../../../tos/lib/netarch/multihop/PacketEngine.nc">
        <documentation loc="181:../../../tos/lib/netarch/multihop/PacketEngine.nc">
          <short>&#10;&#10; Sets the upper layer AM type of a given packet.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Sets the upper layer AM type of a given packet.&#10;&#10;&#10;&#10; @param pid ID of the packet.&#10;&#10; @param newUid The new upper layer AM type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pid" ref="0x7ea55100" loc="187:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="packet_id_t" ref="0x7eac1b50"/></typename>
            </type-int>
          </variable>
          <variable name="newUid" ref="0x7ea55288" loc="187:../../../tos/lib/netarch/multihop/PacketEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10;</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7ea353b8" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param msg - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ea35010" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7ea35a50" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param msg - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ea35720" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7ea341e8" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10;</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param msg - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ea35dc0" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StaticIndexedIterator" loc="42:../../../tos/interfaces/StaticIndexedIterator.nc">
      <documentation loc="42:../../../tos/interfaces/StaticIndexedIterator.nc">
        <short>&#10;&#10; Iteration operations using indices. </short>
        <long>&#10;&#10; Iteration operations using indices.  This interface is the static or&#10;&#10; stateless version which requires a pointer to the structure containing&#10;&#10; the data to be passed in along with the index.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_source_t" ref="0x7e9e3be8" loc="42:../../../tos/interfaces/StaticIndexedIterator.nc">
          <interfacedef-ref qname="StaticIndexedIterator"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_source_t" scoped="" ref="0x7e9e3be8"/></type-var>
        </typedef>
        <typedef name="iterator_item_t" ref="0x7e9e3d00" loc="42:../../../tos/interfaces/StaticIndexedIterator.nc">
          <interfacedef-ref qname="StaticIndexedIterator"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e9e3d00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="end" ref="0x7e9e1038" loc="60:../../../tos/interfaces/StaticIndexedIterator.nc">
        <documentation loc="53:../../../tos/interfaces/StaticIndexedIterator.nc">
          <short>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10; @param d Pointer to the data source.&#10;&#10; @param m Current item's index.&#10;&#10; @return TRUE if the current item is the end, FALSE otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="iterator_end_t" ref="0x7ea50b50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="data_source_t" scoped="" ref="0x7e9e3be8"/></type-var>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e9e3d00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="d" ref="0x7e9e2c28" loc="60:../../../tos/interfaces/StaticIndexedIterator.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="data_source_t" scoped="" ref="0x7e9e3be8"/></type-var>
            </type-pointer>
          </variable>
          <variable name="m" ref="0x7e9e2db8" loc="60:../../../tos/interfaces/StaticIndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e9e3d00"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="next" ref="0x7e9e2718" loc="51:../../../tos/interfaces/StaticIndexedIterator.nc">
        <documentation loc="44:../../../tos/interfaces/StaticIndexedIterator.nc">
          <short>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10; @param d Pointer to the data source.&#10;&#10; @param m Current item's index.&#10;&#10; @return The next item's index.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="StaticIndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e9e3d00"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="data_source_t" scoped="" ref="0x7e9e3be8"/></type-var>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e9e3d00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="d" ref="0x7e9e2358" loc="51:../../../tos/interfaces/StaticIndexedIterator.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="data_source_t" scoped="" ref="0x7e9e3be8"/></type-var>
            </type-pointer>
          </variable>
          <variable name="m" ref="0x7e9e24e8" loc="51:../../../tos/interfaces/StaticIndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e9e3d00"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TlvSinglePacket" loc="42:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
      <function command="" provided="0" name="value" ref="0x7ea012c8" loc="75:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
        <documentation loc="68:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
          <short>&#10;&#10; Returns the value in this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the value in this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then NULL is returned.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @return Pointer to the value in this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7ea01010" loc="75:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x7ea004e0" loc="100:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
        <documentation loc="93:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
          <short>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @return SUCCESS if the type instance was found and removed, EINVAL&#10;&#10;         otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7ea00288" loc="100:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="length" ref="0x7ea02010" loc="51:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
        <documentation loc="44:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
          <short>&#10;&#10; Returns the length of this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the length of this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then 0 is returned.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @return Length of this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7ea03d50" loc="51:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x7ea02aa8" loc="66:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
        <documentation loc="53:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
          <short>&#10;&#10; Sets the length of a type instance within the TLV block. </short>
          <long>&#10;&#10; Sets the length of a type instance within the TLV block.  This&#10;&#10; operation moves data around and should always be performed before&#10;&#10; storing a value with a different length than the one currently&#10;&#10; stored.  If the type instance is not found in the block or there&#10;&#10; is not enough room for the new length, returns ESIZE.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @return SUCCESS if the type instance was found, enough space was&#10;&#10;         available, and the length was set, ESIZE if there wasn't&#10;&#10;         enough space, EINVAL if the instance wasn't found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7ea02510" loc="66:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ea02698" loc="66:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x7ea01d70" loc="91:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
        <documentation loc="77:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
          <short>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance. </short>
          <long>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance.  This operation moves data around and&#10;&#10; should always be performed before storing a value of the given&#10;&#10; type.  The type instance will be added to the block as long as&#10;&#10; there are at least len + 2 bytes available in the buffer holding&#10;&#10; the TLV block.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @return SUCCESS if enough space was available and the length was&#10;&#10;         set, EALREADY if an instance already exists, ESIZE if&#10;&#10;         there wasn't enough space.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSinglePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7ea017c0" loc="91:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ea01948" loc="91:../../../tos/lib/netarch/tlv/TlvSinglePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TlvBlockPacket" loc="39:../../../tos/lib/netarch/tlv/TlvBlockPacket.nc">
      <documentation loc="39:../../../tos/lib/netarch/tlv/TlvBlockPacket.nc">
        <short>&#10;&#10; Manipulate a packet with a TLV block independent of the types it&#10;&#10; contains.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Manipulate a packet with a TLV block independent of the types it&#10;&#10; contains.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="remove" ref="0x7ea11738" loc="58:../../../tos/lib/netarch/tlv/TlvBlockPacket.nc">
        <documentation loc="52:../../../tos/lib/netarch/tlv/TlvBlockPacket.nc">
          <short>&#10;&#10; Removes a TLV block from the beginning of a given packet.</short>
          <long>&#10;&#10; Removes a TLV block from the beginning of a given packet. Other&#10;&#10; data is moved to fill the gap.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvBlockPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7ea11500" loc="58:../../../tos/lib/netarch/tlv/TlvBlockPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="length" ref="0x7ea11ea0" loc="67:../../../tos/lib/netarch/tlv/TlvBlockPacket.nc">
        <documentation loc="60:../../../tos/lib/netarch/tlv/TlvBlockPacket.nc">
          <short>&#10;&#10; Returns the length of the entire TLV block, including the block&#10;&#10; length value itself.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns the length of the entire TLV block, including the block&#10;&#10; length value itself.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @return Length of the TLV block.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvBlockPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7ea11c30" loc="67:../../../tos/lib/netarch/tlv/TlvBlockPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x7ea11010" loc="50:../../../tos/lib/netarch/tlv/TlvBlockPacket.nc">
        <documentation loc="41:../../../tos/lib/netarch/tlv/TlvBlockPacket.nc">
          <short>&#10;&#10; Adds a TLV block at the beginning of a given packet. </short>
          <long>&#10;&#10; Adds a TLV block at the beginning of a given packet.  Other&#10;&#10; data is moved to accomidate it.  This must be called on any new TLV&#10;&#10; block before using any other TLV commands.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @return SUCCESS if the add completed, ESIZE if there wasn't enough&#10;&#10;         space.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvBlockPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7ea12cc0" loc="50:../../../tos/lib/netarch/tlv/TlvBlockPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TlvMultiplePacket" loc="42:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
      <documentation loc="42:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
        <short>&#10;&#10; Access data stored in a generalized Type-Length-Value (TLV) block&#10;&#10; within a packet. </short>
        <long>&#10;&#10; Access data stored in a generalized Type-Length-Value (TLV) block&#10;&#10; within a packet.  This interface, when used together with the TlvList&#10;&#10; interface, has no restrictions of the number of instances of a type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="value" ref="0x7e9f1080" loc="82:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
        <documentation loc="74:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
          <short>&#10;&#10; Returns the value in this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the value in this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then NULL is returned.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @return Pointer to the value in this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiplePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e9f2bf0" loc="82:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e9f2d80" loc="82:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="list" ref="0x7e9f0e30" loc="120:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
        <documentation loc="111:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
          <short>&#10;&#10; Access a list of all instances of a type within the TLV block.&#10;&#10;</short>
          <long>&#10;&#10; Access a list of all instances of a type within the TLV block.&#10;&#10; This command gives the key for the first such instance.&#10;&#10; Traverse the rest of the list with the TlvList interface.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @return The key for the first instance of a type in the TLV&#10;&#10;         block.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiplePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e9f0b50" loc="120:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x7e9f0640" loc="109:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
        <documentation loc="101:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
          <short>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @return SUCCESS if the type instance was found and removed, EINVAL&#10;&#10;         otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiplePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e9f0228" loc="109:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e9f03b8" loc="109:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="length" ref="0x7e9f39e8" loc="52:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
        <documentation loc="44:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
          <short>&#10;&#10; Returns the length of this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the length of this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then 0 is returned.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @return Length of this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiplePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e9f35a0" loc="52:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e9f3730" loc="52:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x7e9f26f0" loc="71:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
        <documentation loc="54:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
          <short>&#10;&#10; Sets the length of a type instance within the TLV block. </short>
          <long>&#10;&#10; Sets the length of a type instance within the TLV block.  This&#10;&#10; operation moves data around and should always be performed before&#10;&#10; storing a value with a different length than the one currently&#10;&#10; stored.  If the type instance is not found in the block or there&#10;&#10; is not enough room for the new length, returns ESIZE.&#10;&#10;&#10;&#10; Setting the length of a type instance typically invalidates any&#10;&#10; keys received prior to the change.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @return SUCCESS if the type instance was found, enough space was&#10;&#10;         available, and the length was set, ESIZE if wasn't enough&#10;&#10;         space, EINVAL if the instance wasn't found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiplePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e9f3ef8" loc="71:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e9f20b0" loc="71:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x7e9f2248" loc="72:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x7e9f1d10" loc="98:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
        <documentation loc="84:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
          <short>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance. </short>
          <long>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance.  This operation moves data around and&#10;&#10; should always be performed before storing a value of the given&#10;&#10; type.  The type instance will be added to the block as long as&#10;&#10; there are at least len + 2 bytes available in the buffer holding&#10;&#10; the TLV block.&#10;&#10;&#10;&#10; @param pkt Pointer to the packet.&#10;&#10; @param key Pointer to store the key for the TLV type instance.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @return SUCCESS if enough space was available and the length was&#10;&#10;         set, ESIZE if there wasn't enough space.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiplePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7e9f1588" loc="98:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e9f1738" loc="98:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e9f18d0" loc="99:../../../tos/lib/netarch/tlv/TlvMultiplePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TlvMultiple" loc="42:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
      <documentation loc="42:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
        <short>&#10;&#10; Access data stored in a generalized Type-Length-Value (TLV) block.&#10;&#10;</short>
        <long>&#10;&#10; Access data stored in a generalized Type-Length-Value (TLV) block.&#10;&#10; This interface, when used together with the TlvList interface, has&#10;&#10; no restrictions of the number of instances of a type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="value" ref="0x7e986378" loc="85:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="77:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Returns the value in this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the value in this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then NULL is returned.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @return Pointer to the value in this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e987ed8" loc="85:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e986088" loc="85:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="list" ref="0x7e983648" loc="126:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="117:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Access a list of all instances of a type within the TLV block.&#10;&#10;</short>
          <long>&#10;&#10; Access a list of all instances of a type within the TLV block.&#10;&#10; This command gives the key for the first such instance.&#10;&#10; Traverse the rest of the list with the TlvList interface.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @return The key for the first instance of a type in the TLV&#10;&#10;         block.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e983360" loc="126:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x7e985e58" loc="115:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="106:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @param trailLen Current length of trailing data.&#10;&#10; @return SUCCESS if the type instance was found and removed, EINVAL&#10;&#10;         otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e985870" loc="115:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e985a00" loc="115:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
            </type-int>
          </variable>
          <variable name="trailLen" ref="0x7e985b90" loc="115:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="length" ref="0x7e990960" loc="52:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="44:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Returns the length of this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the length of this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then 0 is returned.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @return Length of this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e990510" loc="52:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e9906a0" loc="52:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x7e987a08" loc="73:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="54:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Sets the length of a type instance within the TLV block. </short>
          <long>&#10;&#10; Sets the length of a type instance within the TLV block.  This&#10;&#10; operation moves data around and should always be performed before&#10;&#10; storing a value with a different length than the one currently&#10;&#10; stored.  If the type instance is not found in the block or there&#10;&#10; is not enough room for the new length, returns ESIZE.&#10;&#10;&#10;&#10; Setting the length of a type instance typically invalidates any&#10;&#10; keys received prior to the change.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Key for the TLV type instance.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @param trailLen Current length of trailing data.&#10;&#10; @param maxLen Maximum possible length of TLV block and trailing data.&#10;&#10; @return SUCCESS if the type instance was found, enough space was&#10;&#10;         available, and the length was set, ESIZE if wasn't enough&#10;&#10;         space, EINVAL if the instance wasn't found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e990e40" loc="73:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e987010" loc="73:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x7e9871a8" loc="74:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="trailLen" ref="0x7e987338" loc="74:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7e9874d0" loc="75:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x7e985398" loc="103:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
        <documentation loc="87:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
          <short>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance. </short>
          <long>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance.  This operation moves data around and&#10;&#10; should always be performed before storing a value of the given&#10;&#10; type.  The type instance will be added to the block as long as&#10;&#10; there are at least len + 2 bytes available in the buffer holding&#10;&#10; the TLV block.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param key Pointer to store the key for the TLV type instance.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @param trailLen Current length of trailing data.&#10;&#10; @param maxLen Maximum possible length of TLV block and trailing data.&#10;&#10; @return SUCCESS if enough space was available and the length was&#10;&#10;         set, ESIZE if there wasn't enough space.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e986850" loc="103:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="key" ref="0x7e986a00" loc="103:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="tlv_key_t" ref="0x7ea05900"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e986b98" loc="104:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="trailLen" ref="0x7e986d28" loc="104:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7e986eb0" loc="104:../../../tos/lib/netarch/tlv/TlvMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StaticVoidIndexedIterator" loc="42:../../../tos/interfaces/StaticVoidIndexedIterator.nc">
      <documentation loc="42:../../../tos/interfaces/StaticVoidIndexedIterator.nc">
        <short>&#10;&#10; Iteration operations using indices. </short>
        <long>&#10;&#10; Iteration operations using indices.  This interface is the static or&#10;&#10; stateless version which requires a pointer to the structure containing&#10;&#10; the data to be passed in along with the index.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="iterator_item_t" ref="0x7e9806d0" loc="42:../../../tos/interfaces/StaticVoidIndexedIterator.nc">
          <interfacedef-ref qname="StaticVoidIndexedIterator"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e9806d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="end" ref="0x7e9779f8" loc="60:../../../tos/interfaces/StaticVoidIndexedIterator.nc">
        <documentation loc="53:../../../tos/interfaces/StaticVoidIndexedIterator.nc">
          <short>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks whether you have already reached the end.&#10;&#10;&#10;&#10; @param d Pointer to the data source.&#10;&#10; @param m Current item's index.&#10;&#10; @return TRUE if the current item is the end, FALSE otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="StaticVoidIndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="iterator_end_t" ref="0x7ea50b50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e9806d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="d" ref="0x7e977600" loc="60:../../../tos/interfaces/StaticVoidIndexedIterator.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="m" ref="0x7e977790" loc="60:../../../tos/interfaces/StaticVoidIndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e9806d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="next" ref="0x7e9770f8" loc="51:../../../tos/interfaces/StaticVoidIndexedIterator.nc">
        <documentation loc="44:../../../tos/interfaces/StaticVoidIndexedIterator.nc">
          <short>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Gets the index of the next item.&#10;&#10;&#10;&#10; @param d Pointer to the data source.&#10;&#10; @param m Current item's index.&#10;&#10; @return The next item's index.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="StaticVoidIndexedIterator"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e9806d0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e9806d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="d" ref="0x7e980cb0" loc="51:../../../tos/interfaces/StaticVoidIndexedIterator.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="m" ref="0x7e980e40" loc="51:../../../tos/interfaces/StaticVoidIndexedIterator.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="iterator_item_t" scoped="" ref="0x7e9806d0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TlvBlock" loc="38:../../../tos/lib/netarch/tlv/TlvBlock.nc">
      <documentation loc="38:../../../tos/lib/netarch/tlv/TlvBlock.nc">
        <short>&#10;&#10; Manipulate a TLV block independent of the types it contains.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Manipulate a TLV block independent of the types it contains.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="remove" ref="0x7e9a4b20" loc="60:../../../tos/lib/netarch/tlv/TlvBlock.nc">
        <documentation loc="53:../../../tos/lib/netarch/tlv/TlvBlock.nc">
          <short>&#10;&#10; Removes a TLV block from the beginning of a given data buffer.&#10;&#10;</short>
          <long>&#10;&#10; Removes a TLV block from the beginning of a given data buffer.&#10;&#10; Other data is moved to fill the gap.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param trailLen Current length of trailing data.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvBlock"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e9a4708" loc="60:../../../tos/lib/netarch/tlv/TlvBlock.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="trailLen" ref="0x7e9a4898" loc="60:../../../tos/lib/netarch/tlv/TlvBlock.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="length" ref="0x7e9a3288" loc="69:../../../tos/lib/netarch/tlv/TlvBlock.nc">
        <documentation loc="62:../../../tos/lib/netarch/tlv/TlvBlock.nc">
          <short>&#10;&#10; Returns the length of the entire TLV block, including the block&#10;&#10; length value itself.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns the length of the entire TLV block, including the block&#10;&#10; length value itself.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @return Length of the TLV block.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvBlock"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e9a3010" loc="69:../../../tos/lib/netarch/tlv/TlvBlock.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x7e9a4238" loc="51:../../../tos/lib/netarch/tlv/TlvBlock.nc">
        <documentation loc="40:../../../tos/lib/netarch/tlv/TlvBlock.nc">
          <short>&#10;&#10; Adds a TLV block at the beginning of a given data buffer. </short>
          <long>&#10;&#10; Adds a TLV block at the beginning of a given data buffer.  Other&#10;&#10; data is moved to accomidate it.  This must be called on any new TLV&#10;&#10; block before using any other TLV commands.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param trailLen Current length of trailing data.&#10;&#10; @param maxLen Maximum possible length of TLV block and trailing data.&#10;&#10; @return SUCCESS if the add completed, ESIZE if there wasn't enough&#10;&#10;         space.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvBlock"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e9a5a40" loc="51:../../../tos/lib/netarch/tlv/TlvBlock.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="trailLen" ref="0x7e9a5bd0" loc="51:../../../tos/lib/netarch/tlv/TlvBlock.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7e9a5d58" loc="51:../../../tos/lib/netarch/tlv/TlvBlock.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TlvSingle" loc="41:../../../tos/lib/netarch/tlv/TlvSingle.nc">
      <documentation loc="41:../../../tos/lib/netarch/tlv/TlvSingle.nc">
        <short>&#10;&#10; Access data stored in a generalized Type-Length-Value (TLV) block.&#10;&#10;</short>
        <long>&#10;&#10; Access data stored in a generalized Type-Length-Value (TLV) block.&#10;&#10; This interface allows at most one instance of a type.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="value" ref="0x7e996af8" loc="77:../../../tos/lib/netarch/tlv/TlvSingle.nc">
        <documentation loc="70:../../../tos/lib/netarch/tlv/TlvSingle.nc">
          <short>&#10;&#10; Returns the value in this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the value in this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then NULL is returned.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @return Pointer to the value in this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e996838" loc="77:../../../tos/lib/netarch/tlv/TlvSingle.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x7e9942a8" loc="106:../../../tos/lib/netarch/tlv/TlvSingle.nc">
        <documentation loc="98:../../../tos/lib/netarch/tlv/TlvSingle.nc">
          <short>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Removes this type instance from the TLV block.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param trailLen Current length of trailing data.&#10;&#10; @return SUCCESS if the type instance was found and removed, EINVAL&#10;&#10;         otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e995e50" loc="106:../../../tos/lib/netarch/tlv/TlvSingle.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="trailLen" ref="0x7e994010" loc="106:../../../tos/lib/netarch/tlv/TlvSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="length" ref="0x7e9972a0" loc="50:../../../tos/lib/netarch/tlv/TlvSingle.nc">
        <documentation loc="43:../../../tos/lib/netarch/tlv/TlvSingle.nc">
          <short>&#10;&#10; Returns the length of this type instance within the TLV block. </short>
          <long>&#10;&#10; Returns the length of this type instance within the TLV block.  If&#10;&#10; the type instance is not found in the block, then 0 is returned.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @return Length of this TLV type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e997010" loc="50:../../../tos/lib/netarch/tlv/TlvSingle.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x7e996368" loc="67:../../../tos/lib/netarch/tlv/TlvSingle.nc">
        <documentation loc="52:../../../tos/lib/netarch/tlv/TlvSingle.nc">
          <short>&#10;&#10; Sets the length of a type instance within the TLV block. </short>
          <long>&#10;&#10; Sets the length of a type instance within the TLV block.  This&#10;&#10; operation moves data around and should always be performed before&#10;&#10; storing a value with a different length than the one currently&#10;&#10; stored.  If the type instance is not found in the block or there&#10;&#10; is not enough room for the new length, returns ESIZE.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @param trailLen Current length of trailing data.&#10;&#10; @param maxLen Maximum possible length of TLV block and trailing data.&#10;&#10; @return SUCCESS if the type instance was found, enough space was&#10;&#10;         available, and the length was set, ESIZE if there wasn't&#10;&#10;         enough space, EINVAL if the instance wasn't found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e997780" loc="67:../../../tos/lib/netarch/tlv/TlvSingle.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e997908" loc="67:../../../tos/lib/netarch/tlv/TlvSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="trailLen" ref="0x7e997aa8" loc="68:../../../tos/lib/netarch/tlv/TlvSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7e997c30" loc="68:../../../tos/lib/netarch/tlv/TlvSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x7e995978" loc="95:../../../tos/lib/netarch/tlv/TlvSingle.nc">
        <documentation loc="79:../../../tos/lib/netarch/tlv/TlvSingle.nc">
          <short>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance. </short>
          <long>&#10;&#10; Adds an instance of a type to the TLV block and sets the initial&#10;&#10; length of the instance.  This operation moves data around and&#10;&#10; should always be performed before storing a value of the given&#10;&#10; type.  The type instance will be added to the block as long as&#10;&#10; there are at least len + 2 bytes available in the buffer holding&#10;&#10; the TLV block.&#10;&#10;&#10;&#10; @param block Pointer to the TLV block.&#10;&#10; @param len Length to set for this TLV type.&#10;&#10; @param trailLen Current length of trailing data.&#10;&#10; @param maxLen Maximum possible length of TLV block and trailing data.&#10;&#10; @return SUCCESS if enough space was available and the length was&#10;&#10;         set, EALREADY if an instance already exists, ESIZE if&#10;&#10;         there wasn't enough space.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TlvSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7e995010" loc="95:../../../tos/lib/netarch/tlv/TlvSingle.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e995198" loc="95:../../../tos/lib/netarch/tlv/TlvSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="trailLen" ref="0x7e995338" loc="96:../../../tos/lib/netarch/tlv/TlvSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="maxLen" ref="0x7e9954c0" loc="96:../../../tos/lib/netarch/tlv/TlvSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
      <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.&#10; </short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7e848318" loc="50:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7e848318"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7e8479a8" loc="96:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.&#10;&#10;</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7e848318"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7e847080" loc="80:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10;</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="empty" ref="0x7e848820" loc="61:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.&#10;</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="put" ref="0x7e8475f8" loc="88:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.&#10;&#10;</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7e848318"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7e8473c0" loc="88:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7e848318"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7e848c60" loc="72:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="PacketEngineClient" loc="40:../../../tos/lib/netarch/multihop/PacketEngineClient.nc">
      <documentation loc="40:../../../tos/lib/netarch/multihop/PacketEngineClient.nc">
        <short>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client. </short>
        <long>&#10;&#10; Stores the upper AM type and default lower AM type for a packet&#10;&#10; engine client.  This information aids in moving between the two kinds&#10;&#10; of AM types.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperType" ref="0x7e8618d8" loc="47:../../../tos/lib/netarch/multihop/PacketEngineClient.nc">
        <documentation loc="42:../../../tos/lib/netarch/multihop/PacketEngineClient.nc">
          <short>&#10;&#10; Returns the upper AM type used by this client above the the packet&#10;&#10; engine layer.&#10;&#10;</short>
          <long>&#10;&#10; Returns the upper AM type used by this client above the the packet&#10;&#10; engine layer.&#10;&#10; @return The upper AM type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngineClient"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="defaultLowerType" ref="0x7e861ea0" loc="54:../../../tos/lib/netarch/multihop/PacketEngineClient.nc">
        <documentation loc="49:../../../tos/lib/netarch/multihop/PacketEngineClient.nc">
          <short>&#10;&#10; Returns the default lower AM type packets sent by this client should&#10;&#10; initially be set to.&#10;&#10;</short>
          <long>&#10;&#10; Returns the default lower AM type packets sent by this client should&#10;&#10; initially be set to.&#10;&#10; @return The default lower AM type.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketEngineClient"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eba1680"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
      <documentation loc="15:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.6 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x7e875bc0" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10;</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param msg The complete message received.&#10;&#10; @param payload The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e875528" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7e8756c8" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e875858" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10;</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7e836c88" loc="41:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7e8368d0" loc="35:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.x/tos/interfaces/State.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10;</short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7e838160" loc="71:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7e841590" loc="56:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isState" ref="0x7e841dd8" loc="66:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7e841c28" loc="66:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7e8418e8" loc="61:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7e844d10" loc="45:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10;</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7e844ad0" loc="45:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7e841258" loc="51:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7e841088" loc="51:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DataCache" loc="32:../../../tos/lib/data/cache/DataCache.nc">
      <documentation loc="32:../../../tos/lib/data/cache/DataCache.nc">
        <short>&#10; A data cache. </short>
        <long>&#10; A data cache.  While this is quite similar to the Cache interface, here a&#10; pointer to the element in the cache matching the given input item is&#10; returned.  Additional features, such as remove and eviction, are also&#10; available.&#10;&#10; @author Ryan Stinnett&#10;</long>
      </documentation>
      <parameters>
        <typedef name="item_t" ref="0x7e862f20" loc="32:../../../tos/lib/data/cache/DataCache.nc">
          <interfacedef-ref qname="DataCache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e862f20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="remove" ref="0x7e855ba8" loc="74:../../../tos/lib/data/cache/DataCache.nc">
        <documentation loc="68:../../../tos/lib/data/cache/DataCache.nc">
          <short>&#10; Removes an item from the cache.&#10;&#10;</short>
          <long>&#10; Removes an item from the cache.&#10;&#10; @param item Pointer to the data item to remove from the cache.&#10; @return SUCCESS if found and removed, EINVAL if not found.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e862f20"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7e855978" loc="74:../../../tos/lib/data/cache/DataCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e862f20"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7e855020" loc="57:../../../tos/lib/data/cache/DataCache.nc">
        <documentation loc="49:../../../tos/lib/data/cache/DataCache.nc">
          <short>&#10; Notification that the given item is about to be evicted due to an insert&#10; which was requested when the cache was already full. </short>
          <long>&#10; Notification that the given item is about to be evicted due to an insert&#10; which was requested when the cache was already full.  Note that this is&#10; &#60;b>not&#60;/b> signaled on calls of remove.  The pointer passed here should&#10; not saved, as it will not longer be vaild once this event returns.&#10;&#10; @param item Pointer to the data item being evicted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e862f20"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7e856cc0" loc="57:../../../tos/lib/data/cache/DataCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e862f20"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insert" ref="0x7e856988" loc="47:../../../tos/lib/data/cache/DataCache.nc">
        <documentation loc="40:../../../tos/lib/data/cache/DataCache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary. </short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.  An atomic lookup&#10; after insert should return true.&#10;&#10; @param item Pointer to the data item to insert into the cache.&#10; @return A pointer to the item in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e862f20"/></type-var>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e862f20"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7e8566e8" loc="47:../../../tos/lib/data/cache/DataCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e862f20"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7e855ec0" loc="79:../../../tos/lib/data/cache/DataCache.nc">
        <documentation loc="76:../../../tos/lib/data/cache/DataCache.nc">
          <short>&#10; Flush the cache of all entries.&#10;</short>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="lookup" ref="0x7e855638" loc="66:../../../tos/lib/data/cache/DataCache.nc">
        <documentation loc="59:../../../tos/lib/data/cache/DataCache.nc">
          <short>&#10; Returns a pointer to the item in the cache by matching various keys or&#10; NULL if it was not found.&#10;&#10;</short>
          <long>&#10; Returns a pointer to the item in the cache by matching various keys or&#10; NULL if it was not found.&#10;&#10; @param item Pointer to the data item to find in the cache.&#10; @return A pointer to the item in the cache, or NULL if not found.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e862f20"/></type-var>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e862f20"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7e855360" loc="66:../../../tos/lib/data/cache/DataCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_t" scoped="" ref="0x7e862f20"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7e8563a8" loc="38:../../../tos/lib/data/cache/DataCache.nc">
        <documentation loc="34:../../../tos/lib/data/cache/DataCache.nc">
          <short>&#10; Returns the number of items currently stored in the cache.&#10;</short>
          <long>&#10; Returns the number of items currently stored in the cache.&#10; @return The number of items.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Equal" loc="39:../../../tos/interfaces/Equal.nc">
      <documentation loc="39:../../../tos/interfaces/Equal.nc">
        <short>&#10;&#10; Generalized equality interface between two items. </short>
        <long>&#10;&#10; Generalized equality interface between two items.  Many uses are possible&#10;&#10; here, since the inputs could be array indices, as just one example.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="equal_t" ref="0x7e8687b8" loc="39:../../../tos/interfaces/Equal.nc">
          <interfacedef-ref qname="Equal"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7e8687b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7e867110" loc="48:../../../tos/interfaces/Equal.nc">
        <documentation loc="41:../../../tos/interfaces/Equal.nc">
          <short>&#10;&#10; Checks whether two items are equal.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks whether two items are equal.&#10;&#10;&#10;&#10; @param a First item to test.&#10;&#10; @param b Second item to test.&#10;&#10; @return TRUE if they are equal, FALSE if they are not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Equal"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7e8687b8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7e8687b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x7e868d30" loc="48:../../../tos/interfaces/Equal.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7e8687b8"/></type-var>
          </variable>
          <variable name="b" ref="0x7e868eb8" loc="48:../../../tos/interfaces/Equal.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="equal_t" scoped="" ref="0x7e8687b8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7e8825a8" loc="74:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e882a20" loc="84:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.6 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7e738530" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7e738530"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7e738c30" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7e738530"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7e738930" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7e738530"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DataTimer" loc="41:../../../tos/lib/data/timer/DataTimer.nc">
      <parameters>
        <typedef name="data_t" ref="0x7e6f2288" loc="41:../../../tos/lib/data/timer/DataTimer.nc">
          <interfacedef-ref qname="DataTimer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7e6f2288"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="expired" ref="0x7e6f1ab0" loc="68:../../../tos/lib/data/timer/DataTimer.nc">
        <documentation loc="63:../../../tos/lib/data/timer/DataTimer.nc">
          <short>&#10;&#10; The timer for a given data item has expired.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The timer for a given data item has expired.&#10;&#10;&#10;&#10; @param data The data item which expired.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7e6f2288"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e6f18b0" loc="68:../../../tos/lib/data/timer/DataTimer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7e6f2288"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e6f2c88" loc="51:../../../tos/lib/data/timer/DataTimer.nc">
        <documentation loc="43:../../../tos/lib/data/timer/DataTimer.nc">
          <short>&#10;&#10; Starts the non-periodic timer for a given data item. </short>
          <long>&#10;&#10; Starts the non-periodic timer for a given data item.  If the same&#10;&#10; item is started multiple times, it will be tracked multiple times.&#10;&#10;&#10;&#10; @param data The data item to start timing.&#10;&#10; @param delay Time units before the data expires.&#10;&#10; @return SUCCESS, or FAIL if already full.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7e6f2288"/></type-var>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="data_timer_time_t" ref="0x7e6f3ea8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e6f2820" loc="51:../../../tos/lib/data/timer/DataTimer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7e6f2288"/></type-var>
          </variable>
          <variable name="delay" ref="0x7e6f29b8" loc="51:../../../tos/lib/data/timer/DataTimer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="data_timer_time_t" ref="0x7e6f3ea8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e6f13f8" loc="61:../../../tos/lib/data/timer/DataTimer.nc">
        <documentation loc="53:../../../tos/lib/data/timer/DataTimer.nc">
          <short>&#10;&#10; Stops the timer for a given data item. </short>
          <long>&#10;&#10; Stops the timer for a given data item.  If the item was started&#10;&#10; multiple times, this removes the instance that was closest to&#10;&#10; expiring.&#10;&#10;&#10;&#10; @param data The data item to stop timing.&#10;&#10; @return SUCCESS, or EINVAL if the item was not found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="DataTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7e6f2288"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e6f1168" loc="61:../../../tos/lib/data/timer/DataTimer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="data_t" scoped="" ref="0x7e6f2288"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RouteCache" loc="39:../../../tos/lib/netarch/dsr/RouteCache.nc">
      <documentation loc="39:../../../tos/lib/netarch/dsr/RouteCache.nc">
        <short>&#10;&#10; Access some kind of route cache or table that stores information about&#10;&#10; paths or links in the network and looks for routes when requested.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access some kind of route cache or table that stores information about&#10;&#10; paths or links in the network and looks for routes when requested.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="removeLink" ref="0x7e702518" loc="61:../../../tos/lib/netarch/dsr/RouteCache.nc">
        <documentation loc="51:../../../tos/lib/netarch/dsr/RouteCache.nc">
          <short>&#10;&#10; Removes any information stored for a given link from the route cache.&#10;&#10;</short>
          <long>&#10;&#10; Removes any information stored for a given link from the route cache.&#10;&#10; If the cache stores entire paths, then any path containing the link&#10;&#10; must at least be shortened enough to remove the given link or else&#10;&#10; discarded entirely.&#10;&#10;&#10;&#10; @param src The source node in the link to remove.&#10;&#10; @param dest The destination node in the link to remove.&#10;&#10; @param reverse If TRUE, the reverse path is also removed.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e704e68" loc="61:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7e702030" loc="61:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
            </type-int>
          </variable>
          <variable name="reverse" ref="0x7e7021b8" loc="61:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="routeUpdate" ref="0x7e700578" loc="97:../../../tos/lib/netarch/dsr/RouteCache.nc">
        <documentation loc="80:../../../tos/lib/netarch/dsr/RouteCache.nc">
          <short>&#10;&#10; Provides the newest information available pertaining to a requested&#10;&#10; route. </short>
          <long>&#10;&#10; Provides the newest information available pertaining to a requested&#10;&#10; route.  Whether or not a route is available when the request is made,&#10;&#10; a routeUpdate will be signaled once the current availability is known.&#10;&#10; If the route is not initially available, a subsequent routeUpdate will&#10;&#10; be signaled if a route is later found and the route was requested via&#10;&#10; the trackRoute command.  If a route was found, numLinks is the number&#10;&#10; of links along the route.  If a route was not found, numLinks is 0.&#10;&#10; The route itself is accessible via the RouteNodeList interface.  Note&#10;&#10; that RouteNodeList traverses the route &#60;b>in reverse&#60;/b>, returning the&#10;&#10; previous or source node for a given node in the route.&#10;&#10;&#10;&#10; @param src The source node of the route.&#10;&#10; @param dest The destination node of the route.&#10;&#10; @param numLinks Number of links along the route if one was found, 0&#10;&#10;                 if no route was found.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7e7207c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e701bf0" loc="97:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7e701d88" loc="97:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
            </type-int>
          </variable>
          <variable name="numLinks" ref="0x7e700010" loc="98:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7e7207c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addPath" ref="0x7e704998" loc="49:../../../tos/lib/netarch/dsr/RouteCache.nc">
        <documentation loc="41:../../../tos/lib/netarch/dsr/RouteCache.nc">
          <short>&#10;&#10; Adds a path to the route cache with a given number of links along the&#10;&#10; path and optionally adds the reverse path as well.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Adds a path to the route cache with a given number of links along the&#10;&#10; path and optionally adds the reverse path as well.&#10;&#10;&#10;&#10; @param nodes An array of nodes that make up the path to add.&#10;&#10; @param numLinks The number of links along the path.&#10;&#10; @param reverse If TRUE, the reverse path is also added.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7e7207c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="nodes" ref="0x7e704338" loc="49:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numLinks" ref="0x7e7044d8" loc="49:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_link_id_t" ref="0x7e7207c8"/></typename>
            </type-int>
          </variable>
          <variable name="reverse" ref="0x7e704660" loc="49:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="trackRoute" ref="0x7e702e10" loc="70:../../../tos/lib/netarch/dsr/RouteCache.nc">
        <documentation loc="63:../../../tos/lib/netarch/dsr/RouteCache.nc">
          <short>&#10;&#10; Indicates the need for a route from node src to node dest. </short>
          <long>&#10;&#10; Indicates the need for a route from node src to node dest.  This is&#10;&#10; tracked by the route cache until the need is met.&#10;&#10;&#10;&#10; @param src The source node of the route.&#10;&#10; @param dest The destination node of the route.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e7029e8" loc="70:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7e702b80" loc="70:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkRoute" ref="0x7e701720" loc="78:../../../tos/lib/netarch/dsr/RouteCache.nc">
        <documentation loc="72:../../../tos/lib/netarch/dsr/RouteCache.nc">
          <short>&#10;&#10; Requests an initial check for a route from node src to node dest.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Requests an initial check for a route from node src to node dest.&#10;&#10;&#10;&#10; @param src The source node of the route.&#10;&#10; @param dest The destination node of the route.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e701320" loc="78:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7e7014b8" loc="78:../../../tos/lib/netarch/dsr/RouteCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="route_cache_node_id_t" ref="0x7e7209a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="29:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.&#10;&#10;</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x7e6e6780" loc="34:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.&#10;</short>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clear" ref="0x7e6e5a18" loc="58:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.&#10;</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7e6e5850" loc="58:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7e6e5f20" loc="64:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.&#10;</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7e6e5d58" loc="64:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7e6e5010" loc="46:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.&#10;</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7e6e6df8" loc="46:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x7e6e35e8" loc="71:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.&#10;</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7e6e3278" loc="71:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x7e6e3400" loc="71:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x7e6e6ab0" loc="39:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.&#10;</short>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e6e5510" loc="52:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.&#10;</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7e6e5350" loc="52:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7e6e3968" loc="77:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.&#10;</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Graph" loc="40:../../../tos/lib/data/graph/Graph.nc">
      <documentation loc="40:../../../tos/lib/data/graph/Graph.nc">
        <short>&#10;&#10; Basic operations for processsing and modifying a graph.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Basic operations for processsing and modifying a graph.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="maxEdges" ref="0x7e5e51c0" loc="77:../../../tos/lib/data/graph/Graph.nc">
        <documentation loc="69:../../../tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Gets the maximum number of edges that the graph can hold. </short>
          <long>&#10;&#10; Gets the maximum number of edges that the graph can hold.  This should&#10;&#10; return the number of &#34;conceptual&#34; edges.  For example, an undirected graph&#10;&#10; might use two directed edges for each undirected edge in its&#10;&#10; implementation, but this only counts as one edge here.&#10;&#10;&#10;&#10; @return The maximum number of edges that the graph can hold.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="removed" ref="0x7e5e0010" loc="150:../../../tos/lib/data/graph/Graph.nc">
        <documentation loc="145:../../../tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; The structure of the graph changed because an edge was removed.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The structure of the graph changed because an edge was removed.&#10;&#10;&#10;&#10; @param m The key for the edge that was removed.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e5e1d18" loc="150:../../../tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x7e5e3010" loc="115:../../../tos/lib/data/graph/Graph.nc">
        <documentation loc="107:../../../tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Remove an edge from the graph between vertices s and d.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Remove an edge from the graph between vertices s and d.&#10;&#10;&#10;&#10; @param s The first vertex or source of the edge.&#10;&#10; @param d The second vertex or destination of the edge.&#10;&#10; @return SUCCESS if the edge was found and removed, EINVAL if it was not.&#10;&#10;         ESIZE returned if either vertex is too large.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7e5e4b38" loc="115:../../../tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </variable>
          <variable name="d" ref="0x7e5e4cd0" loc="115:../../../tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7e5e3988" loc="126:../../../tos/lib/data/graph/Graph.nc">
        <documentation loc="117:../../../tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Retrieves an edge between vertices s and d, if it exists. </short>
          <long>&#10;&#10; Retrieves an edge between vertices s and d, if it exists.  If the graph is&#10;&#10; directed, s is taken to be the source and d is taken to be the destination&#10;&#10; of the directed edge.&#10;&#10;&#10;&#10; @param s The first vertex or source of the edge.&#10;&#10; @param d The second vertex or destination of the edge.&#10;&#10; @return The edge key if the edge was found, maxEdges() if it was not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7e5e34d0" loc="126:../../../tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </variable>
          <variable name="d" ref="0x7e5e3668" loc="126:../../../tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="directed" ref="0x7e5e5718" loc="85:../../../tos/lib/data/graph/Graph.nc">
        <documentation loc="79:../../../tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Checks if the graph is directed or not. </short>
          <long>&#10;&#10; Checks if the graph is directed or not.  This value should not change at&#10;&#10; run-time.&#10;&#10;&#10;&#10; @return TRUE if the graph is directed, FALSE if it is undirected.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="vertices" ref="0x7e5e7ea8" loc="49:../../../tos/lib/data/graph/Graph.nc">
        <documentation loc="42:../../../tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Gets the number of vertices currently in the graph. </short>
          <long>&#10;&#10; Gets the number of vertices currently in the graph.  For some&#10;&#10; implementations, this will always equal maxVertices() if all vertices&#10;&#10; are preallocated.&#10;&#10;&#10;&#10; @return The number of vertices currently in the graph.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="parallelEdges" ref="0x7e5e5c80" loc="93:../../../tos/lib/data/graph/Graph.nc">
        <documentation loc="87:../../../tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Checks if parallel edges are allowed or not. </short>
          <long>&#10;&#10; Checks if parallel edges are allowed or not.  This value should not change&#10;&#10; at run-time.&#10;&#10;&#10;&#10; @return TRUE if parallel edges are allowed, FALSE if they are not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="maxVertices" ref="0x7e5e6460" loc="56:../../../tos/lib/data/graph/Graph.nc">
        <documentation loc="51:../../../tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Gets the maximum number of vertices that the graph can hold.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Gets the maximum number of vertices that the graph can hold.&#10;&#10;&#10;&#10; @return The maximum number of vertices that the graph can hold.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="insert" ref="0x7e5e4680" loc="105:../../../tos/lib/data/graph/Graph.nc">
        <documentation loc="95:../../../tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Add a new edge to the graph between vertices s and d.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Add a new edge to the graph between vertices s and d.&#10;&#10;&#10;&#10; @param s The first vertex or source of the edge.&#10;&#10; @param d The second vertex or destination of the edge.&#10;&#10; @return If all of the edges have already been allocated or if parallel&#10;&#10;         edges are not supported and this edge has already been added or if either&#10;&#10;         vertex is too large, then maxEdges() is returned.  Otherwise, the key for&#10;&#10;         the new edge is returned.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7e5e4178" loc="105:../../../tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </variable>
          <variable name="d" ref="0x7e5e4310" loc="105:../../../tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="inserted" ref="0x7e5e1870" loc="143:../../../tos/lib/data/graph/Graph.nc">
        <documentation loc="138:../../../tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; The structure of the graph changed because an edge was inserted.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The structure of the graph changed because an edge was inserted.&#10;&#10;&#10;&#10; @param m The key for the edge that was inserted.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e5e1640" loc="143:../../../tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeList" ref="0x7e5e1190" loc="136:../../../tos/lib/data/graph/Graph.nc">
        <documentation loc="128:../../../tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Retrieves a list of edges adjacent to vertex s. </short>
          <long>&#10;&#10; Retrieves a list of edges adjacent to vertex s.  If the graph is directed,&#10;&#10; s is taken to be the source of the directed edge.&#10;&#10;&#10;&#10; @param s The first vertex or source of the edge.&#10;&#10; @return The key to the first node of the list if the vertex was valid,&#10;&#10;         maxEdges() if it was not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7e5e3e50" loc="136:../../../tos/lib/data/graph/Graph.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edges" ref="0x7e5e6ac0" loc="67:../../../tos/lib/data/graph/Graph.nc">
        <documentation loc="58:../../../tos/lib/data/graph/Graph.nc">
          <short>&#10;&#10; Gets the number of edges currently in the graph. </short>
          <long>&#10;&#10; Gets the number of edges currently in the graph.  This should return the&#10;&#10; number of &#34;conceptual&#34; edges.  For example, an undirected graph might use&#10;&#10; two directed edges for each undirected edge in its implementation, but this&#10;&#10; only counts as one edge here.  For some implementations, this will always&#10;&#10; equal maxEdges() if all edges are preallocated.&#10;&#10;&#10;&#10; @return The number of edges currently in the graph.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Graph"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SourceShortestPath" loc="38:../../../tos/lib/data/graph/SourceShortestPath.nc">
      <documentation loc="38:../../../tos/lib/data/graph/SourceShortestPath.nc">
        <short>&#10;&#10; Access details on the shortest path between vertices of a graph.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access details on the shortest path between vertices of a graph.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="rebuildNeeded" ref="0x7e5d76d8" loc="82:../../../tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="75:../../../tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; Checks if the tree should be rebuilt either because the source has changed&#10;&#10; or because the underlying graph structure has changed.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if the tree should be rebuilt either because the source has changed&#10;&#10; or because the underlying graph structure has changed.&#10;&#10;&#10;&#10; @param src The source vertex.&#10;&#10; @return Whether a rebuild is needed.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e5d7408" loc="82:../../../tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="buildTree" ref="0x7e5d9430" loc="47:../../../tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="40:../../../tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; Build a shortest path tree from vertex src.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Build a shortest path tree from vertex src.&#10;&#10;&#10;&#10; @param src The source vertex.&#10;&#10; @return If the vertex is too large then ESIZE or if a tree is currently&#10;&#10;         being built then EBUSY, else SUCCESS.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e5d91c0" loc="47:../../../tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="builtTree" ref="0x7e5d9b28" loc="54:../../../tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="49:../../../tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; The shortest path tree from vertex src is complete.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The shortest path tree from vertex src is complete.&#10;&#10;&#10;&#10; @param src The source vertex.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e5d9920" loc="54:../../../tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="buildingTree" ref="0x7e5d7c30" loc="89:../../../tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="84:../../../tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; Checks if the tree is currently being built.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if the tree is currently being built.&#10;&#10;&#10;&#10; @return Whether the tree is being built.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="edgeCount" ref="0x7e5d5468" loc="100:../../../tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="91:../../../tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; Get the number of edges to the destination vertex.&#10;&#10;</short>
          <long>&#10;&#10; Get the number of edges to the destination vertex.&#10;&#10; For example, if the shortest path from A to C was A -> D -> C, edgeCount()&#10;&#10; would return 2.&#10;&#10;&#10;&#10; @param dest The destination vertex.&#10;&#10; @return The number of edges.  If there is no path to the given destination,&#10;&#10;         or if an input vertex is too large, then the count is 0.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7e5d5178" loc="100:../../../tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="buildTreeTo" ref="0x7e5d8478" loc="64:../../../tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="56:../../../tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; Build the shortest path from vertex src to vertex dest.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Build the shortest path from vertex src to vertex dest.&#10;&#10;&#10;&#10; @param src The source vertex.&#10;&#10; @param dest The destination vertex.&#10;&#10; @return If the vertex is too large then ESIZE or if a tree is currently&#10;&#10;         being built then EBUSY, else SUCCESS.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e5d8030" loc="64:../../../tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7e5d81c8" loc="64:../../../tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="builtTreeTo" ref="0x7e5d8ef0" loc="72:../../../tos/lib/data/graph/SourceShortestPath.nc">
        <documentation loc="66:../../../tos/lib/data/graph/SourceShortestPath.nc">
          <short>&#10;&#10; The shortest path from vertex src to vertex dest is complete.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The shortest path from vertex src to vertex dest is complete.&#10;&#10;&#10;&#10; @param src The source vertex.&#10;&#10; @param dest The destination vertex.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SourceShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7e5d8968" loc="72:../../../tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7e5d8b00" loc="72:../../../tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
            </type-int>
          </variable>
          <variable name="pathResult" ref="0x7e5d8ca0" loc="73:../../../tos/lib/data/graph/SourceShortestPath.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GraphEdge" loc="38:../../../tos/lib/data/graph/GraphEdge.nc">
      <documentation loc="38:../../../tos/lib/data/graph/GraphEdge.nc">
        <short>&#10;&#10; Access information about an edge of the graph.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access information about an edge of the graph.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="src" ref="0x7e5b6c28" loc="46:../../../tos/lib/data/graph/GraphEdge.nc">
        <documentation loc="40:../../../tos/lib/data/graph/GraphEdge.nc">
          <short>&#10;&#10; Get the first or source vertex of the edge.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Get the first or source vertex of the edge.&#10;&#10; &#10;&#10; @param m The key for the edge.&#10;&#10; @return The first or source vertex.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdge"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e5b6a08" loc="46:../../../tos/lib/data/graph/GraphEdge.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dest" ref="0x7e5b5350" loc="54:../../../tos/lib/data/graph/GraphEdge.nc">
        <documentation loc="48:../../../tos/lib/data/graph/GraphEdge.nc">
          <short>&#10;&#10; Get the second or destination vertex of the edge.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Get the second or destination vertex of the edge.&#10;&#10; &#10;&#10; @param m The key for the edge.&#10;&#10; @return The second or destination vertex.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdge"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="graph_vertex_id_t" ref="0x7e5fa850"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e5b5120" loc="54:../../../tos/lib/data/graph/GraphEdge.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GraphEdgeWeight" loc="38:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
      <documentation loc="38:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
        <short>&#10;&#10; Access information about the weight of an edge of the graph.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Access information about the weight of an edge of the graph.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="weight_t" ref="0x7e5b0888" loc="38:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
          <interfacedef-ref qname="GraphEdgeWeight"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="weight_t" scoped="" ref="0x7e5b0888"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="canChangeWeights" ref="0x7e5b0ef0" loc="46:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
        <documentation loc="40:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
          <short>&#10;&#10; Checks if the graph weights can be changed. </short>
          <long>&#10;&#10; Checks if the graph weights can be changed.  This value should not change &#10;&#10; at run-time.&#10;&#10; &#10;&#10; @return TRUE if the graph weights can change, FALSE if they cannot.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="weightChanged" ref="0x7e5aa5e8" loc="71:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
        <documentation loc="66:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
          <short>&#10;&#10; The weight of an edge in the graph changed.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; The weight of an edge in the graph changed.&#10;&#10; &#10;&#10; @param m The key for the edge that had its weight changed.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e5aa3d0" loc="71:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setWeight" ref="0x7e5acec8" loc="64:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
        <documentation loc="57:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
          <short>&#10;&#10; Set the weight of the edge. </short>
          <long>&#10;&#10; Set the weight of the edge.  If the graph is actually unweighted, no&#10;&#10; action is taken.&#10;&#10; &#10;&#10; @param m The key for the edge.&#10;&#10; @param w The updated weight.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="weight_t" scoped="" ref="0x7e5b0888"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e5acb08" loc="64:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
            </type-int>
          </variable>
          <variable name="w" ref="0x7e5acc98" loc="64:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="weight_t" scoped="" ref="0x7e5b0888"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="weight" ref="0x7e5ac630" loc="55:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
        <documentation loc="48:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
          <short>&#10;&#10; Get the weight of the edge. </short>
          <long>&#10;&#10; Get the weight of the edge.  If the graph is actually unweighted, a unit&#10;&#10; weight is always returned.&#10;&#10; &#10;&#10; @param m The key for the edge.&#10;&#10; @return The weight of the edge.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GraphEdgeWeight"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="weight_t" scoped="" ref="0x7e5b0888"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e5ac3f0" loc="55:../../../tos/lib/data/graph/GraphEdgeWeight.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="graph_edge_id_t" ref="0x7e5faa20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IndexedAlloc" loc="42:../../../tos/lib/data/alloc/IndexedAlloc.nc">
      <documentation loc="42:../../../tos/lib/data/alloc/IndexedAlloc.nc">
        <short>&#10;&#10; Interface to a component that implements a run-time allocation policy on top&#10;&#10; of a static size array via indices. </short>
        <long>&#10;&#10; Interface to a component that implements a run-time allocation policy on top&#10;&#10; of a static size array via indices.  This simplifies component design by&#10;&#10; moving the policy out of each component, leading to cleaner code.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="size" ref="0x7e5963c8" loc="64:../../../tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="58:../../../tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; The number of elements currently allocated.&#10;&#10;</short>
          <long>&#10;&#10; The number of elements currently allocated.&#10;&#10; Always less than or equal to maxSize().&#10;&#10;&#10;&#10; @return The number of elements currently allocated.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5a09f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="allocated" ref="0x7e595d38" loc="95:../../../tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="90:../../../tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Checks if an index is currently allocated.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if an index is currently allocated.&#10;&#10;&#10;&#10; @return TRUE if the index is allocated, FALSE if it is not.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5a09f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e595b28" loc="95:../../../tos/lib/data/alloc/IndexedAlloc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5a09f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7e596920" loc="71:../../../tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="66:../../../tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; The maximum number of elements that can be allocated.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The maximum number of elements that can be allocated.&#10;&#10;&#10;&#10; @return The maximum size that can be allocated.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5a09f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="alloc" ref="0x7e596eb0" loc="79:../../../tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="73:../../../tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Allocate an index in the set.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Allocate an index in the set.&#10;&#10;&#10;&#10; @return If an index is free, it will be allocated and returned.  Otherwise,&#10;&#10;         maxSize() is returned to indicate that all elements are allocated.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5a09f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="none" ref="0x7e5978b0" loc="49:../../../tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="44:../../../tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Checks if none of the elements are allocated.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if none of the elements are allocated.&#10;&#10;&#10;&#10; @return TRUE if none of the elements are allocated, FALSE otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="free" ref="0x7e595650" loc="88:../../../tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="81:../../../tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Frees an index in the set.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Frees an index in the set.&#10;&#10;&#10;&#10; @return If an index is allocated, it will be freed and SUCCESS is returned.&#10;&#10;         If it was already free, no change is made and EALREADY is returned.&#10;&#10;         If the index is too large, ESIZE is returned.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5a09f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e5953c8" loc="88:../../../tos/lib/data/alloc/IndexedAlloc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="indexed_alloc_id_t" ref="0x7e5a09f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="all" ref="0x7e597e00" loc="56:../../../tos/lib/data/alloc/IndexedAlloc.nc">
        <documentation loc="51:../../../tos/lib/data/alloc/IndexedAlloc.nc">
          <short>&#10;&#10; Checks if all of the elements are allocated.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if all of the elements are allocated.&#10;&#10;&#10;&#10; @return TRUE if all of the elements are allocated, FALSE otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IndexedAlloc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="PriorityQueue" loc="40:../../../tos/lib/data/queue/PriorityQueue.nc">
      <documentation loc="40:../../../tos/lib/data/queue/PriorityQueue.nc">
        <short>&#10;&#10; Interface to a priority queue sitting on top of an index heap. </short>
        <long>&#10;&#10; Interface to a priority queue sitting on top of an index heap.  The meaning&#10;&#10; of some terms defined here is implementation dependent since either a min or&#10;&#10; max heap could be used.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7e515de8" loc="122:../../../tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="119:../../../tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Removes all elements from the priority queue.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="findBest" ref="0x7e515318" loc="109:../../../tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="103:../../../tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Finds the index of the element with the best priority (at the root of the&#10;&#10; heap), but does not remove it.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Finds the index of the element with the best priority (at the root of the&#10;&#10; heap), but does not remove it.&#10;&#10; &#10;&#10; @return Index of the element with the best priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7e521270"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7e519790" loc="62:../../../tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="57:../../../tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; The maximum number of elements the priority queue can hold.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; The maximum number of elements the priority queue can hold.&#10;&#10;&#10;&#10; @return The maximum priority queue size.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7e521270"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="insert" ref="0x7e518010" loc="72:../../../tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="64:../../../tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Insert the element at index m into the priority queue.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Insert the element at index m into the priority queue.&#10;&#10;&#10;&#10; @param m Index of the element to insert.&#10;&#10; @return If the priority queue is full then FAIL, if m is too large for the&#10;&#10;         queue then ESIZE, if m has already been inserted then EALREADY,&#10;&#10;         otherwise SUCCESS.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e521270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e519c68" loc="72:../../../tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e521270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="moveUp" ref="0x7e518e80" loc="87:../../../tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="82:../../../tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; If the priority of element m has improved, move that element up the heap&#10;&#10; if needed.&#10;&#10;</short>
          <long>&#10;&#10; If the priority of element m has improved, move that element up the heap&#10;&#10; if needed.&#10;&#10; @param m Index of the element with altered priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e521270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e518c20" loc="87:../../../tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e521270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="move" ref="0x7e516d20" loc="101:../../../tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="96:../../../tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; If the priority of element m has changed, move that element up or down the &#10;&#10; heap if needed.&#10;&#10;</short>
          <long>&#10;&#10; If the priority of element m has changed, move that element up or down the &#10;&#10; heap if needed.&#10;&#10; @param m Index of the element with altered priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e521270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e516ab0" loc="101:../../../tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e521270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inserted" ref="0x7e518750" loc="80:../../../tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="74:../../../tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Checks whether element m has already been inserted.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Checks whether element m has already been inserted.&#10;&#10; &#10;&#10; @param m Index of the element to check on.&#10;&#10; @return TRUE if element m has already been inserted, otherwise FALSE.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e521270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e5184f0" loc="80:../../../tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e521270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="moveDown" ref="0x7e5165e0" loc="94:../../../tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="89:../../../tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; If the priority of element m has worsened, move that element down the heap&#10;&#10; if needed.&#10;&#10;</short>
          <long>&#10;&#10; If the priority of element m has worsened, move that element down the heap&#10;&#10; if needed.&#10;&#10; @param m Index of the element with altered priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e521270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e516380" loc="94:../../../tos/lib/data/queue/PriorityQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="priority_queue_id_t" ref="0x7e521270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7e51ac70" loc="47:../../../tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="42:../../../tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Checks if the priority queue is empty.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Checks if the priority queue is empty.&#10;&#10;&#10;&#10; @return Whether the priority queue is empty.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="removeBest" ref="0x7e515918" loc="117:../../../tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="111:../../../tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; Finds the index of the element with the best priority (at the root of the&#10;&#10; heap) and removes it from the priority queue.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Finds the index of the element with the best priority (at the root of the&#10;&#10; heap) and removes it from the priority queue.&#10;&#10; &#10;&#10; @return Index of the element with the best priority.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7e521270"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="size" ref="0x7e519228" loc="55:../../../tos/lib/data/queue/PriorityQueue.nc">
        <documentation loc="49:../../../tos/lib/data/queue/PriorityQueue.nc">
          <short>&#10;&#10; The number of elements currently in the priority queue.&#10;&#10;</short>
          <long>&#10;&#10; The number of elements currently in the priority queue.&#10;&#10; Always less than or equal to maxSize().&#10;&#10;&#10;&#10; @return The number of elements in the priority queue.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PriorityQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="priority_queue_id_t" ref="0x7e521270"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Compare" loc="39:../../../tos/interfaces/Compare.nc">
      <documentation loc="39:../../../tos/interfaces/Compare.nc">
        <short>&#10;&#10; Generalized comparison interface between two items. </short>
        <long>&#10;&#10; Generalized comparison interface between two items.  Many uses are possible&#10;&#10; here, since the inputs could be array indices, as just one example.&#10;&#10;&#10;&#10; @author Ryan Stinnett&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="compare_t" ref="0x7e512b00" loc="39:../../../tos/interfaces/Compare.nc">
          <interfacedef-ref qname="Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7e512b00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7e511528" loc="49:../../../tos/interfaces/Compare.nc">
        <documentation loc="41:../../../tos/interfaces/Compare.nc">
          <short>&#10;&#10; Returns a negative integer, zero, or a positive integer if the first&#10;&#10; argument is less than, equal to, or greater than the second.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Returns a negative integer, zero, or a positive integer if the first&#10;&#10; argument is less than, equal to, or greater than the second.&#10;&#10;&#10;&#10; @param a First item to test.&#10;&#10; @param b Second item to test.&#10;&#10; @return A negative integer, zero, or a positive integer.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1">
            <typename><typedef-ref name="int16_t" ref="0x7fea00f0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7e512b00"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7e512b00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x7e511090" loc="49:../../../tos/interfaces/Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7e512b00"/></type-var>
          </variable>
          <variable name="b" ref="0x7e511220" loc="49:../../../tos/interfaces/Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="compare_t" scoped="" ref="0x7e512b00"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10;</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10;&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7e3dce70" loc="95:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10;</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3dcc10" loc="95:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7e3dc2e8" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10;</short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3dc0a8" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7e3dd7c0" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10;</short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7e3dd590" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7e3dd238" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10;</short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7e3dd010" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7e3ddd18" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet. </short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7e3ddaf8" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7e3dc8a8" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10;</short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3dc660" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7e3e6e90" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e3e6ad8" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7e3e6c60" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7e3e4488" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7feb0a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e3e4220" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7e3e6770" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.&#10;&#10;</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e3e6580" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7e3e4a60" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e3e47f0" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10;</short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getLocalSleepInterval" ref="0x7e3d7360" loc="58:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return the local node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getRxDutyCycle" ref="0x7e3d4888" loc="112:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="108:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return the destination node's duty cycle configured in this message&#10;     in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3d46a8" loc="112:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleepIntervalToDutyCycle" ref="0x7e3d3498" loc="128:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10;</short>
          <long>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; @param sleepInterval The sleep interval in units of [ms]&#10; @return The duty cycle in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepInterval" ref="0x7e3d3200" loc="128:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalDutyCycle" ref="0x7e3d7d58" loc="81:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return this node's radio duty cycle rate, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setRxSleepInterval" ref="0x7e3d6540" loc="90:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10;</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10; @param msg Pointer to the message that will be sent&#10; @param sleepInterval The receiving node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3d60d0" loc="90:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="sleepIntervalMs" ref="0x7e3d6268" loc="90:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalDutyCycle" ref="0x7e3d79f0" loc="76:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10;</short>
          <long>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10; For example, to get a 0.05% duty cycle,&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(5);&#10; &#60;/code>&#10;&#10; For a 100% duty cycle (always on),&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(10000);&#10; &#60;/code>&#10;&#10; This is the equivalent of setting the local sleep interval explicitly.&#10; &#10; @param dutyCycle The duty cycle percentage, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x7e3d7698" loc="76:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxDutyCycle" ref="0x7e3d4350" loc="106:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10;</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10; Duty cycle is in units of [percentage*100], i.e. 0.25% duty cycle = 25.&#10; &#10; @param msg Pointer to the message that will be sent&#10; @param dutyCycle The duty cycle of the receiving mote, in units of &#10;     [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3d6da8" loc="106:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dutyCycle" ref="0x7e3d4010" loc="106:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dutyCycleToSleepInterval" ref="0x7e3d4e98" loc="120:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="114:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10;</short>
          <long>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; @param dutyCycle The duty cycle in units of [percentage*100]&#10; @return The equivalent sleep interval, in units of [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x7e3d4bd8" loc="120:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxSleepInterval" ref="0x7e3d6a60" loc="95:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return the destination node's sleep interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3d68a0" loc="95:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalSleepInterval" ref="0x7e3d7010" loc="53:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio sleep interval, in milliseconds.&#10;</short>
          <long>&#10; Set this this node's radio sleep interval, in milliseconds.&#10; Once every interval, the node will sleep and perform an Rx check &#10; on the radio.  Setting the sleep interval to 0 will keep the radio&#10; always on.&#10;&#10; This is the equivalent of setting the local duty cycle rate.&#10;&#10; @param sleepIntervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x7e3d8c68" loc="53:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <short>&#10;</short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7e3cd410" loc="63:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10;</short>
          <long>&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3cd258" loc="63:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7e3d02d0" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10;</short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param msg&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3daea8" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7e3d0068" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7e3d0ee0" loc="58:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short> &#10;</short>
          <long> &#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3d0d28" loc="58:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7e3d09d0" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10;</short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3d0618" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7e3d07b0" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7e3cd900" loc="68:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3cd760" loc="68:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.&#10;</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7e3e18d8" loc="47:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10;</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param msg A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3e15c0" loc="47:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.6 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7e3c29d8" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   msg     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3c2340" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e3c24c8" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7e3c06f8" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length. </short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   msg    the packet&#10; @return         a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3c01f8" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e3c0380" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7e3c1e98" loc="101:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e3c1250" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   msg    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3c2d20" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e3c1a48" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param msg   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3c1598" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7e3c1720" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7e3b4170" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10;</short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7e3b6cf0" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7e3b6e80" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7e3b69c8" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7e3b6658" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @param on TRUE to turn address recognition on, FALSE to turn it off&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7e3b64a0" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7e3b8968" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7e3b8800" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7e3b7960" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7e3b77f8" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7e3b7178" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7e3b7010" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7e3b4868" loc="101:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7e3b6178" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7e3b6010" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7e3b4508" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7e3b74d0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sync" ref="0x7e3b84e0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7e3b8ca0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7e3b7cb0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.&#10;</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeader" ref="0x7e3bc978" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10;</short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:11" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7ebe2c20"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7ebe15e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3bc7a8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7e3bced0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10;</short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:9" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7ebe1ac8"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7ebe0480"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e3bccf8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7e3b0248" loc="50:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10;</short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eba1a28"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="changed" ref="0x7e3b08f0" loc="60:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.&#10;</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7e3b05a0" loc="55:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10;</short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7eba1850"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7e3b1ec0" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10;</short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7eba1850"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba1a28"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7e3b1b10" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7eba1850"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7e3b1ca0" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eba1a28"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7e36d8b8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10;</short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e36d4f0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7e36d678" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e36c1f0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.&#10;&#10;</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="modify" ref="0x7e36a2e0" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e36cc38" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7e36cde0" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e36a010" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e36c8f8" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10;</short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e36c558" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7e36c6e0" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7e36de30" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10;</short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7e36dbf8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7e373408" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7e371210" loc="97:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.&#10;&#10;</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7e373e80" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.&#10;&#10;</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7e374878" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7e373010" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.&#10;&#10;</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7e373760" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7e373b00" loc="83:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.&#10;&#10;</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7e374bc8" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7e377bd0" loc="110:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.  &#10;&#10;</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request 	  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7e377290" loc="87:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="request" ref="0x7e37ae40" loc="78:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0x7e3775b0" loc="92:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7e376010" loc="118:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7e335558" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e335558"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7e3359b8" loc="55:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.&#10; &#10;</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7e3340f0" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().&#10;&#10;</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e335558"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e335cd8" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7e335e60" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e335558"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7e3184a0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.&#10;&#10;</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe2a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e318280" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e318a08" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.&#10; &#10;</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe2a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e3187f0" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10;</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e329388" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e329388"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7e3294a0" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e3294a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7e3272a8" loc="98:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e3294a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7e328268" loc="67:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7e328f08" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e3294a0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e3294a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7e3289e0" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e3294a0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7e328b70" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e3294a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7e3286a0" loc="77:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7e3276e0" loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10;</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e3294a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="start" ref="0x7e329b60" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e3294a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7e3298c8" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e3294a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e329f18" loc="62:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.&#10;</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7e313010" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe2a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7e31dee0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe2a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e31d918" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7e31dac0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e31dc48" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e31b810" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe2a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e31b248" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7e31b3f0" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e31b578" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7e3207f8" loc="57:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7e320450" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10;</short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7e320090" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7e324d50" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7e280908" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0823a8"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f0825f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x7e2818b8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b1640"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1890"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e281750" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b1640"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1890"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7e2800f8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0901a8"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0903f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x7e2838c0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c1708"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c1958"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7e2805b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0901a8"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0903f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7e280448" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0901a8"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0903f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7e280dc0" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0823a8"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f0825f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7e280c58" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0823a8"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f0825f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x7e283f28" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0700"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0950"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x7e283bf8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b1640"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1890"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x7e2813f8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c1708"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c1958"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e281290" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c1708"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c1958"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x7e281d70" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0700"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0950"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e281c08" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0700"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0950"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7e26e7c8" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e26e7c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7e26bd30" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.&#10;</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7e26bb48" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7e26b488" loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10;</short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e26ec38" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.&#10;</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e26e7c8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x7e26c720" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.&#10;</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e26e7c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e26c540" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e26e7c8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7e26ca58" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7e26b810" loc="73:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10;</short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e26c1f8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.&#10;</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e26e7c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e26c010" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e26e7c8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e26cd88" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e26b0f0" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7e2666c0" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e2666c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7e263150" loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10;</short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7e2653d8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e266b38" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.&#10;</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e2666c0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x7e265710" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7e2634d8" loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10;</short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e2650a8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.&#10;</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e2666c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e266e78" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e2666c0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e265a40" loc="56:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e265d70" loc="59:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.  &#10;</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7e28bb00" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e28bb00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7e289c68" loc="89:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="test" ref="0x7e2895b0" loc="78:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10;</short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e28a010" loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.&#10;</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e28bb00"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7e2871e8" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.&#10;</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7e287010" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7e287580" loc="101:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.&#10;</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x7e28ab90" loc="66:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7e28a858" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7e289940" loc="84:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10;</short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e28a510" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.&#10;</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e28bb00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e28a350" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e28bb00"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e28aec8" loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e289210" loc="72:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x7e2495f8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f100140"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f100390"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7e247630" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0d1208"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0d1458"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7e249e08" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f1e38"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0d20e0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7e2472d8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f1e38"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0d20e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7e247170" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f1e38"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0d20e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7e247ae8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0d1208"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0d1458"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7e247980" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0d1208"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0d1458"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7e249ab0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f100140"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f100390"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e249948" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f100140"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f100390"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="15:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x7e241758" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x7e241b50" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x7e241360" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7e240010" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7e243ad0" loc="21:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10;</short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f2ad0"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x7f0f2d20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7e241018" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10;</short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f2ad0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f0f2d20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7e243e10" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f2ad0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f0f2d20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10;</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e0e5670" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e0e5670"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7e0e5788" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e0e5788"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7e0e5c58" loc="53:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e0e5788"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7e0e3460" loc="65:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7e0e3120" loc="60:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits. </short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7e0e3830" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed. </short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.6 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7e047a38" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7e046340" loc="55:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.&#10;</short>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x7e046010" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7e047d80" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7e047710" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.&#10;&#10;</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7e024010" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7e024ce0" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7e025c88" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="edge" ref="0x7e0249a0" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.&#10;</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7e024728" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7e025938" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7e0243e8" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10;</short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7e004a98" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="17:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip. </short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7dfa2ef0" loc="24:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released. </short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7df932b0" loc="31:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus. </short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7df936d8" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10;</short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7df89198" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7df8bd30" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7df8beb8" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7df88b90" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7df88610" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7df88798" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7df88920" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7df882b0" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe2a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7df89dd0" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7df88010" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7df8b9c8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ebe2a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7df8b598" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7df8b720" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7df89a68" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7df894f8" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7df89680" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7df89808" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus. </short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7df66cb8" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.&#10;&#10;</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param txBuf A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param rxBuf A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7df66598" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7df66740" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7df668d0" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7df65830" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.&#10;&#10;</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param txBuf The buffer used for transmission&#10; @param rxBuf The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7df65030" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7df651d8" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7df65368" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7df65500" loc="72:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7df68010" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10;</short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7df6cd78" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7decf560" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7decbef0" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7decd6d8" loc="100:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7deca3c8" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7deca260" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7decf210" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7decb370" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7decb208" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7decebd0" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7decea68" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7decfc10" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10;</short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7dec9ce8" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7dec9b80" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7deceef8" loc="97:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7decab90" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7decaa28" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7dec91e8" loc="120:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7decbbc8" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7decba60" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7dec9838" loc="124:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7decdb88" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7decda20" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7dece1e0" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10;</short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7dece010" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7decd3b8" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7decd250" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7decb710" loc="106:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7deca6e8" loc="112:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7decaeb0" loc="115:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7dec9510" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7decdea8" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7decf8a0" loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7dece728" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete. &#10;</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7dece520" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7dec3238" loc="80:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.&#10;&#10;</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="userId" ref="0x7dec3638" loc="88:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.&#10; &#10;</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7de71948" loc="74:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7de71de0" loc="84:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10;</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7de31ef8" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7de243e8" loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7de20538" loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.&#10;</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="configure" ref="0x7de20160" loc="49:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.&#10;</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7de18d28" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10;</short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f220620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7de1d020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7de18af0" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7de1d020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7de19d78" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.&#10;&#10;</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7de18390" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10;</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7de1d020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7de18108" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7de1d020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7de187a0" loc="60:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue. &#10;</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7de1d020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10;</short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7dd81bb0" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2603e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="RadioTimeStamping" loc="33:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <short>&#10; Interface for receiving time stamp information from the radio.&#10;</short>
        <long>&#10; Interface for receiving time stamp information from the radio.&#10; This information is also embedded in packet metadata.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   October 10 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="transmittedSFD" ref="0x7dd800b0" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter has been&#10; transmitted: units are in terms of a 32kHz clock.&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7dd83d00" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
          <variable name="p_msg" ref="0x7dd83eb0" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedSFD" ref="0x7dd80768" loc="50:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock. </short>
          <long> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock.  &#60;b>NOTE&#60;/b> that receiving&#10; a receivedSFD() event does NOT mean that a packet will be&#10; received; the transmission may stop, become corrupted, or be&#10; filtered by the physical or link layers.  The number of rxSFD&#10; events will always be great than or equal to the number of&#10; Receive message events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7dd803f8" loc="50:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7dd51ae0" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.&#10;&#10;</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7dd51708" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0c88"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7dd518b8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:56" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7eb90670"/>
                <typename><typedef-ref name="message_t" ref="0x7eb84020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7dd513d0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7dd51010" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.&#10;&#10;</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7dd55de8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0308"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7db99c38" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7db99c38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7db98118" loc="50:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea0790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
